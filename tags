!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	src/test/hpcg/hpcg-problem-generator.h	/^    double **A;$/;"	m	struct:ProblemGenerator
A	src/test/hpcg/hpcg-problem.h	/^    lgncg::SparseMatrix A;$/;"	m	struct:Problem
ACCESSOR_ALL	src/legion_runtime/accessor.h	/^    ACCESSOR_ALL    = 0x00000007,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_NONE	src/legion_runtime/accessor.h	/^    ACCESSOR_NONE   = 0x00000000,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_READ	src/legion_runtime/accessor.h	/^    ACCESSOR_READ   = 0x00000001,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_REDUCE	src/legion_runtime/accessor.h	/^    ACCESSOR_REDUCE = 0x00000004,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCESSOR_WRITE	src/legion_runtime/accessor.h	/^    ACCESSOR_WRITE  = 0x00000002,$/;"	e	enum:LegionRuntime::AccessorPrivilege
ACCUMULATE_EVENTS_CALL	src/legion_runtime/region_tree.h	/^      ACCUMULATE_EVENTS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ACPI_ACCEPTABLE_CONFIGURATION	include/acpi/acrestyp.h	114;"	d
ACPI_ACQUIRE_GLOBAL_LOCK	include/acpi/platform/acenv.h	361;"	d
ACPI_ACQUIRE_GLOBAL_LOCK	include/nautilus/acpi-x86_64.h	54;"	d
ACPI_ACTIVE_HIGH	include/acpi/acrestyp.h	89;"	d
ACPI_ACTIVE_LOW	include/acpi/acrestyp.h	90;"	d
ACPI_ADDRESS_FIXED	include/acpi/acrestyp.h	125;"	d
ACPI_ADDRESS_NOT_FIXED	include/acpi/acrestyp.h	124;"	d
ACPI_ADDRESS_RANGE_ACPI	include/nautilus/acpi.h	/^	ACPI_ADDRESS_RANGE_ACPI = 3,$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_COUNT	include/nautilus/acpi.h	/^	ACPI_ADDRESS_RANGE_COUNT$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_MEMORY	include/nautilus/acpi.h	/^	ACPI_ADDRESS_RANGE_MEMORY = 1,$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_NVS	include/nautilus/acpi.h	/^	ACPI_ADDRESS_RANGE_NVS	= 4,$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_RANGE_RESERVED	include/nautilus/acpi.h	/^	ACPI_ADDRESS_RANGE_RESERVED = 2,$/;"	e	enum:acpi_address_range_id
ACPI_ADDRESS_TYPE_BUS_NUMBER_RANGE	src/acpi/acpica/aclocal.h	932;"	d
ACPI_ADDRESS_TYPE_IO_RANGE	src/acpi/acpica/aclocal.h	931;"	d
ACPI_ADDRESS_TYPE_MEMORY_RANGE	src/acpi/acpica/aclocal.h	930;"	d
ACPI_ADD_OBJECT_NAME	src/acpi/acpica/acmacros.h	536;"	d
ACPI_ADD_OBJECT_NAME	src/acpi/acpica/acmacros.h	540;"	d
ACPI_ADD_PTR	include/acpi/actypes.h	445;"	d
ACPI_ADR_SPACE_CMOS	include/acpi/actypes.h	713;"	d
ACPI_ADR_SPACE_DATA_TABLE	include/acpi/actypes.h	727;"	d
ACPI_ADR_SPACE_EC	include/acpi/actypes.h	711;"	d
ACPI_ADR_SPACE_FIXED_HARDWARE	include/acpi/actypes.h	728;"	d
ACPI_ADR_SPACE_IPMI	include/acpi/actypes.h	715;"	d
ACPI_ADR_SPACE_PCI_BAR_TARGET	include/acpi/actypes.h	714;"	d
ACPI_ADR_SPACE_PCI_CONFIG	include/acpi/actypes.h	710;"	d
ACPI_ADR_SPACE_SMBUS	include/acpi/actypes.h	712;"	d
ACPI_ADR_SPACE_SYSTEM_IO	include/acpi/actypes.h	709;"	d
ACPI_ADR_SPACE_SYSTEM_MEMORY	include/acpi/actypes.h	708;"	d
ACPI_ALLOCATE	include/acpi/platform/acnautilus.h	96;"	d
ACPI_ALLOCATE	src/acpi/acpica/acmacros.h	553;"	d
ACPI_ALLOCATE	src/acpi/acpica/acmacros.h	569;"	d
ACPI_ALLOCATE_BUFFER	include/acpi/actypes.h	853;"	d
ACPI_ALLOCATE_LOCAL_BUFFER	include/acpi/actypes.h	854;"	d
ACPI_ALLOCATE_ZEROED	include/acpi/platform/acnautilus.h	97;"	d
ACPI_ALLOCATE_ZEROED	src/acpi/acpica/acmacros.h	556;"	d
ACPI_ALLOCATE_ZEROED	src/acpi/acpica/acmacros.h	570;"	d
ACPI_ALL_COMPONENTS	include/acpi/acoutput.h	76;"	d
ACPI_ALL_DRIVERS	include/acpi/acoutput.h	81;"	d
ACPI_ALL_NOTIFY	include/acpi/actypes.h	699;"	d
ACPI_ALWAYS_ILLEGAL	src/acpi/acpica/aclocal.h	903;"	d
ACPI_APPLICATION	include/acpi/platform/acenv.h	73;"	d
ACPI_APPLICATION	include/acpi/platform/acenv.h	84;"	d
ACPI_ARRAY_LENGTH	include/acpi/actypes.h	439;"	d
ACPI_ASCII_MAX	include/acpi/actypes.h	70;"	d
ACPI_ASCII_ZERO	src/acpi/acpica/aclocal.h	983;"	d
ACPI_ASF_SMBUS_PROTOCOLS	include/acpi/actbl2.h	154;"	d
ACPI_ASF_TYPE_ADDRESS	include/acpi/actbl2.h	/^	ACPI_ASF_TYPE_ADDRESS = 4,$/;"	e	enum:acpi_asf_type
ACPI_ASF_TYPE_ALERT	include/acpi/actbl2.h	/^	ACPI_ASF_TYPE_ALERT = 1,$/;"	e	enum:acpi_asf_type
ACPI_ASF_TYPE_BOOT	include/acpi/actbl2.h	/^	ACPI_ASF_TYPE_BOOT = 3,$/;"	e	enum:acpi_asf_type
ACPI_ASF_TYPE_CONTROL	include/acpi/actbl2.h	/^	ACPI_ASF_TYPE_CONTROL = 2,$/;"	e	enum:acpi_asf_type
ACPI_ASF_TYPE_INFO	include/acpi/actbl2.h	/^	ACPI_ASF_TYPE_INFO = 0,$/;"	e	enum:acpi_asf_type
ACPI_ASF_TYPE_RESERVED	include/acpi/actbl2.h	/^	ACPI_ASF_TYPE_RESERVED = 5$/;"	e	enum:acpi_asf_type
ACPI_ASM_MACROS	include/acpi/platform/acenv.h	357;"	d
ACPI_ASM_MACROS	include/nautilus/acpi-x86_64.h	45;"	d
ACPI_BERT_CORRECTABLE	include/acpi/actbl1.h	138;"	d
ACPI_BERT_ERROR_CORRECTABLE	include/acpi/actbl1.h	/^	ACPI_BERT_ERROR_CORRECTABLE = 0,$/;"	e	enum:acpi_bert_error_severity
ACPI_BERT_ERROR_CORRECTED	include/acpi/actbl1.h	/^	ACPI_BERT_ERROR_CORRECTED = 2,$/;"	e	enum:acpi_bert_error_severity
ACPI_BERT_ERROR_ENTRY_COUNT	include/acpi/actbl1.h	141;"	d
ACPI_BERT_ERROR_FATAL	include/acpi/actbl1.h	/^	ACPI_BERT_ERROR_FATAL = 1,$/;"	e	enum:acpi_bert_error_severity
ACPI_BERT_ERROR_NONE	include/acpi/actbl1.h	/^	ACPI_BERT_ERROR_NONE = 3,$/;"	e	enum:acpi_bert_error_severity
ACPI_BERT_ERROR_RESERVED	include/acpi/actbl1.h	/^	ACPI_BERT_ERROR_RESERVED = 4	\/* 4 and greater are reserved *\/$/;"	e	enum:acpi_bert_error_severity
ACPI_BERT_MULTIPLE_CORRECTABLE	include/acpi/actbl1.h	140;"	d
ACPI_BERT_MULTIPLE_UNCORRECTABLE	include/acpi/actbl1.h	139;"	d
ACPI_BERT_UNCORRECTABLE	include/acpi/actbl1.h	137;"	d
ACPI_BINARY_SEMAPHORE	include/acpi/platform/acenv.h	49;"	d
ACPI_BITMASK_ALL_FIXED_STATUS	src/acpi/acpica/aclocal.h	838;"	d
ACPI_BITMASK_ARB_DISABLE	src/acpi/acpica/aclocal.h	861;"	d
ACPI_BITMASK_BUS_MASTER_RLD	src/acpi/acpica/aclocal.h	856;"	d
ACPI_BITMASK_BUS_MASTER_STATUS	src/acpi/acpica/aclocal.h	830;"	d
ACPI_BITMASK_GLOBAL_LOCK_ENABLE	src/acpi/acpica/aclocal.h	849;"	d
ACPI_BITMASK_GLOBAL_LOCK_RELEASE	src/acpi/acpica/aclocal.h	857;"	d
ACPI_BITMASK_GLOBAL_LOCK_STATUS	src/acpi/acpica/aclocal.h	831;"	d
ACPI_BITMASK_PCIEXP_WAKE_DISABLE	src/acpi/acpica/aclocal.h	853;"	d
ACPI_BITMASK_PCIEXP_WAKE_STATUS	src/acpi/acpica/aclocal.h	835;"	d
ACPI_BITMASK_POWER_BUTTON_ENABLE	src/acpi/acpica/aclocal.h	850;"	d
ACPI_BITMASK_POWER_BUTTON_STATUS	src/acpi/acpica/aclocal.h	832;"	d
ACPI_BITMASK_RT_CLOCK_ENABLE	src/acpi/acpica/aclocal.h	852;"	d
ACPI_BITMASK_RT_CLOCK_STATUS	src/acpi/acpica/aclocal.h	834;"	d
ACPI_BITMASK_SCI_ENABLE	src/acpi/acpica/aclocal.h	855;"	d
ACPI_BITMASK_SLEEP_BUTTON_ENABLE	src/acpi/acpica/aclocal.h	851;"	d
ACPI_BITMASK_SLEEP_BUTTON_STATUS	src/acpi/acpica/aclocal.h	833;"	d
ACPI_BITMASK_SLEEP_ENABLE	src/acpi/acpica/aclocal.h	859;"	d
ACPI_BITMASK_SLEEP_TYPE	src/acpi/acpica/aclocal.h	858;"	d
ACPI_BITMASK_TIMER_ENABLE	src/acpi/acpica/aclocal.h	848;"	d
ACPI_BITMASK_TIMER_STATUS	src/acpi/acpica/aclocal.h	829;"	d
ACPI_BITMASK_WAKE_STATUS	src/acpi/acpica/aclocal.h	836;"	d
ACPI_BITPOSITION_ARB_DISABLE	src/acpi/acpica/aclocal.h	887;"	d
ACPI_BITPOSITION_BUS_MASTER_RLD	src/acpi/acpica/aclocal.h	882;"	d
ACPI_BITPOSITION_BUS_MASTER_STATUS	src/acpi/acpica/aclocal.h	866;"	d
ACPI_BITPOSITION_GLOBAL_LOCK_ENABLE	src/acpi/acpica/aclocal.h	875;"	d
ACPI_BITPOSITION_GLOBAL_LOCK_RELEASE	src/acpi/acpica/aclocal.h	883;"	d
ACPI_BITPOSITION_GLOBAL_LOCK_STATUS	src/acpi/acpica/aclocal.h	867;"	d
ACPI_BITPOSITION_PCIEXP_WAKE_DISABLE	src/acpi/acpica/aclocal.h	879;"	d
ACPI_BITPOSITION_PCIEXP_WAKE_STATUS	src/acpi/acpica/aclocal.h	871;"	d
ACPI_BITPOSITION_POWER_BUTTON_ENABLE	src/acpi/acpica/aclocal.h	876;"	d
ACPI_BITPOSITION_POWER_BUTTON_STATUS	src/acpi/acpica/aclocal.h	868;"	d
ACPI_BITPOSITION_RT_CLOCK_ENABLE	src/acpi/acpica/aclocal.h	878;"	d
ACPI_BITPOSITION_RT_CLOCK_STATUS	src/acpi/acpica/aclocal.h	870;"	d
ACPI_BITPOSITION_SCI_ENABLE	src/acpi/acpica/aclocal.h	881;"	d
ACPI_BITPOSITION_SLEEP_BUTTON_ENABLE	src/acpi/acpica/aclocal.h	877;"	d
ACPI_BITPOSITION_SLEEP_BUTTON_STATUS	src/acpi/acpica/aclocal.h	869;"	d
ACPI_BITPOSITION_SLEEP_ENABLE	src/acpi/acpica/aclocal.h	885;"	d
ACPI_BITPOSITION_SLEEP_TYPE	src/acpi/acpica/aclocal.h	884;"	d
ACPI_BITPOSITION_TIMER_ENABLE	src/acpi/acpica/aclocal.h	874;"	d
ACPI_BITPOSITION_TIMER_STATUS	src/acpi/acpica/aclocal.h	865;"	d
ACPI_BITPOSITION_WAKE_STATUS	src/acpi/acpica/aclocal.h	872;"	d
ACPI_BITREG_ARB_DISABLE	include/acpi/actypes.h	774;"	d
ACPI_BITREG_BUS_MASTER_RLD	include/acpi/actypes.h	767;"	d
ACPI_BITREG_BUS_MASTER_STATUS	include/acpi/actypes.h	747;"	d
ACPI_BITREG_GLOBAL_LOCK_ENABLE	include/acpi/actypes.h	758;"	d
ACPI_BITREG_GLOBAL_LOCK_RELEASE	include/acpi/actypes.h	768;"	d
ACPI_BITREG_GLOBAL_LOCK_STATUS	include/acpi/actypes.h	748;"	d
ACPI_BITREG_MAX	include/acpi/actypes.h	776;"	d
ACPI_BITREG_PCIEXP_WAKE_DISABLE	include/acpi/actypes.h	762;"	d
ACPI_BITREG_PCIEXP_WAKE_STATUS	include/acpi/actypes.h	753;"	d
ACPI_BITREG_POWER_BUTTON_ENABLE	include/acpi/actypes.h	759;"	d
ACPI_BITREG_POWER_BUTTON_STATUS	include/acpi/actypes.h	749;"	d
ACPI_BITREG_RT_CLOCK_ENABLE	include/acpi/actypes.h	761;"	d
ACPI_BITREG_RT_CLOCK_STATUS	include/acpi/actypes.h	751;"	d
ACPI_BITREG_SCI_ENABLE	include/acpi/actypes.h	766;"	d
ACPI_BITREG_SLEEP_BUTTON_ENABLE	include/acpi/actypes.h	760;"	d
ACPI_BITREG_SLEEP_BUTTON_STATUS	include/acpi/actypes.h	750;"	d
ACPI_BITREG_SLEEP_ENABLE	include/acpi/actypes.h	770;"	d
ACPI_BITREG_SLEEP_TYPE	include/acpi/actypes.h	769;"	d
ACPI_BITREG_TIMER_ENABLE	include/acpi/actypes.h	757;"	d
ACPI_BITREG_TIMER_STATUS	include/acpi/actypes.h	746;"	d
ACPI_BITREG_WAKE_STATUS	include/acpi/actypes.h	752;"	d
ACPI_BTYPE_ALL_OBJECTS	src/acpi/acpica/aclocal.h	292;"	d
ACPI_BTYPE_ANY	src/acpi/acpica/aclocal.h	266;"	d
ACPI_BTYPE_BUFFER	src/acpi/acpica/aclocal.h	269;"	d
ACPI_BTYPE_BUFFER_FIELD	src/acpi/acpica/aclocal.h	280;"	d
ACPI_BTYPE_COMPUTE_DATA	src/acpi/acpica/aclocal.h	286;"	d
ACPI_BTYPE_DATA	src/acpi/acpica/aclocal.h	288;"	d
ACPI_BTYPE_DATA_REFERENCE	src/acpi/acpica/aclocal.h	289;"	d
ACPI_BTYPE_DDB_HANDLE	src/acpi/acpica/aclocal.h	281;"	d
ACPI_BTYPE_DEBUG_OBJECT	src/acpi/acpica/aclocal.h	282;"	d
ACPI_BTYPE_DEVICE	src/acpi/acpica/aclocal.h	272;"	d
ACPI_BTYPE_DEVICE_OBJECTS	src/acpi/acpica/aclocal.h	290;"	d
ACPI_BTYPE_EVENT	src/acpi/acpica/aclocal.h	273;"	d
ACPI_BTYPE_FIELD_UNIT	src/acpi/acpica/aclocal.h	271;"	d
ACPI_BTYPE_INTEGER	src/acpi/acpica/aclocal.h	267;"	d
ACPI_BTYPE_METHOD	src/acpi/acpica/aclocal.h	274;"	d
ACPI_BTYPE_MUTEX	src/acpi/acpica/aclocal.h	275;"	d
ACPI_BTYPE_OBJECTS_AND_REFS	src/acpi/acpica/aclocal.h	291;"	d
ACPI_BTYPE_PACKAGE	src/acpi/acpica/aclocal.h	270;"	d
ACPI_BTYPE_POWER	src/acpi/acpica/aclocal.h	277;"	d
ACPI_BTYPE_PROCESSOR	src/acpi/acpica/aclocal.h	278;"	d
ACPI_BTYPE_REFERENCE	src/acpi/acpica/aclocal.h	283;"	d
ACPI_BTYPE_REGION	src/acpi/acpica/aclocal.h	276;"	d
ACPI_BTYPE_RESOURCE	src/acpi/acpica/aclocal.h	284;"	d
ACPI_BTYPE_STRING	src/acpi/acpica/aclocal.h	268;"	d
ACPI_BTYPE_THERMAL	src/acpi/acpica/aclocal.h	279;"	d
ACPI_BUS_MASTER	include/acpi/acrestyp.h	104;"	d
ACPI_BUS_NUMBER_RANGE	include/acpi/acrestyp.h	122;"	d
ACPI_CACHABLE_MEMORY	include/acpi/acrestyp.h	60;"	d
ACPI_CAST_INDIRECT_PTR	include/acpi/actypes.h	444;"	d
ACPI_CAST_PTR	include/acpi/actypes.h	443;"	d
ACPI_CA_DEBUGGER	include/acpi/acoutput.h	64;"	d
ACPI_CA_DISASSEMBLER	include/acpi/acoutput.h	66;"	d
ACPI_CA_SUPPORT_LEVEL	src/acpi/acpica/acconfig.h	96;"	d
ACPI_CA_VERSION	include/acpi/acpixf.h	50;"	d
ACPI_CHECKSUM_ABORT	src/acpi/acpica/acconfig.h	86;"	d
ACPI_CLEAR_BIT	include/acpi/actypes.h	433;"	d
ACPI_CLEAR_STATUS	include/acpi/actypes.h	781;"	d
ACPI_COMMON_DEBUG_MEM_HEADER	src/acpi/acpica/aclocal.h	1039;"	d
ACPI_COMPARE_NAME	include/acpi/actypes.h	457;"	d
ACPI_COMPARE_NAME	include/acpi/actypes.h	459;"	d
ACPI_COMPATIBILITY	include/acpi/acrestyp.h	98;"	d
ACPI_COMPILER	include/acpi/acoutput.h	70;"	d
ACPI_COMPONENT_DEFAULT	include/acpi/acoutput.h	77;"	d
ACPI_CONSTANT_EVAL_ONLY	include/acpi/platform/acenv.h	75;"	d
ACPI_CONSUMER	include/acpi/acrestyp.h	131;"	d
ACPI_CONTROL_CONDITIONAL_EXECUTING	src/acpi/acpica/aclocal.h	507;"	d
ACPI_CONTROL_NORMAL	src/acpi/acpica/aclocal.h	506;"	d
ACPI_CONTROL_PREDICATE_EXECUTING	src/acpi/acpica/aclocal.h	508;"	d
ACPI_CONTROL_PREDICATE_FALSE	src/acpi/acpica/aclocal.h	509;"	d
ACPI_CONTROL_PREDICATE_TRUE	src/acpi/acpica/aclocal.h	510;"	d
ACPI_COPY_TYPE_PACKAGE	src/acpi/acpica/aclocal.h	231;"	d
ACPI_COPY_TYPE_SIMPLE	src/acpi/acpica/aclocal.h	230;"	d
ACPI_C_STATES_MAX	include/acpi/actypes.h	512;"	d
ACPI_C_STATE_COUNT	include/acpi/actypes.h	513;"	d
ACPI_DASM_BUFFER	src/acpi/acpica/aclocal.h	678;"	d
ACPI_DASM_EISAID	src/acpi/acpica/aclocal.h	682;"	d
ACPI_DASM_IGNORE	src/acpi/acpica/aclocal.h	686;"	d
ACPI_DASM_LNOT_PREFIX	src/acpi/acpica/aclocal.h	684;"	d
ACPI_DASM_LNOT_SUFFIX	src/acpi/acpica/aclocal.h	685;"	d
ACPI_DASM_MATCHOP	src/acpi/acpica/aclocal.h	683;"	d
ACPI_DASM_RESOURCE	src/acpi/acpica/aclocal.h	679;"	d
ACPI_DASM_STRING	src/acpi/acpica/aclocal.h	680;"	d
ACPI_DASM_UNICODE	src/acpi/acpica/aclocal.h	681;"	d
ACPI_DATA_TABLE_DISASSEMBLY	include/acpi/platform/acenv.h	77;"	d
ACPI_DBG_TRACK_ALLOCATIONS	include/acpi/platform/acenv.h	87;"	d
ACPI_DB_ALL	include/acpi/acoutput.h	176;"	d
ACPI_DB_ALLOCATIONS	include/acpi/acoutput.h	167;"	d
ACPI_DB_ALL_EXCEPTIONS	include/acpi/acoutput.h	149;"	d
ACPI_DB_BFIELD	include/acpi/acoutput.h	161;"	d
ACPI_DB_CONSOLE_OUTPUT	src/acpi/acpica/aclocal.h	1024;"	d
ACPI_DB_DEBUG_OBJECT	include/acpi/acoutput.h	146;"	d
ACPI_DB_DISPATCH	include/acpi/acoutput.h	156;"	d
ACPI_DB_DUPLICATE_OUTPUT	src/acpi/acpica/aclocal.h	1025;"	d
ACPI_DB_EVENTS	include/acpi/acoutput.h	174;"	d
ACPI_DB_EXEC	include/acpi/acoutput.h	158;"	d
ACPI_DB_FUNCTIONS	include/acpi/acoutput.h	163;"	d
ACPI_DB_INFO	include/acpi/acoutput.h	147;"	d
ACPI_DB_INIT	include/acpi/acoutput.h	145;"	d
ACPI_DB_INIT_NAMES	include/acpi/acoutput.h	153;"	d
ACPI_DB_INTERRUPTS	include/acpi/acoutput.h	170;"	d
ACPI_DB_IO	include/acpi/acoutput.h	169;"	d
ACPI_DB_LOAD	include/acpi/acoutput.h	157;"	d
ACPI_DB_MUTEX	include/acpi/acoutput.h	173;"	d
ACPI_DB_NAMES	include/acpi/acoutput.h	159;"	d
ACPI_DB_OBJECTS	include/acpi/acoutput.h	166;"	d
ACPI_DB_OPREGION	include/acpi/acoutput.h	160;"	d
ACPI_DB_OPTIMIZATIONS	include/acpi/acoutput.h	164;"	d
ACPI_DB_PACKAGE	include/acpi/acoutput.h	172;"	d
ACPI_DB_PARSE	include/acpi/acoutput.h	155;"	d
ACPI_DB_REDIRECTABLE_OUTPUT	src/acpi/acpica/aclocal.h	1023;"	d
ACPI_DB_REPAIR	include/acpi/acoutput.h	148;"	d
ACPI_DB_RESOURCES	include/acpi/acoutput.h	168;"	d
ACPI_DB_TABLES	include/acpi/acoutput.h	162;"	d
ACPI_DB_THREADS	include/acpi/acoutput.h	154;"	d
ACPI_DB_USER_REQUESTS	include/acpi/acoutput.h	171;"	d
ACPI_DB_VALUES	include/acpi/acoutput.h	165;"	d
ACPI_DEBUGGER	include/acpi/platform/acenv.h	85;"	d
ACPI_DEBUGGER	include/acpi/platform/acenv.h	96;"	d
ACPI_DEBUGGER_COMMAND_PROMPT	src/acpi/acpica/acconfig.h	223;"	d
ACPI_DEBUGGER_EXEC	src/acpi/acpica/acmacros.h	526;"	d
ACPI_DEBUGGER_EXEC	src/acpi/acpica/acmacros.h	528;"	d
ACPI_DEBUGGER_EXECUTE_PROMPT	src/acpi/acpica/acconfig.h	224;"	d
ACPI_DEBUGGER_MAX_ARGS	src/acpi/acpica/acconfig.h	221;"	d
ACPI_DEBUG_ALL	include/acpi/acoutput.h	182;"	d
ACPI_DEBUG_DEFAULT	include/acpi/acoutput.h	180;"	d
ACPI_DEBUG_DEFINE	src/acpi/acpica/acmacros.h	470;"	d
ACPI_DEBUG_DEFINE	src/acpi/acpica/acmacros.h	493;"	d
ACPI_DEBUG_EXEC	src/acpi/acpica/acmacros.h	467;"	d
ACPI_DEBUG_EXEC	src/acpi/acpica/acmacros.h	490;"	d
ACPI_DEBUG_LEVEL	include/acpi/acoutput.h	137;"	d
ACPI_DEBUG_OBJECT	include/acpi/acoutput.h	216;"	d
ACPI_DEBUG_OBJECT	include/acpi/acoutput.h	226;"	d
ACPI_DEBUG_ONLY_MEMBERS	src/acpi/acpica/acmacros.h	471;"	d
ACPI_DEBUG_ONLY_MEMBERS	src/acpi/acpica/acmacros.h	494;"	d
ACPI_DEBUG_OUTPUT	include/acpi/platform/acenv.h	72;"	d
ACPI_DEBUG_OUTPUT	include/acpi/platform/acenv.h	97;"	d
ACPI_DEBUG_PARAMETERS	include/acpi/acoutput.h	261;"	d
ACPI_DEBUG_PRINT	include/acpi/acoutput.h	269;"	d
ACPI_DEBUG_PRINT	include/acpi/acoutput.h	278;"	d
ACPI_DEBUG_PRINT_RAW	include/acpi/acoutput.h	270;"	d
ACPI_DEBUG_PRINT_RAW	include/acpi/acoutput.h	279;"	d
ACPI_DECODE_10	include/acpi/acrestyp.h	80;"	d
ACPI_DECODE_16	include/acpi/acrestyp.h	81;"	d
ACPI_DEFAULT_HANDLER	include/acpi/actypes.h	959;"	d
ACPI_DEFAULT_PAGE_SIZE	src/acpi/acpica/acconfig.h	108;"	d
ACPI_DEVICE_ID_LENGTH	src/acpi/acpica/acconfig.h	147;"	d
ACPI_DEVICE_NOTIFY	include/acpi/actypes.h	698;"	d
ACPI_DISABLE_EVENT	include/acpi/actypes.h	786;"	d
ACPI_DISABLE_IRQS	include/acpi/platform/acenv.h	359;"	d
ACPI_DISABLE_IRQS	include/nautilus/acpi-x86_64.h	47;"	d
ACPI_DISASM_ONLY_MEMBERS	src/acpi/acpica/aclocal.h	658;"	d
ACPI_DISASM_ONLY_MEMBERS	src/acpi/acpica/aclocal.h	660;"	d
ACPI_DISASSEMBLER	include/acpi/platform/acenv.h	74;"	d
ACPI_DISASSEMBLER	include/acpi/platform/acenv.h	98;"	d
ACPI_DISPATCHER	include/acpi/acoutput.h	61;"	d
ACPI_DIV_16	src/acpi/acpica/acmacros.h	230;"	d
ACPI_DIV_2	src/acpi/acpica/acmacros.h	218;"	d
ACPI_DIV_32	src/acpi/acpica/acmacros.h	234;"	d
ACPI_DIV_4	src/acpi/acpica/acmacros.h	222;"	d
ACPI_DIV_64_BY_32	include/nautilus/acpi-x86_64.h	63;"	d
ACPI_DIV_8	src/acpi/acpica/acmacros.h	226;"	d
ACPI_DMAR_ALLOW_ALL	include/acpi/actbl2.h	343;"	d
ACPI_DMAR_ALL_PORTS	include/acpi/actbl2.h	356;"	d
ACPI_DMAR_HARDWARE_AFFINITY	include/acpi/actbl2.h	/^	ACPI_DMAR_HARDWARE_AFFINITY = 3,$/;"	e	enum:acpi_dmar_type
ACPI_DMAR_INCLUDE_ALL	include/acpi/actbl2.h	329;"	d
ACPI_DMAR_INTR_REMAP	include/acpi/actbl2.h	268;"	d
ACPI_DMAR_SCOPE_TYPE_BRIDGE	include/acpi/actbl2.h	/^	ACPI_DMAR_SCOPE_TYPE_BRIDGE = 2,$/;"	e	enum:acpi_dmar_scope_type
ACPI_DMAR_SCOPE_TYPE_ENDPOINT	include/acpi/actbl2.h	/^	ACPI_DMAR_SCOPE_TYPE_ENDPOINT = 1,$/;"	e	enum:acpi_dmar_scope_type
ACPI_DMAR_SCOPE_TYPE_HPET	include/acpi/actbl2.h	/^	ACPI_DMAR_SCOPE_TYPE_HPET = 4,$/;"	e	enum:acpi_dmar_scope_type
ACPI_DMAR_SCOPE_TYPE_IOAPIC	include/acpi/actbl2.h	/^	ACPI_DMAR_SCOPE_TYPE_IOAPIC = 3,$/;"	e	enum:acpi_dmar_scope_type
ACPI_DMAR_SCOPE_TYPE_NOT_USED	include/acpi/actbl2.h	/^	ACPI_DMAR_SCOPE_TYPE_NOT_USED = 0,$/;"	e	enum:acpi_dmar_scope_type
ACPI_DMAR_SCOPE_TYPE_RESERVED	include/acpi/actbl2.h	/^	ACPI_DMAR_SCOPE_TYPE_RESERVED = 5	\/* 5 and greater are reserved *\/$/;"	e	enum:acpi_dmar_scope_type
ACPI_DMAR_TYPE_ATSR	include/acpi/actbl2.h	/^	ACPI_DMAR_TYPE_ATSR = 2,$/;"	e	enum:acpi_dmar_type
ACPI_DMAR_TYPE_HARDWARE_UNIT	include/acpi/actbl2.h	/^	ACPI_DMAR_TYPE_HARDWARE_UNIT = 0,$/;"	e	enum:acpi_dmar_type
ACPI_DMAR_TYPE_RESERVED	include/acpi/actbl2.h	/^	ACPI_DMAR_TYPE_RESERVED = 4	\/* 4 and greater are reserved *\/$/;"	e	enum:acpi_dmar_type
ACPI_DMAR_TYPE_RESERVED_MEMORY	include/acpi/actbl2.h	/^	ACPI_DMAR_TYPE_RESERVED_MEMORY = 1,$/;"	e	enum:acpi_dmar_type
ACPI_DO_NOT_WAIT	include/acpi/actypes.h	402;"	d
ACPI_DO_WHILE0	src/acpi/acpica/acmacros.h	389;"	d
ACPI_DO_WHILE0	src/acpi/acpica/acmacros.h	391;"	d
ACPI_DRIVER	include/acpi/acoutput.h	73;"	d
ACPI_DUMP_BUFFER	src/acpi/acpica/acmacros.h	482;"	d
ACPI_DUMP_BUFFER	src/acpi/acpica/acmacros.h	509;"	d
ACPI_DUMP_ENTRY	src/acpi/acpica/acmacros.h	479;"	d
ACPI_DUMP_ENTRY	src/acpi/acpica/acmacros.h	505;"	d
ACPI_DUMP_OPERANDS	src/acpi/acpica/acmacros.h	477;"	d
ACPI_DUMP_OPERANDS	src/acpi/acpica/acmacros.h	504;"	d
ACPI_DUMP_PATHNAME	src/acpi/acpica/acmacros.h	480;"	d
ACPI_DUMP_PATHNAME	src/acpi/acpica/acmacros.h	507;"	d
ACPI_DUMP_RESOURCE_LIST	src/acpi/acpica/acmacros.h	481;"	d
ACPI_DUMP_RESOURCE_LIST	src/acpi/acpica/acmacros.h	508;"	d
ACPI_DUMP_STACK_ENTRY	src/acpi/acpica/acmacros.h	476;"	d
ACPI_DUMP_STACK_ENTRY	src/acpi/acpica/acmacros.h	503;"	d
ACPI_DUMP_TABLES	src/acpi/acpica/acmacros.h	506;"	d
ACPI_D_STATES_MAX	include/acpi/actypes.h	505;"	d
ACPI_D_STATE_COUNT	include/acpi/actypes.h	506;"	d
ACPI_EBDA_PTR_LENGTH	src/acpi/acpica/acconfig.h	182;"	d
ACPI_EBDA_PTR_LOCATION	src/acpi/acpica/acconfig.h	181;"	d
ACPI_EBDA_WINDOW_SIZE	src/acpi/acpica/acconfig.h	183;"	d
ACPI_EDGE_SENSITIVE	include/acpi/acrestyp.h	87;"	d
ACPI_EINJ_ACTION_RESERVED	include/acpi/actbl1.h	/^	ACPI_EINJ_ACTION_RESERVED = 8,	\/* 8 and greater are reserved *\/$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_BEGIN_OPERATION	include/acpi/actbl1.h	/^	ACPI_EINJ_BEGIN_OPERATION = 0,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_CHECK_BUSY_STATUS	include/acpi/actbl1.h	/^	ACPI_EINJ_CHECK_BUSY_STATUS = 6,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_END_OPERATION	include/acpi/actbl1.h	/^	ACPI_EINJ_END_OPERATION = 4,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_EXECUTE_OPERATION	include/acpi/actbl1.h	/^	ACPI_EINJ_EXECUTE_OPERATION = 5,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_FAILURE	include/acpi/actbl1.h	/^	ACPI_EINJ_FAILURE = 1,$/;"	e	enum:acpi_einj_command_status
ACPI_EINJ_GET_COMMAND_STATUS	include/acpi/actbl1.h	/^	ACPI_EINJ_GET_COMMAND_STATUS = 7,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_GET_ERROR_TYPE	include/acpi/actbl1.h	/^	ACPI_EINJ_GET_ERROR_TYPE = 3,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_GET_TRIGGER_TABLE	include/acpi/actbl1.h	/^	ACPI_EINJ_GET_TRIGGER_TABLE = 1,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_INSTRUCTION_RESERVED	include/acpi/actbl1.h	/^	ACPI_EINJ_INSTRUCTION_RESERVED = 5	\/* 5 and greater are reserved *\/$/;"	e	enum:acpi_einj_instructions
ACPI_EINJ_INVALID_ACCESS	include/acpi/actbl1.h	/^	ACPI_EINJ_INVALID_ACCESS = 2,$/;"	e	enum:acpi_einj_command_status
ACPI_EINJ_MEMORY_CORRECTABLE	include/acpi/actbl1.h	269;"	d
ACPI_EINJ_MEMORY_FATAL	include/acpi/actbl1.h	271;"	d
ACPI_EINJ_MEMORY_UNCORRECTABLE	include/acpi/actbl1.h	270;"	d
ACPI_EINJ_NOOP	include/acpi/actbl1.h	/^	ACPI_EINJ_NOOP = 4,$/;"	e	enum:acpi_einj_instructions
ACPI_EINJ_PCIX_CORRECTABLE	include/acpi/actbl1.h	272;"	d
ACPI_EINJ_PCIX_FATAL	include/acpi/actbl1.h	274;"	d
ACPI_EINJ_PCIX_UNCORRECTABLE	include/acpi/actbl1.h	273;"	d
ACPI_EINJ_PLATFORM_CORRECTABLE	include/acpi/actbl1.h	275;"	d
ACPI_EINJ_PLATFORM_FATAL	include/acpi/actbl1.h	277;"	d
ACPI_EINJ_PLATFORM_UNCORRECTABLE	include/acpi/actbl1.h	276;"	d
ACPI_EINJ_PRESERVE	include/acpi/actbl1.h	218;"	d
ACPI_EINJ_PROCESSOR_CORRECTABLE	include/acpi/actbl1.h	266;"	d
ACPI_EINJ_PROCESSOR_FATAL	include/acpi/actbl1.h	268;"	d
ACPI_EINJ_PROCESSOR_UNCORRECTABLE	include/acpi/actbl1.h	267;"	d
ACPI_EINJ_READ_REGISTER	include/acpi/actbl1.h	/^	ACPI_EINJ_READ_REGISTER = 0,$/;"	e	enum:acpi_einj_instructions
ACPI_EINJ_READ_REGISTER_VALUE	include/acpi/actbl1.h	/^	ACPI_EINJ_READ_REGISTER_VALUE = 1,$/;"	e	enum:acpi_einj_instructions
ACPI_EINJ_SET_ERROR_TYPE	include/acpi/actbl1.h	/^	ACPI_EINJ_SET_ERROR_TYPE = 2,$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_STATUS_RESERVED	include/acpi/actbl1.h	/^	ACPI_EINJ_STATUS_RESERVED = 3	\/* 3 and greater are reserved *\/$/;"	e	enum:acpi_einj_command_status
ACPI_EINJ_SUCCESS	include/acpi/actbl1.h	/^	ACPI_EINJ_SUCCESS = 0,$/;"	e	enum:acpi_einj_command_status
ACPI_EINJ_TRIGGER_ERROR	include/acpi/actbl1.h	/^	ACPI_EINJ_TRIGGER_ERROR = 0xFF	\/* Except for this value *\/$/;"	e	enum:acpi_einj_actions
ACPI_EINJ_WRITE_REGISTER	include/acpi/actbl1.h	/^	ACPI_EINJ_WRITE_REGISTER = 2,$/;"	e	enum:acpi_einj_instructions
ACPI_EINJ_WRITE_REGISTER_VALUE	include/acpi/actbl1.h	/^	ACPI_EINJ_WRITE_REGISTER_VALUE = 3,$/;"	e	enum:acpi_einj_instructions
ACPI_EISAID_STRING_SIZE	include/acpi/actypes.h	989;"	d
ACPI_ENABLE_EVENT	include/acpi/actypes.h	785;"	d
ACPI_ENABLE_IRQS	include/acpi/platform/acenv.h	360;"	d
ACPI_ENABLE_IRQS	include/nautilus/acpi-x86_64.h	48;"	d
ACPI_ENTIRE_RANGE	include/acpi/acrestyp.h	71;"	d
ACPI_ENTRY_NOT_FOUND	src/acpi/acpica/aclocal.h	134;"	d
ACPI_ERROR	include/acpi/acoutput.h	215;"	d
ACPI_ERROR	include/acpi/acoutput.h	225;"	d
ACPI_ERROR_METHOD	src/acpi/acpica/acmacros.h	342;"	d
ACPI_ERROR_METHOD	src/acpi/acpica/acmacros.h	351;"	d
ACPI_ERROR_NAMESPACE	src/acpi/acpica/acmacros.h	341;"	d
ACPI_ERROR_NAMESPACE	src/acpi/acpica/acmacros.h	350;"	d
ACPI_ERST_ACTION_RESERVED	include/acpi/actbl1.h	/^	ACPI_ERST_ACTION_RESERVED = 16	\/* 16 and greater are reserved *\/$/;"	e	enum:acpi_erst_actions
ACPI_ERST_ADD	include/acpi/actbl1.h	/^	ACPI_ERST_ADD = 8,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_ADD_VALUE	include/acpi/actbl1.h	/^	ACPI_ERST_ADD_VALUE = 10,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_BEGIN_CLEAR	include/acpi/actbl1.h	/^	ACPI_ERST_BEGIN_CLEAR = 2,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_BEGIN_DUMMY_WRIITE	include/acpi/actbl1.h	/^	ACPI_ERST_BEGIN_DUMMY_WRIITE = 11,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_BEGIN_READ	include/acpi/actbl1.h	/^	ACPI_ERST_BEGIN_READ = 1,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_BEGIN_WRITE	include/acpi/actbl1.h	/^	ACPI_ERST_BEGIN_WRITE = 0,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_CHECK_BUSY_STATUS	include/acpi/actbl1.h	/^	ACPI_ERST_CHECK_BUSY_STATUS = 6,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_END	include/acpi/actbl1.h	/^	ACPI_ERST_END = 3,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_EXECUTE_OPERATION	include/acpi/actbl1.h	/^	ACPI_ERST_EXECUTE_OPERATION = 5,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_FAILURE	include/acpi/actbl1.h	/^	ACPI_ERST_FAILURE = 3,$/;"	e	enum:acpi_erst_command_status
ACPI_ERST_GET_COMMAND_STATUS	include/acpi/actbl1.h	/^	ACPI_ERST_GET_COMMAND_STATUS = 7,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_GET_ERROR_ATTRIBUTES	include/acpi/actbl1.h	/^	ACPI_ERST_GET_ERROR_ATTRIBUTES = 15,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_GET_ERROR_LENGTH	include/acpi/actbl1.h	/^	ACPI_ERST_GET_ERROR_LENGTH = 14,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_GET_ERROR_RANGE	include/acpi/actbl1.h	/^	ACPI_ERST_GET_ERROR_RANGE = 13,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_GET_RECORD_COUNT	include/acpi/actbl1.h	/^	ACPI_ERST_GET_RECORD_COUNT = 10,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_GET_RECORD_ID	include/acpi/actbl1.h	/^	ACPI_ERST_GET_RECORD_ID = 8,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_GOTO	include/acpi/actbl1.h	/^	ACPI_ERST_GOTO = 15,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_INSTRUCTION_RESERVED	include/acpi/actbl1.h	/^	ACPI_ERST_INSTRUCTION_RESERVED = 19	\/* 19 and greater are reserved *\/$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_LOAD_VAR1	include/acpi/actbl1.h	/^	ACPI_ERST_LOAD_VAR1 = 5,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_LOAD_VAR2	include/acpi/actbl1.h	/^	ACPI_ERST_LOAD_VAR2 = 6,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_MOVE_DATA	include/acpi/actbl1.h	/^	ACPI_ERST_MOVE_DATA = 18,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_NOOP	include/acpi/actbl1.h	/^	ACPI_ERST_NOOP = 4,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_NOT_AVAILABLE	include/acpi/actbl1.h	/^	ACPI_ERST_NOT_AVAILABLE = 2,$/;"	e	enum:acpi_erst_command_status
ACPI_ERST_NOT_FOUND	include/acpi/actbl1.h	/^	ACPI_ERST_NOT_FOUND = 5,$/;"	e	enum:acpi_erst_command_status
ACPI_ERST_NOT_USED	include/acpi/actbl1.h	/^	ACPI_ERST_NOT_USED = 12,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_NO_SPACE	include/acpi/actbl1.h	/^	ACPI_ERST_NO_SPACE = 1,$/;"	e	enum:acpi_erst_command_status
ACPI_ERST_PRESERVE	include/acpi/actbl1.h	301;"	d
ACPI_ERST_READ_REGISTER	include/acpi/actbl1.h	/^	ACPI_ERST_READ_REGISTER = 0,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_READ_REGISTER_VALUE	include/acpi/actbl1.h	/^	ACPI_ERST_READ_REGISTER_VALUE = 1,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_RECORD_EMPTY	include/acpi/actbl1.h	/^	ACPI_ERST_RECORD_EMPTY = 4,$/;"	e	enum:acpi_erst_command_status
ACPI_ERST_SET_DST_ADDRESS_BASE	include/acpi/actbl1.h	/^	ACPI_ERST_SET_DST_ADDRESS_BASE = 17,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_SET_RECORD_ID	include/acpi/actbl1.h	/^	ACPI_ERST_SET_RECORD_ID = 9,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_SET_RECORD_OFFSET	include/acpi/actbl1.h	/^	ACPI_ERST_SET_RECORD_OFFSET = 4,$/;"	e	enum:acpi_erst_actions
ACPI_ERST_SET_SRC_ADDRESS_BASE	include/acpi/actbl1.h	/^	ACPI_ERST_SET_SRC_ADDRESS_BASE = 16,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_SKIP_NEXT_IF_TRUE	include/acpi/actbl1.h	/^	ACPI_ERST_SKIP_NEXT_IF_TRUE = 14,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_STALL	include/acpi/actbl1.h	/^	ACPI_ERST_STALL = 12,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_STALL_WHILE_TRUE	include/acpi/actbl1.h	/^	ACPI_ERST_STALL_WHILE_TRUE = 13,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_STATUS_RESERVED	include/acpi/actbl1.h	/^	ACPI_ERST_STATUS_RESERVED = 6	\/* 6 and greater are reserved *\/$/;"	e	enum:acpi_erst_command_status
ACPI_ERST_STORE_VAR1	include/acpi/actbl1.h	/^	ACPI_ERST_STORE_VAR1 = 7,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_SUBTRACT	include/acpi/actbl1.h	/^	ACPI_ERST_SUBTRACT = 9,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_SUBTRACT_VALUE	include/acpi/actbl1.h	/^	ACPI_ERST_SUBTRACT_VALUE = 11,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_SUCESS	include/acpi/actbl1.h	/^	ACPI_ERST_SUCESS = 0,$/;"	e	enum:acpi_erst_command_status
ACPI_ERST_WRITE_REGISTER	include/acpi/actbl1.h	/^	ACPI_ERST_WRITE_REGISTER = 2,$/;"	e	enum:acpi_erst_instructions
ACPI_ERST_WRITE_REGISTER_VALUE	include/acpi/actbl1.h	/^	ACPI_ERST_WRITE_REGISTER_VALUE = 3,$/;"	e	enum:acpi_erst_instructions
ACPI_EVENTS	include/acpi/acoutput.h	57;"	d
ACPI_EVENT_FLAG_DISABLED	include/acpi/actypes.h	647;"	d
ACPI_EVENT_FLAG_ENABLED	include/acpi/actypes.h	648;"	d
ACPI_EVENT_FLAG_HANDLE	include/acpi/actypes.h	651;"	d
ACPI_EVENT_FLAG_SET	include/acpi/actypes.h	650;"	d
ACPI_EVENT_FLAG_WAKE_ENABLED	include/acpi/actypes.h	649;"	d
ACPI_EVENT_GLOBAL	include/acpi/actypes.h	623;"	d
ACPI_EVENT_MAX	include/acpi/actypes.h	627;"	d
ACPI_EVENT_PMTIMER	include/acpi/actypes.h	622;"	d
ACPI_EVENT_POWER_BUTTON	include/acpi/actypes.h	624;"	d
ACPI_EVENT_RTC	include/acpi/actypes.h	626;"	d
ACPI_EVENT_SLEEP_BUTTON	include/acpi/actypes.h	625;"	d
ACPI_EVENT_TYPE_FIXED	include/acpi/actypes.h	921;"	d
ACPI_EVENT_TYPE_GPE	include/acpi/actypes.h	920;"	d
ACPI_EXAMPLE	include/acpi/acoutput.h	72;"	d
ACPI_EXCEPTION	include/acpi/acoutput.h	214;"	d
ACPI_EXCEPTION	include/acpi/acoutput.h	224;"	d
ACPI_EXCLUSIVE	include/acpi/acrestyp.h	92;"	d
ACPI_EXECUTER	include/acpi/acoutput.h	62;"	d
ACPI_EXECUTE_OP	src/acpi/acpica/aclocal.h	/^typedef acpi_status(*ACPI_EXECUTE_OP) (struct acpi_walk_state * walk_state);$/;"	t
ACPI_EXPORT_SYMBOL	include/acpi/actypes.h	306;"	d
ACPI_EXPORT_SYMBOL	include/acpi/platform/acnautilus.h	68;"	d
ACPI_EXPORT_SYMBOL	src/acpi/acpica/utxferror.c	/^ACPI_EXPORT_SYMBOL(acpi_error)$/;"	f
ACPI_EXPORT_SYMBOL	src/acpi/acpica/utxferror.c	/^ACPI_EXPORT_SYMBOL(acpi_warning)$/;"	f
ACPI_EXTERN	src/acpi/acpica/acglobal.h	58;"	d
ACPI_EXTERN	src/acpi/acpica/acglobal.h	61;"	d
ACPI_EXTERNAL_XFACE	include/acpi/platform/acenv.h	353;"	d
ACPI_EXTERNAL_XFACE	include/nautilus/acpi-x86_64.h	39;"	d
ACPI_FACS_64BIT_ENVIRONMENT	include/acpi/actbl.h	194;"	d
ACPI_FACS_64BIT_WAKE	include/acpi/actbl.h	190;"	d
ACPI_FACS_S4_BIOS_PRESENT	include/acpi/actbl.h	189;"	d
ACPI_FADT_32BIT_TIMER	include/acpi/actbl.h	280;"	d
ACPI_FADT_8042	include/acpi/actbl.h	263;"	d
ACPI_FADT_APIC_CLUSTER	include/acpi/actbl.h	290;"	d
ACPI_FADT_APIC_PHYSICAL	include/acpi/actbl.h	291;"	d
ACPI_FADT_C1_SUPPORTED	include/acpi/actbl.h	274;"	d
ACPI_FADT_C2_MP_SUPPORTED	include/acpi/actbl.h	275;"	d
ACPI_FADT_DOCKING_SUPPORTED	include/acpi/actbl.h	281;"	d
ACPI_FADT_FIXED_RTC	include/acpi/actbl.h	278;"	d
ACPI_FADT_HEADLESS	include/acpi/actbl.h	284;"	d
ACPI_FADT_LEGACY_DEVICES	include/acpi/actbl.h	262;"	d
ACPI_FADT_NO_ASPM	include/acpi/actbl.h	266;"	d
ACPI_FADT_NO_MSI	include/acpi/actbl.h	265;"	d
ACPI_FADT_NO_VGA	include/acpi/actbl.h	264;"	d
ACPI_FADT_OFFSET	include/acpi/actbl.h	309;"	d
ACPI_FADT_PCI_EXPRESS_WAKE	include/acpi/actbl.h	286;"	d
ACPI_FADT_PLATFORM_CLOCK	include/acpi/actbl.h	287;"	d
ACPI_FADT_POWER_BUTTON	include/acpi/actbl.h	276;"	d
ACPI_FADT_REMOTE_POWER_ON	include/acpi/actbl.h	289;"	d
ACPI_FADT_RESET_REGISTER	include/acpi/actbl.h	282;"	d
ACPI_FADT_S4_RTC_VALID	include/acpi/actbl.h	288;"	d
ACPI_FADT_S4_RTC_WAKE	include/acpi/actbl.h	279;"	d
ACPI_FADT_SEALED_CASE	include/acpi/actbl.h	283;"	d
ACPI_FADT_SLEEP_BUTTON	include/acpi/actbl.h	277;"	d
ACPI_FADT_SLEEP_TYPE	include/acpi/actbl.h	285;"	d
ACPI_FADT_V1_SIZE	include/acpi/actbl.h	358;"	d
ACPI_FADT_V2_SIZE	include/acpi/actbl.h	359;"	d
ACPI_FADT_V3_SIZE	include/acpi/actbl.h	360;"	d
ACPI_FADT_WBINVD	include/acpi/actbl.h	272;"	d
ACPI_FADT_WBINVD_FLUSH	include/acpi/actbl.h	273;"	d
ACPI_FAILURE	include/acpi/acexcep.h	58;"	d
ACPI_FIELD_BYTE_GRANULARITY	src/acpi/acpica/aclocal.h	129;"	d
ACPI_FIELD_DWORD_GRANULARITY	src/acpi/acpica/aclocal.h	131;"	d
ACPI_FIELD_QWORD_GRANULARITY	src/acpi/acpica/aclocal.h	132;"	d
ACPI_FIELD_WORD_GRANULARITY	src/acpi/acpica/aclocal.h	130;"	d
ACPI_FLUSH_CPU_CACHE	include/nautilus/acpi-x86_64.h	49;"	d
ACPI_FORMAT_NATIVE_UINT	src/acpi/acpica/acmacros.h	70;"	d
ACPI_FORMAT_NATIVE_UINT	src/acpi/acpica/acmacros.h	72;"	d
ACPI_FORMAT_UINT64	src/acpi/acpica/acmacros.h	67;"	d
ACPI_FREE	include/acpi/platform/acnautilus.h	98;"	d
ACPI_FREE	src/acpi/acpica/acmacros.h	559;"	d
ACPI_FREE	src/acpi/acpica/acmacros.h	571;"	d
ACPI_FULL_DEBUG	include/acpi/platform/acenv.h	83;"	d
ACPI_FULL_INITIALIZATION	include/acpi/actypes.h	471;"	d
ACPI_FULL_PATHNAME	include/acpi/actypes.h	864;"	d
ACPI_FUNCTION_ENTRY	src/acpi/acpica/acmacros.h	376;"	d
ACPI_FUNCTION_ENTRY	src/acpi/acpica/acmacros.h	454;"	d
ACPI_FUNCTION_ENTRY	src/acpi/acpica/acmacros.h	502;"	d
ACPI_FUNCTION_EXIT	src/acpi/acpica/acmacros.h	450;"	d
ACPI_FUNCTION_EXIT	src/acpi/acpica/acmacros.h	499;"	d
ACPI_FUNCTION_NAME	include/acpi/acoutput.h	249;"	d
ACPI_FUNCTION_NAME	include/acpi/acoutput.h	254;"	d
ACPI_FUNCTION_NAME	include/acpi/acoutput.h	277;"	d
ACPI_FUNCTION_STATUS_EXIT	src/acpi/acpica/acmacros.h	451;"	d
ACPI_FUNCTION_STATUS_EXIT	src/acpi/acpica/acmacros.h	500;"	d
ACPI_FUNCTION_TRACE	src/acpi/acpica/acmacros.h	367;"	d
ACPI_FUNCTION_TRACE	src/acpi/acpica/acmacros.h	446;"	d
ACPI_FUNCTION_TRACE	src/acpi/acpica/acmacros.h	453;"	d
ACPI_FUNCTION_TRACE	src/acpi/acpica/acmacros.h	495;"	d
ACPI_FUNCTION_TRACE_PTR	src/acpi/acpica/acmacros.h	369;"	d
ACPI_FUNCTION_TRACE_PTR	src/acpi/acpica/acmacros.h	447;"	d
ACPI_FUNCTION_TRACE_PTR	src/acpi/acpica/acmacros.h	496;"	d
ACPI_FUNCTION_TRACE_STR	src/acpi/acpica/acmacros.h	373;"	d
ACPI_FUNCTION_TRACE_STR	src/acpi/acpica/acmacros.h	449;"	d
ACPI_FUNCTION_TRACE_STR	src/acpi/acpica/acmacros.h	498;"	d
ACPI_FUNCTION_TRACE_U32	src/acpi/acpica/acmacros.h	371;"	d
ACPI_FUNCTION_TRACE_U32	src/acpi/acpica/acmacros.h	448;"	d
ACPI_FUNCTION_TRACE_U32	src/acpi/acpica/acmacros.h	497;"	d
ACPI_FUNCTION_VALUE_EXIT	src/acpi/acpica/acmacros.h	452;"	d
ACPI_FUNCTION_VALUE_EXIT	src/acpi/acpica/acmacros.h	501;"	d
ACPI_GBL_EVENT_HANDLER	include/acpi/actypes.h	/^void (*ACPI_GBL_EVENT_HANDLER) (uint32_t event_type,$/;"	t
ACPI_GET16	src/acpi/acpica/acmacros.h	53;"	d
ACPI_GET32	src/acpi/acpica/acmacros.h	54;"	d
ACPI_GET64	src/acpi/acpica/acmacros.h	55;"	d
ACPI_GET8	src/acpi/acpica/acmacros.h	52;"	d
ACPI_GET_DESCRIPTOR_TYPE	src/acpi/acpica/acmacros.h	292;"	d
ACPI_GET_FUNCTION_NAME	include/acpi/acoutput.h	241;"	d
ACPI_GET_FUNCTION_NAME	include/acpi/platform/acgcc.h	51;"	d
ACPI_GLOBAL_LOCK	src/acpi/acpica/aclocal.h	52;"	d
ACPI_GLOCK_OWNED	include/acpi/actbl.h	185;"	d
ACPI_GLOCK_PENDING	include/acpi/actbl.h	184;"	d
ACPI_GOOD_CONFIGURATION	include/acpi/acrestyp.h	113;"	d
ACPI_GPE_CAN_WAKE	include/acpi/actypes.h	687;"	d
ACPI_GPE_CONDITIONAL_ENABLE	include/acpi/actypes.h	664;"	d
ACPI_GPE_DISABLE	include/acpi/actypes.h	663;"	d
ACPI_GPE_DISPATCH_HANDLER	include/acpi/actypes.h	679;"	d
ACPI_GPE_DISPATCH_MASK	include/acpi/actypes.h	681;"	d
ACPI_GPE_DISPATCH_METHOD	include/acpi/actypes.h	678;"	d
ACPI_GPE_DISPATCH_NONE	include/acpi/actypes.h	677;"	d
ACPI_GPE_DISPATCH_NOTIFY	include/acpi/actypes.h	680;"	d
ACPI_GPE_EDGE_TRIGGERED	include/acpi/actypes.h	684;"	d
ACPI_GPE_ENABLE	include/acpi/actypes.h	662;"	d
ACPI_GPE_INVALID	include/acpi/actypes.h	656;"	d
ACPI_GPE_LEVEL_TRIGGERED	include/acpi/actypes.h	683;"	d
ACPI_GPE_MAX	include/acpi/actypes.h	657;"	d
ACPI_GPE_REGISTER_WIDTH	include/acpi/actypes.h	321;"	d
ACPI_GPE_REGISTER_WIDTH	src/acpi/acpica/acconfig.h	135;"	d
ACPI_GPE_XRUPT_TYPE_MASK	include/acpi/actypes.h	685;"	d
ACPI_HARDWARE	include/acpi/acoutput.h	56;"	d
ACPI_HEST_CORRECTABLE	include/acpi/actbl1.h	580;"	d
ACPI_HEST_ERROR_ENTRY_COUNT	include/acpi/actbl1.h	583;"	d
ACPI_HEST_ERR_THRESHOLD_VALUE	include/acpi/actbl1.h	479;"	d
ACPI_HEST_ERR_THRESHOLD_WINDOW	include/acpi/actbl1.h	480;"	d
ACPI_HEST_FIRMWARE_FIRST	include/acpi/actbl1.h	445;"	d
ACPI_HEST_GLOBAL	include/acpi/actbl1.h	446;"	d
ACPI_HEST_MULTIPLE_CORRECTABLE	include/acpi/actbl1.h	582;"	d
ACPI_HEST_MULTIPLE_UNCORRECTABLE	include/acpi/actbl1.h	581;"	d
ACPI_HEST_NOTIFY_EXTERNAL	include/acpi/actbl1.h	/^	ACPI_HEST_NOTIFY_EXTERNAL = 1,$/;"	e	enum:acpi_hest_notify_types
ACPI_HEST_NOTIFY_LOCAL	include/acpi/actbl1.h	/^	ACPI_HEST_NOTIFY_LOCAL = 2,$/;"	e	enum:acpi_hest_notify_types
ACPI_HEST_NOTIFY_NMI	include/acpi/actbl1.h	/^	ACPI_HEST_NOTIFY_NMI = 4,$/;"	e	enum:acpi_hest_notify_types
ACPI_HEST_NOTIFY_POLLED	include/acpi/actbl1.h	/^	ACPI_HEST_NOTIFY_POLLED = 0,$/;"	e	enum:acpi_hest_notify_types
ACPI_HEST_NOTIFY_RESERVED	include/acpi/actbl1.h	/^	ACPI_HEST_NOTIFY_RESERVED = 5	\/* 5 and greater are reserved *\/$/;"	e	enum:acpi_hest_notify_types
ACPI_HEST_NOTIFY_SCI	include/acpi/actbl1.h	/^	ACPI_HEST_NOTIFY_SCI = 3,$/;"	e	enum:acpi_hest_notify_types
ACPI_HEST_POLL_INTERVAL	include/acpi/actbl1.h	476;"	d
ACPI_HEST_POLL_THRESHOLD_VALUE	include/acpi/actbl1.h	477;"	d
ACPI_HEST_POLL_THRESHOLD_WINDOW	include/acpi/actbl1.h	478;"	d
ACPI_HEST_TYPE	include/acpi/actbl1.h	475;"	d
ACPI_HEST_TYPE_AER_BRIDGE	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_AER_BRIDGE = 8,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_AER_ENDPOINT	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_AER_ENDPOINT = 7,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_AER_ROOT_PORT	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_AER_ROOT_PORT = 6,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_GENERIC_ERROR	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_GENERIC_ERROR = 9,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_IA32_CHECK	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_IA32_CHECK = 0,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_IA32_CORRECTED_CHECK	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_IA32_CORRECTED_CHECK = 1,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_IA32_NMI	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_IA32_NMI = 2,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_NOT_USED3	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_NOT_USED3 = 3,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_NOT_USED4	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_NOT_USED4 = 4,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_NOT_USED5	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_NOT_USED5 = 5,$/;"	e	enum:acpi_hest_types
ACPI_HEST_TYPE_RESERVED	include/acpi/actbl1.h	/^	ACPI_HEST_TYPE_RESERVED = 10	\/* 10 and greater are reserved *\/$/;"	e	enum:acpi_hest_types
ACPI_HEST_UNCORRECTABLE	include/acpi/actbl1.h	579;"	d
ACPI_HIBYTE	include/acpi/actypes.h	426;"	d
ACPI_HIDWORD	include/acpi/actypes.h	430;"	d
ACPI_HIWORD	include/acpi/actypes.h	428;"	d
ACPI_HI_RSDP_WINDOW_BASE	src/acpi/acpica/acconfig.h	184;"	d
ACPI_HI_RSDP_WINDOW_SIZE	src/acpi/acpica/acconfig.h	185;"	d
ACPI_HPET_NO_PAGE_PROTECT	include/acpi/actbl2.h	/^	ACPI_HPET_NO_PAGE_PROTECT = 0,$/;"	e	enum:acpi_hpet_page_protect
ACPI_HPET_PAGE_PROTECT4	include/acpi/actbl2.h	/^	ACPI_HPET_PAGE_PROTECT4 = 1,$/;"	e	enum:acpi_hpet_page_protect
ACPI_HPET_PAGE_PROTECT64	include/acpi/actbl2.h	/^	ACPI_HPET_PAGE_PROTECT64 = 2$/;"	e	enum:acpi_hpet_page_protect
ACPI_HPET_PAGE_PROTECT_MASK	include/acpi/actbl2.h	388;"	d
ACPI_IBFT_TYPE_CONTROL	include/acpi/actbl2.h	/^	ACPI_IBFT_TYPE_CONTROL = 1,$/;"	e	enum:acpi_ibft_type
ACPI_IBFT_TYPE_EXTENSIONS	include/acpi/actbl2.h	/^	ACPI_IBFT_TYPE_EXTENSIONS = 5,$/;"	e	enum:acpi_ibft_type
ACPI_IBFT_TYPE_INITIATOR	include/acpi/actbl2.h	/^	ACPI_IBFT_TYPE_INITIATOR = 2,$/;"	e	enum:acpi_ibft_type
ACPI_IBFT_TYPE_NIC	include/acpi/actbl2.h	/^	ACPI_IBFT_TYPE_NIC = 3,$/;"	e	enum:acpi_ibft_type
ACPI_IBFT_TYPE_NOT_USED	include/acpi/actbl2.h	/^	ACPI_IBFT_TYPE_NOT_USED = 0,$/;"	e	enum:acpi_ibft_type
ACPI_IBFT_TYPE_RESERVED	include/acpi/actbl2.h	/^	ACPI_IBFT_TYPE_RESERVED = 6	\/* 6 and greater are reserved *\/$/;"	e	enum:acpi_ibft_type
ACPI_IBFT_TYPE_TARGET	include/acpi/actbl2.h	/^	ACPI_IBFT_TYPE_TARGET = 4,$/;"	e	enum:acpi_ibft_type
ACPI_IMODE_EXECUTE	src/acpi/acpica/aclocal.h	/^	ACPI_IMODE_EXECUTE = 0x03$/;"	e	enum:__anon104
ACPI_IMODE_LOAD_PASS1	src/acpi/acpica/aclocal.h	/^	ACPI_IMODE_LOAD_PASS1 = 0x01,$/;"	e	enum:__anon104
ACPI_IMODE_LOAD_PASS2	src/acpi/acpica/aclocal.h	/^	ACPI_IMODE_LOAD_PASS2 = 0x02,$/;"	e	enum:__anon104
ACPI_INFO	include/acpi/acoutput.h	212;"	d
ACPI_INFO	include/acpi/acoutput.h	222;"	d
ACPI_INFO_PREDEFINED	src/acpi/acpica/acmacros.h	344;"	d
ACPI_INFO_PREDEFINED	src/acpi/acpica/acmacros.h	353;"	d
ACPI_INITIALIZED_OK	include/acpi/actypes.h	484;"	d
ACPI_INIT_DEVICE_INI	include/acpi/actypes.h	936;"	d
ACPI_INIT_GLOBAL	src/acpi/acpica/acglobal.h	59;"	d
ACPI_INIT_GLOBAL	src/acpi/acpica/acglobal.h	62;"	d
ACPI_INLINE	include/acpi/platform/acenv.h	199;"	d
ACPI_INLINE	include/acpi/platform/acgcc.h	47;"	d
ACPI_INSERT_BITS	src/acpi/acpica/acmacros.h	283;"	d
ACPI_INTEGER_BIT_SIZE	include/acpi/actypes.h	381;"	d
ACPI_INTEGER_MAX	include/acpi/actypes.h	415;"	d
ACPI_INTERNAL_METHOD	src/acpi/acpica/aclocal.h	/^acpi_status(*ACPI_INTERNAL_METHOD) (struct acpi_walk_state * walk_state);$/;"	t
ACPI_INTERNAL_VAR_XFACE	include/acpi/platform/acenv.h	355;"	d
ACPI_INTERNAL_VAR_XFACE	include/nautilus/acpi-x86_64.h	41;"	d
ACPI_INTERNAL_XFACE	include/acpi/platform/acenv.h	354;"	d
ACPI_INTERNAL_XFACE	include/nautilus/acpi-x86_64.h	40;"	d
ACPI_INTERRUPT_COUNT	include/nautilus/acpi.h	/^	ACPI_INTERRUPT_COUNT$/;"	e	enum:acpi_interrupt_id
ACPI_INTERRUPT_CPEI	include/nautilus/acpi.h	/^	ACPI_INTERRUPT_CPEI,$/;"	e	enum:acpi_interrupt_id
ACPI_INTERRUPT_HANDLED	include/acpi/actypes.h	981;"	d
ACPI_INTERRUPT_INIT	include/nautilus/acpi.h	/^	ACPI_INTERRUPT_INIT,$/;"	e	enum:acpi_interrupt_id
ACPI_INTERRUPT_NOT_HANDLED	include/acpi/actypes.h	980;"	d
ACPI_INTERRUPT_PMI	include/nautilus/acpi.h	/^	ACPI_INTERRUPT_PMI	= 1,$/;"	e	enum:acpi_interrupt_id
ACPI_IO_MASK	include/acpi/actypes.h	612;"	d
ACPI_IO_RANGE	include/acpi/acrestyp.h	121;"	d
ACPI_IPMI_BUFFER_SIZE	src/acpi/acpica/acconfig.h	208;"	d
ACPI_IRQ_MODEL_COUNT	include/nautilus/acpi.h	/^	ACPI_IRQ_MODEL_COUNT$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_IOAPIC	include/nautilus/acpi.h	/^	ACPI_IRQ_MODEL_IOAPIC,$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_IOSAPIC	include/nautilus/acpi.h	/^	ACPI_IRQ_MODEL_IOSAPIC,$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_PIC	include/nautilus/acpi.h	/^	ACPI_IRQ_MODEL_PIC = 0,$/;"	e	enum:acpi_irq_model_id
ACPI_IRQ_MODEL_PLATFORM	include/nautilus/acpi.h	/^	ACPI_IRQ_MODEL_PLATFORM,$/;"	e	enum:acpi_irq_model_id
ACPI_ISA_ONLY_RANGES	include/acpi/acrestyp.h	70;"	d
ACPI_ISR	include/acpi/actypes.h	693;"	d
ACPI_IS_ALPHA	include/acpi/platform/acenv.h	267;"	d
ACPI_IS_ASCII	include/acpi/platform/acenv.h	225;"	d
ACPI_IS_DIGIT	include/acpi/platform/acenv.h	263;"	d
ACPI_IS_MISALIGNED	src/acpi/acpica/acmacros.h	267;"	d
ACPI_IS_PRINT	include/acpi/platform/acenv.h	266;"	d
ACPI_IS_SPACE	include/acpi/platform/acenv.h	264;"	d
ACPI_IS_UPPER	include/acpi/platform/acenv.h	265;"	d
ACPI_IS_XDIGIT	include/acpi/platform/acenv.h	262;"	d
ACPI_IVHD_ATS_DISABLED	include/acpi/actbl2.h	641;"	d
ACPI_IVHD_EINT_PASS	include/acpi/actbl2.h	611;"	d
ACPI_IVHD_ENTRY_LENGTH	include/acpi/actbl2.h	584;"	d
ACPI_IVHD_HPET	include/acpi/actbl2.h	655;"	d
ACPI_IVHD_INIT_PASS	include/acpi/actbl2.h	610;"	d
ACPI_IVHD_IOAPIC	include/acpi/actbl2.h	654;"	d
ACPI_IVHD_IOTLB	include/acpi/actbl2.h	541;"	d
ACPI_IVHD_ISOC	include/acpi/actbl2.h	540;"	d
ACPI_IVHD_LINT0_PASS	include/acpi/actbl2.h	614;"	d
ACPI_IVHD_LINT1_PASS	include/acpi/actbl2.h	615;"	d
ACPI_IVHD_MSI_NUMBER_MASK	include/acpi/actbl2.h	567;"	d
ACPI_IVHD_NMI_PASS	include/acpi/actbl2.h	612;"	d
ACPI_IVHD_PASS_PW	include/acpi/actbl2.h	538;"	d
ACPI_IVHD_RES_PASS_PW	include/acpi/actbl2.h	539;"	d
ACPI_IVHD_SYSTEM_MGMT	include/acpi/actbl2.h	613;"	d
ACPI_IVHD_TT_ENABLE	include/acpi/actbl2.h	537;"	d
ACPI_IVHD_UNIT_ID_MASK	include/acpi/actbl2.h	568;"	d
ACPI_IVMD_EXCLUSION_RANGE	include/acpi/actbl2.h	548;"	d
ACPI_IVMD_READ	include/acpi/actbl2.h	546;"	d
ACPI_IVMD_UNITY	include/acpi/actbl2.h	545;"	d
ACPI_IVMD_WRITE	include/acpi/actbl2.h	547;"	d
ACPI_IVRS_ATS_RESERVED	include/acpi/actbl2.h	515;"	d
ACPI_IVRS_PHYSICAL_SIZE	include/acpi/actbl2.h	513;"	d
ACPI_IVRS_TYPE_ALIAS_SELECT	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_ALIAS_SELECT = 66,	\/* Uses struct acpi_ivrs_device8a *\/$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_ALIAS_START	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_ALIAS_START = 67,	\/* Uses struct acpi_ivrs_device8a *\/$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_ALL	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_ALL = 1,$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_END	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_END = 4,$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_EXT_SELECT	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_EXT_SELECT = 70,	\/* Uses struct acpi_ivrs_device8b *\/$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_EXT_START	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_EXT_START = 71,	\/* Uses struct acpi_ivrs_device8b *\/$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_HARDWARE	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_HARDWARE = 0x10,$/;"	e	enum:acpi_ivrs_type
ACPI_IVRS_TYPE_MEMORY1	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_MEMORY1 = 0x20,$/;"	e	enum:acpi_ivrs_type
ACPI_IVRS_TYPE_MEMORY2	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_MEMORY2 = 0x21,$/;"	e	enum:acpi_ivrs_type
ACPI_IVRS_TYPE_MEMORY3	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_MEMORY3 = 0x22$/;"	e	enum:acpi_ivrs_type
ACPI_IVRS_TYPE_NOT_USED	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_NOT_USED = 65,$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_PAD4	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_PAD4 = 0,$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_PAD8	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_PAD8 = 64,$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_SELECT	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_SELECT = 2,$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_SPECIAL	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_SPECIAL = 72	\/* Uses struct acpi_ivrs_device8c *\/$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_TYPE_START	include/acpi/actbl2.h	/^	ACPI_IVRS_TYPE_START = 3,$/;"	e	enum:acpi_ivrs_device_entry_type
ACPI_IVRS_VIRTUAL_SIZE	include/acpi/actbl2.h	514;"	d
ACPI_LARGE_NAMESPACE_NODE	include/acpi/platform/acenv.h	76;"	d
ACPI_LEVEL_SENSITIVE	include/acpi/acrestyp.h	86;"	d
ACPI_LOBYTE	include/acpi/actypes.h	425;"	d
ACPI_LOCK_GPES	src/acpi/acpica/aclocal.h	104;"	d
ACPI_LOCK_HARDWARE	src/acpi/acpica/aclocal.h	105;"	d
ACPI_LODWORD	include/acpi/actypes.h	429;"	d
ACPI_LOWORD	include/acpi/actypes.h	427;"	d
ACPI_LV_ALL	include/acpi/acoutput.h	116;"	d
ACPI_LV_ALLOCATIONS	include/acpi/acoutput.h	112;"	d
ACPI_LV_ALL_EXCEPTIONS	include/acpi/acoutput.h	90;"	d
ACPI_LV_AML_DISASSEMBLE	include/acpi/acoutput.h	128;"	d
ACPI_LV_BFIELD	include/acpi/acoutput.h	101;"	d
ACPI_LV_DEBUG_OBJECT	include/acpi/acoutput.h	87;"	d
ACPI_LV_DISPATCH	include/acpi/acoutput.h	97;"	d
ACPI_LV_EVENTS	include/acpi/acoutput.h	131;"	d
ACPI_LV_EXEC	include/acpi/acoutput.h	98;"	d
ACPI_LV_FULL_TABLES	include/acpi/acoutput.h	130;"	d
ACPI_LV_FUNCTIONS	include/acpi/acoutput.h	113;"	d
ACPI_LV_INFO	include/acpi/acoutput.h	88;"	d
ACPI_LV_INIT	include/acpi/acoutput.h	86;"	d
ACPI_LV_INIT_NAMES	include/acpi/acoutput.h	94;"	d
ACPI_LV_INTERRUPTS	include/acpi/acoutput.h	123;"	d
ACPI_LV_IO	include/acpi/acoutput.h	122;"	d
ACPI_LV_LOAD	include/acpi/acoutput.h	96;"	d
ACPI_LV_MUTEX	include/acpi/acoutput.h	120;"	d
ACPI_LV_NAMES	include/acpi/acoutput.h	99;"	d
ACPI_LV_OBJECTS	include/acpi/acoutput.h	104;"	d
ACPI_LV_OPREGION	include/acpi/acoutput.h	100;"	d
ACPI_LV_OPTIMIZATIONS	include/acpi/acoutput.h	114;"	d
ACPI_LV_PACKAGE	include/acpi/acoutput.h	107;"	d
ACPI_LV_PARSE	include/acpi/acoutput.h	95;"	d
ACPI_LV_REPAIR	include/acpi/acoutput.h	89;"	d
ACPI_LV_RESOURCES	include/acpi/acoutput.h	105;"	d
ACPI_LV_TABLES	include/acpi/acoutput.h	102;"	d
ACPI_LV_THREADS	include/acpi/acoutput.h	121;"	d
ACPI_LV_USER_REQUESTS	include/acpi/acoutput.h	106;"	d
ACPI_LV_VALUES	include/acpi/acoutput.h	103;"	d
ACPI_LV_VERBOSE	include/acpi/acoutput.h	132;"	d
ACPI_LV_VERBOSE_INFO	include/acpi/acoutput.h	129;"	d
ACPI_LV_VERBOSITY1	include/acpi/acoutput.h	108;"	d
ACPI_LV_VERBOSITY2	include/acpi/acoutput.h	115;"	d
ACPI_LV_VERBOSITY3	include/acpi/acoutput.h	124;"	d
ACPI_MACHINE_WIDTH	include/acpi/platform/acnautilus.h	67;"	d
ACPI_MADT_CPEI_OVERRIDE	include/acpi/actbl1.h	733;"	d
ACPI_MADT_DUAL_PIC	include/acpi/actbl1.h	617;"	d
ACPI_MADT_ENABLED	include/acpi/actbl1.h	761;"	d
ACPI_MADT_MULTIPLE_APIC	include/acpi/actbl1.h	618;"	d
ACPI_MADT_PCAT_COMPAT	include/acpi/actbl1.h	613;"	d
ACPI_MADT_POLARITY_ACTIVE_HIGH	include/acpi/actbl1.h	771;"	d
ACPI_MADT_POLARITY_ACTIVE_LOW	include/acpi/actbl1.h	773;"	d
ACPI_MADT_POLARITY_CONFORMS	include/acpi/actbl1.h	770;"	d
ACPI_MADT_POLARITY_MASK	include/acpi/actbl1.h	765;"	d
ACPI_MADT_POLARITY_RESERVED	include/acpi/actbl1.h	772;"	d
ACPI_MADT_TRIGGER_CONFORMS	include/acpi/actbl1.h	775;"	d
ACPI_MADT_TRIGGER_EDGE	include/acpi/actbl1.h	776;"	d
ACPI_MADT_TRIGGER_LEVEL	include/acpi/actbl1.h	778;"	d
ACPI_MADT_TRIGGER_MASK	include/acpi/actbl1.h	766;"	d
ACPI_MADT_TRIGGER_RESERVED	include/acpi/actbl1.h	777;"	d
ACPI_MADT_TYPE_INTERRUPT_OVERRIDE	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_INTERRUPT_OVERRIDE = 2,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_INTERRUPT_SOURCE	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_INTERRUPT_SOURCE = 8,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_IO_APIC	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_IO_APIC = 1,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_IO_SAPIC	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_IO_SAPIC = 6,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_LOCAL_APIC	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_LOCAL_APIC = 0,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_LOCAL_APIC_NMI	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_LOCAL_APIC_NMI = 4,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_LOCAL_APIC_OVERRIDE	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_LOCAL_APIC_OVERRIDE = 5,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_LOCAL_SAPIC	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_LOCAL_SAPIC = 7,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_LOCAL_X2APIC	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_LOCAL_X2APIC = 9,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_LOCAL_X2APIC_NMI	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_LOCAL_X2APIC_NMI = 10,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_NMI_SOURCE	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_NMI_SOURCE = 3,$/;"	e	enum:acpi_madt_type
ACPI_MADT_TYPE_RESERVED	include/acpi/actbl1.h	/^	ACPI_MADT_TYPE_RESERVED = 11	\/* 11 and greater are reserved *\/$/;"	e	enum:acpi_madt_type
ACPI_MASK_BITS_ABOVE	src/acpi/acpica/acmacros.h	275;"	d
ACPI_MASK_BITS_BELOW	src/acpi/acpica/acmacros.h	276;"	d
ACPI_MAX	include/acpi/actypes.h	435;"	d
ACPI_MAX16_DECIMAL_DIGITS	include/acpi/actypes.h	390;"	d
ACPI_MAX32_DECIMAL_DIGITS	include/acpi/actypes.h	389;"	d
ACPI_MAX64_DECIMAL_DIGITS	include/acpi/actypes.h	388;"	d
ACPI_MAX8_DECIMAL_DIGITS	include/acpi/actypes.h	391;"	d
ACPI_MAX_ADDRESS_SPACE	src/acpi/acpica/acconfig.h	194;"	d
ACPI_MAX_CID_LENGTH	src/acpi/acpica/acconfig.h	148;"	d
ACPI_MAX_DECIMAL_DIGITS	include/acpi/actypes.h	382;"	d
ACPI_MAX_EXTPARSE_CACHE_DEPTH	src/acpi/acpica/acconfig.h	78;"	d
ACPI_MAX_GPE_BLOCKS	include/acpi/actypes.h	317;"	d
ACPI_MAX_GPE_BLOCKS	src/acpi/acpica/acconfig.h	134;"	d
ACPI_MAX_LOCK	src/acpi/acpica/aclocal.h	107;"	d
ACPI_MAX_LOOP_ITERATIONS	src/acpi/acpica/acconfig.h	120;"	d
ACPI_MAX_MATCH_OPCODE	src/acpi/acpica/acconfig.h	198;"	d
ACPI_MAX_MODULE_NAME	src/acpi/acpica/aclocal.h	1037;"	d
ACPI_MAX_MUTEX	src/acpi/acpica/aclocal.h	89;"	d
ACPI_MAX_NAMESPACE_CACHE_DEPTH	src/acpi/acpica/acconfig.h	80;"	d
ACPI_MAX_NOTIFY_HANDLER_TYPE	include/acpi/actypes.h	700;"	d
ACPI_MAX_OBJECT_CACHE_DEPTH	src/acpi/acpica/acconfig.h	79;"	d
ACPI_MAX_PARSEOP_NAME	src/acpi/acpica/aclocal.h	707;"	d
ACPI_MAX_PARSE_CACHE_DEPTH	src/acpi/acpica/acconfig.h	77;"	d
ACPI_MAX_PTR	include/acpi/actypes.h	165;"	d
ACPI_MAX_PTR	include/acpi/actypes.h	204;"	d
ACPI_MAX_REFERENCE_COUNT	src/acpi/acpica/acconfig.h	104;"	d
ACPI_MAX_SEMAPHORE_COUNT	src/acpi/acpica/acconfig.h	100;"	d
ACPI_MAX_SLEEP	src/acpi/acpica/acconfig.h	124;"	d
ACPI_MAX_STATE_CACHE_DEPTH	src/acpi/acpica/acconfig.h	76;"	d
ACPI_MAX_SYS_NOTIFY	include/acpi/actypes.h	702;"	d
ACPI_MAX_TABLES	src/acpi/tables.c	36;"	d	file:
ACPI_MEMCMP	include/acpi/platform/acenv.h	256;"	d
ACPI_MEMCMP	include/acpi/platform/acenv.h	317;"	d
ACPI_MEMCPY	include/acpi/platform/acenv.h	257;"	d
ACPI_MEMCPY	include/acpi/platform/acenv.h	318;"	d
ACPI_MEMORY_RANGE	include/acpi/acrestyp.h	120;"	d
ACPI_MEMSET	include/acpi/platform/acenv.h	258;"	d
ACPI_MEMSET	include/acpi/platform/acenv.h	319;"	d
ACPI_MEM_CALLOC	src/acpi/acpica/aclocal.h	1036;"	d
ACPI_MEM_LIST_GLOBAL	src/acpi/acpica/aclocal.h	1055;"	d
ACPI_MEM_LIST_MAX	src/acpi/acpica/aclocal.h	1057;"	d
ACPI_MEM_LIST_NSNODE	src/acpi/acpica/aclocal.h	1056;"	d
ACPI_MEM_MALLOC	src/acpi/acpica/aclocal.h	1035;"	d
ACPI_MEM_PARAMETERS	src/acpi/acpica/acmacros.h	546;"	d
ACPI_MEM_TRACKING	src/acpi/acpica/acmacros.h	561;"	d
ACPI_MEM_TRACKING	src/acpi/acpica/acmacros.h	572;"	d
ACPI_METHOD_MAX_ARG	src/acpi/acpica/acconfig.h	143;"	d
ACPI_METHOD_MAX_LOCAL	src/acpi/acpica/acconfig.h	140;"	d
ACPI_METHOD_NUM_ARGS	src/acpi/acpica/acconfig.h	142;"	d
ACPI_METHOD_NUM_LOCALS	src/acpi/acpica/acconfig.h	139;"	d
ACPI_MIN	include/acpi/actypes.h	434;"	d
ACPI_MISALIGNMENT_NOT_SUPPORTED	include/acpi/actypes.h	180;"	d
ACPI_MODULE_NAME	include/acpi/acoutput.h	191;"	d
ACPI_MODULE_NAME	include/acpi/acoutput.h	197;"	d
ACPI_MOD_16	src/acpi/acpica/acmacros.h	232;"	d
ACPI_MOD_2	src/acpi/acpica/acmacros.h	220;"	d
ACPI_MOD_32	src/acpi/acpica/acmacros.h	236;"	d
ACPI_MOD_4	src/acpi/acpica/acmacros.h	224;"	d
ACPI_MOD_8	src/acpi/acpica/acmacros.h	228;"	d
ACPI_MOVE_16_TO_16	src/acpi/acpica/acmacros.h	142;"	d
ACPI_MOVE_16_TO_16	src/acpi/acpica/acmacros.h	167;"	d
ACPI_MOVE_16_TO_16	src/acpi/acpica/acmacros.h	91;"	d
ACPI_MOVE_16_TO_32	src/acpi/acpica/acmacros.h	143;"	d
ACPI_MOVE_16_TO_32	src/acpi/acpica/acmacros.h	170;"	d
ACPI_MOVE_16_TO_32	src/acpi/acpica/acmacros.h	94;"	d
ACPI_MOVE_16_TO_64	src/acpi/acpica/acmacros.h	144;"	d
ACPI_MOVE_16_TO_64	src/acpi/acpica/acmacros.h	171;"	d
ACPI_MOVE_16_TO_64	src/acpi/acpica/acmacros.h	98;"	d
ACPI_MOVE_32_TO_16	src/acpi/acpica/acmacros.h	104;"	d
ACPI_MOVE_32_TO_16	src/acpi/acpica/acmacros.h	148;"	d
ACPI_MOVE_32_TO_16	src/acpi/acpica/acmacros.h	175;"	d
ACPI_MOVE_32_TO_32	src/acpi/acpica/acmacros.h	106;"	d
ACPI_MOVE_32_TO_32	src/acpi/acpica/acmacros.h	149;"	d
ACPI_MOVE_32_TO_32	src/acpi/acpica/acmacros.h	177;"	d
ACPI_MOVE_32_TO_64	src/acpi/acpica/acmacros.h	111;"	d
ACPI_MOVE_32_TO_64	src/acpi/acpica/acmacros.h	150;"	d
ACPI_MOVE_32_TO_64	src/acpi/acpica/acmacros.h	182;"	d
ACPI_MOVE_64_TO_16	src/acpi/acpica/acmacros.h	119;"	d
ACPI_MOVE_64_TO_16	src/acpi/acpica/acmacros.h	154;"	d
ACPI_MOVE_64_TO_16	src/acpi/acpica/acmacros.h	186;"	d
ACPI_MOVE_64_TO_32	src/acpi/acpica/acmacros.h	121;"	d
ACPI_MOVE_64_TO_32	src/acpi/acpica/acmacros.h	155;"	d
ACPI_MOVE_64_TO_32	src/acpi/acpica/acmacros.h	187;"	d
ACPI_MOVE_64_TO_64	src/acpi/acpica/acmacros.h	123;"	d
ACPI_MOVE_64_TO_64	src/acpi/acpica/acmacros.h	156;"	d
ACPI_MOVE_64_TO_64	src/acpi/acpica/acmacros.h	188;"	d
ACPI_MOVE_SIZE_TO_16	src/acpi/acpica/acmacros.h	202;"	d
ACPI_MOVE_SIZE_TO_16	src/acpi/acpica/acmacros.h	205;"	d
ACPI_MSG_ERROR	src/acpi/acpica/utxferror.c	80;"	d	file:
ACPI_MSG_EXCEPTION	src/acpi/acpica/utxferror.c	81;"	d	file:
ACPI_MSG_INFO	src/acpi/acpica/utxferror.c	83;"	d	file:
ACPI_MSG_REDIRECT_BEGIN	src/acpi/acpica/utxferror.c	63;"	d	file:
ACPI_MSG_REDIRECT_END	src/acpi/acpica/utxferror.c	67;"	d	file:
ACPI_MSG_SUFFIX	src/acpi/acpica/utxferror.c	87;"	d	file:
ACPI_MSG_WARNING	src/acpi/acpica/utxferror.c	82;"	d	file:
ACPI_MTX_CACHES	src/acpi/acpica/aclocal.h	84;"	d
ACPI_MTX_DEBUG_CMD_COMPLETE	src/acpi/acpica/aclocal.h	86;"	d
ACPI_MTX_DEBUG_CMD_READY	src/acpi/acpica/aclocal.h	87;"	d
ACPI_MTX_DO_NOT_LOCK	src/acpi/acpica/aclocal.h	124;"	d
ACPI_MTX_EVENTS	src/acpi/acpica/aclocal.h	83;"	d
ACPI_MTX_INTERPRETER	src/acpi/acpica/aclocal.h	80;"	d
ACPI_MTX_LOCK	src/acpi/acpica/aclocal.h	125;"	d
ACPI_MTX_MEMORY	src/acpi/acpica/aclocal.h	85;"	d
ACPI_MTX_NAMESPACE	src/acpi/acpica/aclocal.h	81;"	d
ACPI_MTX_TABLES	src/acpi/acpica/aclocal.h	82;"	d
ACPI_MUL_16	src/acpi/acpica/acmacros.h	231;"	d
ACPI_MUL_2	src/acpi/acpica/acmacros.h	219;"	d
ACPI_MUL_32	src/acpi/acpica/acmacros.h	235;"	d
ACPI_MUL_4	src/acpi/acpica/acmacros.h	223;"	d
ACPI_MUL_8	src/acpi/acpica/acmacros.h	227;"	d
ACPI_MUTEX_DEBUG	include/acpi/platform/acenv.h	86;"	d
ACPI_MUTEX_NOT_ACQUIRED	src/acpi/acpica/aclocal.h	112;"	d
ACPI_MUTEX_SEM	include/acpi/acpiosxf.h	65;"	d
ACPI_MUTEX_TYPE	include/acpi/platform/acenv.h	193;"	d
ACPI_MUTEX_TYPE	include/acpi/platform/acnautilus.h	51;"	d
ACPI_NAMESPACE	include/acpi/acoutput.h	59;"	d
ACPI_NAME_SIZE	include/acpi/actypes.h	328;"	d
ACPI_NAME_SIZE	src/acpi/acpica/acconfig.h	170;"	d
ACPI_NAME_TYPE_MAX	include/acpi/actypes.h	866;"	d
ACPI_NEXT_RESOURCE	include/acpi/acrestyp.h	395;"	d
ACPI_NON_CACHEABLE_MEMORY	include/acpi/acrestyp.h	59;"	d
ACPI_NON_ISA_ONLY_RANGES	include/acpi/acrestyp.h	69;"	d
ACPI_NORMAL_DEFAULT	include/acpi/acoutput.h	181;"	d
ACPI_NORMAL_EXEC	src/acpi/acpica/acmacros.h	468;"	d
ACPI_NORMAL_EXEC	src/acpi/acpica/acmacros.h	491;"	d
ACPI_NOTIFY_BUS_CHECK	include/acpi/actypes.h	524;"	d
ACPI_NOTIFY_BUS_MODE_MISMATCH	include/acpi/actypes.h	530;"	d
ACPI_NOTIFY_CAPABILITIES_CHECK	include/acpi/actypes.h	532;"	d
ACPI_NOTIFY_DEVICE_CHECK	include/acpi/actypes.h	525;"	d
ACPI_NOTIFY_DEVICE_CHECK_LIGHT	include/acpi/actypes.h	528;"	d
ACPI_NOTIFY_DEVICE_PLD_CHECK	include/acpi/actypes.h	533;"	d
ACPI_NOTIFY_DEVICE_WAKE	include/acpi/actypes.h	526;"	d
ACPI_NOTIFY_EJECT_REQUEST	include/acpi/actypes.h	527;"	d
ACPI_NOTIFY_FREQUENCY_MISMATCH	include/acpi/actypes.h	529;"	d
ACPI_NOTIFY_LOCALITY_UPDATE	include/acpi/actypes.h	535;"	d
ACPI_NOTIFY_MAX	include/acpi/actypes.h	537;"	d
ACPI_NOTIFY_POWER_FAULT	include/acpi/actypes.h	531;"	d
ACPI_NOTIFY_RESERVED	include/acpi/actypes.h	534;"	d
ACPI_NOT_BUS_MASTER	include/acpi/acrestyp.h	103;"	d
ACPI_NOT_ISR	include/acpi/actypes.h	692;"	d
ACPI_NO_ACPI_ENABLE	include/acpi/actypes.h	476;"	d
ACPI_NO_ADDRESS_SPACE_INIT	include/acpi/actypes.h	472;"	d
ACPI_NO_BUFFER	include/acpi/actypes.h	852;"	d
ACPI_NO_DEVICE_INIT	include/acpi/actypes.h	477;"	d
ACPI_NO_EVENT_INIT	include/acpi/actypes.h	474;"	d
ACPI_NO_HANDLER_INIT	include/acpi/actypes.h	475;"	d
ACPI_NO_HARDWARE_INIT	include/acpi/actypes.h	473;"	d
ACPI_NO_OBJECT_INIT	include/acpi/actypes.h	478;"	d
ACPI_NO_UNIT_LIMIT	include/acpi/acpiosxf.h	64;"	d
ACPI_NS_ROOT_PATH	include/acpi/acnames.h	80;"	d
ACPI_NS_SYSTEM_BUS	include/acpi/acnames.h	81;"	d
ACPI_NUM_BITREG	include/acpi/actypes.h	777;"	d
ACPI_NUM_FIXED_EVENTS	include/acpi/actypes.h	628;"	d
ACPI_NUM_GPE	include/acpi/actypes.h	658;"	d
ACPI_NUM_LOCK	src/acpi/acpica/aclocal.h	108;"	d
ACPI_NUM_MEM_LISTS	src/acpi/acpica/aclocal.h	1058;"	d
ACPI_NUM_MUTEX	src/acpi/acpica/aclocal.h	90;"	d
ACPI_NUM_NS_TYPES	include/acpi/actypes.h	605;"	d
ACPI_NUM_OWNERID_MASKS	src/acpi/acpica/acconfig.h	112;"	d
ACPI_NUM_PREDEFINED_REGIONS	include/acpi/actypes.h	717;"	d
ACPI_NUM_RTYPES	src/acpi/acpica/aclocal.h	382;"	d
ACPI_NUM_TABLE_EVENTS	include/acpi/actypes.h	902;"	d
ACPI_NUM_sx_d_METHODS	src/acpi/acpica/acconfig.h	212;"	d
ACPI_NUM_sx_w_METHODS	src/acpi/acpica/acconfig.h	213;"	d
ACPI_OBJECT_REPAIRED	src/acpi/acpica/aclocal.h	366;"	d
ACPI_OBJ_MAX_OPERAND	src/acpi/acpica/acconfig.h	155;"	d
ACPI_OBJ_NUM_OPERANDS	src/acpi/acpica/acconfig.h	154;"	d
ACPI_OEM_ID_SIZE	include/acpi/actypes.h	334;"	d
ACPI_OEM_ID_SIZE	src/acpi/acpica/acconfig.h	176;"	d
ACPI_OEM_TABLE_ID_SIZE	include/acpi/actypes.h	335;"	d
ACPI_OEM_TABLE_ID_SIZE	src/acpi/acpica/acconfig.h	177;"	d
ACPI_OFFSET	include/acpi/actypes.h	452;"	d
ACPI_OP	src/acpi/acpica/acmacros.h	299;"	d
ACPI_OP	src/acpi/acpica/acmacros.h	302;"	d
ACPI_OSI_DYNAMIC	src/acpi/acpica/aclocal.h	913;"	d
ACPI_OSI_INVALID	src/acpi/acpica/aclocal.h	912;"	d
ACPI_OSI_WINSRV_2003	src/acpi/acpica/aclocal.h	894;"	d
ACPI_OSI_WINSRV_2003_SP1	src/acpi/acpica/aclocal.h	896;"	d
ACPI_OSI_WINSRV_2008	src/acpi/acpica/aclocal.h	898;"	d
ACPI_OSI_WIN_2000	src/acpi/acpica/aclocal.h	891;"	d
ACPI_OSI_WIN_7	src/acpi/acpica/aclocal.h	901;"	d
ACPI_OSI_WIN_VISTA	src/acpi/acpica/aclocal.h	897;"	d
ACPI_OSI_WIN_VISTA_SP1	src/acpi/acpica/aclocal.h	899;"	d
ACPI_OSI_WIN_VISTA_SP2	src/acpi/acpica/aclocal.h	900;"	d
ACPI_OSI_WIN_XP	src/acpi/acpica/aclocal.h	892;"	d
ACPI_OSI_WIN_XP_SP1	src/acpi/acpica/aclocal.h	893;"	d
ACPI_OSI_WIN_XP_SP2	src/acpi/acpica/aclocal.h	895;"	d
ACPI_OSL_MUTEX	include/acpi/platform/acenv.h	50;"	d
ACPI_OS_NAME	src/acpi/acpica/acconfig.h	72;"	d
ACPI_OS_SERVICES	include/acpi/acoutput.h	65;"	d
ACPI_OWNER_ID_MAX	include/acpi/actypes.h	379;"	d
ACPI_PARSEOP_BYTELIST	src/acpi/acpica/aclocal.h	764;"	d
ACPI_PARSEOP_DEFERRED	src/acpi/acpica/aclocal.h	763;"	d
ACPI_PARSEOP_EMPTY_TERMLIST	src/acpi/acpica/aclocal.h	773;"	d
ACPI_PARSEOP_GENERIC	src/acpi/acpica/aclocal.h	761;"	d
ACPI_PARSEOP_IGNORE	src/acpi/acpica/aclocal.h	771;"	d
ACPI_PARSEOP_IN_CACHE	src/acpi/acpica/aclocal.h	767;"	d
ACPI_PARSEOP_IN_STACK	src/acpi/acpica/aclocal.h	765;"	d
ACPI_PARSEOP_NAMED	src/acpi/acpica/aclocal.h	762;"	d
ACPI_PARSEOP_PARAMLIST	src/acpi/acpica/aclocal.h	772;"	d
ACPI_PARSEOP_SPECIAL	src/acpi/acpica/aclocal.h	774;"	d
ACPI_PARSEOP_TARGET	src/acpi/acpica/aclocal.h	766;"	d
ACPI_PARSER	include/acpi/acoutput.h	60;"	d
ACPI_PARSE_COMMON	src/acpi/acpica/aclocal.h	663;"	d
ACPI_PATH_SEGMENT_LENGTH	include/acpi/actypes.h	329;"	d
ACPI_PATH_SEGMENT_LENGTH	src/acpi/acpica/acconfig.h	171;"	d
ACPI_PATH_SEPARATOR	include/acpi/actypes.h	330;"	d
ACPI_PATH_SEPARATOR	src/acpi/acpica/acconfig.h	172;"	d
ACPI_PCI_ROOT_BRIDGE	include/acpi/actypes.h	1030;"	d
ACPI_PHYSADDR_TO_PTR	include/acpi/actypes.h	453;"	d
ACPI_PM1_CONTROL_IGNORED_BITS	src/acpi/acpica/aclocal.h	808;"	d
ACPI_PM1_CONTROL_PRESERVED_BITS	src/acpi/acpica/aclocal.h	810;"	d
ACPI_PM1_CONTROL_RESERVED_BITS	src/acpi/acpica/aclocal.h	809;"	d
ACPI_PM1_CONTROL_WRITEONLY_BITS	src/acpi/acpica/aclocal.h	796;"	d
ACPI_PM1_REGISTER_WIDTH	include/acpi/actypes.h	322;"	d
ACPI_PM1_STATUS_PRESERVED_BITS	src/acpi/acpica/aclocal.h	792;"	d
ACPI_PM2_CONTROL_PRESERVED_BITS	src/acpi/acpica/aclocal.h	813;"	d
ACPI_PM2_REGISTER_WIDTH	include/acpi/actypes.h	323;"	d
ACPI_PM_TIMER_WIDTH	include/acpi/actypes.h	324;"	d
ACPI_POS_DECODE	include/acpi/acrestyp.h	127;"	d
ACPI_PREEMPTION_POINT	src/acpi/acpica/acmacros.h	578;"	d
ACPI_PREFETCHABLE_MEMORY	include/acpi/acrestyp.h	62;"	d
ACPI_PREFIX_LOWER	include/acpi/acnames.h	78;"	d
ACPI_PREFIX_MIXED	include/acpi/acnames.h	77;"	d
ACPI_PRINTF_LIKE	include/acpi/actypes.h	288;"	d
ACPI_PRINTF_LIKE	include/acpi/platform/acgcc.h	57;"	d
ACPI_PRODUCER	include/acpi/acrestyp.h	130;"	d
ACPI_PTR_DIFF	include/acpi/actypes.h	446;"	d
ACPI_PTR_TO_PHYSADDR	include/acpi/actypes.h	454;"	d
ACPI_READ	include/acpi/actypes.h	610;"	d
ACPI_READ_ONLY_MEMORY	include/acpi/acrestyp.h	56;"	d
ACPI_READ_WRITE_MEMORY	include/acpi/acrestyp.h	57;"	d
ACPI_REENABLE_GPE	include/acpi/actypes.h	985;"	d
ACPI_REGION_ACTIVATE	include/acpi/actypes.h	967;"	d
ACPI_REGION_DEACTIVATE	include/acpi/actypes.h	968;"	d
ACPI_REGISTER_INSERT_VALUE	src/acpi/acpica/acmacros.h	281;"	d
ACPI_REGISTER_PM1_CONTROL	src/acpi/acpica/aclocal.h	821;"	d
ACPI_REGISTER_PM1_ENABLE	src/acpi/acpica/aclocal.h	820;"	d
ACPI_REGISTER_PM1_STATUS	src/acpi/acpica/aclocal.h	819;"	d
ACPI_REGISTER_PM2_CONTROL	src/acpi/acpica/aclocal.h	822;"	d
ACPI_REGISTER_PM_TIMER	src/acpi/acpica/aclocal.h	823;"	d
ACPI_REGISTER_PREPARE_BITS	src/acpi/acpica/acmacros.h	280;"	d
ACPI_REGISTER_PROCESSOR_BLOCK	src/acpi/acpica/aclocal.h	824;"	d
ACPI_REGISTER_SMI_COMMAND_BLOCK	src/acpi/acpica/aclocal.h	825;"	d
ACPI_REG_CONNECT	include/acpi/actypes.h	733;"	d
ACPI_REG_DISCONNECT	include/acpi/actypes.h	732;"	d
ACPI_RELEASE_GLOBAL_LOCK	include/acpi/platform/acenv.h	362;"	d
ACPI_RELEASE_GLOBAL_LOCK	include/nautilus/acpi-x86_64.h	57;"	d
ACPI_RESOURCES	include/acpi/acoutput.h	63;"	d
ACPI_RESOURCE_ADDRESS_COMMON	include/acpi/acrestyp.h	266;"	d
ACPI_RESOURCE_NAME_ADDRESS16	src/acpi/acpica/aclocal.h	971;"	d
ACPI_RESOURCE_NAME_ADDRESS32	src/acpi/acpica/aclocal.h	970;"	d
ACPI_RESOURCE_NAME_ADDRESS64	src/acpi/acpica/aclocal.h	973;"	d
ACPI_RESOURCE_NAME_DMA	src/acpi/acpica/aclocal.h	948;"	d
ACPI_RESOURCE_NAME_END_DEPENDENT	src/acpi/acpica/aclocal.h	950;"	d
ACPI_RESOURCE_NAME_END_TAG	src/acpi/acpica/aclocal.h	958;"	d
ACPI_RESOURCE_NAME_EXTENDED_ADDRESS64	src/acpi/acpica/aclocal.h	974;"	d
ACPI_RESOURCE_NAME_EXTENDED_IRQ	src/acpi/acpica/aclocal.h	972;"	d
ACPI_RESOURCE_NAME_FIXED_IO	src/acpi/acpica/aclocal.h	952;"	d
ACPI_RESOURCE_NAME_FIXED_MEMORY32	src/acpi/acpica/aclocal.h	969;"	d
ACPI_RESOURCE_NAME_GENERIC_REGISTER	src/acpi/acpica/aclocal.h	965;"	d
ACPI_RESOURCE_NAME_IO	src/acpi/acpica/aclocal.h	951;"	d
ACPI_RESOURCE_NAME_IRQ	src/acpi/acpica/aclocal.h	947;"	d
ACPI_RESOURCE_NAME_LARGE	src/acpi/acpica/aclocal.h	936;"	d
ACPI_RESOURCE_NAME_LARGE_MASK	src/acpi/acpica/aclocal.h	941;"	d
ACPI_RESOURCE_NAME_LARGE_MAX	src/acpi/acpica/aclocal.h	975;"	d
ACPI_RESOURCE_NAME_MEMORY24	src/acpi/acpica/aclocal.h	964;"	d
ACPI_RESOURCE_NAME_MEMORY32	src/acpi/acpica/aclocal.h	968;"	d
ACPI_RESOURCE_NAME_RESERVED_L1	src/acpi/acpica/aclocal.h	966;"	d
ACPI_RESOURCE_NAME_RESERVED_S1	src/acpi/acpica/aclocal.h	953;"	d
ACPI_RESOURCE_NAME_RESERVED_S2	src/acpi/acpica/aclocal.h	954;"	d
ACPI_RESOURCE_NAME_RESERVED_S3	src/acpi/acpica/aclocal.h	955;"	d
ACPI_RESOURCE_NAME_RESERVED_S4	src/acpi/acpica/aclocal.h	956;"	d
ACPI_RESOURCE_NAME_SMALL	src/acpi/acpica/aclocal.h	937;"	d
ACPI_RESOURCE_NAME_SMALL_LENGTH_MASK	src/acpi/acpica/aclocal.h	940;"	d
ACPI_RESOURCE_NAME_SMALL_MASK	src/acpi/acpica/aclocal.h	939;"	d
ACPI_RESOURCE_NAME_START_DEPENDENT	src/acpi/acpica/aclocal.h	949;"	d
ACPI_RESOURCE_NAME_VENDOR_LARGE	src/acpi/acpica/aclocal.h	967;"	d
ACPI_RESOURCE_NAME_VENDOR_SMALL	src/acpi/acpica/aclocal.h	957;"	d
ACPI_RESOURCE_TYPE_ADDRESS16	include/acpi/acrestyp.h	345;"	d
ACPI_RESOURCE_TYPE_ADDRESS32	include/acpi/acrestyp.h	346;"	d
ACPI_RESOURCE_TYPE_ADDRESS64	include/acpi/acrestyp.h	347;"	d
ACPI_RESOURCE_TYPE_DMA	include/acpi/acrestyp.h	335;"	d
ACPI_RESOURCE_TYPE_END_DEPENDENT	include/acpi/acrestyp.h	337;"	d
ACPI_RESOURCE_TYPE_END_TAG	include/acpi/acrestyp.h	341;"	d
ACPI_RESOURCE_TYPE_EXTENDED_ADDRESS64	include/acpi/acrestyp.h	348;"	d
ACPI_RESOURCE_TYPE_EXTENDED_IRQ	include/acpi/acrestyp.h	349;"	d
ACPI_RESOURCE_TYPE_FIXED_IO	include/acpi/acrestyp.h	339;"	d
ACPI_RESOURCE_TYPE_FIXED_MEMORY32	include/acpi/acrestyp.h	344;"	d
ACPI_RESOURCE_TYPE_GENERIC_REGISTER	include/acpi/acrestyp.h	350;"	d
ACPI_RESOURCE_TYPE_IO	include/acpi/acrestyp.h	338;"	d
ACPI_RESOURCE_TYPE_IRQ	include/acpi/acrestyp.h	334;"	d
ACPI_RESOURCE_TYPE_MAX	include/acpi/acrestyp.h	351;"	d
ACPI_RESOURCE_TYPE_MEMORY24	include/acpi/acrestyp.h	342;"	d
ACPI_RESOURCE_TYPE_MEMORY32	include/acpi/acrestyp.h	343;"	d
ACPI_RESOURCE_TYPE_START_DEPENDENT	include/acpi/acrestyp.h	336;"	d
ACPI_RESOURCE_TYPE_VENDOR	include/acpi/acrestyp.h	340;"	d
ACPI_RESULTS_FRAME_OBJ_NUM	src/acpi/acpica/acconfig.h	159;"	d
ACPI_RESULTS_OBJ_NUM_MAX	src/acpi/acpica/acconfig.h	166;"	d
ACPI_ROOT_ALLOW_RESIZE	src/acpi/acpica/aclocal.h	211;"	d
ACPI_ROOT_NAME	include/acpi/acnames.h	75;"	d
ACPI_ROOT_OBJECT	include/acpi/actypes.h	400;"	d
ACPI_ROOT_ORIGIN_ALLOCATED	src/acpi/acpica/aclocal.h	210;"	d
ACPI_ROOT_ORIGIN_UNKNOWN	src/acpi/acpica/aclocal.h	209;"	d
ACPI_ROOT_TABLE_SIZE_INCREMENT	src/acpi/acpica/acconfig.h	116;"	d
ACPI_ROUND_BITS_DOWN_TO_BYTES	src/acpi/acpica/acmacros.h	259;"	d
ACPI_ROUND_BITS_UP_TO_BYTES	src/acpi/acpica/acmacros.h	258;"	d
ACPI_ROUND_DOWN	src/acpi/acpica/acmacros.h	241;"	d
ACPI_ROUND_DOWN_TO_32BIT	src/acpi/acpica/acmacros.h	250;"	d
ACPI_ROUND_DOWN_TO_64BIT	src/acpi/acpica/acmacros.h	251;"	d
ACPI_ROUND_DOWN_TO_NATIVE_WORD	src/acpi/acpica/acmacros.h	252;"	d
ACPI_ROUND_UP	src/acpi/acpica/acmacros.h	244;"	d
ACPI_ROUND_UP_TO	src/acpi/acpica/acmacros.h	265;"	d
ACPI_ROUND_UP_TO_1K	src/acpi/acpica/acmacros.h	261;"	d
ACPI_ROUND_UP_TO_32BIT	src/acpi/acpica/acmacros.h	254;"	d
ACPI_ROUND_UP_TO_64BIT	src/acpi/acpica/acmacros.h	255;"	d
ACPI_ROUND_UP_TO_NATIVE_WORD	src/acpi/acpica/acmacros.h	256;"	d
ACPI_RSDP_CHECKSUM_LENGTH	src/acpi/acpica/acconfig.h	202;"	d
ACPI_RSDP_NAME	include/acpi/actbl.h	73;"	d
ACPI_RSDP_REV0_SIZE	include/acpi/actbl.h	143;"	d
ACPI_RSDP_SCAN_STEP	src/acpi/acpica/acconfig.h	186;"	d
ACPI_RSDP_XCHECKSUM_LENGTH	src/acpi/acpica/acconfig.h	203;"	d
ACPI_RS_SIZE	include/acpi/acrestyp.h	393;"	d
ACPI_RS_SIZE_MIN	include/acpi/acrestyp.h	392;"	d
ACPI_RS_SIZE_NO_DATA	include/acpi/acrestyp.h	391;"	d
ACPI_RTYPE_ALL	src/acpi/acpica/aclocal.h	380;"	d
ACPI_RTYPE_ANY	src/acpi/acpica/aclocal.h	373;"	d
ACPI_RTYPE_BUFFER	src/acpi/acpica/aclocal.h	377;"	d
ACPI_RTYPE_INTEGER	src/acpi/acpica/aclocal.h	375;"	d
ACPI_RTYPE_NONE	src/acpi/acpica/aclocal.h	374;"	d
ACPI_RTYPE_PACKAGE	src/acpi/acpica/aclocal.h	378;"	d
ACPI_RTYPE_REFERENCE	src/acpi/acpica/aclocal.h	379;"	d
ACPI_RTYPE_STRING	src/acpi/acpica/aclocal.h	376;"	d
ACPI_SERIALIZED	src/acpi/acpica/aclocal.h	49;"	d
ACPI_SET16	src/acpi/acpica/acmacros.h	57;"	d
ACPI_SET32	src/acpi/acpica/acmacros.h	58;"	d
ACPI_SET64	src/acpi/acpica/acmacros.h	59;"	d
ACPI_SET8	src/acpi/acpica/acmacros.h	56;"	d
ACPI_SET_BIT	include/acpi/actypes.h	432;"	d
ACPI_SET_DESCRIPTOR_TYPE	src/acpi/acpica/acmacros.h	293;"	d
ACPI_SHARED	include/acpi/acrestyp.h	93;"	d
ACPI_SHIFT_RIGHT_64	include/nautilus/acpi-x86_64.h	70;"	d
ACPI_SIGNAL_BREAKPOINT	include/acpi/acpiosxf.h	70;"	d
ACPI_SIGNAL_FATAL	include/acpi/acpiosxf.h	69;"	d
ACPI_SIG_ASF	include/acpi/actbl2.h	64;"	d
ACPI_SIG_ATKG	include/acpi/actbl2.h	87;"	d
ACPI_SIG_BERT	include/acpi/actbl1.h	63;"	d
ACPI_SIG_BOOT	include/acpi/actbl2.h	65;"	d
ACPI_SIG_CPEP	include/acpi/actbl1.h	64;"	d
ACPI_SIG_DBGP	include/acpi/actbl2.h	66;"	d
ACPI_SIG_DMAR	include/acpi/actbl2.h	67;"	d
ACPI_SIG_DSDT	include/acpi/actbl.h	65;"	d
ACPI_SIG_ECDT	include/acpi/actbl1.h	65;"	d
ACPI_SIG_EINJ	include/acpi/actbl1.h	66;"	d
ACPI_SIG_ERST	include/acpi/actbl1.h	67;"	d
ACPI_SIG_FACS	include/acpi/actbl.h	67;"	d
ACPI_SIG_FADT	include/acpi/actbl.h	66;"	d
ACPI_SIG_GSCI	include/acpi/actbl2.h	88;"	d
ACPI_SIG_HEST	include/acpi/actbl1.h	68;"	d
ACPI_SIG_HPET	include/acpi/actbl2.h	68;"	d
ACPI_SIG_IBFT	include/acpi/actbl2.h	69;"	d
ACPI_SIG_IEIT	include/acpi/actbl2.h	89;"	d
ACPI_SIG_IVRS	include/acpi/actbl2.h	70;"	d
ACPI_SIG_MADT	include/acpi/actbl1.h	69;"	d
ACPI_SIG_MCFG	include/acpi/actbl2.h	71;"	d
ACPI_SIG_MCHI	include/acpi/actbl2.h	72;"	d
ACPI_SIG_MSCT	include/acpi/actbl1.h	70;"	d
ACPI_SIG_PSDT	include/acpi/actbl.h	68;"	d
ACPI_SIG_RSDP	include/acpi/actbl.h	69;"	d
ACPI_SIG_RSDT	include/acpi/actbl.h	70;"	d
ACPI_SIG_SBST	include/acpi/actbl1.h	71;"	d
ACPI_SIG_SLIC	include/acpi/actbl2.h	73;"	d
ACPI_SIG_SLIT	include/acpi/actbl1.h	72;"	d
ACPI_SIG_SPCR	include/acpi/actbl2.h	74;"	d
ACPI_SIG_SPMI	include/acpi/actbl2.h	75;"	d
ACPI_SIG_SRAT	include/acpi/actbl1.h	73;"	d
ACPI_SIG_SSDT	include/acpi/actbl.h	72;"	d
ACPI_SIG_TCPA	include/acpi/actbl2.h	76;"	d
ACPI_SIG_UEFI	include/acpi/actbl2.h	77;"	d
ACPI_SIG_WAET	include/acpi/actbl2.h	78;"	d
ACPI_SIG_WDAT	include/acpi/actbl2.h	79;"	d
ACPI_SIG_WDDT	include/acpi/actbl2.h	80;"	d
ACPI_SIG_WDRT	include/acpi/actbl2.h	81;"	d
ACPI_SIG_XSDT	include/acpi/actbl.h	71;"	d
ACPI_SINGLE_NAME	include/acpi/actypes.h	865;"	d
ACPI_SIZE_MAX	include/acpi/actypes.h	166;"	d
ACPI_SIZE_MAX	include/acpi/actypes.h	205;"	d
ACPI_SLEEP_TYPE_INVALID	include/acpi/actypes.h	519;"	d
ACPI_SLEEP_TYPE_MAX	include/acpi/actypes.h	518;"	d
ACPI_SLIC_TYPE_PUBLIC_KEY	include/acpi/actbl2.h	/^	ACPI_SLIC_TYPE_PUBLIC_KEY = 0,$/;"	e	enum:acpi_slic_type
ACPI_SLIC_TYPE_RESERVED	include/acpi/actbl2.h	/^	ACPI_SLIC_TYPE_RESERVED = 2	\/* 2 and greater are reserved *\/$/;"	e	enum:acpi_slic_type
ACPI_SLIC_TYPE_WINDOWS_MARKER	include/acpi/actbl2.h	/^	ACPI_SLIC_TYPE_WINDOWS_MARKER = 1,$/;"	e	enum:acpi_slic_type
ACPI_SMBUS_BUFFER_SIZE	src/acpi/acpica/acconfig.h	207;"	d
ACPI_SPACE_MEM	include/nautilus/acpi.h	149;"	d
ACPI_SPARSE_TRANSLATION	include/acpi/acrestyp.h	75;"	d
ACPI_SPCR_DO_NOT_DISABLE	include/acpi/actbl2.h	815;"	d
ACPI_SPMI_BLOCK_TRANSFER	include/acpi/actbl2.h	/^	ACPI_SPMI_BLOCK_TRANSFER = 3,$/;"	e	enum:acpi_spmi_interface_types
ACPI_SPMI_KEYBOARD	include/acpi/actbl2.h	/^	ACPI_SPMI_KEYBOARD = 1,$/;"	e	enum:acpi_spmi_interface_types
ACPI_SPMI_NOT_USED	include/acpi/actbl2.h	/^	ACPI_SPMI_NOT_USED = 0,$/;"	e	enum:acpi_spmi_interface_types
ACPI_SPMI_RESERVED	include/acpi/actbl2.h	/^	ACPI_SPMI_RESERVED = 5	\/* 5 and above are reserved *\/$/;"	e	enum:acpi_spmi_interface_types
ACPI_SPMI_SMBUS	include/acpi/actbl2.h	/^	ACPI_SPMI_SMBUS = 4,$/;"	e	enum:acpi_spmi_interface_types
ACPI_SPMI_SMI	include/acpi/actbl2.h	/^	ACPI_SPMI_SMI = 2,$/;"	e	enum:acpi_spmi_interface_types
ACPI_SRAT_CPU_ENABLED	include/acpi/actbl1.h	908;"	d
ACPI_SRAT_CPU_USE_AFFINITY	include/acpi/actbl1.h	873;"	d
ACPI_SRAT_ENTRY_COUNT	include/nautilus/acpi.h	/^	ACPI_SRAT_ENTRY_COUNT$/;"	e	enum:acpi_srat_entry_id
ACPI_SRAT_MEMORY_AFFINITY	include/nautilus/acpi.h	/^	ACPI_SRAT_MEMORY_AFFINITY,$/;"	e	enum:acpi_srat_entry_id
ACPI_SRAT_MEM_ENABLED	include/acpi/actbl1.h	890;"	d
ACPI_SRAT_MEM_HOT_PLUGGABLE	include/acpi/actbl1.h	891;"	d
ACPI_SRAT_MEM_NON_VOLATILE	include/acpi/actbl1.h	892;"	d
ACPI_SRAT_PROCESSOR_AFFINITY	include/nautilus/acpi.h	/^	ACPI_SRAT_PROCESSOR_AFFINITY = 0,$/;"	e	enum:acpi_srat_entry_id
ACPI_SRAT_TYPE_CPU_AFFINITY	include/acpi/actbl1.h	/^	ACPI_SRAT_TYPE_CPU_AFFINITY = 0,$/;"	e	enum:acpi_srat_type
ACPI_SRAT_TYPE_MEMORY_AFFINITY	include/acpi/actbl1.h	/^	ACPI_SRAT_TYPE_MEMORY_AFFINITY = 1,$/;"	e	enum:acpi_srat_type
ACPI_SRAT_TYPE_RESERVED	include/acpi/actbl1.h	/^	ACPI_SRAT_TYPE_RESERVED = 3	\/* 3 and greater are reserved *\/$/;"	e	enum:acpi_srat_type
ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY	include/acpi/actbl1.h	/^	ACPI_SRAT_TYPE_X2APIC_CPU_AFFINITY = 2,$/;"	e	enum:acpi_srat_type
ACPI_STATE_C0	include/acpi/actypes.h	508;"	d
ACPI_STATE_C1	include/acpi/actypes.h	509;"	d
ACPI_STATE_C2	include/acpi/actypes.h	510;"	d
ACPI_STATE_C3	include/acpi/actypes.h	511;"	d
ACPI_STATE_COMMON	src/acpi/acpica/aclocal.h	512;"	d
ACPI_STATE_D0	include/acpi/actypes.h	500;"	d
ACPI_STATE_D1	include/acpi/actypes.h	501;"	d
ACPI_STATE_D2	include/acpi/actypes.h	502;"	d
ACPI_STATE_D3	include/acpi/actypes.h	503;"	d
ACPI_STATE_D3_COLD	include/acpi/actypes.h	504;"	d
ACPI_STATE_S0	include/acpi/actypes.h	491;"	d
ACPI_STATE_S1	include/acpi/actypes.h	492;"	d
ACPI_STATE_S2	include/acpi/actypes.h	493;"	d
ACPI_STATE_S3	include/acpi/actypes.h	494;"	d
ACPI_STATE_S4	include/acpi/actypes.h	495;"	d
ACPI_STATE_S5	include/acpi/actypes.h	496;"	d
ACPI_STATE_UNKNOWN	include/acpi/actypes.h	489;"	d
ACPI_STA_BATTERY_PRESENT	include/acpi/actypes.h	1049;"	d
ACPI_STA_DEVICE_ENABLED	include/acpi/actypes.h	1045;"	d
ACPI_STA_DEVICE_FUNCTIONING	include/acpi/actypes.h	1047;"	d
ACPI_STA_DEVICE_OK	include/acpi/actypes.h	1048;"	d
ACPI_STA_DEVICE_PRESENT	include/acpi/actypes.h	1044;"	d
ACPI_STA_DEVICE_UI	include/acpi/actypes.h	1046;"	d
ACPI_STRCAT	include/acpi/platform/acenv.h	253;"	d
ACPI_STRCAT	include/acpi/platform/acenv.h	314;"	d
ACPI_STRCHR	include/acpi/platform/acenv.h	247;"	d
ACPI_STRCHR	include/acpi/platform/acenv.h	308;"	d
ACPI_STRCMP	include/acpi/platform/acenv.h	252;"	d
ACPI_STRCMP	include/acpi/platform/acenv.h	313;"	d
ACPI_STRCPY	include/acpi/platform/acenv.h	249;"	d
ACPI_STRCPY	include/acpi/platform/acenv.h	310;"	d
ACPI_STRLEN	include/acpi/platform/acenv.h	248;"	d
ACPI_STRLEN	include/acpi/platform/acenv.h	309;"	d
ACPI_STRNCAT	include/acpi/platform/acenv.h	254;"	d
ACPI_STRNCAT	include/acpi/platform/acenv.h	315;"	d
ACPI_STRNCMP	include/acpi/platform/acenv.h	251;"	d
ACPI_STRNCMP	include/acpi/platform/acenv.h	312;"	d
ACPI_STRNCPY	include/acpi/platform/acenv.h	250;"	d
ACPI_STRNCPY	include/acpi/platform/acenv.h	311;"	d
ACPI_STRSTR	include/acpi/platform/acenv.h	246;"	d
ACPI_STRSTR	include/acpi/platform/acenv.h	307;"	d
ACPI_STRTOUL	include/acpi/platform/acenv.h	255;"	d
ACPI_STRTOUL	include/acpi/platform/acenv.h	316;"	d
ACPI_SUBSYSTEM_INITIALIZE	include/acpi/actypes.h	483;"	d
ACPI_SUB_DECODE	include/acpi/acrestyp.h	128;"	d
ACPI_SUB_OPTIMAL_CONFIGURATION	include/acpi/acrestyp.h	115;"	d
ACPI_SUCCESS	include/acpi/acexcep.h	57;"	d
ACPI_SYSTEM_NOTIFY	include/acpi/actypes.h	697;"	d
ACPI_SYSTEM_XFACE	include/acpi/platform/acenv.h	352;"	d
ACPI_SYSTEM_XFACE	include/nautilus/acpi-x86_64.h	38;"	d
ACPI_SYS_MODES_MASK	include/acpi/actypes.h	883;"	d
ACPI_SYS_MODE_ACPI	include/acpi/actypes.h	881;"	d
ACPI_SYS_MODE_LEGACY	include/acpi/actypes.h	882;"	d
ACPI_SYS_MODE_UNKNOWN	include/acpi/actypes.h	880;"	d
ACPI_S_STATES_MAX	include/acpi/actypes.h	497;"	d
ACPI_S_STATE_COUNT	include/acpi/actypes.h	498;"	d
ACPI_TABLES	include/acpi/acoutput.h	58;"	d
ACPI_TABLE_EVENT_LOAD	include/acpi/actypes.h	900;"	d
ACPI_TABLE_EVENT_UNLOAD	include/acpi/actypes.h	901;"	d
ACPI_TABLE_INDEX_DSDT	src/acpi/acpica/aclocal.h	215;"	d
ACPI_TABLE_INDEX_FACS	src/acpi/acpica/aclocal.h	216;"	d
ACPI_TABLE_IS_LOADED	include/acpi/actbl.h	337;"	d
ACPI_TABLE_ORIGIN_ALLOCATED	include/acpi/actbl.h	334;"	d
ACPI_TABLE_ORIGIN_MAPPED	include/acpi/actbl.h	333;"	d
ACPI_TABLE_ORIGIN_MASK	include/acpi/actbl.h	336;"	d
ACPI_TABLE_ORIGIN_OVERRIDE	include/acpi/actbl.h	335;"	d
ACPI_TABLE_ORIGIN_UNKNOWN	include/acpi/actbl.h	332;"	d
ACPI_TOLOWER	include/acpi/platform/acenv.h	261;"	d
ACPI_TOLOWER	include/acpi/platform/acenv.h	321;"	d
ACPI_TOOLS	include/acpi/acoutput.h	71;"	d
ACPI_TOUPPER	include/acpi/platform/acenv.h	260;"	d
ACPI_TOUPPER	include/acpi/platform/acenv.h	320;"	d
ACPI_TO_INTEGER	include/acpi/actypes.h	451;"	d
ACPI_TO_POINTER	include/acpi/actypes.h	450;"	d
ACPI_TRANSFER_16	include/acpi/acrestyp.h	108;"	d
ACPI_TRANSFER_8	include/acpi/acrestyp.h	106;"	d
ACPI_TRANSFER_8_16	include/acpi/acrestyp.h	107;"	d
ACPI_TYPE_A	include/acpi/acrestyp.h	99;"	d
ACPI_TYPE_ANY	include/acpi/actypes.h	550;"	d
ACPI_TYPE_B	include/acpi/acrestyp.h	100;"	d
ACPI_TYPE_BUFFER	include/acpi/actypes.h	553;"	d
ACPI_TYPE_BUFFER_FIELD	include/acpi/actypes.h	564;"	d
ACPI_TYPE_DDB_HANDLE	include/acpi/actypes.h	565;"	d
ACPI_TYPE_DEBUG_OBJECT	include/acpi/actypes.h	566;"	d
ACPI_TYPE_DEVICE	include/acpi/actypes.h	556;"	d
ACPI_TYPE_EVENT	include/acpi/actypes.h	557;"	d
ACPI_TYPE_EXTERNAL_MAX	include/acpi/actypes.h	568;"	d
ACPI_TYPE_F	include/acpi/acrestyp.h	101;"	d
ACPI_TYPE_FIELD_UNIT	include/acpi/actypes.h	555;"	d
ACPI_TYPE_INTEGER	include/acpi/actypes.h	551;"	d
ACPI_TYPE_INVALID	include/acpi/actypes.h	602;"	d
ACPI_TYPE_LOCAL_ADDRESS_HANDLER	include/acpi/actypes.h	584;"	d
ACPI_TYPE_LOCAL_ALIAS	include/acpi/actypes.h	581;"	d
ACPI_TYPE_LOCAL_BANK_FIELD	include/acpi/actypes.h	578;"	d
ACPI_TYPE_LOCAL_DATA	include/acpi/actypes.h	596;"	d
ACPI_TYPE_LOCAL_EXTRA	include/acpi/actypes.h	595;"	d
ACPI_TYPE_LOCAL_INDEX_FIELD	include/acpi/actypes.h	579;"	d
ACPI_TYPE_LOCAL_MAX	include/acpi/actypes.h	598;"	d
ACPI_TYPE_LOCAL_METHOD_ALIAS	include/acpi/actypes.h	582;"	d
ACPI_TYPE_LOCAL_NOTIFY	include/acpi/actypes.h	583;"	d
ACPI_TYPE_LOCAL_REFERENCE	include/acpi/actypes.h	580;"	d
ACPI_TYPE_LOCAL_REGION_FIELD	include/acpi/actypes.h	577;"	d
ACPI_TYPE_LOCAL_RESOURCE	include/acpi/actypes.h	585;"	d
ACPI_TYPE_LOCAL_RESOURCE_FIELD	include/acpi/actypes.h	586;"	d
ACPI_TYPE_LOCAL_SCOPE	include/acpi/actypes.h	587;"	d
ACPI_TYPE_METHOD	include/acpi/actypes.h	558;"	d
ACPI_TYPE_MUTEX	include/acpi/actypes.h	559;"	d
ACPI_TYPE_NOT_FOUND	include/acpi/actypes.h	603;"	d
ACPI_TYPE_NS_NODE_MAX	include/acpi/actypes.h	589;"	d
ACPI_TYPE_PACKAGE	include/acpi/actypes.h	554;"	d
ACPI_TYPE_POWER	include/acpi/actypes.h	561;"	d
ACPI_TYPE_PROCESSOR	include/acpi/actypes.h	562;"	d
ACPI_TYPE_REGION	include/acpi/actypes.h	560;"	d
ACPI_TYPE_STRING	include/acpi/actypes.h	552;"	d
ACPI_TYPE_THERMAL	include/acpi/actypes.h	563;"	d
ACPI_UINT16_MAX	include/acpi/actypes.h	67;"	d
ACPI_UINT32_MAX	include/acpi/actypes.h	68;"	d
ACPI_UINT64_MAX	include/acpi/actypes.h	69;"	d
ACPI_UINT8_MAX	include/acpi/actypes.h	66;"	d
ACPI_UNKNOWN_NAME	include/acpi/acnames.h	74;"	d
ACPI_UNUSED_VAR	include/acpi/actypes.h	298;"	d
ACPI_UNUSED_VAR	include/acpi/platform/acgcc.h	65;"	d
ACPI_USER_REGION_BEGIN	src/acpi/acpica/acconfig.h	190;"	d
ACPI_USE_DO_WHILE_0	include/acpi/platform/acnautilus.h	50;"	d
ACPI_USE_LOCAL_CACHE	include/acpi/platform/acenv.h	68;"	d
ACPI_USE_LOCAL_CACHE	include/acpi/platform/acenv.h	92;"	d
ACPI_USE_NATIVE_DIVIDE	include/acpi/actypes.h	168;"	d
ACPI_USE_NATIVE_DIVIDE	include/acpi/actypes.h	385;"	d
ACPI_USE_STANDARD_HEADERS	include/acpi/platform/acenv.h	174;"	d
ACPI_USE_SYSTEM_CLIBRARY	include/acpi/platform/acenv.h	91;"	d
ACPI_USE_SYSTEM_CLIBRARY	include/acpi/platform/acnautilus.h	49;"	d
ACPI_UTILITIES	include/acpi/acoutput.h	55;"	d
ACPI_UUID_LENGTH	include/acpi/actypes.h	993;"	d
ACPI_UUID_LENGTH	src/acpi/acpica/acconfig.h	149;"	d
ACPI_VALID_ADR	include/acpi/actypes.h	1035;"	d
ACPI_VALID_CID	include/acpi/actypes.h	1038;"	d
ACPI_VALID_HID	include/acpi/actypes.h	1036;"	d
ACPI_VALID_STA	include/acpi/actypes.h	1034;"	d
ACPI_VALID_SXDS	include/acpi/actypes.h	1039;"	d
ACPI_VALID_SXWS	include/acpi/actypes.h	1040;"	d
ACPI_VALID_UID	include/acpi/actypes.h	1037;"	d
ACPI_VIDEO_BACKLIGHT	include/nautilus/acpi.h	249;"	d
ACPI_VIDEO_BACKLIGHT_DMI_VENDOR	include/nautilus/acpi.h	254;"	d
ACPI_VIDEO_BACKLIGHT_DMI_VIDEO	include/nautilus/acpi.h	255;"	d
ACPI_VIDEO_BACKLIGHT_FORCE_VENDOR	include/nautilus/acpi.h	250;"	d
ACPI_VIDEO_BACKLIGHT_FORCE_VIDEO	include/nautilus/acpi.h	251;"	d
ACPI_VIDEO_DEVICE_POSTING	include/nautilus/acpi.h	247;"	d
ACPI_VIDEO_OUTPUT_SWITCHING	include/nautilus/acpi.h	246;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_DMI_VENDOR	include/nautilus/acpi.h	256;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_DMI_VIDEO	include/nautilus/acpi.h	257;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_FORCE_VENDOR	include/nautilus/acpi.h	252;"	d
ACPI_VIDEO_OUTPUT_SWITCHING_FORCE_VIDEO	include/nautilus/acpi.h	253;"	d
ACPI_VIDEO_ROM_AVAILABLE	include/nautilus/acpi.h	248;"	d
ACPI_WAET_RTC_NO_ACK	include/acpi/actbl2.h	906;"	d
ACPI_WAET_TIMER_ONE_READ	include/acpi/actbl2.h	907;"	d
ACPI_WAIT_FOREVER	include/acpi/actypes.h	401;"	d
ACPI_WARNING	include/acpi/acoutput.h	213;"	d
ACPI_WARNING	include/acpi/acoutput.h	223;"	d
ACPI_WARN_PREDEFINED	src/acpi/acpica/acmacros.h	343;"	d
ACPI_WARN_PREDEFINED	src/acpi/acpica/acmacros.h	352;"	d
ACPI_WDAT_ACTION_RESERVED	include/acpi/actbl2.h	/^	ACPI_WDAT_ACTION_RESERVED = 34	\/* 34 and greater are reserved *\/$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_ENABLED	include/acpi/actbl2.h	937;"	d
ACPI_WDAT_GET_COUNTDOWN	include/acpi/actbl2.h	/^	ACPI_WDAT_GET_COUNTDOWN = 5,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_GET_CURRENT_COUNTDOWN	include/acpi/actbl2.h	/^	ACPI_WDAT_GET_CURRENT_COUNTDOWN = 4,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_GET_REBOOT	include/acpi/actbl2.h	/^	ACPI_WDAT_GET_REBOOT = 16,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_GET_RUNNING_STATE	include/acpi/actbl2.h	/^	ACPI_WDAT_GET_RUNNING_STATE = 8,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_GET_SHUTDOWN	include/acpi/actbl2.h	/^	ACPI_WDAT_GET_SHUTDOWN = 18,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_GET_STATUS	include/acpi/actbl2.h	/^	ACPI_WDAT_GET_STATUS = 32,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_GET_STOPPED_STATE	include/acpi/actbl2.h	/^	ACPI_WDAT_GET_STOPPED_STATE = 10,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_INSTRUCTION_RESERVED	include/acpi/actbl2.h	/^	ACPI_WDAT_INSTRUCTION_RESERVED = 4,	\/* 4 and greater are reserved *\/$/;"	e	enum:acpi_wdat_instructions
ACPI_WDAT_PRESERVE_REGISTER	include/acpi/actbl2.h	/^	ACPI_WDAT_PRESERVE_REGISTER = 0x80	\/* Except for this value *\/$/;"	e	enum:acpi_wdat_instructions
ACPI_WDAT_READ_COUNTDOWN	include/acpi/actbl2.h	/^	ACPI_WDAT_READ_COUNTDOWN = 1,$/;"	e	enum:acpi_wdat_instructions
ACPI_WDAT_READ_VALUE	include/acpi/actbl2.h	/^	ACPI_WDAT_READ_VALUE = 0,$/;"	e	enum:acpi_wdat_instructions
ACPI_WDAT_RESET	include/acpi/actbl2.h	/^	ACPI_WDAT_RESET = 1,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_SET_COUNTDOWN	include/acpi/actbl2.h	/^	ACPI_WDAT_SET_COUNTDOWN = 6,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_SET_REBOOT	include/acpi/actbl2.h	/^	ACPI_WDAT_SET_REBOOT = 17,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_SET_RUNNING_STATE	include/acpi/actbl2.h	/^	ACPI_WDAT_SET_RUNNING_STATE = 9,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_SET_SHUTDOWN	include/acpi/actbl2.h	/^	ACPI_WDAT_SET_SHUTDOWN = 19,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_SET_STATUS	include/acpi/actbl2.h	/^	ACPI_WDAT_SET_STATUS = 33,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_SET_STOPPED_STATE	include/acpi/actbl2.h	/^	ACPI_WDAT_SET_STOPPED_STATE = 11,$/;"	e	enum:acpi_wdat_actions
ACPI_WDAT_STOPPED	include/acpi/actbl2.h	938;"	d
ACPI_WDAT_WRITE_COUNTDOWN	include/acpi/actbl2.h	/^	ACPI_WDAT_WRITE_COUNTDOWN = 3,$/;"	e	enum:acpi_wdat_instructions
ACPI_WDAT_WRITE_VALUE	include/acpi/actbl2.h	/^	ACPI_WDAT_WRITE_VALUE = 2,$/;"	e	enum:acpi_wdat_instructions
ACPI_WDDT_ACTIVE	include/acpi/actbl2.h	1008;"	d
ACPI_WDDT_ALERT_SUPPORT	include/acpi/actbl2.h	1018;"	d
ACPI_WDDT_AUTO_RESET	include/acpi/actbl2.h	1017;"	d
ACPI_WDDT_AVAILABLE	include/acpi/actbl2.h	1007;"	d
ACPI_WDDT_POWER_FAIL	include/acpi/actbl2.h	1012;"	d
ACPI_WDDT_TCO_OS_OWNED	include/acpi/actbl2.h	1009;"	d
ACPI_WDDT_UNKNOWN_RESET	include/acpi/actbl2.h	1013;"	d
ACPI_WDDT_USER_RESET	include/acpi/actbl2.h	1010;"	d
ACPI_WDDT_WDT_RESET	include/acpi/actbl2.h	1011;"	d
ACPI_WRITE	include/acpi/actypes.h	611;"	d
ACPI_WRITE_COMBINING_MEMORY	include/acpi/acrestyp.h	61;"	d
ACQUIRE_MAPPABLE	src/legion_runtime/legion.h	/^        ACQUIRE_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
ACQUIRE_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      ACQUIRE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ACQUIRE_PHYSICAL_STATE_CALL	src/legion_runtime/region_tree.h	/^      ACQUIRE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ACS_DARROW	scripts/kconfig/lxdialog/dialog.h	86;"	d
ACS_HLINE	scripts/kconfig/lxdialog/dialog.h	71;"	d
ACS_LLCORNER	scripts/kconfig/lxdialog/dialog.h	62;"	d
ACS_LRCORNER	scripts/kconfig/lxdialog/dialog.h	68;"	d
ACS_LTEE	scripts/kconfig/lxdialog/dialog.h	77;"	d
ACS_RTEE	scripts/kconfig/lxdialog/dialog.h	80;"	d
ACS_UARROW	scripts/kconfig/lxdialog/dialog.h	83;"	d
ACS_ULCORNER	scripts/kconfig/lxdialog/dialog.h	59;"	d
ACS_URCORNER	scripts/kconfig/lxdialog/dialog.h	65;"	d
ACS_VLINE	scripts/kconfig/lxdialog/dialog.h	74;"	d
ACTIVEMSG_H	src/legion_runtime/activemsg.h	20;"	d
ACTIVE_INVALID_STATE	src/legion_runtime/garbage_collection.h	/^        ACTIVE_INVALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
ACT_CREATE	src/legion_runtime/lowlevel_impl.h	/^        ACT_CREATE = 0,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
ACT_FORWARD_REQUEST	src/legion_runtime/lowlevel_impl.h	/^        ACT_FORWARD_REQUEST = 2, \/\/ for forwarding of requests$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_LOCAL_GRANT	src/legion_runtime/lowlevel_impl.h	/^        ACT_LOCAL_GRANT = 3, \/\/ local grant of the lock$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_LOCAL_REQUEST	src/legion_runtime/lowlevel_impl.h	/^        ACT_LOCAL_REQUEST = 0, \/\/ request for a lock where the owner is local$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_QUERY	src/legion_runtime/lowlevel_impl.h	/^        ACT_QUERY = 1,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
ACT_REMOTE_GRANT	src/legion_runtime/lowlevel_impl.h	/^        ACT_REMOTE_GRANT = 4, \/\/ remote grant of the lock (change owners)$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_REMOTE_RELEASE	src/legion_runtime/lowlevel_impl.h	/^        ACT_REMOTE_RELEASE = 5, \/\/ remote release of a shared lock$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_REMOTE_REQUEST	src/legion_runtime/lowlevel_impl.h	/^        ACT_REMOTE_REQUEST = 1, \/\/ request for a lock where the owner is not local$/;"	e	enum:LegionRuntime::LowLevel::LockTraceItem::Action
ACT_TRIGGER	src/legion_runtime/lowlevel_impl.h	/^        ACT_TRIGGER = 2,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
ACT_WAIT	src/legion_runtime/lowlevel_impl.h	/^        ACT_WAIT = 3,$/;"	e	enum:LegionRuntime::LowLevel::EventTraceItem::Action
AC_EXCP	include/nautilus/idt.h	51;"	d
ADDR	include/asm/bitops.h	168;"	d
ADDR	include/asm/bitops.h	36;"	d
ADDR_HI	include/nautilus/idt.h	71;"	d
ADDR_LO	include/nautilus/idt.h	69;"	d
ADDR_MI	include/nautilus/idt.h	70;"	d
ADD_COPY_USER_CALL	src/legion_runtime/region_tree.h	/^      ADD_COPY_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADD_LOCAL_USER_CALL	src/legion_runtime/region_tree.h	/^      ADD_LOCAL_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADD_USER_ABOVE_CALL	src/legion_runtime/region_tree.h	/^      ADD_USER_ABOVE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADD_USER_CALL	src/legion_runtime/region_tree.h	/^      ADD_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADMITTED	src/nautilus/scheduler.c	/^	       ADMITTED,           \/\/ admitted$/;"	e	enum:__anon132	file:
ADVANCE_FIELD_CALL	src/legion_runtime/region_tree.h	/^      ADVANCE_FIELD_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ADVERTISEMENT_MESSAGE	src/legion_runtime/runtime.h	/^        ADVERTISEMENT_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
AE_ABORT_METHOD	include/acpi/acexcep.h	88;"	d
AE_ACQUIRE_DEADLOCK	include/acpi/acexcep.h	82;"	d
AE_ALREADY_ACQUIRED	include/acpi/acexcep.h	85;"	d
AE_ALREADY_EXISTS	include/acpi/acexcep.h	71;"	d
AE_AML_ALIGNMENT	include/acpi/acexcep.h	151;"	d
AE_AML_BAD_NAME	include/acpi/acexcep.h	137;"	d
AE_AML_BAD_OPCODE	include/acpi/acexcep.h	125;"	d
AE_AML_BAD_RESOURCE_LENGTH	include/acpi/acexcep.h	155;"	d
AE_AML_BAD_RESOURCE_VALUE	include/acpi/acexcep.h	153;"	d
AE_AML_BUFFER_LIMIT	include/acpi/acexcep.h	134;"	d
AE_AML_CIRCULAR_REFERENCE	include/acpi/acexcep.h	154;"	d
AE_AML_DIVIDE_BY_ZERO	include/acpi/acexcep.h	136;"	d
AE_AML_ILLEGAL_ADDRESS	include/acpi/acexcep.h	156;"	d
AE_AML_INFINITE_LOOP	include/acpi/acexcep.h	157;"	d
AE_AML_INTERNAL	include/acpi/acexcep.h	139;"	d
AE_AML_INVALID_INDEX	include/acpi/acexcep.h	148;"	d
AE_AML_INVALID_RESOURCE_TYPE	include/acpi/acexcep.h	147;"	d
AE_AML_INVALID_SPACE_ID	include/acpi/acexcep.h	140;"	d
AE_AML_METHOD_LIMIT	include/acpi/acexcep.h	143;"	d
AE_AML_MUTEX_NOT_ACQUIRED	include/acpi/acexcep.h	146;"	d
AE_AML_MUTEX_ORDER	include/acpi/acexcep.h	145;"	d
AE_AML_NAME_NOT_FOUND	include/acpi/acexcep.h	138;"	d
AE_AML_NOT_OWNER	include/acpi/acexcep.h	144;"	d
AE_AML_NO_OPERAND	include/acpi/acexcep.h	126;"	d
AE_AML_NO_RESOURCE_END_TAG	include/acpi/acexcep.h	152;"	d
AE_AML_NO_RETURN_VALUE	include/acpi/acexcep.h	142;"	d
AE_AML_NO_WHILE	include/acpi/acexcep.h	150;"	d
AE_AML_NUMERIC_OVERFLOW	include/acpi/acexcep.h	132;"	d
AE_AML_OPERAND_TYPE	include/acpi/acexcep.h	127;"	d
AE_AML_OPERAND_VALUE	include/acpi/acexcep.h	128;"	d
AE_AML_PACKAGE_LIMIT	include/acpi/acexcep.h	135;"	d
AE_AML_REGION_LIMIT	include/acpi/acexcep.h	133;"	d
AE_AML_REGISTER_LIMIT	include/acpi/acexcep.h	149;"	d
AE_AML_STRING_LIMIT	include/acpi/acexcep.h	141;"	d
AE_AML_UNINITIALIZED_ARG	include/acpi/acexcep.h	130;"	d
AE_AML_UNINITIALIZED_ELEMENT	include/acpi/acexcep.h	131;"	d
AE_AML_UNINITIALIZED_LOCAL	include/acpi/acexcep.h	129;"	d
AE_BAD_ADDRESS	include/acpi/acexcep.h	106;"	d
AE_BAD_CHARACTER	include/acpi/acexcep.h	99;"	d
AE_BAD_CHECKSUM	include/acpi/acexcep.h	115;"	d
AE_BAD_DATA	include/acpi/acexcep.h	101;"	d
AE_BAD_DECIMAL_CONSTANT	include/acpi/acexcep.h	104;"	d
AE_BAD_HEADER	include/acpi/acexcep.h	114;"	d
AE_BAD_HEX_CONSTANT	include/acpi/acexcep.h	102;"	d
AE_BAD_OCTAL_CONSTANT	include/acpi/acexcep.h	103;"	d
AE_BAD_PARAMETER	include/acpi/acexcep.h	98;"	d
AE_BAD_PATHNAME	include/acpi/acexcep.h	100;"	d
AE_BAD_SIGNATURE	include/acpi/acexcep.h	113;"	d
AE_BAD_VALUE	include/acpi/acexcep.h	116;"	d
AE_BUFFER_OVERFLOW	include/acpi/acexcep.h	75;"	d
AE_CODE_ACPI_TABLES	include/acpi/acexcep.h	52;"	d
AE_CODE_AML	include/acpi/acexcep.h	53;"	d
AE_CODE_AML_MAX	include/acpi/acexcep.h	159;"	d
AE_CODE_CONTROL	include/acpi/acexcep.h	54;"	d
AE_CODE_CTRL_MAX	include/acpi/acexcep.h	178;"	d
AE_CODE_ENVIRONMENTAL	include/acpi/acexcep.h	50;"	d
AE_CODE_ENV_MAX	include/acpi/acexcep.h	93;"	d
AE_CODE_MASK	include/acpi/acexcep.h	55;"	d
AE_CODE_PGM_MAX	include/acpi/acexcep.h	108;"	d
AE_CODE_PROGRAMMER	include/acpi/acexcep.h	51;"	d
AE_CODE_TBL_MAX	include/acpi/acexcep.h	119;"	d
AE_CTRL_BREAK	include/acpi/acexcep.h	172;"	d
AE_CTRL_CONTINUE	include/acpi/acexcep.h	173;"	d
AE_CTRL_DEPTH	include/acpi/acexcep.h	169;"	d
AE_CTRL_END	include/acpi/acexcep.h	170;"	d
AE_CTRL_FALSE	include/acpi/acexcep.h	168;"	d
AE_CTRL_PARSE_CONTINUE	include/acpi/acexcep.h	175;"	d
AE_CTRL_PARSE_PENDING	include/acpi/acexcep.h	176;"	d
AE_CTRL_PENDING	include/acpi/acexcep.h	165;"	d
AE_CTRL_RETURN_VALUE	include/acpi/acexcep.h	164;"	d
AE_CTRL_SKIP	include/acpi/acexcep.h	174;"	d
AE_CTRL_TERMINATE	include/acpi/acexcep.h	166;"	d
AE_CTRL_TRANSFER	include/acpi/acexcep.h	171;"	d
AE_CTRL_TRUE	include/acpi/acexcep.h	167;"	d
AE_ERROR	include/acpi/acexcep.h	65;"	d
AE_INFO	include/acpi/acoutput.h	205;"	d
AE_INVALID_TABLE_LENGTH	include/acpi/acexcep.h	117;"	d
AE_LIMIT	include/acpi/acexcep.h	80;"	d
AE_MISSING_ARGUMENTS	include/acpi/acexcep.h	105;"	d
AE_NOT_ACQUIRED	include/acpi/acexcep.h	84;"	d
AE_NOT_EXIST	include/acpi/acexcep.h	70;"	d
AE_NOT_FOUND	include/acpi/acexcep.h	69;"	d
AE_NOT_IMPLEMENTED	include/acpi/acexcep.h	78;"	d
AE_NO_ACPI_TABLES	include/acpi/acexcep.h	66;"	d
AE_NO_GLOBAL_LOCK	include/acpi/acexcep.h	87;"	d
AE_NO_HANDLER	include/acpi/acexcep.h	90;"	d
AE_NO_HARDWARE_RESPONSE	include/acpi/acexcep.h	86;"	d
AE_NO_MEMORY	include/acpi/acexcep.h	68;"	d
AE_NO_NAMESPACE	include/acpi/acexcep.h	67;"	d
AE_NULL_ENTRY	include/acpi/acexcep.h	74;"	d
AE_NULL_OBJECT	include/acpi/acexcep.h	73;"	d
AE_OK	include/acpi/acexcep.h	60;"	d
AE_OWNER_ID_LIMIT	include/acpi/acexcep.h	91;"	d
AE_RELEASE_DEADLOCK	include/acpi/acexcep.h	83;"	d
AE_SAME_HANDLER	include/acpi/acexcep.h	89;"	d
AE_STACK_OVERFLOW	include/acpi/acexcep.h	76;"	d
AE_STACK_UNDERFLOW	include/acpi/acexcep.h	77;"	d
AE_SUPPORT	include/acpi/acexcep.h	79;"	d
AE_TIME	include/acpi/acexcep.h	81;"	d
AE_TYPE	include/acpi/acexcep.h	72;"	d
AFLAGS	Makefile	/^AFLAGS		:= $/;"	m
AFLAGS_KERNEL	Makefile	/^AFLAGS_KERNEL	=$/;"	m
ALIGN	include/nautilus/macros.h	37;"	d
ALIGNMENT	src/legion_runtime/lowlevel.cc	/^      static const size_t ALIGNMENT = 256;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
ALLINCLUDE_ARCHS	Makefile	/^ALLINCLUDE_ARCHS := $(ALLSOURCE_ARCHS)$/;"	m
ALLINCLUDE_ARCHS	Makefile	/^ALLINCLUDE_ARCHS := $(ARCH) $(SUBARCH)$/;"	m
ALLINCLUDE_ARCHS	Makefile	/^ALLINCLUDE_ARCHS := $(ARCH)$/;"	m
ALLOCABLE	src/legion_runtime/legion_types.h	/^      ALLOCABLE       = 0x00000001,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
ALLOC_INTERNAL_ALLOC	src/legion_runtime/legion_allocation.h	/^      ALLOC_INTERNAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ALLOC_MANAGER_ALLOC	src/legion_runtime/legion_allocation.h	/^      ALLOC_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ALLONES	src/lua_src/lbitlib.c	22;"	d	file:
ALLOW_REMOTE_MEMORY_WRITES	src/legion_runtime/lowlevel.cc	3663;"	d	file:
ALLSOURCE_ARCHS	Makefile	/^ALLSOURCE_ARCHS := $(ARCH)$/;"	m
ALL_MEMORY	src/legion_runtime/legion_types.h	/^      ALL_MEMORY      = 0x0000000F,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
ALPHABIT	include/lua/lctype.h	39;"	d
ALT	src/dev/kbd.c	268;"	d	file:
ALTCMDSTATUS	src/dev/ata.c	85;"	d	file:
AMD_FPU_ECX_FEAT_QUERY	src/nautilus/fpu.c	62;"	d	file:
AMD_FPU_EDX_FEAT_QUERY	src/nautilus/fpu.c	63;"	d	file:
AMD_MSR_APERF	include/nautilus/msr.h	56;"	d
AMD_MSR_APIC_BASE	include/nautilus/msr.h	54;"	d
AMD_MSR_CSTAR	include/nautilus/msr.h	69;"	d
AMD_MSR_DEBUG_CTL	include/nautilus/msr.h	64;"	d
AMD_MSR_FSBASE	include/nautilus/msr.h	71;"	d
AMD_MSR_GSBASE	include/nautilus/msr.h	72;"	d
AMD_MSR_KERN_GSBASE	include/nautilus/msr.h	73;"	d
AMD_MSR_LSTAR	include/nautilus/msr.h	68;"	d
AMD_MSR_MCG_CAP	include/nautilus/msr.h	61;"	d
AMD_MSR_MCG_CTL	include/nautilus/msr.h	63;"	d
AMD_MSR_MCG_STATUS	include/nautilus/msr.h	62;"	d
AMD_MSR_MPERF	include/nautilus/msr.h	55;"	d
AMD_MSR_MTRRCAP	include/nautilus/msr.h	57;"	d
AMD_MSR_NBRIDGE_CTL	include/nautilus/msr.h	81;"	d
AMD_MSR_PAT	include/nautilus/msr.h	66;"	d
AMD_MSR_SFMASK	include/nautilus/msr.h	70;"	d
AMD_MSR_STAR	include/nautilus/msr.h	67;"	d
AMD_MSR_SYSCFG	include/nautilus/msr.h	76;"	d
AMD_MSR_SYSENTER_CS	include/nautilus/msr.h	58;"	d
AMD_MSR_SYSENTER_EIP	include/nautilus/msr.h	60;"	d
AMD_MSR_SYSENTER_ESP	include/nautilus/msr.h	59;"	d
AMD_MSR_TSC	include/nautilus/msr.h	53;"	d
AMD_MSR_TSC_AUX	include/nautilus/msr.h	74;"	d
AMD_MSR_VM_CR	include/nautilus/msr.h	78;"	d
AMD_PERF_CTL0_MSR	include/nautilus/pmc.h	35;"	d
AMD_PERF_CTL1_MSR	include/nautilus/pmc.h	36;"	d
AMD_PERF_CTL2_MSR	include/nautilus/pmc.h	37;"	d
AMD_PERF_CTL3_MSR	include/nautilus/pmc.h	38;"	d
AMD_PERF_CTL4_MSR	include/nautilus/pmc.h	39;"	d
AMD_PERF_CTL5_MSR	include/nautilus/pmc.h	40;"	d
AMD_PERF_CTR0_MSR	include/nautilus/pmc.h	42;"	d
AMD_PERF_CTR1_MSR	include/nautilus/pmc.h	43;"	d
AMD_PERF_CTR2_MSR	include/nautilus/pmc.h	44;"	d
AMD_PERF_CTR3_MSR	include/nautilus/pmc.h	45;"	d
AMD_PERF_CTR4_MSR	include/nautilus/pmc.h	46;"	d
AMD_PERF_CTR5_MSR	include/nautilus/pmc.h	47;"	d
AMD_PERF_SLOTS	include/nautilus/pmc.h	34;"	d
AMD_PMC_BRANCH_MISS	include/nautilus/pmc.h	77;"	d
AMD_PMC_DCACHE_MISS	include/nautilus/pmc.h	55;"	d
AMD_PMC_ICACHE_INV	include/nautilus/pmc.h	82;"	d
AMD_PMC_ICACHE_MISS	include/nautilus/pmc.h	56;"	d
AMD_PMC_IFETCH_STALL	include/nautilus/pmc.h	71;"	d
AMD_PMC_L2_MISS	include/nautilus/pmc.h	57;"	d
AMD_PMC_SMI_CNT	include/nautilus/pmc.h	61;"	d
AMD_PMC_TLB_MISS	include/nautilus/pmc.h	58;"	d
AML_NUM_OPCODES	src/acpi/acpica/aclocal.h	56;"	d
AMQueue	src/legion_runtime/lowlevel.cc	/^      AMQueue(unsigned _size = 1024)$/;"	f	class:LegionRuntime::LowLevel::AMQueue
AMQueue	src/legion_runtime/lowlevel.cc	/^    class AMQueue {$/;"	c	namespace:LegionRuntime::LowLevel	file:
AMQueueEntry	src/legion_runtime/lowlevel.cc	/^      struct AMQueueEntry {$/;"	s	class:LegionRuntime::LowLevel::AMQueue	file:
AND_PRED_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      AND_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ANOBJ_ALLOCATED_BUFFER	src/acpi/acpica/aclocal.h	190;"	d
ANOBJ_EVALUATED	src/acpi/acpica/aclocal.h	189;"	d
ANOBJ_IS_BIT_OFFSET	src/acpi/acpica/aclocal.h	195;"	d
ANOBJ_IS_EXTERNAL	src/acpi/acpica/aclocal.h	192;"	d
ANOBJ_IS_REFERENCED	src/acpi/acpica/aclocal.h	196;"	d
ANOBJ_METHOD_ARG	src/acpi/acpica/aclocal.h	186;"	d
ANOBJ_METHOD_LOCAL	src/acpi/acpica/aclocal.h	187;"	d
ANOBJ_METHOD_NO_RETVAL	src/acpi/acpica/aclocal.h	193;"	d
ANOBJ_METHOD_SOME_NO_RETVAL	src/acpi/acpica/aclocal.h	194;"	d
ANOBJ_RESERVED	src/acpi/acpica/aclocal.h	184;"	d
ANOBJ_SUBTREE_HAS_INI	src/acpi/acpica/aclocal.h	188;"	d
ANOBJ_TEMPORARY	src/acpi/acpica/aclocal.h	185;"	d
ANTI_DEPENDENCE	src/legion_runtime/legion_types.h	/^      ANTI_DEPENDENCE = 2, \/\/ Write-After-Read or Write-After-Write with Write-Only privilege$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
AOS	src/legion_runtime/accessor.h	/^      struct AOS {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
AOS_TYPE	src/legion_runtime/accessor.h	/^	  typedef AOS<sizeof(PT)> AOS_TYPE;$/;"	t	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
APERIODIC	include/nautilus/scheduler.h	/^typedef enum { APERIODIC = 0, SPORADIC = 1, PERIODIC = 2} nk_sched_constraint_type_t;$/;"	e	enum:__anon52
APERIODIC_QUEUE	src/nautilus/scheduler.c	/^	       APERIODIC_QUEUE = 2} queue_type;$/;"	e	enum:__anon131	file:
APIC_ALL_CPUS	include/dev/apic.h	200;"	d
APIC_ALL_CPUS	include/dev/apic.h	204;"	d
APIC_BASE_ADDR_MASK	include/dev/apic.h	59;"	d
APIC_BASE_MSR	include/dev/apic.h	54;"	d
APIC_CMCR_INT_VEC	include/dev/apic.h	37;"	d
APIC_DEBUG	src/dev/apic.c	42;"	d	file:
APIC_DEL_MODE_EXTINT	include/dev/apic.h	176;"	d
APIC_DEL_MODE_FIXED	include/dev/apic.h	169;"	d
APIC_DEL_MODE_INIT	include/dev/apic.h	174;"	d
APIC_DEL_MODE_LOWEST	include/dev/apic.h	170;"	d
APIC_DEL_MODE_NMI	include/dev/apic.h	173;"	d
APIC_DEL_MODE_REMRD	include/dev/apic.h	172;"	d
APIC_DEL_MODE_SIPI	include/dev/apic.h	175;"	d
APIC_DEL_MODE_SMI	include/dev/apic.h	171;"	d
APIC_DFR_CLUSTER	include/dev/apic.h	183;"	d
APIC_DFR_FLAT	include/dev/apic.h	182;"	d
APIC_DISABLED	include/dev/apic.h	/^typedef enum { APIC_INVALID=0, APIC_DISABLED, APIC_XAPIC, APIC_X2APIC } apic_mode_t;$/;"	e	enum:__anon70
APIC_ERROR	src/dev/apic.c	45;"	d	file:
APIC_ERROR_INT_VEC	include/dev/apic.h	34;"	d
APIC_ERR_ILL_REG	include/dev/apic.h	214;"	d
APIC_ERR_ILL_VECRCV	include/dev/apic.h	215;"	d
APIC_ERR_ILL_VECSEN	include/dev/apic.h	216;"	d
APIC_ERR_RCV_ACC	include/dev/apic.h	218;"	d
APIC_ERR_RCV_CKSUM	include/dev/apic.h	220;"	d
APIC_ERR_RED_IPI	include/dev/apic.h	217;"	d
APIC_ERR_SND_ACC	include/dev/apic.h	219;"	d
APIC_ERR_SND_CKSUM	include/dev/apic.h	221;"	d
APIC_EXFC_IERN	include/dev/apic.h	138;"	d
APIC_EXFC_SN_EN	include/dev/apic.h	137;"	d
APIC_EXFC_XAIDC_EN	include/dev/apic.h	136;"	d
APIC_EXFR_GET_INC	include/dev/apic.h	134;"	d
APIC_EXFR_GET_LVT	include/dev/apic.h	131;"	d
APIC_EXFR_GET_SNIC	include/dev/apic.h	133;"	d
APIC_EXFR_GET_XAIDC	include/dev/apic.h	132;"	d
APIC_EXT_LVT_DUMMY_VEC	include/dev/apic.h	38;"	d
APIC_GET_DEL_MODE	include/dev/apic.h	177;"	d
APIC_GET_EXT_ID	include/dev/apic.h	139;"	d
APIC_GET_ID	include/dev/apic.h	95;"	d
APIC_GET_IRR	include/dev/apic.h	113;"	d
APIC_GET_ISR	include/dev/apic.h	110;"	d
APIC_GLOBAL_ENABLE	include/dev/apic.h	66;"	d
APIC_ICR2_DST_SHIFT	include/dev/apic.h	87;"	d
APIC_ICR2_DST_SHIFT	include/dev/apic.h	90;"	d
APIC_ICR_BUSY	include/dev/apic.h	117;"	d
APIC_ID_SHIFT	include/dev/apic.h	86;"	d
APIC_ID_SHIFT	include/dev/apic.h	89;"	d
APIC_INVALID	include/dev/apic.h	/^typedef enum { APIC_INVALID=0, APIC_DISABLED, APIC_XAPIC, APIC_X2APIC } apic_mode_t;$/;"	e	enum:__anon70
APIC_IPI_ALL	include/dev/apic.h	64;"	d
APIC_IPI_OTHERS	include/dev/apic.h	65;"	d
APIC_IPI_SELF	include/dev/apic.h	63;"	d
APIC_IS_BSP	include/dev/apic.h	60;"	d
APIC_LDR_MASK	include/dev/apic.h	186;"	d
APIC_LDR_MASK	include/dev/apic.h	188;"	d
APIC_LDR_X2APIC_CLUSTER	include/dev/apic.h	194;"	d
APIC_LDR_X2APIC_LOGID	include/dev/apic.h	195;"	d
APIC_LVR_HAS_DIRECTED_EOI	include/dev/apic.h	99;"	d
APIC_LVR_HAS_EXT_LVT	include/dev/apic.h	100;"	d
APIC_LVR_MAX	include/dev/apic.h	98;"	d
APIC_LVR_VER	include/dev/apic.h	97;"	d
APIC_LVT_DISABLED	include/dev/apic.h	179;"	d
APIC_LVT_VEC_MASK	include/dev/apic.h	178;"	d
APIC_NULL_KICK_VEC	include/dev/apic.h	39;"	d
APIC_PC_INT_VEC	include/dev/apic.h	36;"	d
APIC_PRINT	src/dev/apic.c	43;"	d	file:
APIC_REG_APR	include/dev/apic.h	102;"	d
APIC_REG_DFR	include/dev/apic.h	107;"	d
APIC_REG_EOR	include/dev/apic.h	104;"	d
APIC_REG_ESR	include/dev/apic.h	114;"	d
APIC_REG_EXFC	include/dev/apic.h	135;"	d
APIC_REG_EXFR	include/dev/apic.h	130;"	d
APIC_REG_EXTLVT	include/dev/apic.h	142;"	d
APIC_REG_ICR	include/dev/apic.h	116;"	d
APIC_REG_ICR2	include/dev/apic.h	118;"	d
APIC_REG_ID	include/dev/apic.h	94;"	d
APIC_REG_IRR	include/dev/apic.h	112;"	d
APIC_REG_ISR	include/dev/apic.h	109;"	d
APIC_REG_LDR	include/dev/apic.h	106;"	d
APIC_REG_LVR	include/dev/apic.h	96;"	d
APIC_REG_LVT0	include/dev/apic.h	122;"	d
APIC_REG_LVT1	include/dev/apic.h	123;"	d
APIC_REG_LVTERR	include/dev/apic.h	124;"	d
APIC_REG_LVTPC	include/dev/apic.h	121;"	d
APIC_REG_LVTT	include/dev/apic.h	119;"	d
APIC_REG_LVTTHMR	include/dev/apic.h	120;"	d
APIC_REG_LVT_CMCI	include/dev/apic.h	115;"	d
APIC_REG_PPR	include/dev/apic.h	103;"	d
APIC_REG_RRR	include/dev/apic.h	105;"	d
APIC_REG_SELF_IPI	include/dev/apic.h	128;"	d
APIC_REG_SPIV	include/dev/apic.h	108;"	d
APIC_REG_TMCCT	include/dev/apic.h	126;"	d
APIC_REG_TMDCR	include/dev/apic.h	127;"	d
APIC_REG_TMICT	include/dev/apic.h	125;"	d
APIC_REG_TMR	include/dev/apic.h	111;"	d
APIC_REG_TPR	include/dev/apic.h	101;"	d
APIC_SPIC_EOI_BROADCAST_DISABLE	include/dev/apic.h	70;"	d
APIC_SPIV_CORE_FOCUS	include/dev/apic.h	69;"	d
APIC_SPIV_SW_ENABLE	include/dev/apic.h	67;"	d
APIC_SPIV_VEC_MASK	include/dev/apic.h	68;"	d
APIC_SPUR_INT_VEC	include/dev/apic.h	32;"	d
APIC_THRML_INT_VEC	include/dev/apic.h	35;"	d
APIC_TIMER_DISABLE	include/dev/apic.h	208;"	d
APIC_TIMER_DIV	include/dev/apic.h	41;"	d
APIC_TIMER_DIVCODE	include/dev/apic.h	52;"	d
APIC_TIMER_DIV_1	include/dev/apic.h	43;"	d
APIC_TIMER_DIV_128	include/dev/apic.h	50;"	d
APIC_TIMER_DIV_16	include/dev/apic.h	47;"	d
APIC_TIMER_DIV_2	include/dev/apic.h	44;"	d
APIC_TIMER_DIV_32	include/dev/apic.h	48;"	d
APIC_TIMER_DIV_4	include/dev/apic.h	45;"	d
APIC_TIMER_DIV_64	include/dev/apic.h	49;"	d
APIC_TIMER_DIV_8	include/dev/apic.h	46;"	d
APIC_TIMER_INT_VEC	include/dev/apic.h	33;"	d
APIC_TIMER_ONESHOT	include/dev/apic.h	209;"	d
APIC_TIMER_PERIODIC	include/dev/apic.h	210;"	d
APIC_TIMER_TSCDLINE	include/dev/apic.h	211;"	d
APIC_VERSION	include/dev/apic.h	61;"	d
APIC_WARN	src/dev/apic.c	44;"	d	file:
APIC_X2APIC	include/dev/apic.h	/^typedef enum { APIC_INVALID=0, APIC_DISABLED, APIC_XAPIC, APIC_X2APIC } apic_mode_t;$/;"	e	enum:__anon70
APIC_XAPIC	include/dev/apic.h	/^typedef enum { APIC_INVALID=0, APIC_DISABLED, APIC_XAPIC, APIC_X2APIC } apic_mode_t;$/;"	e	enum:__anon70
AP_BOOT_STACK_ADDR	include/nautilus/smp.h	152;"	d
AP_INFO_AREA	include/nautilus/smp.h	153;"	d
AP_TRAMPOLINE_ADDR	include/nautilus/smp.h	151;"	d
AR	Makefile	/^AR		= $(CROSS_COMPILE)ar$/;"	m
AR	Makefile	/^AR		= $(CROSS_COMPILE)k1om-mpss-linux-ar$/;"	m
ARCH	Makefile	/^ARCH		?= $(SUBARCH)$/;"	m
ARE_DISJOINT_CALL	src/legion_runtime/region_tree.h	/^      ARE_DISJOINT_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ARGI_LIST1	src/acpi/acpica/acmacros.h	314;"	d
ARGI_LIST2	src/acpi/acpica/acmacros.h	315;"	d
ARGI_LIST3	src/acpi/acpica/acmacros.h	316;"	d
ARGI_LIST4	src/acpi/acpica/acmacros.h	317;"	d
ARGI_LIST5	src/acpi/acpica/acmacros.h	318;"	d
ARGI_LIST6	src/acpi/acpica/acmacros.h	319;"	d
ARGP_LIST1	src/acpi/acpica/acmacros.h	321;"	d
ARGP_LIST2	src/acpi/acpica/acmacros.h	322;"	d
ARGP_LIST3	src/acpi/acpica/acmacros.h	323;"	d
ARGP_LIST4	src/acpi/acpica/acmacros.h	324;"	d
ARGP_LIST5	src/acpi/acpica/acmacros.h	325;"	d
ARGP_LIST6	src/acpi/acpica/acmacros.h	326;"	d
ARGUMENT_MAP_ALLOC	src/legion_runtime/legion_allocation.h	/^      ARGUMENT_MAP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ARGUMENT_MAP_STORE_ALLOC	src/legion_runtime/legion_allocation.h	/^      ARGUMENT_MAP_STORE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
ARG_1	src/acpi/acpica/acmacros.h	307;"	d
ARG_2	src/acpi/acpica/acmacros.h	308;"	d
ARG_3	src/acpi/acpica/acmacros.h	309;"	d
ARG_4	src/acpi/acpica/acmacros.h	310;"	d
ARG_5	src/acpi/acpica/acmacros.h	311;"	d
ARG_6	src/acpi/acpica/acmacros.h	312;"	d
ARG_TYPE_WIDTH	src/acpi/acpica/acmacros.h	306;"	d
ARRIVED	src/nautilus/scheduler.c	/^typedef enum { ARRIVED,            \/\/ no admission control done$/;"	e	enum:__anon132	file:
AS	Makefile	/^AS		= $(CROSS_COMPILE)as$/;"	m
AS	Makefile	/^AS		= $(CROSS_COMPILE)k1om-mpss-linux-as$/;"	m
ASCII_BS	include/dev/kbd.h	56;"	d
ASCII_ESC	include/dev/kbd.h	55;"	d
ASSERT	include/nautilus/bug.h	41;"	d
ASSERT	include/nautilus/naut_assert.h	36;"	d
ASSERT	include/nautilus/naut_assert.h	47;"	d
ASSERT	src/nautilus/fmtout.c	49;"	d	file:
ATEXIT_MAX_FUNCS	include/nautilus/cxxglue.h	30;"	d
ATOMIC	src/legion_runtime/legion_types.h	/^      ATOMIC       = 1,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
ATOMIC_DEPENDENCE	src/legion_runtime/legion_types.h	/^      ATOMIC_DEPENDENCE = 3,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
ATTRIBUTE_COUNT	scripts/kconfig/lxdialog/dialog.h	123;"	d
ATTR_CTRL_ADDR_AND_DATA_WRITE	src/dev/vga.c	37;"	d	file:
ATTR_CTRL_DATA_READ	src/dev/vga.c	38;"	d	file:
ATTR_CTRL_FLIP_FLOP	src/dev/vga.c	36;"	d	file:
ATTR_MODE_CTRL	src/dev/vga.c	39;"	d	file:
AUTOCONF_INCLUDED	include/autoconf.h	6;"	d
AUTO_GENERATE_ID	src/legion_runtime/legion_types.h	47;"	d
AUXMARK	src/lua_src/loadlib.c	622;"	d	file:
AVXBitMask	src/legion_runtime/legion_utilities.h	/^    AVXBitMask<MAX>::AVXBitMask(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
AVXBitMask	src/legion_runtime/legion_utilities.h	/^    AVXBitMask<MAX>::AVXBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
AVXBitMask	src/legion_runtime/legion_utilities.h	/^    class AVXBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
AVXTLBitMask	src/legion_runtime/legion_utilities.h	/^    AVXTLBitMask<MAX>::AVXTLBitMask(const AVXTLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
AVXTLBitMask	src/legion_runtime/legion_utilities.h	/^    AVXTLBitMask<MAX>::AVXTLBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
AVXTLBitMask	src/legion_runtime/legion_utilities.h	/^    class AVXTLBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
AVX_ELMTS	src/legion_runtime/legion_utilities.h	3794;"	d
AVX_ELMTS	src/legion_runtime/legion_utilities.h	5373;"	d
AWK	Makefile	/^AWK		= awk$/;"	m
Ac	src/test/hpcg/sparsemat.h	/^    SparseMatrix *Ac;$/;"	m	struct:lgncg::SparseMatrix
Accessor	src/legion_runtime/accessor.h	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime
Accessor	src/legion_runtime/lowlevel.cc	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime	file:
Accessor	src/legion_runtime/runtime.cc	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime	file:
Accessor	src/legion_runtime/shared_lowlevel.cc	/^  namespace Accessor {$/;"	n	namespace:LegionRuntime	file:
AccessorPrivilege	src/legion_runtime/accessor.h	/^  enum AccessorPrivilege {$/;"	g	namespace:LegionRuntime
AccessorType	src/legion_runtime/accessor.h	/^    namespace AccessorType {$/;"	n	namespace:LegionRuntime::Accessor
AccessorType	src/legion_runtime/runtime.cc	/^    namespace AccessorType {$/;"	n	namespace:LegionRuntime::Accessor	file:
AccumulateCharge	src/test/circuit.h	/^class AccumulateCharge {$/;"	c
Acquire	src/legion_runtime/legion.cc	/^    Acquire::Acquire(void)$/;"	f	class:LegionRuntime::HighLevel::Acquire
Acquire	src/legion_runtime/legion.h	/^    class Acquire : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
AcquireLauncher	src/legion_runtime/legion.cc	/^    AcquireLauncher::AcquireLauncher(LogicalRegion reg, LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
AcquireLauncher	src/legion_runtime/legion.h	/^    struct AcquireLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
AcquireOp	src/legion_runtime/legion_ops.cc	/^    AcquireOp::AcquireOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
AcquireOp	src/legion_runtime/legion_ops.cc	/^    AcquireOp::AcquireOp(const AcquireOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
AcquireOp	src/legion_runtime/legion_ops.h	/^    class AcquireOp : public Acquire, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
Action	src/legion_runtime/lowlevel_impl.h	/^      enum Action {$/;"	g	struct:LegionRuntime::LowLevel::EventTraceItem
Action	src/legion_runtime/lowlevel_impl.h	/^      enum Action {$/;"	g	struct:LegionRuntime::LowLevel::LockTraceItem
ActiveMessageEndpoint	src/legion_runtime/activemsg.cc	/^  ActiveMessageEndpoint(gasnet_node_t _peer)$/;"	f	class:ActiveMessageEndpoint
ActiveMessageEndpoint	src/legion_runtime/activemsg.cc	/^class ActiveMessageEndpoint {$/;"	c	file:
ActiveMessageIDs	src/legion_runtime/lowlevel.cc	/^    enum ActiveMessageIDs {$/;"	g	namespace:LegionRuntime::LowLevel	file:
ActiveMessageMediumNoReply	src/legion_runtime/activemsg.h	/^class ActiveMessageMediumNoReply {$/;"	c
ActiveMessageMediumReply	src/legion_runtime/activemsg.h	/^class ActiveMessageMediumReply {$/;"	c
ActiveMessageShortNoReply	src/legion_runtime/activemsg.h	/^class ActiveMessageShortNoReply {$/;"	c
ActiveMessageShortReply	src/legion_runtime/activemsg.h	/^class ActiveMessageShortReply {$/;"	c
Add	src/test/saxpy_array.cc	/^struct Add {$/;"	s	file:
AddressSpace	src/legion_runtime/legion_types.h	/^    typedef LowLevel::AddressSpace AddressSpace;$/;"	t	namespace:LegionRuntime::HighLevel
AddressSpace	src/legion_runtime/lowlevel.h	/^    typedef unsigned int AddressSpace;$/;"	t	namespace:LegionRuntime::LowLevel
AddressSpaceID	src/legion_runtime/legion_types.h	/^    typedef unsigned int AddressSpaceID;$/;"	t	namespace:LegionRuntime::HighLevel
AdversarialMapper	src/test/custom_mapper.cc	/^AdversarialMapper::AdversarialMapper(Machine *m, $/;"	f	class:AdversarialMapper
AdversarialMapper	src/test/custom_mapper.cc	/^class AdversarialMapper : public DefaultMapper {$/;"	c	file:
AllocManager	src/legion_runtime/runtime.h	/^      AllocManager(const AllocManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
AllocManager	src/legion_runtime/runtime.h	/^      AllocManager(size_t arglen)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
AllocManager	src/legion_runtime/runtime.h	/^    class AllocManager : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
AllocateMode	src/legion_runtime/legion_types.h	/^    enum AllocateMode {$/;"	g	namespace:LegionRuntime::HighLevel
AllocationTracker	src/legion_runtime/runtime.h	/^        AllocationTracker(void)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
AllocationTracker	src/legion_runtime/runtime.h	/^      struct AllocationTracker {$/;"	s	class:LegionRuntime::HighLevel::Runtime
AllocationType	src/legion_runtime/legion_allocation.h	/^    enum AllocationType {$/;"	g	namespace:LegionRuntime::HighLevel
AndPredOp	src/legion_runtime/legion_ops.cc	/^    AndPredOp::AndPredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
AndPredOp	src/legion_runtime/legion_ops.cc	/^    AndPredOp::AndPredOp(const AndPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
AndPredOp	src/legion_runtime/legion_ops.h	/^    class AndPredOp : public Predicate::Impl, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
Ap	src/test/hpcg/cg-data.h	/^    Vector Ap;$/;"	m	struct:lgncg::CGData
ArgsWithReplyInfo	src/legion_runtime/activemsg.h	/^struct ArgsWithReplyInfo {$/;"	s
ArgumentMap	src/legion_runtime/legion.cc	/^    ArgumentMap::ArgumentMap(Impl *i)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
ArgumentMap	src/legion_runtime/legion.cc	/^    ArgumentMap::ArgumentMap(const ArgumentMap &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
ArgumentMap	src/legion_runtime/legion.cc	/^    ArgumentMap::ArgumentMap(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
ArgumentMap	src/legion_runtime/legion.h	/^    class ArgumentMap {$/;"	c	namespace:LegionRuntime::HighLevel
ArgumentMapStore	src/legion_runtime/runtime.cc	/^    ArgumentMapStore::ArgumentMapStore(const ArgumentMapStore &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
ArgumentMapStore	src/legion_runtime/runtime.cc	/^    ArgumentMapStore::ArgumentMapStore(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
ArgumentMapStore	src/legion_runtime/runtime.h	/^    class ArgumentMapStore {$/;"	c	namespace:LegionRuntime::HighLevel
Arrays	src/legion_runtime/arrays.h	/^  namespace Arrays {$/;"	n	namespace:LegionRuntime
Arrays	src/legion_runtime/lowlevel.cc	/^  namespace Arrays {$/;"	n	namespace:LegionRuntime	file:
Arrays	src/legion_runtime/shared_lowlevel.cc	/^  namespace Arrays {$/;"	n	namespace:LegionRuntime	file:
Atomic	src/legion_runtime/lowlevel_impl.h	/^      Atomic(T _value) : value(_value)$/;"	f	class:LegionRuntime::LowLevel::Atomic
Atomic	src/legion_runtime/lowlevel_impl.h	/^    class Atomic {$/;"	c	namespace:LegionRuntime::LowLevel
AutoHSLLock	src/legion_runtime/lowlevel_impl.h	/^      AutoHSLLock(gasnet_hsl_t &mutex) : mutexp(&mutex), held(true)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
AutoHSLLock	src/legion_runtime/lowlevel_impl.h	/^      AutoHSLLock(gasnet_hsl_t *_mutexp) : mutexp(_mutexp), held(true)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
AutoHSLLock	src/legion_runtime/lowlevel_impl.h	/^    class AutoHSLLock {$/;"	c	namespace:LegionRuntime::LowLevel
AutoLock	src/legion_runtime/legion_utilities.h	/^      AutoLock(ImmovableLock l)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
AutoLock	src/legion_runtime/legion_utilities.h	/^      AutoLock(Reservation r, unsigned mode = 0, bool exclusive = true, $/;"	f	class:LegionRuntime::HighLevel::AutoLock
AutoLock	src/legion_runtime/legion_utilities.h	/^      AutoLock(const AutoLock &rhs)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
AutoLock	src/legion_runtime/legion_utilities.h	/^    class AutoLock { $/;"	c	namespace:LegionRuntime::HighLevel
Axf	src/test/hpcg/mg-data.h	/^    Vector Axf;$/;"	m	struct:lgncg::MGData
BAD	src/cxx/cxxglue.cc	49;"	d	file:
BAD_MADT_ENTRY	include/nautilus/acpi.h	174;"	d
BAD_MADT_ENTRY	src/nautilus/acpi.c	39;"	d	file:
BARRIER_ADJUST_MSGID	src/legion_runtime/lowlevel.cc	/^      BARRIER_ADJUST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
BARRIER_DESTROY	src/test/benchmark.h	31;"	d
BARRIER_DESTROY	src/test/benchmark.h	64;"	d
BARRIER_INIT	src/test/benchmark.h	30;"	d
BARRIER_INIT	src/test/benchmark.h	63;"	d
BARRIER_T	src/test/benchmark.h	28;"	d
BARRIER_T	src/test/benchmark.h	61;"	d
BARRIER_TIMESTAMP_NODEID_SHIFT	src/legion_runtime/lowlevel.cc	/^    static const int BARRIER_TIMESTAMP_NODEID_SHIFT = 48;$/;"	m	namespace:LegionRuntime::LowLevel	file:
BARRIER_WAIT	src/test/benchmark.h	29;"	d
BARRIER_WAIT	src/test/benchmark.h	62;"	d
BARRIER_WHILE	include/nautilus/cpu.h	116;"	d
BASE_ALLOCATORS	src/legion_runtime/shared_lowlevel.cc	71;"	d	file:
BASE_EVENTS	src/legion_runtime/shared_lowlevel.cc	68;"	d	file:
BASE_INSTANCES	src/legion_runtime/shared_lowlevel.cc	72;"	d	file:
BASE_MEM_LAST_KILO	include/nautilus/smp.h	155;"	d
BASE_METAS	src/legion_runtime/shared_lowlevel.cc	70;"	d	file:
BASE_RESERVATIONS	src/legion_runtime/shared_lowlevel.cc	69;"	d	file:
BASIC_STACK_SIZE	include/lua/lstate.h	50;"	d
BEGIN	scripts/kconfig/lex.zconf.c	115;"	d	file:
BEGIN_DEPENDENCE_ANALYSIS	src/legion_runtime/legion_logging.h	/^    BEGIN_DEPENDENCE_ANALYSIS = 0,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_EXECUTION	src/legion_runtime/legion_logging.h	/^    BEGIN_EXECUTION = 8,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_GC	src/legion_runtime/legion_logging.h	/^    BEGIN_GC = 22,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_MAPPING	src/legion_runtime/legion_logging.h	/^    BEGIN_MAPPING = 4,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_POST_EXEC	src/legion_runtime/legion_logging.h	/^    BEGIN_POST_EXEC = 24,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_PRE_MAPPING	src/legion_runtime/legion_logging.h	/^    BEGIN_PRE_MAPPING = 2,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_SCHEDULING	src/legion_runtime/legion_logging.h	/^    BEGIN_SCHEDULING = 16,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_SLICING	src/legion_runtime/legion_logging.h	/^    BEGIN_SLICING = 6,$/;"	e	enum:LegionRuntime::TimingKind
BEGIN_WINDOW_WAIT	src/legion_runtime/legion_logging.h	/^    BEGIN_WINDOW_WAIT = 14,$/;"	e	enum:LegionRuntime::TimingKind
BIL	src/test/benchmark.c	86;"	d	file:
BIN_NAME	Makefile	/^BIN_NAME:=nautilus.bin$/;"	m
BIOS_ROM_BASE	include/nautilus/smp.h	156;"	d
BIOS_ROM_END	include/nautilus/smp.h	157;"	d
BIT	include/lib/bitops.h	36;"	d
BIT	include/lib/linux_bitops.h	30;"	d
BITMAP_FIRST_WORD_MASK	include/lib/bitmap.h	56;"	d
BITMAP_LAST_WORD_MASK	include/lib/bitmap.h	57;"	d
BITOP_ADDR	include/asm/bitops.h	31;"	d
BITOP_ADDR	include/asm/bitops.h	33;"	d
BITOP_WORD	lib/bitmap.c	11;"	d	file:
BITRK	include/lua/lopcodes.h	134;"	d
BITS_PER_BYTE	include/lib/bitops.h	32;"	d
BITS_PER_BYTE	include/lib/bitops.h	39;"	d
BITS_PER_BYTE	include/lib/linux_bitops.h	33;"	d
BITS_PER_INT	include/lib/bitops.h	33;"	d
BITS_PER_LONG	include/lib/bitops.h	34;"	d
BITS_PER_LONG	src/nautilus/hashtable.c	84;"	d	file:
BITS_PER_LONG	src/nautilus/hashtable.c	88;"	d	file:
BITS_TO_LONGS	include/lib/bitops.h	40;"	d
BITS_TO_LONGS	include/lib/linux_bitops.h	34;"	d
BIT_64	include/asm/bitops.h	18;"	d
BIT_ELMTS	src/legion_runtime/legion_utilities.h	1355;"	d
BIT_ELMTS	src/legion_runtime/legion_utilities.h	2582;"	d
BIT_ELMTS	src/legion_runtime/legion_utilities.h	2586;"	d
BIT_ELMTS	src/legion_runtime/legion_utilities.h	3789;"	d
BIT_ELMTS	src/legion_runtime/legion_utilities.h	3795;"	d
BIT_ELMTS	src/legion_runtime/legion_utilities.h	5372;"	d
BIT_ISCOLLECTABLE	include/lua/lobject.h	61;"	d
BIT_MASK	include/lib/bitops.h	37;"	d
BIT_MASK	include/lib/linux_bitops.h	31;"	d
BIT_WORD	include/lib/bitops.h	38;"	d
BIT_WORD	include/lib/linux_bitops.h	32;"	d
BLACKBIT	include/lua/lgc.h	89;"	d
BLOAT	src/nautilus/mm/kmem.c	57;"	d	file:
BLOCK_SIZE	src/fs/ext2/ext2.c	36;"	d	file:
BLOCK_SIZE	src/test/saxpy_array.cc	45;"	d	file:
BMM_DEBUG	src/arch/hrt/early_mem.c	36;"	d	file:
BMM_DEBUG	src/arch/k1om/early_mem.c	38;"	d	file:
BMM_DEBUG	src/arch/x64/early_mem.c	36;"	d	file:
BMM_DEBUG	src/nautilus/mm/boot_mm.c	39;"	d	file:
BMM_PRINT	src/arch/hrt/early_mem.c	37;"	d	file:
BMM_PRINT	src/arch/k1om/early_mem.c	39;"	d	file:
BMM_PRINT	src/arch/x64/early_mem.c	37;"	d	file:
BMM_PRINT	src/nautilus/mm/boot_mm.c	40;"	d	file:
BMM_WARN	src/arch/hrt/early_mem.c	38;"	d	file:
BMM_WARN	src/arch/k1om/early_mem.c	40;"	d	file:
BMM_WARN	src/arch/x64/early_mem.c	38;"	d	file:
BMM_WARN	src/nautilus/mm/boot_mm.c	41;"	d	file:
BOOLEAN	include/acpi/actypes.h	/^typedef unsigned char BOOLEAN;$/;"	t
BOOL_ARG	src/legion_runtime/default_mapper.cc	73;"	d	file:
BOOL_ARG	src/legion_runtime/default_mapper.cc	87;"	d	file:
BOOL_ARG	src/legion_runtime/lowlevel.cc	8140;"	d	file:
BOOL_ARG	src/legion_runtime/runtime.cc	11529;"	d	file:
BOOL_ARG	src/legion_runtime/runtime.cc	11623;"	d	file:
BORDER_BG	scripts/kconfig/lxdialog/colors.h	45;"	d
BORDER_FG	scripts/kconfig/lxdialog/colors.h	44;"	d
BORDER_HL	scripts/kconfig/lxdialog/colors.h	46;"	d
BP_EXCP	include/nautilus/idt.h	38;"	d
BREAKPOINT3	include/acpi/platform/acenv.h	358;"	d
BREAKPOINT3	include/acpi/platform/acenv.h	370;"	d
BREAKPOINT3	include/acpi/platform/acenv.h	371;"	d
BREAKPOINT3	include/nautilus/acpi-x86_64.h	46;"	d
BR_EXCP	include/nautilus/idt.h	40;"	d
BSP_CORE	src/test/benchmark.c	234;"	d	file:
BUDDY_DEBUG	src/nautilus/mm/buddy.c	42;"	d	file:
BUDDY_PRINT	src/nautilus/mm/buddy.c	43;"	d	file:
BUDDY_WARN	src/nautilus/mm/buddy.c	44;"	d	file:
BUF	src/nautilus/vc.c	/^  uint16_t BUF[VGA_WIDTH * VGA_HEIGHT];$/;"	m	struct:nk_virtual_console	file:
BUF_LOCK	src/nautilus/vc.c	59;"	d	file:
BUF_LOCK_CONF	src/nautilus/vc.c	58;"	d	file:
BUF_SIZE	scripts/kconfig/lxdialog/dialog.h	54;"	d
BUF_UNLOCK	src/nautilus/vc.c	60;"	d	file:
BUG	include/nautilus/bug.h	30;"	d
BUG_ON	include/nautilus/bug.h	37;"	d
BUTTON_ACTIVE_BG	scripts/kconfig/lxdialog/colors.h	49;"	d
BUTTON_ACTIVE_FG	scripts/kconfig/lxdialog/colors.h	48;"	d
BUTTON_ACTIVE_HL	scripts/kconfig/lxdialog/colors.h	50;"	d
BUTTON_INACTIVE_BG	scripts/kconfig/lxdialog/colors.h	53;"	d
BUTTON_INACTIVE_FG	scripts/kconfig/lxdialog/colors.h	52;"	d
BUTTON_INACTIVE_HL	scripts/kconfig/lxdialog/colors.h	54;"	d
BUTTON_KEY_ACTIVE_BG	scripts/kconfig/lxdialog/colors.h	57;"	d
BUTTON_KEY_ACTIVE_FG	scripts/kconfig/lxdialog/colors.h	56;"	d
BUTTON_KEY_ACTIVE_HL	scripts/kconfig/lxdialog/colors.h	58;"	d
BUTTON_KEY_INACTIVE_BG	scripts/kconfig/lxdialog/colors.h	61;"	d
BUTTON_KEY_INACTIVE_FG	scripts/kconfig/lxdialog/colors.h	60;"	d
BUTTON_KEY_INACTIVE_HL	scripts/kconfig/lxdialog/colors.h	62;"	d
BUTTON_LABEL_ACTIVE_BG	scripts/kconfig/lxdialog/colors.h	65;"	d
BUTTON_LABEL_ACTIVE_FG	scripts/kconfig/lxdialog/colors.h	64;"	d
BUTTON_LABEL_ACTIVE_HL	scripts/kconfig/lxdialog/colors.h	66;"	d
BUTTON_LABEL_INACTIVE_BG	scripts/kconfig/lxdialog/colors.h	69;"	d
BUTTON_LABEL_INACTIVE_FG	scripts/kconfig/lxdialog/colors.h	68;"	d
BUTTON_LABEL_INACTIVE_HL	scripts/kconfig/lxdialog/colors.h	70;"	d
BYTE_COPY_BWD	include/nautilus/naut_string.h	128;"	d
Barrier	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Barrier Barrier;$/;"	t	namespace:LegionRuntime::HighLevel
Barrier	src/legion_runtime/lowlevel.h	/^    class Barrier : public Event {$/;"	c	namespace:LegionRuntime::LowLevel
BarrierAdjustMessage	src/legion_runtime/lowlevel.cc	/^    struct BarrierAdjustMessage {$/;"	s	namespace:LegionRuntime::LowLevel	file:
BaseMedium	src/legion_runtime/activemsg.h	/^struct BaseMedium {$/;"	s
BaseReply	src/legion_runtime/activemsg.h	/^struct BaseReply {$/;"	s
BinOpr	include/lua/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	include/lua/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BindingLib	src/legion_runtime/legion_types.h	/^namespace BindingLib { class Utility; } \/\/ BindingLib namespace$/;"	n
BitMask	src/legion_runtime/legion_utilities.h	/^    BitMask<T,MAX,SHIFT,MASK>::BitMask(T init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::BitMask
BitMask	src/legion_runtime/legion_utilities.h	/^    BitMask<T,MAX,SHIFT,MASK>::BitMask(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
BitMask	src/legion_runtime/legion_utilities.h	/^    class BitMask {$/;"	c	namespace:LegionRuntime::HighLevel
BitPermutation	src/legion_runtime/legion_utilities.h	/^    BitPermutation<BITMASK,LOG2MAX>::BitPermutation(const BitPermutation &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
BitPermutation	src/legion_runtime/legion_utilities.h	/^    BitPermutation<BITMASK,LOG2MAX>::BitPermutation(void)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
BitPermutation	src/legion_runtime/legion_utilities.h	/^    class BitPermutation {$/;"	c	namespace:LegionRuntime::HighLevel
Block	src/test/saxpy_array.cc	/^struct Block {$/;"	s	file:
BlockCnt	src/lua_src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	src/lua_src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BlockSize	src/legion_runtime/accessor.h	/^        BlockSize(size_t _value) : Const<size_t, BLOCK_SIZE>(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::BlockSize
BlockSize	src/legion_runtime/accessor.h	/^      template <size_t BLOCK_SIZE> struct BlockSize : public Const<size_t, BLOCK_SIZE> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
BlockStride	src/legion_runtime/accessor.h	/^        BlockStride(size_t _value) : Const<size_t, BLOCK_STRIDE>(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::BlockStride
BlockStride	src/legion_runtime/accessor.h	/^      template <size_t BLOCK_STRIDE> struct BlockStride : public Const<size_t, BLOCK_STRIDE> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
Blockify	src/legion_runtime/arrays.h	/^      Blockify(Point<DIM> _block_size) : block_size(_block_size) {}$/;"	f	class:LegionRuntime::Arrays::Blockify
Blockify	src/legion_runtime/arrays.h	/^      Blockify(void) {}$/;"	f	class:LegionRuntime::Arrays::Blockify
Blockify	src/legion_runtime/arrays.h	/^    class Blockify {$/;"	c	namespace:LegionRuntime::Arrays
BufferedMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      BufferedMemPairCopier(Memory _src_mem, Memory _dst_mem, size_t _buffer_size = 32768)$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
BufferedMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class BufferedMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
BufferedReductionMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      BufferedReductionMemPairCopier(Memory _src_mem, Memory _dst_mem,$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
BufferedReductionMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class BufferedReductionMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ByteOffset	src/legion_runtime/accessor.h	/^      ByteOffset(T1 *p1, T2 *p2) : offset(((char *)p1) - ((char *)p2)) {}$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	src/legion_runtime/accessor.h	/^      ByteOffset(void) : offset(0) {}$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	src/legion_runtime/accessor.h	/^      explicit ByteOffset(int _offset) : offset(_offset) {}$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	src/legion_runtime/accessor.h	/^      explicit ByteOffset(off_t _offset) : offset(_offset) { assert(offset == _offset); }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
ByteOffset	src/legion_runtime/accessor.h	/^    class ByteOffset {$/;"	c	namespace:LegionRuntime::Accessor
C2latency	include/acpi/actbl.h	/^	uint16_t C2latency;		\/* Worst case HW latency to enter\/exit C2 state *\/$/;"	m	struct:acpi_table_fadt
C3latency	include/acpi/actbl.h	/^	uint16_t C3latency;		\/* Worst case HW latency to enter\/exit C3 state *\/$/;"	m	struct:acpi_table_fadt
CACHE_LINE_SIZE_DEFAULT	src/nautilus/mm/boot_mm.c	32;"	d	file:
CALC_NEW_CURRENTS_TASK_ID	src/test/circuit.h	/^  CALC_NEW_CURRENTS_TASK_ID,$/;"	e	enum:__anon120
CAP_POSITION	src/lua_src/lstrlib.c	195;"	d	file:
CAP_UNFINISHED	src/lua_src/lstrlib.c	194;"	d	file:
CArrayLinearization	src/legion_runtime/arrays.h	/^      CArrayLinearization(Rect<DIM> bounds, int first_index = 0)$/;"	f	class:LegionRuntime::Arrays::CArrayLinearization
CArrayLinearization	src/legion_runtime/arrays.h	/^      CArrayLinearization(void) {}$/;"	f	class:LegionRuntime::Arrays::CArrayLinearization
CArrayLinearization	src/legion_runtime/arrays.h	/^    class CArrayLinearization : public Linearization<DIM> {$/;"	c	namespace:LegionRuntime::Arrays
CC	Makefile	/^CC		= $(CROSS_COMPILE)gcc$/;"	m
CC	Makefile	/^CC		= $(CROSS_COMPILE)k1om-mpss-linux-gcc$/;"	m
CC	xeon_phi/linux_usr/Makefile	/^CC=\/usr\/bin\/gcc$/;"	m
CClosure	include/lua/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	include/lua/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CD	src/dev/ata.c	/^    enum {NONE=0, HD, CD} type;$/;"	e	enum:ata_blkdev_state::__anon134	file:
CEIL_DIV	src/fs/ext2/ext2_access.c	39;"	d	file:
CEIL_DIV	src/test/ipi.c	36;"	d	file:
CFLAGS	Makefile	/^CFLAGS:=   $(COMMON_FLAGS) \\$/;"	m
CFLAGS	xeon_phi/linux_usr/Makefile	/^CFLAGS=-g $/;"	m
CFLAGS_KERNEL	Makefile	/^CFLAGS_KERNEL	=$/;"	m
CGData	src/test/hpcg/cg-data.h	/^    CGData(int64_t nRows,$/;"	f	struct:lgncg::CGData
CGData	src/test/hpcg/cg-data.h	/^struct CGData {$/;"	s	namespace:lgncg
CGMapper	src/test/hpcg/cg-mapper.h	/^    CGMapper(LegionRuntime::HighLevel::Machine *machine,$/;"	f	class:CGMapper
CGMapper	src/test/hpcg/cg-mapper.h	/^class CGMapper : public LegionRuntime::HighLevel::DefaultMapper {$/;"	c
CHANGING	src/nautilus/scheduler.c	/^	       CHANGING,           \/\/ admitted for new constraints, now changing to them$/;"	e	enum:__anon132	file:
CHAR_BIT	src/nautilus/fmtout.c	39;"	d	file:
CHAR_REG_OFFSET	src/arch/k1om/xeon_phi.c	47;"	d	file:
CHAR_REG_OFFSET	xeon_phi/linux_usr/phi_console.c	72;"	d	file:
CHECK	Makefile	/^CHECK		= sparse$/;"	m
CHECK_BG	scripts/kconfig/lxdialog/colors.h	129;"	d
CHECK_CG_TASK_ID	src/test/hpcg/hpcg-main.cc	/^    CHECK_CG_TASK_ID$/;"	e	enum:__anon117::TID	file:
CHECK_CU	src/legion_runtime/lowlevel_gpu.h	32;"	d
CHECK_CUDART	src/legion_runtime/lowlevel_gpu.h	23;"	d
CHECK_FG	scripts/kconfig/lxdialog/colors.h	128;"	d
CHECK_FIELD_TASK_ID	src/test/circuit.h	/^  CHECK_FIELD_TASK_ID,$/;"	e	enum:__anon120
CHECK_GASNET	src/legion_runtime/activemsg.h	44;"	d
CHECK_GASNET	src/legion_runtime/lowlevel_impl.h	64;"	d
CHECK_HL	scripts/kconfig/lxdialog/colors.h	130;"	d
CHECK_PTHREAD	src/legion_runtime/activemsg.h	36;"	d
CHECK_PTHREAD	src/legion_runtime/lowlevel_dma.cc	24;"	d	file:
CHECK_PTHREAD	src/legion_runtime/lowlevel_impl.h	56;"	d
CHECK_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	133;"	d
CHECK_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	132;"	d
CHECK_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	134;"	d
CHECK_TASK_ID	src/test/custom_mapper.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHECK_TASK_ID	src/test/multiple_partitions.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHECK_TASK_ID	src/test/partitioning.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHECK_TASK_ID	src/test/privileges.cc	/^  CHECK_TASK_ID,$/;"	e	enum:TaskIDs	file:
CHUNK_SIZE	src/legion_runtime/lowlevel.cc	/^	static const size_t CHUNK_SIZE = 16384;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
CHUNK_SIZE	src/legion_runtime/lowlevel_dma.cc	/^	static const size_t CHUNK_SIZE = 16384;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
CIRCUIT_CPU_LEAF_VARIANT	src/test/circuit.h	/^  CIRCUIT_CPU_LEAF_VARIANT,$/;"	e	enum:CircuitVariants
CIRCUIT_GPU_LEAF_VARIANT	src/test/circuit.h	/^  CIRCUIT_GPU_LEAF_VARIANT,$/;"	e	enum:CircuitVariants
CIST_HOOKED	include/lua/lstate.h	96;"	d
CIST_HOOKYIELD	include/lua/lstate.h	103;"	d
CIST_LUA	include/lua/lstate.h	95;"	d
CIST_REENTRY	include/lua/lstate.h	97;"	d
CIST_STAT	include/lua/lstate.h	101;"	d
CIST_TAIL	include/lua/lstate.h	102;"	d
CIST_YIELDED	include/lua/lstate.h	99;"	d
CIST_YPCALL	include/lua/lstate.h	100;"	d
CLEAR_TIMER_MSGID	src/legion_runtime/lowlevel.cc	/^      CLEAR_TIMER_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CLIBS	src/lua_src/loadlib.c	96;"	d	file:
CLOCKS_PER_SEC	include/nautilus/libccompat.h	125;"	d
CLOCK_BOOTTIME	include/nautilus/libccompat.h	49;"	d
CLOCK_BOOTTIME_ALARM	include/nautilus/libccompat.h	51;"	d
CLOCK_MONOTONIC	include/nautilus/libccompat.h	43;"	d
CLOCK_MONOTONIC_COARSE	include/nautilus/libccompat.h	48;"	d
CLOCK_MONOTONIC_RAW	include/nautilus/libccompat.h	46;"	d
CLOCK_PROCESS_CPUTIME_ID	include/nautilus/libccompat.h	44;"	d
CLOCK_REALTIME	include/nautilus/libccompat.h	42;"	d
CLOCK_REALTIME_ALARM	include/nautilus/libccompat.h	50;"	d
CLOCK_REALTIME_COARSE	include/nautilus/libccompat.h	47;"	d
CLOCK_SGI_CYCLE	include/nautilus/libccompat.h	52;"	d
CLOCK_TAI	include/nautilus/libccompat.h	53;"	d
CLOCK_THREAD_CPUTIME_ID	include/nautilus/libccompat.h	45;"	d
CLOSE_LOGICAL_NODE_CALL	src/legion_runtime/region_tree.h	/^      CLOSE_LOGICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CLOSE_OPERATION	src/legion_runtime/legion_logging.h	/^        CLOSE_OPERATION = 4,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
CLOSE_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      CLOSE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
CLOSE_PHYSICAL_CHILD_CALL	src/legion_runtime/region_tree.h	/^      CLOSE_PHYSICAL_CHILD_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CLOSE_PHYSICAL_NODE_CALL	src/legion_runtime/region_tree.h	/^      CLOSE_PHYSICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CLOSE_PHYSICAL_STATE_CALL	src/legion_runtime/region_tree.h	/^      CLOSE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CMDSTATUS	src/dev/ata.c	84;"	d	file:
CO	src/nautilus/scheduler.c	418;"	d	file:
COLOR_BLACK	include/dev/vga.h	/^    COLOR_BLACK = 0,$/;"	e	enum:vga_color
COLOR_BLUE	include/dev/vga.h	/^    COLOR_BLUE = 1,$/;"	e	enum:vga_color
COLOR_BROWN	include/dev/vga.h	/^    COLOR_BROWN = 6,$/;"	e	enum:vga_color
COLOR_COUNT	scripts/kconfig/lxdialog/colors.h	148;"	d
COLOR_CYAN	include/dev/vga.h	/^    COLOR_CYAN = 3,$/;"	e	enum:vga_color
COLOR_DARK_GREY	include/dev/vga.h	/^    COLOR_DARK_GREY = 8,$/;"	e	enum:vga_color
COLOR_GREEN	include/dev/vga.h	/^    COLOR_GREEN = 2,$/;"	e	enum:vga_color
COLOR_LIGHT_BLUE	include/dev/vga.h	/^    COLOR_LIGHT_BLUE = 9,$/;"	e	enum:vga_color
COLOR_LIGHT_BROWN	include/dev/vga.h	/^    COLOR_LIGHT_BROWN = 14,$/;"	e	enum:vga_color
COLOR_LIGHT_CYAN	include/dev/vga.h	/^    COLOR_LIGHT_CYAN = 11,$/;"	e	enum:vga_color
COLOR_LIGHT_GREEN	include/dev/vga.h	/^    COLOR_LIGHT_GREEN = 10,$/;"	e	enum:vga_color
COLOR_LIGHT_GREY	include/dev/vga.h	/^    COLOR_LIGHT_GREY = 7,$/;"	e	enum:vga_color
COLOR_LIGHT_MAGENTA	include/dev/vga.h	/^    COLOR_LIGHT_MAGENTA = 13,$/;"	e	enum:vga_color
COLOR_LIGHT_RED	include/dev/vga.h	/^    COLOR_LIGHT_RED = 12,$/;"	e	enum:vga_color
COLOR_MAGENTA	include/dev/vga.h	/^    COLOR_MAGENTA = 5,$/;"	e	enum:vga_color
COLOR_NAME_LEN	scripts/kconfig/lxdialog/colors.h	147;"	d
COLOR_RED	include/dev/vga.h	/^    COLOR_RED = 4,$/;"	e	enum:vga_color
COLOR_WHITE	include/dev/vga.h	/^    COLOR_WHITE = 15,$/;"	e	enum:vga_color
COL_BTNACT	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	enum:__anon4	file:
COL_BTNINC	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	enum:__anon4	file:
COL_BTNRAD	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	enum:__anon4	file:
COL_BTNVIS	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	enum:__anon4	file:
COL_COLOR	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	enum:__anon4	file:
COL_EDIT	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	enum:__anon4	file:
COL_MENU	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	enum:__anon4	file:
COL_MOD	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	enum:__anon4	file:
COL_NAME	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	enum:__anon4	file:
COL_NO	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	enum:__anon4	file:
COL_NUMBER	scripts/kconfig/gconf.c	/^	COL_NUMBER$/;"	e	enum:__anon4	file:
COL_OPTION	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	enum:__anon4	file:
COL_PIXBUF	scripts/kconfig/gconf.c	/^	COL_MENU, COL_COLOR, COL_EDIT, COL_PIXBUF,$/;"	e	enum:__anon4	file:
COL_PIXVIS	scripts/kconfig/gconf.c	/^	COL_PIXVIS, COL_BTNVIS, COL_BTNACT, COL_BTNINC, COL_BTNRAD,$/;"	e	enum:__anon4	file:
COL_VALUE	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	enum:__anon4	file:
COL_YES	scripts/kconfig/gconf.c	/^	COL_OPTION, COL_NAME, COL_NO, COL_MOD, COL_YES, COL_VALUE,$/;"	e	enum:__anon4	file:
COM1_3_IRQ	include/dev/serial.h	26;"	d
COM1_ADDR	include/dev/serial.h	28;"	d
COM2_4_IRQ	include/dev/serial.h	27;"	d
COM2_ADDR	include/dev/serial.h	29;"	d
COM3_ADDR	include/dev/serial.h	30;"	d
COM4_ADDR	include/dev/serial.h	31;"	d
COMMAND	scripts/kconfig/lex.zconf.c	806;"	d	file:
COMMIT_OPERATION	src/legion_runtime/legion_logging.h	/^    COMMIT_OPERATION = 13,$/;"	e	enum:LegionRuntime::TimingKind
COMMON_FLAGS	Makefile	/^COMMON_FLAGS := -O2 \\$/;"	m
COMMON_H	src/legion_runtime/common.h	18;"	d
COMPILER_DEPENDENT_INT64	include/acpi/platform/acenv.h	176;"	d
COMPILER_DEPENDENT_INT64	include/nautilus/acpi-x86_64.h	27;"	d
COMPILER_DEPENDENT_UINT64	include/acpi/platform/acenv.h	177;"	d
COMPILER_DEPENDENT_UINT64	include/nautilus/acpi-x86_64.h	28;"	d
COMPILE_TIME_MIN_LEVEL	src/legion_runtime/utilities.h	68;"	d
COMPLETE_CHILD_ALLOC	src/legion_runtime/legion_allocation.h	/^      COMPLETE_CHILD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COMPLETE_OPERATION	src/legion_runtime/legion_logging.h	/^    COMPLETE_OPERATION = 12,$/;"	e	enum:LegionRuntime::TimingKind
COMPOSITE_NODE_ALLOC	src/legion_runtime/legion_allocation.h	/^      COMPOSITE_NODE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COMPOSITE_VIEW_ALLOC	src/legion_runtime/legion_allocation.h	/^      COMPOSITE_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COMPUTE_PATH_CALL	src/legion_runtime/region_tree.h	/^      COMPUTE_PATH_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CONDENSE_USER_LIST_CALL	src/legion_runtime/region_tree.h	/^      CONDENSE_USER_LIST_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CONDVAR_LOOPS	src/test/benchmark.c	84;"	d	file:
COND_BCAST	src/test/benchmark.h	27;"	d
COND_BCAST	src/test/benchmark.h	60;"	d
COND_INIT	src/test/benchmark.h	24;"	d
COND_INIT	src/test/benchmark.h	57;"	d
COND_SIG	src/test/benchmark.h	26;"	d
COND_SIG	src/test/benchmark.h	59;"	d
COND_T	src/test/benchmark.h	23;"	d
COND_T	src/test/benchmark.h	56;"	d
COND_WAIT	src/test/benchmark.h	25;"	d
COND_WAIT	src/test/benchmark.h	58;"	d
CONFIG_SHELL	Makefile	/^CONFIG_SHELL := $(shell if [ -x "$$BASH" ]; then echo $$BASH; \\$/;"	m
CONST_MASK	include/asm/bitops.h	44;"	d
CONST_MASK_ADDR	include/asm/bitops.h	43;"	d
COOKED	include/nautilus/vc.h	/^enum nk_vc_type {RAW, COOKED, RAW_NOQUEUE};$/;"	e	enum:nk_vc_type
COPY_ACROSS_ANALYSIS	src/legion_runtime/region_tree.h	/^      COPY_ACROSS_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
COPY_BEGIN	src/legion_runtime/legion_logging.h	/^    COPY_BEGIN = 20,$/;"	e	enum:LegionRuntime::TimingKind
COPY_END	src/legion_runtime/legion_logging.h	/^    COPY_END = 21,$/;"	e	enum:LegionRuntime::TimingKind
COPY_FIELD_CALL	src/legion_runtime/region_tree.h	/^      COPY_FIELD_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
COPY_FROM_CALL	src/legion_runtime/region_tree.h	/^      COPY_FROM_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
COPY_INIT	src/legion_runtime/legion_logging.h	/^    COPY_INIT = 18,$/;"	e	enum:LegionRuntime::TimingKind
COPY_MAPPABLE	src/legion_runtime/legion.h	/^        COPY_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
COPY_OPERATION	src/legion_runtime/legion_logging.h	/^        COPY_OPERATION = 1,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
COPY_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      COPY_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
COPY_READY	src/legion_runtime/legion_logging.h	/^    COPY_READY = 19,$/;"	e	enum:LegionRuntime::TimingKind
COPY_TO_CALL	src/legion_runtime/region_tree.h	/^      COPY_TO_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CPP	Makefile	/^CPP		= $(CC) -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS        := $(NAUT_INCLUDE) -D__NAUTILUS__$/;"	m
CPUID_AMD_BASIC_INFO	include/nautilus/cpuid.h	37;"	d
CPUID_AMD_EXT_INFO	include/nautilus/cpuid.h	39;"	d
CPUID_AMD_FEATURE_INFO	include/nautilus/cpuid.h	38;"	d
CPUID_BASIC_INFO	include/nautilus/cpuid.h	35;"	d
CPUID_EXT_FUNC_ADDR_SZ	include/nautilus/cpuid.h	73;"	d
CPUID_EXT_FUNC_BRND_STR0	include/nautilus/cpuid.h	67;"	d
CPUID_EXT_FUNC_BRND_STR1	include/nautilus/cpuid.h	68;"	d
CPUID_EXT_FUNC_BRND_STR2	include/nautilus/cpuid.h	69;"	d
CPUID_EXT_FUNC_CACHE1	include/nautilus/cpuid.h	71;"	d
CPUID_EXT_FUNC_INV_TSC	include/nautilus/cpuid.h	72;"	d
CPUID_EXT_FUNC_MAXVAL	include/nautilus/cpuid.h	65;"	d
CPUID_EXT_FUNC_RSVD	include/nautilus/cpuid.h	70;"	d
CPUID_EXT_FUNC_SIG_FEAT	include/nautilus/cpuid.h	66;"	d
CPUID_FEATURE_INFO	include/nautilus/cpuid.h	36;"	d
CPUID_GET_BASE_FAM	include/nautilus/cpuid.h	41;"	d
CPUID_GET_BASE_MOD	include/nautilus/cpuid.h	42;"	d
CPUID_GET_EXT_FAM	include/nautilus/cpuid.h	44;"	d
CPUID_GET_EXT_MOD	include/nautilus/cpuid.h	45;"	d
CPUID_GET_PROC_STEP	include/nautilus/cpuid.h	43;"	d
CPUID_HAS_FEATURE_ECX	include/nautilus/cpuid.h	47;"	d
CPUID_HAS_FEATURE_EDX	include/nautilus/cpuid.h	48;"	d
CPUID_LEAF_BASIC_INFO0	include/nautilus/cpuid.h	50;"	d
CPUID_LEAF_BASIC_INFO1	include/nautilus/cpuid.h	51;"	d
CPUID_LEAF_BASIC_INFO2	include/nautilus/cpuid.h	52;"	d
CPUID_LEAF_BASIC_INFO3	include/nautilus/cpuid.h	53;"	d
CPUID_LEAF_CACHE_ACCESS	include/nautilus/cpuid.h	58;"	d
CPUID_LEAF_CACHE_PARM	include/nautilus/cpuid.h	54;"	d
CPUID_LEAF_EXT_FEATS	include/nautilus/cpuid.h	57;"	d
CPUID_LEAF_EXT_STATE	include/nautilus/cpuid.h	61;"	d
CPUID_LEAF_MWAIT	include/nautilus/cpuid.h	55;"	d
CPUID_LEAF_PERF_MON	include/nautilus/cpuid.h	59;"	d
CPUID_LEAF_QOS_ENF	include/nautilus/cpuid.h	63;"	d
CPUID_LEAF_QOS_MON	include/nautilus/cpuid.h	62;"	d
CPUID_LEAF_THERMAL	include/nautilus/cpuid.h	56;"	d
CPUID_LEAF_TOP_ENUM	include/nautilus/cpuid.h	60;"	d
CPU_ANY	include/nautilus/thread.h	37;"	d
CPU_BASE_LEAF	src/test/circuit.h	/^  static const bool CPU_BASE_LEAF = true;$/;"	m	class:CalcNewCurrentsTask
CPU_BASE_LEAF	src/test/circuit.h	/^  static const bool CPU_BASE_LEAF = true;$/;"	m	class:DistributeChargeTask
CPU_BASE_LEAF	src/test/circuit.h	/^  static const bool CPU_BASE_LEAF = true;$/;"	m	class:UpdateVoltagesTask
CP_EXCP	include/nautilus/idt.h	44;"	d
CR0_AM	include/nautilus/cpu.h	56;"	d
CR0_CD	include/nautilus/cpu.h	58;"	d
CR0_EM	include/nautilus/cpu.h	52;"	d
CR0_MP	include/nautilus/cpu.h	51;"	d
CR0_NE	include/nautilus/cpu.h	54;"	d
CR0_NW	include/nautilus/cpu.h	57;"	d
CR0_PE	include/nautilus/cpu.h	50;"	d
CR0_PG	include/nautilus/cpu.h	59;"	d
CR0_TS	include/nautilus/cpu.h	53;"	d
CR0_WP	include/nautilus/cpu.h	55;"	d
CR4_DE	include/nautilus/cpu.h	64;"	d
CR4_FSGSBASE	include/nautilus/cpu.h	74;"	d
CR4_MCE	include/nautilus/cpu.h	67;"	d
CR4_OSFXSR	include/nautilus/cpu.h	70;"	d
CR4_OSXMMEXCPT	include/nautilus/cpu.h	71;"	d
CR4_OSXSAVE	include/nautilus/cpu.h	76;"	d
CR4_PAE	include/nautilus/cpu.h	66;"	d
CR4_PCE	include/nautilus/cpu.h	69;"	d
CR4_PCIDE	include/nautilus/cpu.h	75;"	d
CR4_PGE	include/nautilus/cpu.h	68;"	d
CR4_PSE	include/nautilus/cpu.h	65;"	d
CR4_PVI	include/nautilus/cpu.h	62;"	d
CR4_SMEP	include/nautilus/cpu.h	77;"	d
CR4_TSD	include/nautilus/cpu.h	63;"	d
CR4_VME	include/nautilus/cpu.h	61;"	d
CR4_VMXE	include/nautilus/cpu.h	72;"	d
CR4_XMXE	include/nautilus/cpu.h	73;"	d
CREATE_ABC	include/lua/lopcodes.h	116;"	d
CREATE_ABx	include/lua/lopcodes.h	121;"	d
CREATE_ALLOC_MSGID	src/legion_runtime/lowlevel.cc	/^      CREATE_ALLOC_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_ALLOC_RPLID	src/legion_runtime/lowlevel.cc	/^      CREATE_ALLOC_RPLID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_Ax	include/lua/lopcodes.h	125;"	d
CREATE_INSTANCE_CALL	src/legion_runtime/region_tree.h	/^      CREATE_INSTANCE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CREATE_INST_MSGID	src/legion_runtime/lowlevel.cc	/^      CREATE_INST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_INST_RPLID	src/legion_runtime/lowlevel.cc	/^      CREATE_INST_RPLID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
CREATE_NODE_CALL	src/legion_runtime/region_tree.h	/^      CREATE_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CREATE_REDUCTION_CALL	src/legion_runtime/region_tree.h	/^      CREATE_REDUCTION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
CROSS_COMPILE	Makefile	/^CROSS_COMPILE	?= $/;"	m
CRTC_ADDR	src/dev/vga.c	31;"	d	file:
CRTC_DATA	src/dev/vga.c	32;"	d	file:
CTX_SWITCH_TRIALS	src/test/benchmark.c	689;"	d	file:
CUDAPREFIX	src/legion_runtime/accessor.h	1008;"	d
CUDAPREFIX	src/legion_runtime/accessor.h	20;"	d
CUDAPREFIX	src/legion_runtime/accessor.h	22;"	d
CURR_LOGICAL_ALLOC	src/legion_runtime/legion_allocation.h	/^      CURR_LOGICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
CURR_PHYSICAL_ALLOC	src/legion_runtime/legion_allocation.h	/^      CURR_PHYSICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
CURSOR_HIGH	src/dev/vga.c	34;"	d	file:
CURSOR_LOW	src/dev/vga.c	33;"	d	file:
CURSOR_REG_OFFSET	src/arch/k1om/xeon_phi.c	48;"	d	file:
CURSOR_REG_OFFSET	xeon_phi/linux_usr/phi_console.c	77;"	d	file:
CURS_MACROS	scripts/kconfig/lxdialog/dialog.h	29;"	d
CUR_IS_NOT_SPECIAL	src/nautilus/scheduler.c	1507;"	d	file:
CUR_IS_SPECIAL	src/nautilus/scheduler.c	1506;"	d	file:
CUR_NOT_SPECIAL_STR	src/nautilus/scheduler.c	1509;"	d	file:
CUR_SPECIAL_STR	src/nautilus/scheduler.c	1508;"	d	file:
CXX	Makefile	/^CXX             = $(CROSS_COMPILE)g++$/;"	m
CXX	Makefile	/^CXX             = $(CROSS_COMPILE)k1om-mpss-linux-g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS := $(COMMON_FLAGS) \\$/;"	m
CXX_DEBUG	src/cxx/cxxinit.c	30;"	d	file:
CXX_PRINT	src/cxx/cxxinit.c	31;"	d	file:
C_ATTR	scripts/kconfig/lxdialog/colors.h	146;"	d
CalcNewCurrentsTask	src/test/circuit.h	/^class CalcNewCurrentsTask : public IndexLauncher {$/;"	c
CalcNewCurrentsTask	src/test/circuit_cpu.cc	/^CalcNewCurrentsTask::CalcNewCurrentsTask(LogicalPartition lp_pvt_wires,$/;"	f	class:CalcNewCurrentsTask
CallInfo	include/lua/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	include/lua/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallKind	src/legion_runtime/region_tree.h	/^    enum CallKind {$/;"	g	namespace:LegionRuntime::HighLevel
CallRecord	src/legion_runtime/region_tree.h	/^        CallRecord(int k)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
CallRecord	src/legion_runtime/region_tree.h	/^        CallRecord(void)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
CallRecord	src/legion_runtime/region_tree.h	/^      struct CallRecord {$/;"	s	class:LegionRuntime::HighLevel::RegionTreeForest
CallS	src/lua_src/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
Category	src/legion_runtime/utilities.h	/^      Category(const std::string& name)$/;"	f	class:LegionRuntime::Logger::Category
Category	src/legion_runtime/utilities.h	/^    class Category {$/;"	c	class:LegionRuntime::Logger
CheckTask	src/test/circuit.h	/^class CheckTask : public IndexLauncher {$/;"	c
CheckTask	src/test/circuit_cpu.cc	/^CheckTask::CheckTask(LogicalPartition lp,$/;"	f	class:CheckTask
ChildInfo	src/legion_runtime/region_tree.h	/^        ChildInfo(bool c, const FieldMask &m)$/;"	f	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
ChildInfo	src/legion_runtime/region_tree.h	/^        ChildInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
ChildInfo	src/legion_runtime/region_tree.h	/^      struct ChildInfo {$/;"	s	class:LegionRuntime::HighLevel::CompositeNode
ChildState	src/legion_runtime/region_tree.h	/^    struct ChildState {$/;"	s	namespace:LegionRuntime::HighLevel
ChunkInfo	src/legion_runtime/activemsg.cc	/^    ChunkInfo(void *base, int c, size_t size)$/;"	f	struct:ActiveMessageEndpoint::ChunkInfo
ChunkInfo	src/legion_runtime/activemsg.cc	/^    ChunkInfo(void) : base_ptr(NULL), chunks(0), total_size(0) { }$/;"	f	struct:ActiveMessageEndpoint::ChunkInfo
ChunkInfo	src/legion_runtime/activemsg.cc	/^  struct ChunkInfo {$/;"	s	class:ActiveMessageEndpoint	file:
Circuit	src/test/circuit.h	/^struct Circuit {$/;"	s
CircuitMapper	src/test/circuit_mapper.cc	/^CircuitMapper::CircuitMapper(Machine *m, HighLevelRuntime *rt, Processor p)$/;"	f	class:CircuitMapper
CircuitMapper	src/test/circuit_mapper.h	/^class CircuitMapper : public DefaultMapper {$/;"	c
CircuitPiece	src/test/circuit.h	/^struct CircuitPiece {$/;"	s
CircuitVariants	src/test/circuit.h	/^enum CircuitVariants {$/;"	g
ClearTimerRequestArgs	src/legion_runtime/lowlevel.cc	/^    struct ClearTimerRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
ClearTimerRequestMessage	src/legion_runtime/lowlevel.cc	/^				      handle_clear_timer_request> ClearTimerRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
Clock	src/legion_runtime/utilities.h	/^    class Clock {$/;"	c	namespace:LegionRuntime::LowLevel
CloseInfo	src/legion_runtime/region_tree.h	/^      CloseInfo(const FieldMask &m, TreeCloseImpl *impl)$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
CloseInfo	src/legion_runtime/region_tree.h	/^      CloseInfo(void) { }$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
CloseInfo	src/legion_runtime/region_tree.h	/^    struct CloseInfo {$/;"	s	namespace:LegionRuntime::HighLevel
CloseOp	src/legion_runtime/legion_ops.cc	/^    CloseOp::CloseOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
CloseOp	src/legion_runtime/legion_ops.cc	/^    CloseOp::CloseOp(const CloseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
CloseOp	src/legion_runtime/legion_ops.h	/^    class CloseOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
Closure	include/lua/lobject.h	/^typedef union Closure {$/;"	u
Closure	include/lua/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	include/lua/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	include/lua/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	include/lua/lobject.h	512;"	d
CoherenceProperty	src/legion_runtime/legion_types.h	/^    enum CoherenceProperty {$/;"	g	namespace:LegionRuntime::HighLevel
CoherentData	src/legion_runtime/lowlevel_impl.h	/^      struct CoherentData : public StaticData {$/;"	s	class:LegionRuntime::LowLevel::IndexSpace::Impl
CoherentData	src/legion_runtime/lowlevel_impl.h	/^      typedef typename T::CoherentData CoherentData;$/;"	t	class:LegionRuntime::LowLevel::ExclusiveAccess
CoherentData	src/legion_runtime/lowlevel_impl.h	/^      typedef typename T::CoherentData CoherentData;$/;"	t	class:LegionRuntime::LowLevel::SharedAccess
Collectable	src/legion_runtime/garbage_collection.h	/^      Collectable(unsigned init = 0)$/;"	f	class:LegionRuntime::HighLevel::Collectable
Collectable	src/legion_runtime/garbage_collection.h	/^    class Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
CollectableState	src/legion_runtime/garbage_collection.cc	/^    CollectableState::CollectableState(void)$/;"	f	class:LegionRuntime::HighLevel::CollectableState
CollectableState	src/legion_runtime/garbage_collection.h	/^    class CollectableState {$/;"	c	namespace:LegionRuntime::HighLevel
Color	src/legion_runtime/legion_types.h	/^    typedef unsigned int Color;$/;"	t	namespace:LegionRuntime::HighLevel
ColoredPoints	src/legion_runtime/legion.h	/^    struct ColoredPoints {$/;"	s	namespace:LegionRuntime::HighLevel
Coloring	src/legion_runtime/legion_types.h	/^    typedef std::map<Color,ColoredPoints<ptr_t> > Coloring;$/;"	t	namespace:LegionRuntime::HighLevel
ColoringSerializer	src/legion_runtime/legion.cc	/^    ColoringSerializer::ColoringSerializer(const Coloring &c)$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
ColoringSerializer	src/legion_runtime/legion.h	/^      ColoringSerializer(void) { }$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
ColoringSerializer	src/legion_runtime/legion.h	/^    class ColoringSerializer {$/;"	c	namespace:LegionRuntime::HighLevel
CommonHeader	include/lua/lobject.h	/^    CommonHeader;$/;"	m	struct:TString::__anon5
CommonHeader	include/lua/lobject.h	/^    CommonHeader;$/;"	m	struct:Udata::__anon6
CommonHeader	include/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:GCheader
CommonHeader	include/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	include/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	include/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:UpVal
CommonHeader	include/lua/lobject.h	77;"	d
CommonHeader	include/lua/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
CompositeCloser	src/legion_runtime/region_tree.cc	/^    CompositeCloser::CompositeCloser(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
CompositeCloser	src/legion_runtime/region_tree.cc	/^    CompositeCloser::CompositeCloser(const CompositeCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
CompositeCloser	src/legion_runtime/region_tree.h	/^    struct CompositeCloser {$/;"	s	namespace:LegionRuntime::HighLevel
CompositeNode	src/legion_runtime/region_tree.cc	/^    CompositeNode::CompositeNode(RegionTreeNode *logical, CompositeNode *par)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
CompositeNode	src/legion_runtime/region_tree.cc	/^    CompositeNode::CompositeNode(const CompositeNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
CompositeNode	src/legion_runtime/region_tree.h	/^    class CompositeNode : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
CompositeView	src/legion_runtime/region_tree.cc	/^    CompositeView::CompositeView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
CompositeView	src/legion_runtime/region_tree.cc	/^    CompositeView::CompositeView(const CompositeView &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
CompositeView	src/legion_runtime/region_tree.h	/^    class CompositeView : public InstanceView {$/;"	c	namespace:LegionRuntime::HighLevel
ConfigItem	scripts/kconfig/qconf.h	/^	ConfigItem(ConfigItem *parent, ConfigItem *after, struct menu *m, bool v)$/;"	f	class:ConfigItem
ConfigItem	scripts/kconfig/qconf.h	/^	ConfigItem(QListView *parent, ConfigItem *after, bool v)$/;"	f	class:ConfigItem
ConfigItem	scripts/kconfig/qconf.h	/^	ConfigItem(QListView *parent, ConfigItem *after, struct menu *m, bool v)$/;"	f	class:ConfigItem
ConfigItem	scripts/kconfig/qconf.h	/^class ConfigItem : public QListViewItem {$/;"	c
ConfigLineEdit	scripts/kconfig/qconf.h	/^	ConfigLineEdit(ConfigView* parent)$/;"	f	class:ConfigLineEdit
ConfigLineEdit	scripts/kconfig/qconf.h	/^class ConfigLineEdit : public QLineEdit {$/;"	c
ConfigList	scripts/kconfig/qconf.cc	/^ConfigList::ConfigList(ConfigView* p, ConfigMainWindow* cv, ConfigSettings* configSettings)$/;"	f	class:ConfigList
ConfigList	scripts/kconfig/qconf.h	/^class ConfigList : public QListView {$/;"	c
ConfigMainWindow	scripts/kconfig/qconf.cc	/^ConfigMainWindow::ConfigMainWindow(void)$/;"	f	class:ConfigMainWindow
ConfigMainWindow	scripts/kconfig/qconf.h	/^class ConfigMainWindow : public QMainWindow {$/;"	c
ConfigSettings	scripts/kconfig/qconf.cc	/^ConfigSettings::ConfigSettings()$/;"	f	class:ConfigSettings
ConfigSettings	scripts/kconfig/qconf.h	/^class ConfigSettings : public QSettings {$/;"	c
ConfigView	scripts/kconfig/qconf.cc	/^ConfigView::ConfigView(QWidget* parent, ConfigMainWindow* cview,$/;"	f	class:ConfigView
ConfigView	scripts/kconfig/qconf.h	/^class ConfigView : public QVBox {$/;"	c
ConsControl	src/lua_src/lparser.c	/^struct ConsControl {$/;"	s	file:
Const	src/legion_runtime/accessor.h	/^        Const(T _value) : value(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	src/legion_runtime/accessor.h	/^        Const(T _value) { assert(_value == val); }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	src/legion_runtime/accessor.h	/^        Const(void) : value(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	src/legion_runtime/accessor.h	/^        Const(void) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Const
Const	src/legion_runtime/accessor.h	/^      struct Const {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
Const	src/legion_runtime/accessor.h	/^      struct Const<T, 0> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
Context	src/legion_runtime/legion_types.h	/^    typedef SingleTask* Context;$/;"	t	namespace:LegionRuntime::HighLevel
ContextID	src/legion_runtime/legion_types.h	/^    typedef unsigned int ContextID;$/;"	t	namespace:LegionRuntime::HighLevel
ContextState	src/legion_runtime/runtime.h	/^        ContextState(void)$/;"	f	struct:LegionRuntime::HighLevel::ProcessorManager::ContextState
ContextState	src/legion_runtime/runtime.h	/^      struct ContextState {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
ContiguousPayload	src/legion_runtime/activemsg.cc	/^ContiguousPayload::ContiguousPayload(void *_srcptr, size_t _size, int _mode)$/;"	f	class:ContiguousPayload
ContiguousPayload	src/legion_runtime/activemsg.cc	/^class ContiguousPayload : public PayloadSource {$/;"	c	file:
ControlState	src/legion_runtime/runtime.h	/^      enum ControlState {$/;"	g	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
Copy	src/legion_runtime/legion.cc	/^    Copy::Copy(void)$/;"	f	class:LegionRuntime::HighLevel::Copy
Copy	src/legion_runtime/legion.h	/^    class Copy : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
CopyCompletionLogger	src/legion_runtime/lowlevel_dma.cc	/^      CopyCompletionLogger(Event _event) : event(_event) {}$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
CopyCompletionLogger	src/legion_runtime/lowlevel_dma.cc	/^    class CopyCompletionLogger : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
CopyLauncher	src/legion_runtime/legion.cc	/^    CopyLauncher::CopyLauncher(Predicate pred \/*= Predicate::TRUE_PRED*\/,$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
CopyLauncher	src/legion_runtime/legion.h	/^    struct CopyLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
CopyOp	src/legion_runtime/legion_ops.cc	/^    CopyOp::CopyOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
CopyOp	src/legion_runtime/legion_ops.cc	/^    CopyOp::CopyOp(const CopyOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
CopyOp	src/legion_runtime/legion_ops.h	/^    class CopyOp : public Copy, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
CopyOperation	src/legion_runtime/shared_lowlevel.cc	/^      CopyOperation(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
CopyOperation	src/legion_runtime/shared_lowlevel.cc	/^    class CopyOperation : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
CopyOperation2	src/legion_runtime/shared_lowlevel.cc	/^          CopyOperation2(RegionInstance::Impl *t, EventImpl *c, TriggerHandle i, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2
CopyOperation2	src/legion_runtime/shared_lowlevel.cc	/^        class CopyOperation2 {$/;"	c	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
CopyRequest	src/legion_runtime/lowlevel_dma.cc	/^    CopyRequest::CopyRequest(const Domain& _domain,$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
CopyRequest	src/legion_runtime/lowlevel_dma.cc	/^    CopyRequest::CopyRequest(const void *data, size_t datalen,$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
CopyRequest	src/legion_runtime/lowlevel_dma.cc	/^    class CopyRequest : public DmaRequest {$/;"	c	namespace:LegionRuntime::LowLevel	file:
CopySrcDstField	src/legion_runtime/lowlevel.h	/^        CopySrcDstField(RegionInstance i, unsigned o, unsigned s)$/;"	f	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
CopySrcDstField	src/legion_runtime/lowlevel.h	/^        CopySrcDstField(void) $/;"	f	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
CopySrcDstField	src/legion_runtime/lowlevel.h	/^      struct CopySrcDstField {$/;"	s	class:LegionRuntime::LowLevel::Domain
CreateInstanceArgs	src/legion_runtime/lowlevel.cc	/^    struct CreateInstanceArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
CreateInstanceMessage	src/legion_runtime/lowlevel.cc	/^				     handle_create_instance> CreateInstanceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
CreateInstancePayload	src/legion_runtime/lowlevel.cc	/^    struct CreateInstancePayload {$/;"	s	namespace:LegionRuntime::LowLevel	file:
CreateInstanceResp	src/legion_runtime/lowlevel.cc	/^    struct CreateInstanceResp : public BaseReply {$/;"	s	namespace:LegionRuntime::LowLevel	file:
Ctod	src/nautilus/doprnt.c	144;"	d	file:
DARROW_BG	scripts/kconfig/lxdialog/colors.h	141;"	d
DARROW_FG	scripts/kconfig/lxdialog/colors.h	140;"	d
DARROW_HL	scripts/kconfig/lxdialog/colors.h	142;"	d
DATA	src/dev/ata.c	77;"	d	file:
DAXPY_TASK_ID	src/test/custom_mapper.cc	/^  DAXPY_TASK_ID,$/;"	e	enum:TaskIDs	file:
DAXPY_TASK_ID	src/test/partitioning.cc	/^  DAXPY_TASK_ID,$/;"	e	enum:TaskIDs	file:
DAXPY_TASK_ID	src/test/privileges.cc	/^  DAXPY_TASK_ID,$/;"	e	enum:TaskIDs	file:
DB_EXCP	include/nautilus/idt.h	36;"	d
DEBUG	src/dev/ata.c	34;"	d	file:
DEBUG	src/dev/kbd.c	38;"	d	file:
DEBUG	src/dev/ramdisk.c	33;"	d	file:
DEBUG	src/dev/vesa.c	34;"	d	file:
DEBUG	src/dev/virtio_pci.c	11;"	d	file:
DEBUG	src/fs/ext2/ext2.c	42;"	d	file:
DEBUG	src/fs/ext2/ext2.c	46;"	d	file:
DEBUG	src/fs/ext2/ext2.c	47;"	d	file:
DEBUG	src/nautilus/blkdev.c	34;"	d	file:
DEBUG	src/nautilus/chardev.c	34;"	d	file:
DEBUG	src/nautilus/dev.c	34;"	d	file:
DEBUG	src/nautilus/fs.c	32;"	d	file:
DEBUG	src/nautilus/fs.c	36;"	d	file:
DEBUG	src/nautilus/fs.c	37;"	d	file:
DEBUG	src/nautilus/netdev.c	34;"	d	file:
DEBUG	src/nautilus/realmode.c	35;"	d	file:
DEBUG	src/nautilus/scheduler.c	60;"	d	file:
DEBUG	src/nautilus/scheduler.c	63;"	d	file:
DEBUG	src/nautilus/scheduler.c	65;"	d	file:
DEBUG	src/nautilus/timer.c	41;"	d	file:
DEBUG	src/nautilus/vc.c	49;"	d	file:
DEBUG	xeon_phi/linux_usr/phi_console.c	25;"	d	file:
DEBUGGER_MULTI_THREADED	include/acpi/platform/acenv.h	55;"	d
DEBUGGER_SINGLE_THREADED	include/acpi/platform/acenv.h	54;"	d
DEBUGGER_THREADING	include/acpi/platform/acenv.h	212;"	d
DEBUGGER_THREADING	include/acpi/platform/acenv.h	215;"	d
DEBUGGER_THREADING	include/acpi/platform/acenv.h	81;"	d
DEBUGGER_THREADING	include/acpi/platform/acenv.h	82;"	d
DEBUG_DUMP	src/nautilus/scheduler.c	61;"	d	file:
DEBUG_DUMP	src/nautilus/scheduler.c	64;"	d	file:
DEBUG_DUMP	src/nautilus/scheduler.c	66;"	d	file:
DEBUG_EXPR	scripts/kconfig/expr.c	13;"	d	file:
DEBUG_PARSE	scripts/kconfig/zconf.tab.c	171;"	d	file:
DEBUG_PRINT	include/nautilus/nautilus.h	37;"	d
DEBUG_PRINT	include/nautilus/nautilus.h	45;"	d
DEBUG_PRINT	include/nautilus/nautilus.h	46;"	d
DEBUG_PRINT	src/arch/hrt/early_mem.c	32;"	d	file:
DEBUG_PRINT	src/arch/hrt/early_mem.c	33;"	d	file:
DEBUG_PRINT	src/arch/hrt/hrt.c	35;"	d	file:
DEBUG_PRINT	src/arch/hrt/hrt.c	36;"	d	file:
DEBUG_PRINT	src/arch/k1om/early_mem.c	34;"	d	file:
DEBUG_PRINT	src/arch/k1om/early_mem.c	35;"	d	file:
DEBUG_PRINT	src/arch/x64/early_mem.c	32;"	d	file:
DEBUG_PRINT	src/arch/x64/early_mem.c	33;"	d	file:
DEBUG_PRINT	src/arch/x64/numa.c	39;"	d	file:
DEBUG_PRINT	src/arch/x64/numa.c	40;"	d	file:
DEBUG_PRINT	src/arch/x64/smp.c	34;"	d	file:
DEBUG_PRINT	src/arch/x64/smp.c	35;"	d	file:
DEBUG_PRINT	src/cxx/cxxinit.c	26;"	d	file:
DEBUG_PRINT	src/cxx/cxxinit.c	27;"	d	file:
DEBUG_PRINT	src/dev/apic.c	38;"	d	file:
DEBUG_PRINT	src/dev/apic.c	39;"	d	file:
DEBUG_PRINT	src/dev/ata.c	29;"	d	file:
DEBUG_PRINT	src/dev/ata.c	30;"	d	file:
DEBUG_PRINT	src/dev/hpet.c	34;"	d	file:
DEBUG_PRINT	src/dev/hpet.c	35;"	d	file:
DEBUG_PRINT	src/dev/i8254.c	31;"	d	file:
DEBUG_PRINT	src/dev/i8254.c	32;"	d	file:
DEBUG_PRINT	src/dev/ioapic.c	30;"	d	file:
DEBUG_PRINT	src/dev/ioapic.c	31;"	d	file:
DEBUG_PRINT	src/dev/kbd.c	33;"	d	file:
DEBUG_PRINT	src/dev/kbd.c	34;"	d	file:
DEBUG_PRINT	src/dev/pci.c	30;"	d	file:
DEBUG_PRINT	src/dev/pci.c	31;"	d	file:
DEBUG_PRINT	src/dev/ramdisk.c	28;"	d	file:
DEBUG_PRINT	src/dev/ramdisk.c	29;"	d	file:
DEBUG_PRINT	src/dev/vesa.c	29;"	d	file:
DEBUG_PRINT	src/dev/vesa.c	30;"	d	file:
DEBUG_PRINT	src/dev/virtio_pci.c	6;"	d	file:
DEBUG_PRINT	src/dev/virtio_pci.c	7;"	d	file:
DEBUG_PRINT	src/legion_runtime/shared_lowlevel.cc	127;"	d	file:
DEBUG_PRINT	src/legion_runtime/shared_lowlevel.cc	128;"	d	file:
DEBUG_PRINT	src/nautilus/barrier.c	34;"	d	file:
DEBUG_PRINT	src/nautilus/barrier.c	35;"	d	file:
DEBUG_PRINT	src/nautilus/blkdev.c	29;"	d	file:
DEBUG_PRINT	src/nautilus/blkdev.c	30;"	d	file:
DEBUG_PRINT	src/nautilus/chardev.c	29;"	d	file:
DEBUG_PRINT	src/nautilus/chardev.c	30;"	d	file:
DEBUG_PRINT	src/nautilus/condvar.c	36;"	d	file:
DEBUG_PRINT	src/nautilus/condvar.c	37;"	d	file:
DEBUG_PRINT	src/nautilus/dev.c	29;"	d	file:
DEBUG_PRINT	src/nautilus/dev.c	30;"	d	file:
DEBUG_PRINT	src/nautilus/fpu.c	33;"	d	file:
DEBUG_PRINT	src/nautilus/fpu.c	34;"	d	file:
DEBUG_PRINT	src/nautilus/idle.c	30;"	d	file:
DEBUG_PRINT	src/nautilus/idle.c	31;"	d	file:
DEBUG_PRINT	src/nautilus/mm/boot_mm.c	35;"	d	file:
DEBUG_PRINT	src/nautilus/mm/boot_mm.c	36;"	d	file:
DEBUG_PRINT	src/nautilus/mm/buddy.c	38;"	d	file:
DEBUG_PRINT	src/nautilus/mm/buddy.c	39;"	d	file:
DEBUG_PRINT	src/nautilus/mm/kmem.c	38;"	d	file:
DEBUG_PRINT	src/nautilus/mm/kmem.c	39;"	d	file:
DEBUG_PRINT	src/nautilus/netdev.c	29;"	d	file:
DEBUG_PRINT	src/nautilus/netdev.c	30;"	d	file:
DEBUG_PRINT	src/nautilus/numa.c	41;"	d	file:
DEBUG_PRINT	src/nautilus/numa.c	42;"	d	file:
DEBUG_PRINT	src/nautilus/paging.c	48;"	d	file:
DEBUG_PRINT	src/nautilus/paging.c	49;"	d	file:
DEBUG_PRINT	src/nautilus/realmode.c	30;"	d	file:
DEBUG_PRINT	src/nautilus/realmode.c	31;"	d	file:
DEBUG_PRINT	src/nautilus/rwlock.c	31;"	d	file:
DEBUG_PRINT	src/nautilus/rwlock.c	32;"	d	file:
DEBUG_PRINT	src/nautilus/smp.c	42;"	d	file:
DEBUG_PRINT	src/nautilus/smp.c	43;"	d	file:
DEBUG_PRINT	src/nautilus/thread.c	43;"	d	file:
DEBUG_PRINT	src/nautilus/thread.c	44;"	d	file:
DEBUG_PRINT	src/nautilus/timer.c	36;"	d	file:
DEBUG_PRINT	src/nautilus/timer.c	37;"	d	file:
DEBUG_PRINT	src/nautilus/vc.c	44;"	d	file:
DEBUG_PRINT	src/nautilus/vc.c	45;"	d	file:
DEBUG_PRINT	xeon_phi/linux_usr/phi_console.c	124;"	d	file:
DEBUG_PRINT	xeon_phi/linux_usr/phi_console.c	127;"	d	file:
DEBUG_SCREEN	xeon_phi/linux_usr/phi_console.c	125;"	d	file:
DEBUG_SCREEN	xeon_phi/linux_usr/phi_console.c	128;"	d	file:
DEBUG_SCREEN_LINES	xeon_phi/linux_usr/phi_console.c	33;"	d	file:
DEFAULT_CONTEXTS	src/legion_runtime/legion_types.h	74;"	d
DEFAULT_FUN_CHECK	src/nautilus/fpu.c	65;"	d	file:
DEFAULT_GC_EPOCH_SIZE	src/legion_runtime/legion_types.h	118;"	d
DEFAULT_LOGICAL_USER_TIMEOUT	src/legion_runtime/legion_types.h	111;"	d
DEFAULT_MAPPER_SLOTS	src/legion_runtime/legion_types.h	69;"	d
DEFAULT_MAX_FILTER_SIZE	src/legion_runtime/legion_types.h	104;"	d
DEFAULT_MAX_MESSAGE_SIZE	src/legion_runtime/legion_types.h	100;"	d
DEFAULT_MAX_TASK_WINDOW	src/legion_runtime/legion_types.h	84;"	d
DEFAULT_MIN_TASKS_TO_SCHEDULE	src/legion_runtime/legion_types.h	88;"	d
DEFAULT_NUM_BLOCKS	src/test/saxpy_array.cc	44;"	d	file:
DEFAULT_SUPERSCALAR_WIDTH	src/legion_runtime/legion_types.h	93;"	d
DEFAULT_TIMEOUT	xeon_phi/linux_usr/phi_console.c	43;"	d	file:
DEFERRED_FREE_COUNT	src/legion_runtime/activemsg.cc	/^static const int DEFERRED_FREE_COUNT = 128;$/;"	v	file:
DEFER_COLLECT_USER_CALL	src/legion_runtime/region_tree.h	/^      DEFER_COLLECT_USER_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
DEFINE_ACPI_GLOBALS	src/acpi/acpica/utglobal.c	45;"	d	file:
DEFINE_HASHTABLE_INSERT	include/nautilus/hashtable.h	98;"	d
DEFINE_HASHTABLE_ITERATOR_SEARCH	include/nautilus/hashtable.h	163;"	d
DEFINE_HASHTABLE_REMOVE	include/nautilus/hashtable.h	108;"	d
DEFINE_HASHTABLE_SEARCH	include/nautilus/hashtable.h	103;"	d
DELAY	src/test/benchmark.h	33;"	d
DELAY	src/test/benchmark.h	66;"	d
DELETION_OPERATION	src/legion_runtime/legion_logging.h	/^        DELETION_OPERATION = 3,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
DELETION_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      DELETION_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
DELIVS_SHIFT	include/dev/ioapic.h	73;"	d
DELMODE_EXTINT	include/dev/ioapic.h	88;"	d
DELMODE_FIXED	include/dev/ioapic.h	81;"	d
DELMODE_INIT	include/dev/ioapic.h	86;"	d
DELMODE_LOWEST	include/dev/ioapic.h	82;"	d
DELMODE_NMI	include/dev/ioapic.h	85;"	d
DELMODE_RSVD	include/dev/ioapic.h	84;"	d
DELMODE_RSVD1	include/dev/ioapic.h	87;"	d
DELMODE_SMI	include/dev/ioapic.h	83;"	d
DELTAT	src/test/circuit.h	34;"	d
DEL_BY_INODE	src/fs/ext2/ext2_access.c	/^enum dentry_op {GET,PUT,DEL_BY_NAME,DEL_BY_INODE};$/;"	e	enum:dentry_op	file:
DEL_BY_NAME	src/fs/ext2/ext2_access.c	/^enum dentry_op {GET,PUT,DEL_BY_NAME,DEL_BY_INODE};$/;"	e	enum:dentry_op	file:
DEL_MODE_SHIFT	include/dev/ioapic.h	71;"	d
DENIED	src/nautilus/scheduler.c	/^	       DENIED,             \/\/ not admitted$/;"	e	enum:__anon132	file:
DENTRY_ALIGN	src/fs/ext2/ext2.c	37;"	d	file:
DEPMOD	Makefile	/^DEPMOD		= \/sbin\/depmod$/;"	m
DESC_LONG	src/asm/realmode.S	/^DESC_LONG = LOAD_ADDR + (_desc_long - .)$/;"	d
DESC_LONG_GDT_OFFSET	src/asm/realmode.S	/^DESC_LONG_GDT_OFFSET = (_desc_long - _gdt)$/;"	d
DESC_REAL	src/asm/realmode.S	/^DESC_REAL = LOAD_ADDR + (_desc_real - .)$/;"	d
DESC_REAL_GDT_OFFSET	src/asm/realmode.S	/^DESC_REAL_GDT_OFFSET = (_desc_real - _gdt)$/;"	d
DESTROY_INST_MSGID	src/legion_runtime/lowlevel.cc	/^      DESTROY_INST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
DESTROY_LOCK_MSGID	src/legion_runtime/lowlevel.cc	/^      DESTROY_LOCK_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
DEST_MODE_SHIFT	include/dev/ioapic.h	72;"	d
DEV_NAME_LEN	include/nautilus/dev.h	29;"	d
DE_EXCP	include/nautilus/idt.h	35;"	d
DF	src/dev/ata.c	/^typedef enum {OK=0, ERR, DF} ata_error_t;$/;"	e	enum:__anon137	file:
DFL	scripts/basic/docproc.c	/^typedef void DFL(char *);$/;"	t	file:
DF_EXCP	include/nautilus/idt.h	43;"	d
DIALOG_BG	scripts/kconfig/lxdialog/colors.h	37;"	d
DIALOG_FG	scripts/kconfig/lxdialog/colors.h	36;"	d
DIALOG_HL	scripts/kconfig/lxdialog/colors.h	38;"	d
DIGITBIT	include/lua/lctype.h	40;"	d
DIM	src/legion_runtime/arrays.h	/^      enum { DIM = 1 };$/;"	e	enum:LegionRuntime::Arrays::Point::__anon81
DISTRIBUTED_ADD_REMOTE	src/legion_runtime/runtime.h	/^        DISTRIBUTED_ADD_REMOTE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
DISTRIBUTED_REMOVE_REMOTE	src/legion_runtime/runtime.h	/^        DISTRIBUTED_REMOVE_REMOTE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
DISTRIBUTED_REMOVE_RESOURCE	src/legion_runtime/runtime.h	/^        DISTRIBUTED_REMOVE_RESOURCE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
DISTRIBUTE_CHARGE_TASK_ID	src/test/circuit.h	/^  DISTRIBUTE_CHARGE_TASK_ID,$/;"	e	enum:__anon120
DIVIDES	src/fs/ext2/ext2_access.c	40;"	d	file:
DIV_ROUND_UP	include/lib/bitops.h	31;"	d
DLMSG	src/lua_src/loadlib.c	226;"	d	file:
DMAActiveMessageIDs	src/legion_runtime/lowlevel_dma.h	/^    enum DMAActiveMessageIDs {$/;"	g	namespace:LegionRuntime::LowLevel
DMAQueue	src/legion_runtime/shared_lowlevel.cc	/^    DMAQueue::DMAQueue(unsigned num_threads)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
DMAQueue	src/legion_runtime/shared_lowlevel.cc	/^    class DMAQueue {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DOCBOOK	scripts/basic/docproc.c	63;"	d	file:
DPRINT1	src/legion_runtime/shared_lowlevel.cc	132;"	d	file:
DPRINT1	src/legion_runtime/shared_lowlevel.cc	168;"	d	file:
DPRINT2	src/legion_runtime/shared_lowlevel.cc	140;"	d	file:
DPRINT2	src/legion_runtime/shared_lowlevel.cc	169;"	d	file:
DPRINT3	src/legion_runtime/shared_lowlevel.cc	148;"	d	file:
DPRINT3	src/legion_runtime/shared_lowlevel.cc	170;"	d	file:
DPRINT4	src/legion_runtime/shared_lowlevel.cc	156;"	d	file:
DPRINT4	src/legion_runtime/shared_lowlevel.cc	171;"	d	file:
DRIVEHEAD	src/dev/ata.c	83;"	d	file:
DRIVER_NAME	src/test/hpcg/hpcg-main.cc	/^const char DRIVER_NAME[] = "lgn-hpcg";$/;"	m	namespace:__anon117	file:
DRIVER_SUBVER	src/test/hpcg/hpcg-main.cc	/^const int DRIVER_SUBVER  = 0;$/;"	m	namespace:__anon117	file:
DRIVER_VER	src/test/hpcg/hpcg-main.cc	/^const int DRIVER_VER     = 1;$/;"	m	namespace:__anon117	file:
DST_ALL	include/test/ipi.h	/^		DST_ALL$/;"	e	enum:__anon30
DST_ONE	include/test/ipi.h	/^		DST_ONE,$/;"	e	enum:__anon30
DT_COMPILER	include/acpi/acoutput.h	74;"	d
DUMP_APERIODIC	src/nautilus/scheduler.c	302;"	d	file:
DUMP_APERIODIC	src/nautilus/scheduler.c	312;"	d	file:
DUMP_ENTRY_CONTEXT	src/nautilus/scheduler.c	1448;"	d	file:
DUMP_RT	src/nautilus/scheduler.c	327;"	d	file:
DUMP_RT_PENDING	src/nautilus/scheduler.c	320;"	d	file:
DebugMapper	src/legion_runtime/alt_mappers.cc	/^    DebugMapper::DebugMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
DebugMapper	src/legion_runtime/alt_mappers.h	/^    class DebugMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
DefaultMapper	src/legion_runtime/default_mapper.cc	/^    DefaultMapper::DefaultMapper(Machine *m, HighLevelRuntime *rt, $/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
DefaultMapper	src/legion_runtime/default_mapper.cc	/^    DefaultMapper::DefaultMapper(const DefaultMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
DefaultMapper	src/legion_runtime/default_mapper.h	/^    class DefaultMapper : public Mapper {$/;"	c	namespace:LegionRuntime::HighLevel
DeferredBarrierArrival	src/legion_runtime/lowlevel.cc	/^      DeferredBarrierArrival(Barrier _barrier, int _delta)$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
DeferredBarrierArrival	src/legion_runtime/lowlevel.cc	/^    class DeferredBarrierArrival : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredCompleteArgs	src/legion_runtime/legion_ops.h	/^      struct DeferredCompleteArgs {$/;"	s	class:LegionRuntime::HighLevel::Operation
DeferredEventTrigger	src/legion_runtime/lowlevel.cc	/^      DeferredEventTrigger(Event _after_event)$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
DeferredEventTrigger	src/legion_runtime/lowlevel.cc	/^    class DeferredEventTrigger : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredFutureMapSetArgs	src/legion_runtime/runtime.h	/^      struct DeferredFutureMapSetArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
DeferredFutureSetArgs	src/legion_runtime/runtime.h	/^      struct DeferredFutureSetArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
DeferredInstDestroy	src/legion_runtime/lowlevel.cc	/^      DeferredInstDestroy(RegionInstance::Impl *i) : impl(i) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
DeferredInstDestroy	src/legion_runtime/lowlevel.cc	/^    class DeferredInstDestroy : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredInstDestroy	src/legion_runtime/shared_lowlevel.cc	/^      DeferredInstDestroy(RegionInstance::Impl *i) : impl(i) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
DeferredInstDestroy	src/legion_runtime/shared_lowlevel.cc	/^    class DeferredInstDestroy : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredLockDestruction	src/legion_runtime/lowlevel.cc	/^      DeferredLockDestruction(Reservation _lock) : lock(_lock) {}$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
DeferredLockDestruction	src/legion_runtime/lowlevel.cc	/^    class DeferredLockDestruction : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredLockRequest	src/legion_runtime/lowlevel.cc	/^      DeferredLockRequest(Reservation _lock, unsigned _mode, bool _exclusive,$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
DeferredLockRequest	src/legion_runtime/lowlevel.cc	/^    class DeferredLockRequest : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredMappingArgs	src/legion_runtime/legion_ops.h	/^      struct DeferredMappingArgs {$/;"	s	class:LegionRuntime::HighLevel::Operation
DeferredRecycleArgs	src/legion_runtime/runtime.h	/^      struct DeferredRecycleArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
DeferredSliceArgs	src/legion_runtime/legion_tasks.h	/^      struct DeferredSliceArgs {$/;"	s	class:LegionRuntime::HighLevel::DeferredSlicer
DeferredSlicer	src/legion_runtime/legion_tasks.cc	/^    DeferredSlicer::DeferredSlicer(MultiTask *own)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
DeferredSlicer	src/legion_runtime/legion_tasks.cc	/^    DeferredSlicer::DeferredSlicer(const DeferredSlicer &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
DeferredSlicer	src/legion_runtime/legion_tasks.h	/^    class DeferredSlicer {$/;"	c	namespace:LegionRuntime::HighLevel
DeferredTaskSpawn	src/legion_runtime/lowlevel.cc	/^      DeferredTaskSpawn(Processor::Impl *_proc, Task *_task) $/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
DeferredTaskSpawn	src/legion_runtime/lowlevel.cc	/^    class DeferredTaskSpawn : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeferredTriggerArgs	src/legion_runtime/runtime.h	/^      struct DeferredTriggerArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
DeferredUnlockRequest	src/legion_runtime/lowlevel.cc	/^      DeferredUnlockRequest(Reservation _lock)$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
DeferredUnlockRequest	src/legion_runtime/lowlevel.cc	/^    class DeferredUnlockRequest : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DelayedMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      DelayedMemPairCopier(void) {}$/;"	f	class:LegionRuntime::LowLevel::DelayedMemPairCopier
DelayedMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class DelayedMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DeletionKind	src/legion_runtime/legion_ops.h	/^      enum DeletionKind {$/;"	g	class:LegionRuntime::HighLevel::DeletionOp
DeletionOp	src/legion_runtime/legion_ops.cc	/^    DeletionOp::DeletionOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
DeletionOp	src/legion_runtime/legion_ops.cc	/^    DeletionOp::DeletionOp(const DeletionOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
DeletionOp	src/legion_runtime/legion_ops.h	/^    class DeletionOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
DenseSubrectIterator	src/legion_runtime/arrays.h	/^      typedef GenericDenseSubrectIterator<Blockify<DIM> > DenseSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
DenseSubrectIterator	src/legion_runtime/arrays.h	/^      typedef GenericDenseSubrectIterator<Linearization<DIM> > DenseSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
DenseSubrectIterator	src/legion_runtime/arrays.h	/^      typedef GenericDenseSubrectIterator<Mapping<IDIM, ODIM> > DenseSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
DependenceRecord	src/legion_runtime/legion_ops.h	/^        DependenceRecord(unsigned op1, unsigned op2,$/;"	f	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
DependenceRecord	src/legion_runtime/legion_ops.h	/^      struct DependenceRecord {$/;"	s	class:LegionRuntime::HighLevel::MustEpochOp
DependenceRecord	src/legion_runtime/legion_trace.h	/^        DependenceRecord(int idx)$/;"	f	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
DependenceRecord	src/legion_runtime/legion_trace.h	/^        DependenceRecord(int op_idx, int pidx, int nidx,$/;"	f	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
DependenceRecord	src/legion_runtime/legion_trace.h	/^      struct DependenceRecord {$/;"	s	class:LegionRuntime::HighLevel::LegionTrace
DependenceType	src/legion_runtime/legion_types.h	/^    enum DependenceType {$/;"	g	namespace:LegionRuntime::HighLevel
DerezCheck	src/legion_runtime/legion_utilities.h	/^      DerezCheck(DerezCheck &rhs) : derez(rhs.derez) { assert(false); }$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
DerezCheck	src/legion_runtime/legion_utilities.h	/^      DerezCheck(Deserializer &r) : derez(r) { derez.begin_context(); }$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
DerezCheck	src/legion_runtime/legion_utilities.h	/^    class DerezCheck {$/;"	c	namespace:LegionRuntime::HighLevel
Derived	src/legion_runtime/legion.h	/^        struct Derived : T, Fallback { };$/;"	s	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
Deserializer	src/legion_runtime/legion_utilities.h	/^      Deserializer(const Deserializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
Deserializer	src/legion_runtime/legion_utilities.h	/^      Deserializer(const void *buf, size_t buffer_size)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
Deserializer	src/legion_runtime/legion_utilities.h	/^    class Deserializer {$/;"	c	namespace:LegionRuntime::HighLevel
DestroyInstanceArgs	src/legion_runtime/lowlevel.cc	/^    struct DestroyInstanceArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
DestroyInstanceMessage	src/legion_runtime/lowlevel.cc	/^				      handle_destroy_instance> DestroyInstanceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
DestroyLockMessage	src/legion_runtime/lowlevel.cc	/^				      handle_destroy_lock> DestroyLockMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
DetailedTimer	src/legion_runtime/utilities.h	/^    class DetailedTimer {$/;"	c	namespace:LegionRuntime::LowLevel
DetailedTimer	src/legion_runtime/utilities.h	/^  typedef LowLevel::DetailedTimer DetailedTimer;$/;"	t	namespace:LegionRuntime
Direction	src/legion_runtime/rectangle_set.h	/^      enum Direction {$/;"	g	class:LegionRuntime::HighLevel::Segment
DistributeChargeTask	src/test/circuit.h	/^class DistributeChargeTask : public IndexLauncher {$/;"	c
DistributeChargeTask	src/test/circuit_cpu.cc	/^DistributeChargeTask::DistributeChargeTask(LogicalPartition lp_pvt_wires,$/;"	f	class:DistributeChargeTask
DistributedCollectable	src/legion_runtime/garbage_collection.cc	/^    DistributedCollectable::DistributedCollectable(Runtime *rt,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
DistributedCollectable	src/legion_runtime/garbage_collection.h	/^    class DistributedCollectable : public CollectableState {$/;"	c	namespace:LegionRuntime::HighLevel
DistributedID	src/legion_runtime/legion_types.h	/^    typedef unsigned int DistributedID;$/;"	t	namespace:LegionRuntime::HighLevel
DmaRequest	src/legion_runtime/lowlevel_dma.cc	/^      DmaRequest(int _priority, Event _after_copy) $/;"	f	class:LegionRuntime::LowLevel::DmaRequest
DmaRequest	src/legion_runtime/lowlevel_dma.cc	/^    class DmaRequest {$/;"	c	namespace:LegionRuntime::LowLevel	file:
DmaRequestQueue	src/legion_runtime/lowlevel_dma.cc	/^    DmaRequestQueue::DmaRequestQueue(void)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
DmaRequestQueue	src/legion_runtime/lowlevel_dma.cc	/^    class DmaRequestQueue {$/;"	c	namespace:LegionRuntime::LowLevel	file:
Domain	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Domain Domain;$/;"	t	namespace:LegionRuntime::HighLevel
Domain	src/legion_runtime/lowlevel.h	/^      Domain(LegionRuntime::LowLevel::IndexSpace is) : is_id(is.id), dim(0) {}$/;"	f	class:LegionRuntime::LowLevel::Domain
Domain	src/legion_runtime/lowlevel.h	/^      Domain(const Domain& other) : is_id(other.is_id), dim(other.dim)$/;"	f	class:LegionRuntime::LowLevel::Domain
Domain	src/legion_runtime/lowlevel.h	/^      Domain(void) : is_id(0), dim(0) {}$/;"	f	class:LegionRuntime::LowLevel::Domain
Domain	src/legion_runtime/lowlevel.h	/^    class Domain {$/;"	c	namespace:LegionRuntime::LowLevel
DomainColoring	src/legion_runtime/legion_types.h	/^    typedef std::map<Color,Domain> DomainColoring;$/;"	t	namespace:LegionRuntime::HighLevel
DomainColoringSerializer	src/legion_runtime/legion.cc	/^    DomainColoringSerializer::DomainColoringSerializer(const DomainColoring &d)$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
DomainColoringSerializer	src/legion_runtime/legion.h	/^      DomainColoringSerializer(void) { }$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
DomainColoringSerializer	src/legion_runtime/legion.h	/^    class DomainColoringSerializer {$/;"	c	namespace:LegionRuntime::HighLevel
DomainLinearization	src/legion_runtime/lowlevel.h	/^      DomainLinearization(const DomainLinearization& other) $/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
DomainLinearization	src/legion_runtime/lowlevel.h	/^      DomainLinearization(void) : dim(-1), lptr(0) {}$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
DomainLinearization	src/legion_runtime/lowlevel.h	/^    class DomainLinearization {$/;"	c	namespace:LegionRuntime::LowLevel
DomainPoint	src/legion_runtime/legion_types.h	/^    typedef LowLevel::DomainPoint DomainPoint;$/;"	t	namespace:LegionRuntime::HighLevel
DomainPoint	src/legion_runtime/lowlevel.h	/^      DomainPoint(const DomainPoint &rhs) : dim(rhs.dim)$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
DomainPoint	src/legion_runtime/lowlevel.h	/^      DomainPoint(int index) : dim(0) { point_data[0] = index; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
DomainPoint	src/legion_runtime/lowlevel.h	/^      DomainPoint(void) : dim(0) { point_data[0] = 0; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
DomainPoint	src/legion_runtime/lowlevel.h	/^    class DomainPoint {$/;"	c	namespace:LegionRuntime::LowLevel
DomainPointIterator	src/legion_runtime/lowlevel.h	/^        DomainPointIterator(const Domain& d) $/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
DomainPointIterator	src/legion_runtime/lowlevel.h	/^      class DomainPointIterator {$/;"	c	class:LegionRuntime::LowLevel::Domain
DomainSplit	src/legion_runtime/legion.h	/^        DomainSplit(Domain d, Processor p, $/;"	f	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
DomainSplit	src/legion_runtime/legion.h	/^      struct DomainSplit {$/;"	s	class:LegionRuntime::HighLevel::Mapper
DotProdAccumulate	src/test/hpcg/dotprod-accumulate.h	/^class DotProdAccumulate {$/;"	c	namespace:lgncg
DriverParams	src/test/hpcg/hpcg-main.cc	/^    DriverParams(void) {$/;"	f	struct:__anon117::DriverParams
DriverParams	src/test/hpcg/hpcg-main.cc	/^struct DriverParams {$/;"	s	namespace:__anon117	file:
DumpBlock	src/lua_src/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	src/lua_src/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	src/lua_src/ldump.c	76;"	d	file:
DumpConstants	src/lua_src/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	src/lua_src/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	src/lua_src/ldump.c	/^static void DumpFunction(const Proto* f, DumpState* D)$/;"	f	file:
DumpHeader	src/lua_src/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	src/lua_src/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	src/lua_src/ldump.c	26;"	d	file:
DumpNumber	src/lua_src/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpState	src/lua_src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon140	file:
DumpString	src/lua_src/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpUpvalues	src/lua_src/ldump.c	/^static void DumpUpvalues(const Proto* f, DumpState* D)$/;"	f	file:
DumpVar	src/lua_src/ldump.c	27;"	d	file:
DumpVector	src/lua_src/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
DynamicMapping	src/legion_runtime/arrays.h	/^      DynamicMapping(const T& _t) : t(_t) {}$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
DynamicMapping	src/legion_runtime/arrays.h	/^      DynamicMapping(void) {}$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
DynamicMapping	src/legion_runtime/arrays.h	/^    class DynamicMapping : public Mapping<T::IDIM, T::ODIM> {$/;"	c	namespace:LegionRuntime::Arrays
DynamicPartTest	src/legion_runtime/region_tree.cc	/^    RegionTreeForest::DynamicPartTest::DynamicPartTest(IndexSpaceNode *par,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
DynamicPartTest	src/legion_runtime/region_tree.h	/^      class DynamicPartTest {$/;"	c	class:LegionRuntime::HighLevel::RegionTreeForest
DynamicSpaceTest	src/legion_runtime/region_tree.cc	/^    RegionTreeForest::DynamicSpaceTest::DynamicSpaceTest(IndexPartNode *par,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
DynamicSpaceTest	src/legion_runtime/region_tree.h	/^      class DynamicSpaceTest {$/;"	c	class:LegionRuntime::HighLevel::RegionTreeForest
DynamicTable	src/legion_runtime/lowlevel_impl.h	/^    DynamicTable<ALLOCATOR>::DynamicTable(void)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
DynamicTable	src/legion_runtime/lowlevel_impl.h	/^    class DynamicTable {$/;"	c	namespace:LegionRuntime::LowLevel
DynamicTableAllocator	src/legion_runtime/lowlevel_impl.h	/^    class DynamicTableAllocator {$/;"	c	namespace:LegionRuntime::LowLevel
DynamicTableFreeList	src/legion_runtime/lowlevel_impl.h	/^    DynamicTableFreeList<ALLOCATOR>::DynamicTableFreeList(DynamicTable<ALLOCATOR>& _table, int _owner)$/;"	f	class:LegionRuntime::LowLevel::DynamicTableFreeList
DynamicTableFreeList	src/legion_runtime/lowlevel_impl.h	/^    class DynamicTableFreeList {$/;"	c	namespace:LegionRuntime::LowLevel
DynamicTableNode	src/legion_runtime/lowlevel_impl.h	/^      DynamicTableNode(int _level, IT _first_index, IT _last_index)$/;"	f	struct:LegionRuntime::LowLevel::DynamicTableNode
DynamicTableNode	src/legion_runtime/lowlevel_impl.h	/^      struct DynamicTableNode : public DynamicTableNodeBase<LT, IT> {$/;"	s	namespace:LegionRuntime::LowLevel
DynamicTableNodeBase	src/legion_runtime/lowlevel_impl.h	/^      DynamicTableNodeBase(int _level, IT _first_index, IT _last_index)$/;"	f	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
DynamicTableNodeBase	src/legion_runtime/lowlevel_impl.h	/^    struct DynamicTableNodeBase {$/;"	s	namespace:LegionRuntime::LowLevel
Dyndata	include/lua/lparser.h	/^typedef struct Dyndata {$/;"	s
Dyndata	include/lua/lparser.h	/^} Dyndata;$/;"	t	typeref:struct:Dyndata
E2BIG	include/nautilus/errno.h	32;"	d
EACCES	include/nautilus/errno.h	38;"	d
EAGAIN	include/nautilus/errno.h	36;"	d
EBADF	include/nautilus/errno.h	34;"	d
EBUSY	include/nautilus/errno.h	41;"	d
ECHILD	include/nautilus/errno.h	35;"	d
ECHO	scripts/kconfig/lex.zconf.c	865;"	d	file:
EDOM	include/nautilus/errno.h	58;"	d
EEXIST	include/nautilus/errno.h	42;"	d
EFAULT	include/nautilus/errno.h	39;"	d
EFBIG	include/nautilus/errno.h	52;"	d
EFER_FFXSR	include/nautilus/msr.h	49;"	d
EFER_LMA	include/nautilus/msr.h	45;"	d
EFER_LME	include/nautilus/msr.h	44;"	d
EFER_LMSLE	include/nautilus/msr.h	48;"	d
EFER_NXE	include/nautilus/msr.h	46;"	d
EFER_SCE	include/nautilus/msr.h	43;"	d
EFER_SVME	include/nautilus/msr.h	47;"	d
EFER_TCE	include/nautilus/msr.h	50;"	d
EFI_MEMORY_RP	include/nautilus/sfi.h	51;"	d
EFI_MEMORY_RUNTIME	include/nautilus/sfi.h	53;"	d
EFI_MEMORY_UC	include/nautilus/sfi.h	45;"	d
EFI_MEMORY_UCE	include/nautilus/sfi.h	49;"	d
EFI_MEMORY_WB	include/nautilus/sfi.h	48;"	d
EFI_MEMORY_WC	include/nautilus/sfi.h	46;"	d
EFI_MEMORY_WP	include/nautilus/sfi.h	50;"	d
EFI_MEMORY_WT	include/nautilus/sfi.h	47;"	d
EFI_MEMORY_XP	include/nautilus/sfi.h	52;"	d
EINTR	include/nautilus/errno.h	29;"	d
EINVAL	include/nautilus/errno.h	47;"	d
EIO	include/nautilus/errno.h	30;"	d
EISDIR	include/nautilus/errno.h	46;"	d
EMFILE	include/nautilus/errno.h	49;"	d
EMIT	src/nautilus/fmtout.c	82;"	d	file:
EMLINK	include/nautilus/errno.h	56;"	d
END	include/asm/lowlevel.h	46;"	d
ENDFILE	src/fs/ext2/ext2.c	39;"	d	file:
END_DEPENDENCE_ANALYSIS	src/legion_runtime/legion_logging.h	/^    END_DEPENDENCE_ANALYSIS = 1,$/;"	e	enum:LegionRuntime::TimingKind
END_EXECUTION	src/legion_runtime/legion_logging.h	/^    END_EXECUTION = 9,$/;"	e	enum:LegionRuntime::TimingKind
END_GC	src/legion_runtime/legion_logging.h	/^    END_GC = 23,$/;"	e	enum:LegionRuntime::TimingKind
END_MAPPING	src/legion_runtime/legion_logging.h	/^    END_MAPPING = 5,$/;"	e	enum:LegionRuntime::TimingKind
END_POST_EXEC	src/legion_runtime/legion_logging.h	/^    END_POST_EXEC = 25,$/;"	e	enum:LegionRuntime::TimingKind
END_PRE_MAPPING	src/legion_runtime/legion_logging.h	/^    END_PRE_MAPPING = 3,$/;"	e	enum:LegionRuntime::TimingKind
END_SCHEDULING	src/legion_runtime/legion_logging.h	/^    END_SCHEDULING = 17,$/;"	e	enum:LegionRuntime::TimingKind
END_SLICING	src/legion_runtime/legion_logging.h	/^    END_SLICING = 7,$/;"	e	enum:LegionRuntime::TimingKind
END_WINDOW_WAIT	src/legion_runtime/legion_logging.h	/^    END_WINDOW_WAIT = 15,$/;"	e	enum:LegionRuntime::TimingKind
ENFILE	include/nautilus/errno.h	48;"	d
ENODEV	include/nautilus/errno.h	44;"	d
ENOENT	include/nautilus/errno.h	27;"	d
ENOEXEC	include/nautilus/errno.h	33;"	d
ENOMEM	include/nautilus/errno.h	37;"	d
ENOSPC	include/nautilus/errno.h	53;"	d
ENOTBLK	include/nautilus/errno.h	40;"	d
ENOTDIR	include/nautilus/errno.h	45;"	d
ENOTTY	include/nautilus/errno.h	50;"	d
ENTRY	include/asm/lowlevel.h	37;"	d
ENUM	src/dev/vesa.c	/^typedef enum {ENUM, FIND} scan_action;$/;"	e	enum:__anon139	file:
ENXIO	include/nautilus/errno.h	31;"	d
EOB_ACT_CONTINUE_SCAN	scripts/kconfig/lex.zconf.c	146;"	d	file:
EOB_ACT_END_OF_FILE	scripts/kconfig/lex.zconf.c	147;"	d	file:
EOB_ACT_LAST_MATCH	scripts/kconfig/lex.zconf.c	148;"	d	file:
EOF	include/nautilus/libccompat.h	56;"	d
EOFMARK	src/lua_src/lua.c	248;"	d	file:
EOZ	include/lua/lzio.h	16;"	d
EPERM	include/nautilus/errno.h	26;"	d
EPIPE	include/nautilus/errno.h	57;"	d
ERANGE	include/nautilus/errno.h	59;"	d
EROFS	include/nautilus/errno.h	55;"	d
ERR	src/dev/ata.c	/^typedef enum {OK=0, ERR, DF} ata_error_t;$/;"	e	enum:__anon137	file:
ERRFUNC	src/lua_src/loadlib.c	103;"	d	file:
ERRLIB	src/lua_src/loadlib.c	102;"	d	file:
ERROR	src/dev/ata.c	33;"	d	file:
ERROR	src/dev/kbd.c	37;"	d	file:
ERROR	src/dev/ramdisk.c	32;"	d	file:
ERROR	src/dev/vesa.c	33;"	d	file:
ERROR	src/dev/virtio_pci.c	12;"	d	file:
ERROR	src/fs/ext2/ext2.c	43;"	d	file:
ERROR	src/nautilus/blkdev.c	33;"	d	file:
ERROR	src/nautilus/chardev.c	33;"	d	file:
ERROR	src/nautilus/dev.c	33;"	d	file:
ERROR	src/nautilus/fs.c	33;"	d	file:
ERROR	src/nautilus/netdev.c	33;"	d	file:
ERROR	src/nautilus/realmode.c	34;"	d	file:
ERROR	src/nautilus/scheduler.c	58;"	d	file:
ERROR	src/nautilus/timer.c	40;"	d	file:
ERROR	src/nautilus/vc.c	48;"	d	file:
ERRORSTACKSIZE	src/lua_src/ldo.c	163;"	d	file:
ERROR_ACCESSING_EMPTY_FUTURE	src/legion_runtime/legion_types.h	/^      ERROR_ACCESSING_EMPTY_FUTURE = 87,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ACQUIRE_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_ACQUIRE_MISMATCH = 95,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ALIASED_INTRA_TASK_REGIONS	src/legion_runtime/legion_types.h	/^      ERROR_ALIASED_INTRA_TASK_REGIONS = 53,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ALIASED_REGION_REQUIREMENTS	src/legion_runtime/legion_types.h	/^      ERROR_ALIASED_REGION_REQUIREMENTS = 115,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_FIELD	src/legion_runtime/legion_types.h	/^      ERROR_BAD_FIELD = 26,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_FIELD_PRIVILEGES	src/legion_runtime/legion_types.h	/^      ERROR_BAD_FIELD_PRIVILEGES = 18,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_INDEX_PATH	src/legion_runtime/legion_types.h	/^      ERROR_BAD_INDEX_PATH = 22,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_INDEX_PRIVILEGES	src/legion_runtime/legion_types.h	/^      ERROR_BAD_INDEX_PRIVILEGES = 17,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARENT_INDEX	src/legion_runtime/legion_types.h	/^      ERROR_BAD_PARENT_INDEX = 21,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARENT_REGION	src/legion_runtime/legion_types.h	/^      ERROR_BAD_PARENT_REGION = 23,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARTITION_PATH	src/legion_runtime/legion_types.h	/^      ERROR_BAD_PARTITION_PATH = 25,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PARTITION_PRIVILEGES	src/legion_runtime/legion_types.h	/^      ERROR_BAD_PARTITION_PRIVILEGES = 20,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_PROJECTION_USE	src/legion_runtime/legion_types.h	/^      ERROR_BAD_PROJECTION_USE = 59,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_REGION_PATH	src/legion_runtime/legion_types.h	/^      ERROR_BAD_REGION_PATH = 24,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_REGION_PRIVILEGES	src/legion_runtime/legion_types.h	/^      ERROR_BAD_REGION_PRIVILEGES = 19,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_BAD_REGION_TYPE	src/legion_runtime/legion_types.h	/^      ERROR_BAD_REGION_TYPE = 27,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_CONFLICTING_PARENT_MAPPING_DEADLOCK	src/legion_runtime/legion_types.h	/^      ERROR_CONFLICTING_PARENT_MAPPING_DEADLOCK = 101,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_CONFLICTING_SIBLING_MAPPING_DEADLOCK	src/legion_runtime/legion_types.h	/^      ERROR_CONFLICTING_SIBLING_MAPPING_DEADLOCK = 102,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_COPY_REQUIREMENTS_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_COPY_REQUIREMENTS_MISMATCH = 89,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_COPY_SPACE_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_COPY_SPACE_MISMATCH = 91,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DISJOINTNESS_TEST_FAILURE	src/legion_runtime/legion_types.h	/^      ERROR_DISJOINTNESS_TEST_FAILURE = 71,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DOMAIN_DIM_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_DOMAIN_DIM_MISMATCH = 108,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_FIELD_ID	src/legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_FIELD_ID = 5,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_INSTANCE_FIELD	src/legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_INSTANCE_FIELD = 45,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_PROJECTION_ID	src/legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_PROJECTION_ID = 9,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_REDOP_ID	src/legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_REDOP_ID = 2,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_DUPLICATE_TYPE_HANDLE	src/legion_runtime/legion_types.h	/^      ERROR_DUPLICATE_TYPE_HANDLE = 4,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_EXCEEDED_MAX_CONTEXTS	src/legion_runtime/legion_types.h	/^      ERROR_EXCEEDED_MAX_CONTEXTS = 94,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_EXIT	scripts/basic/split-include.c	33;"	d	file:
ERROR_FIELD_SPACE_FIELD_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_FIELD_SPACE_FIELD_MISMATCH = 43,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_IDEMPOTENT_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_IDEMPOTENT_MISMATCH = 75,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ILLEGAL_MUST_PARALLEL_INLINE	src/legion_runtime/legion_types.h	/^      ERROR_ILLEGAL_MUST_PARALLEL_INLINE = 85,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ILLEGAL_NESTED_TRACE	src/legion_runtime/legion_types.h	/^      ERROR_ILLEGAL_NESTED_TRACE = 99,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_ILLEGAL_PREDICATE_FUTURE	src/legion_runtime/legion_types.h	/^      ERROR_ILLEGAL_PREDICATE_FUTURE = 88,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INDEPENDENT_SLICES_VIOLATION	src/legion_runtime/legion_types.h	/^      ERROR_INDEPENDENT_SLICES_VIOLATION = 60,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INNER_LEAF_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_INNER_LEAF_MISMATCH = 97,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_ACCESSOR_REQUESTED	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_ACCESSOR_REQUESTED = 12,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_ARG_MAP_DESTRUCTION	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_ARG_MAP_DESTRUCTION = 15,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_COPY_FIELDS_SIZE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_COPY_FIELDS_SIZE = 90,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_COPY_PRIVILEGE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_COPY_PRIVILEGE = 92,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_DUPLICATE_MAPPING	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_DUPLICATE_MAPPING = 33,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_ACCESSOR_PRIVILEGES	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_ACCESSOR_PRIVILEGES = 73,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_ID	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_ID = 104,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_PRIVILEGES	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_PRIVILEGES = 98,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_SPACE_ENTRY	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_SPACE_ENTRY = 50,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_FIELD_SPACE_REQUEST	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_FIELD_SPACE_REQUEST = 112,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_IDENTITY_PROJECTION_USE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_IDENTITY_PROJECTION_USE = 56,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_DOMAIN	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_DOMAIN = 69,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_COLOR	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_COLOR = 40,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_DOMAIN	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_DOMAIN = 70,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_ENTRY	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_ENTRY = 49,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_HANDLE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_HANDLE = 42,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_PART_PARENT	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_PART_PARENT = 38,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_COLOR	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_COLOR = 39,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_ENTRY	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_ENTRY = 48,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_HANDLE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_HANDLE = 41,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SPACE_PARENT	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SPACE_PARENT = 37,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SUBPARTITION_REQUEST	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SUBPARTITION_REQUEST = 111,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INDEX_SUBSPACE_REQUEST	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INDEX_SUBSPACE_REQUEST = 110,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INLINE_ID	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INLINE_ID = 84,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_INSTANCE_FIELD	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_INSTANCE_FIELD = 44,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_LOGICAL_SUBPARTITION_REQUEST	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_LOGICAL_SUBPARTITION_REQUEST = 114,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_LOGICAL_SUBREGION_REQUEST	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_LOGICAL_SUBREGION_REQUEST = 113,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPER_DOMAIN_SLICE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPER_DOMAIN_SLICE = 82,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPER_ID	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPER_ID = 76,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPER_OUTPUT	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPER_OUTPUT = 67,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_MAPPING_ACCESS	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_MAPPING_ACCESS = 35,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARENT_REQUEST	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PARENT_REQUEST = 103,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARTITION_COLOR	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PARTITION_COLOR = 93,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARTITION_ENTRY	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PARTITION_ENTRY = 52,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PARTITION_HANDLE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PARTITION_HANDLE = 62,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PREMAPPED_REGION_LOCATION	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PREMAPPED_REGION_LOCATION = 74,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PROCESSOR_NAME	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PROCESSOR_NAME = 109,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PROCESSOR_SELECTION	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PROCESSOR_SELECTION = 65,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_PROJECTION_ID	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_PROJECTION_ID = 57,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REDOP_ID	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_REDOP_ID = 30,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REGION_ARGUMENT_INDEX	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_REGION_ARGUMENT_INDEX = 34,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REGION_ENTRY	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_REGION_ENTRY = 51,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_REGION_HANDLE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_REGION_HANDLE = 61,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_TASK_ID	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_TASK_ID = 81,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_TREE_ENTRY	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_TREE_ENTRY = 77,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_TYPE_HANDLE	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_TYPE_HANDLE = 28,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_UNMAP_OP	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_UNMAP_OP = 32,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_INVALID_VARIANT_SELECTION	src/legion_runtime/legion_types.h	/^      ERROR_INVALID_VARIANT_SELECTION = 66,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_LEAF_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_LEAF_MISMATCH = 64,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_LEAF_TASK_VIOLATION	src/legion_runtime/legion_types.h	/^      ERROR_LEAF_TASK_VIOLATION = 29,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MAXIMUM_NODES_EXCEEDED	src/legion_runtime/legion_types.h	/^      ERROR_MAXIMUM_NODES_EXCEEDED = 79,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MAXIMUM_PROCS_EXCEEDED	src/legion_runtime/legion_types.h	/^      ERROR_MAXIMUM_PROCS_EXCEEDED = 80,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MAX_FIELD_OVERFLOW	src/legion_runtime/legion_types.h	/^      ERROR_MAX_FIELD_OVERFLOW = 54,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MISSING_DEFAULT_PREDICATE_RESULT	src/legion_runtime/legion_types.h	/^      ERROR_MISSING_DEFAULT_PREDICATE_RESULT = 116,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MISSING_PARENT_FIELD_ID	src/legion_runtime/legion_types.h	/^      ERROR_MISSING_PARENT_FIELD_ID = 7,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MISSING_TASK_COLLECTION	src/legion_runtime/legion_types.h	/^      ERROR_MISSING_TASK_COLLECTION = 55,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MPI_INTEROPERABILITY_NOT_CONFIGURED	src/legion_runtime/legion_types.h	/^      ERROR_MPI_INTEROPERABILITY_NOT_CONFIGURED = 118,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_MUST_EPOCH_FAILURE	src/legion_runtime/legion_types.h	/^      ERROR_MUST_EPOCH_FAILURE = 107,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_NESTED_MUST_EPOCH	src/legion_runtime/legion_types.h	/^      ERROR_NESTED_MUST_EPOCH = 105,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_NON_DISJOINT_PARTITION	src/legion_runtime/legion_types.h	/^      ERROR_NON_DISJOINT_PARTITION = 58,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_NON_DISJOINT_TASK_REGIONS	src/legion_runtime/legion_types.h	/^      ERROR_NON_DISJOINT_TASK_REGIONS = 72,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_PARENT_TYPE_HANDLE_NONEXISTENT	src/legion_runtime/legion_types.h	/^      ERROR_PARENT_TYPE_HANDLE_NONEXISTENT = 6,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_PHYSICAL_REGION_UNMAPPED	src/legion_runtime/legion_types.h	/^      ERROR_PHYSICAL_REGION_UNMAPPED = 13,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_PREDICATE_RESULT_SIZE_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_PREDICATE_RESULT_SIZE_MISMATCH = 117,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_PRINT	include/nautilus/nautilus.h	38;"	d
ERROR_REDUCTION_INITIAL_VALUE_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_REDUCTION_INITIAL_VALUE_MISMATCH = 31,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RELEASE_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_RELEASE_MISMATCH = 96,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_MAPPING_ID	src/legion_runtime/legion_types.h	/^      ERROR_RESERVED_MAPPING_ID = 16,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_PROJECTION_ID	src/legion_runtime/legion_types.h	/^      ERROR_RESERVED_PROJECTION_ID = 8,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_REDOP_ID	src/legion_runtime/legion_types.h	/^      ERROR_RESERVED_REDOP_ID = 1,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_TASK_ID	src/legion_runtime/legion_types.h	/^      ERROR_RESERVED_TASK_ID = 14,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RESERVED_TYPE_HANDLE	src/legion_runtime/legion_types.h	/^      ERROR_RESERVED_TYPE_HANDLE = 3,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_RETURN_SIZE_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_RETURN_SIZE_MISMATCH = 86,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_SEPARATE_UTILITY_PROCS	src/legion_runtime/legion_types.h	/^      ERROR_SEPARATE_UTILITY_PROCS = 78,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_STALE_INLINE_MAPPING_ACCESS	src/legion_runtime/legion_types.h	/^      ERROR_STALE_INLINE_MAPPING_ACCESS = 36,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_TRACING_ALLOCATION_WITH_SEPARATE	src/legion_runtime/legion_types.h	/^      ERROR_TRACING_ALLOCATION_WITH_SEPARATE = 119,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_TYPE_INST_MISMATCH	src/legion_runtime/legion_types.h	/^      ERROR_TYPE_INST_MISMATCH = 46,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_TYPE_INST_MISSIZE	src/legion_runtime/legion_types.h	/^      ERROR_TYPE_INST_MISSIZE = 47,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNFOLDABLE_REDUCTION_OP	src/legion_runtime/legion_types.h	/^      ERROR_UNFOLDABLE_REDUCTION_OP = 83,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNINITIALIZED_REDUCTION	src/legion_runtime/legion_types.h	/^      ERROR_UNINITIALIZED_REDUCTION = 68,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNMATCHED_END_TRACE	src/legion_runtime/legion_types.h	/^      ERROR_UNMATCHED_END_TRACE = 100,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNMATCHED_MUST_EPOCH	src/legion_runtime/legion_types.h	/^      ERROR_UNMATCHED_MUST_EPOCH = 106,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_UNREGISTERED_VARIANT	src/legion_runtime/legion_types.h	/^      ERROR_UNREGISTERED_VARIANT = 10,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_USE_REDUCTION_REGION_REQ	src/legion_runtime/legion_types.h	/^      ERROR_USE_REDUCTION_REGION_REQ = 11,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERROR_VIRTUAL_MAP_IN_LEAF_TASK	src/legion_runtime/legion_types.h	/^      ERROR_VIRTUAL_MAP_IN_LEAF_TASK = 63,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
ERR_CODE_EXCP_MASK	include/nautilus/idt.h	59;"	d
ESC	scripts/kconfig/lxdialog/dialog.h	51;"	d
ESPIPE	include/nautilus/errno.h	54;"	d
ESRCH	include/nautilus/errno.h	28;"	d
ET	src/legion_runtime/lowlevel_impl.h	/^      typedef _ET ET;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
ET	src/legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::ET ET;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
ET	src/legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::ET ET;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableFreeList
ETXTBSY	include/nautilus/errno.h	51;"	d
EVENT_REFERENCE_ALLOC	src/legion_runtime/legion_allocation.h	/^      EVENT_REFERENCE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
EVENT_SUBSCRIBE_MSGID	src/legion_runtime/lowlevel.cc	/^      EVENT_SUBSCRIBE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
EVENT_TRIGGER_MSGID	src/legion_runtime/lowlevel.cc	/^      EVENT_TRIGGER_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
EXCLUSIVE	src/legion_runtime/legion_types.h	/^      EXCLUSIVE    = 0,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
EXCP_MNEMONIC	src/nautilus/idt.c	41;"	d	file:
EXCP_NAME	src/nautilus/idt.c	40;"	d	file:
EXDEV	include/nautilus/errno.h	43;"	d
EXECS	xeon_phi/linux_usr/Makefile	/^EXECS=$(patsubst %.c, %, $(SRC))$/;"	m
EXECUTED_CHILD_ALLOC	src/legion_runtime/legion_allocation.h	/^      EXECUTED_CHILD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
EXECUTING_CHILD_ALLOC	src/legion_runtime/legion_allocation.h	/^      EXECUTING_CHILD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
EXITING	src/nautilus/scheduler.c	/^	       EXITING,            \/\/ being removed from RT and non-RT run\/arrival queues$/;"	e	enum:__anon132	file:
EXIT_FAILURE	include/nautilus/libccompat.h	57;"	d
EXIT_SUCCESS	include/nautilus/libccompat.h	58;"	d
EXPR_H	scripts/kconfig/expr.h	7;"	d
EXP_BROADCAST	include/test/ipi.h	/^		EXP_BROADCAST$/;"	e	enum:__anon28
EXP_ONEWAY	include/test/ipi.h	/^		EXP_ONEWAY,$/;"	e	enum:__anon28
EXP_ROUNDTRIP	include/test/ipi.h	/^		EXP_ROUNDTRIP,$/;"	e	enum:__anon28
EXT2FS_ATTR	src/fs/ext2/ext2fs.h	16;"	d
EXT2FS_ATTR	src/fs/ext2/ext2fs.h	18;"	d
EXT2FS_DATE	src/fs/ext2/ext2fs.h	75;"	d
EXT2FS_VERSION	src/fs/ext2/ext2fs.h	76;"	d
EXT2_ADDR_PER_BLOCK	src/fs/ext2/ext2fs.h	117;"	d
EXT2_APPEND_FL	src/fs/ext2/ext2fs.h	180;"	d
EXT2_BAD_INO	src/fs/ext2/ext2fs.h	81;"	d
EXT2_BLOCKS_PER_GROUP	src/fs/ext2/ext2fs.h	150;"	d
EXT2_BLOCK_SIZE	src/fs/ext2/ext2fs.h	111;"	d
EXT2_BLOCK_SIZE_BITS	src/fs/ext2/ext2fs.h	112;"	d
EXT2_BOOT_LOADER_INO	src/fs/ext2/ext2fs.h	85;"	d
EXT2_BTREE_FL	src/fs/ext2/ext2fs.h	189;"	d
EXT2_CLUSTERS_PER_GROUP	src/fs/ext2/ext2fs.h	152;"	d
EXT2_COMPRBLK_FL	src/fs/ext2/ext2fs.h	185;"	d
EXT2_COMPR_FL	src/fs/ext2/ext2fs.h	177;"	d
EXT2_CURRENT_REV	src/fs/ext2/ext2fs.h	393;"	d
EXT2_DESC_PER_BLOCK	src/fs/ext2/ext2fs.h	161;"	d
EXT2_DESC_SIZE	src/fs/ext2/ext2fs.h	146;"	d
EXT2_DIND_BLOCK	src/fs/ext2/ext2fs.h	168;"	d
EXT2_DIRSYNC_FL	src/fs/ext2/ext2fs.h	194;"	d
EXT2_DIRTY_FL	src/fs/ext2/ext2fs.h	184;"	d
EXT2_DIR_PAD	src/fs/ext2/ext2fs.h	444;"	d
EXT2_DIR_REC_LEN	src/fs/ext2/ext2fs.h	446;"	d
EXT2_DIR_ROUND	src/fs/ext2/ext2fs.h	445;"	d
EXT2_DYNAMIC_REV	src/fs/ext2/ext2fs.h	391;"	d
EXT2_ECOMPR_FL	src/fs/ext2/ext2fs.h	187;"	d
EXT2_EXCLUDE_INO	src/fs/ext2/ext2fs.h	89;"	d
EXT2_FIRST_INO	src/fs/ext2/ext2fs.h	115;"	d
EXT2_FL_USER_MODIFIABLE	src/fs/ext2/ext2fs.h	206;"	d
EXT2_FL_USER_VISIBLE	src/fs/ext2/ext2fs.h	205;"	d
EXT2_FT_BLKDEV	src/fs/ext2/ext2fs.h	432;"	d
EXT2_FT_CHRDEV	src/fs/ext2/ext2fs.h	431;"	d
EXT2_FT_DIR	src/fs/ext2/ext2fs.h	430;"	d
EXT2_FT_FIFO	src/fs/ext2/ext2fs.h	433;"	d
EXT2_FT_MAX	src/fs/ext2/ext2fs.h	437;"	d
EXT2_FT_REG_FILE	src/fs/ext2/ext2fs.h	429;"	d
EXT2_FT_SOCK	src/fs/ext2/ext2fs.h	434;"	d
EXT2_FT_SYMLINK	src/fs/ext2/ext2fs.h	435;"	d
EXT2_FT_UNKNOWN	src/fs/ext2/ext2fs.h	428;"	d
EXT2_GOOD_OLD_FIRST_INO	src/fs/ext2/ext2fs.h	92;"	d
EXT2_GOOD_OLD_INODE_SIZE	src/fs/ext2/ext2fs.h	396;"	d
EXT2_GOOD_OLD_REV	src/fs/ext2/ext2fs.h	390;"	d
EXT2_IMAGIC_FL	src/fs/ext2/ext2fs.h	191;"	d
EXT2_IMMUTABLE_FL	src/fs/ext2/ext2fs.h	179;"	d
EXT2_INDEX_FL	src/fs/ext2/ext2fs.h	190;"	d
EXT2_IND_BLOCK	src/fs/ext2/ext2fs.h	167;"	d
EXT2_INODES_PER_BLOCK	src/fs/ext2/ext2fs.h	153;"	d
EXT2_INODES_PER_GROUP	src/fs/ext2/ext2fs.h	151;"	d
EXT2_INODE_SIZE	src/fs/ext2/ext2fs.h	113;"	d
EXT2_I_SIZE	src/fs/ext2/ext2fs.h	492;"	d
EXT2_JOURNAL_INO	src/fs/ext2/ext2fs.h	88;"	d
EXT2_LIB_CURRENT_REV	src/fs/ext2/ext2fs.h	39;"	d
EXT2_LINK_MAX	src/fs/ext2/ext2fs.h	102;"	d
EXT2_MAX_BLOCKS_PER_GROUP	src/fs/ext2/ext2fs.h	155;"	d
EXT2_MAX_BLOCK_LOG_SIZE	src/fs/ext2/ext2fs.h	108;"	d
EXT2_MAX_BLOCK_SIZE	src/fs/ext2/ext2fs.h	110;"	d
EXT2_MAX_CLUSTERS_PER_GROUP	src/fs/ext2/ext2fs.h	158;"	d
EXT2_MAX_DESC_SIZE	src/fs/ext2/ext2fs.h	145;"	d
EXT2_MAX_INODES_PER_GROUP	src/fs/ext2/ext2fs.h	159;"	d
EXT2_MAX_SUPP_REV	src/fs/ext2/ext2fs.h	394;"	d
EXT2_MIN_BLOCK_LOG_SIZE	src/fs/ext2/ext2fs.h	107;"	d
EXT2_MIN_BLOCK_SIZE	src/fs/ext2/ext2fs.h	109;"	d
EXT2_MIN_DESC_SIZE	src/fs/ext2/ext2fs.h	143;"	d
EXT2_MIN_DESC_SIZE_64BIT	src/fs/ext2/ext2fs.h	144;"	d
EXT2_NAME_LEN	src/fs/ext2/ext2fs.h	401;"	d
EXT2_NDIR_BLOCKS	src/fs/ext2/ext2fs.h	166;"	d
EXT2_NOATIME_FL	src/fs/ext2/ext2fs.h	182;"	d
EXT2_NOCOMPR_FL	src/fs/ext2/ext2fs.h	186;"	d
EXT2_NODUMP_FL	src/fs/ext2/ext2fs.h	181;"	d
EXT2_NOTAIL_FL	src/fs/ext2/ext2fs.h	193;"	d
EXT2_N_BLOCKS	src/fs/ext2/ext2fs.h	170;"	d
EXT2_OBSO_OS_MASIX	src/fs/ext2/ext2fs.h	383;"	d
EXT2_OS_FREEBSD	src/fs/ext2/ext2fs.h	384;"	d
EXT2_OS_HURD	src/fs/ext2/ext2fs.h	382;"	d
EXT2_OS_LINUX	src/fs/ext2/ext2fs.h	381;"	d
EXT2_OS_LITES	src/fs/ext2/ext2fs.h	385;"	d
EXT2_RESERVED_FL	src/fs/ext2/ext2fs.h	203;"	d
EXT2_RESIZE_INO	src/fs/ext2/ext2fs.h	87;"	d
EXT2_ROOT_INO	src/fs/ext2/ext2fs.h	82;"	d
EXT2_SECRM_FL	src/fs/ext2/ext2fs.h	175;"	d
EXT2_SUPER_MAGIC	src/fs/ext2/ext2fs.h	97;"	d
EXT2_SYNC_FL	src/fs/ext2/ext2fs.h	178;"	d
EXT2_S_IFDIR	src/fs/ext2/ext2.c	35;"	d	file:
EXT2_S_IFREG	src/fs/ext2/ext2.c	34;"	d	file:
EXT2_TIND_BLOCK	src/fs/ext2/ext2fs.h	169;"	d
EXT2_TOPDIR_FL	src/fs/ext2/ext2fs.h	195;"	d
EXT2_UNDEL_DIR_INO	src/fs/ext2/ext2fs.h	86;"	d
EXT2_UNRM_FL	src/fs/ext2/ext2fs.h	176;"	d
EXT3_JOURNAL_DATA_FL	src/fs/ext2/ext2fs.h	192;"	d
EXT4_EA_INODE_FL	src/fs/ext2/ext2fs.h	198;"	d
EXT4_EOFBLOCKS_FL	src/fs/ext2/ext2fs.h	199;"	d
EXT4_EXTENTS_FL	src/fs/ext2/ext2fs.h	197;"	d
EXT4_FEATURE_INCOMPAT_64BIT	src/fs/ext2/ext2fs.h	138;"	d
EXT4_GRP_QUOTA_INO	src/fs/ext2/ext2fs.h	84;"	d
EXT4_HUGE_FILE_FL	src/fs/ext2/ext2fs.h	196;"	d
EXT4_SNAPFILE_DELETED_FL	src/fs/ext2/ext2fs.h	201;"	d
EXT4_SNAPFILE_FL	src/fs/ext2/ext2fs.h	200;"	d
EXT4_SNAPFILE_SHRUNK_FL	src/fs/ext2/ext2fs.h	202;"	d
EXT4_S_ERR_END	src/fs/ext2/ext2fs.h	367;"	d
EXT4_S_ERR_LEN	src/fs/ext2/ext2fs.h	376;"	d
EXT4_S_ERR_START	src/fs/ext2/ext2fs.h	355;"	d
EXT4_USR_QUOTA_INO	src/fs/ext2/ext2fs.h	83;"	d
EXTRAVERSION	Makefile	/^EXTRAVERSION = Nautilus$/;"	m
EXTRA_STACK	include/lua/lstate.h	47;"	d
E_AND	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_AND	scripts/kconfig/expr.h	49;"	d
E_CHOICE	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_EQUAL	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_NONE	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_NOT	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_NOT	scripts/kconfig/expr.h	50;"	d
E_OR	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_OR	scripts/kconfig/expr.h	48;"	d
E_RANGE	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_SYMBOL	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_UNEQUAL	scripts/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT, E_EQUAL, E_UNEQUAL, E_CHOICE, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
EfiACPIMemoryNVS	include/nautilus/sfi.h	/^    EfiACPIMemoryNVS,$/;"	e	enum:__anon48
EfiACPIReclaimMemory	include/nautilus/sfi.h	/^    EfiACPIReclaimMemory,$/;"	e	enum:__anon48
EfiBootServicesCode	include/nautilus/sfi.h	/^    EfiBootServicesCode,$/;"	e	enum:__anon48
EfiBootServicesData	include/nautilus/sfi.h	/^    EfiBootServicesData,$/;"	e	enum:__anon48
EfiConventionalMemory	include/nautilus/sfi.h	/^    EfiConventionalMemory,$/;"	e	enum:__anon48
EfiLoaderCode	include/nautilus/sfi.h	/^    EfiLoaderCode,$/;"	e	enum:__anon48
EfiLoaderData	include/nautilus/sfi.h	/^    EfiLoaderData,$/;"	e	enum:__anon48
EfiMaxMemoryType	include/nautilus/sfi.h	/^    EfiMaxMemoryType$/;"	e	enum:__anon48
EfiMemoryMappedIO	include/nautilus/sfi.h	/^    EfiMemoryMappedIO,$/;"	e	enum:__anon48
EfiMemoryMappedIOPortSpace	include/nautilus/sfi.h	/^    EfiMemoryMappedIOPortSpace,$/;"	e	enum:__anon48
EfiPalCode	include/nautilus/sfi.h	/^    EfiPalCode,$/;"	e	enum:__anon48
EfiReservedMemoryType	include/nautilus/sfi.h	/^    EfiReservedMemoryType,$/;"	e	enum:__anon48
EfiRuntimeServicesCode	include/nautilus/sfi.h	/^    EfiRuntimeServicesCode,$/;"	e	enum:__anon48
EfiRuntimeServicesData	include/nautilus/sfi.h	/^    EfiRuntimeServicesData,$/;"	e	enum:__anon48
EfiUnusableMemory	include/nautilus/sfi.h	/^    EfiUnusableMemory,$/;"	e	enum:__anon48
ElementMask	src/legion_runtime/lowlevel.cc	/^    ElementMask::ElementMask(const ElementMask &copy_from, $/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	src/legion_runtime/lowlevel.cc	/^    ElementMask::ElementMask(int _num_elements, int _first_element \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	src/legion_runtime/lowlevel.cc	/^    ElementMask::ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	src/legion_runtime/lowlevel.h	/^    class ElementMask {$/;"	c	namespace:LegionRuntime::LowLevel
ElementMask	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::ElementMask(const ElementMask &copy_from, $/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::ElementMask(int _num_elements, int _first_element \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMask	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
ElementMaskImpl	src/legion_runtime/lowlevel_impl.h	/^    struct ElementMaskImpl {$/;"	s	namespace:LegionRuntime::LowLevel
ElementMaskImpl	src/legion_runtime/shared_lowlevel.cc	/^    struct ElementMaskImpl {$/;"	s	namespace:LegionRuntime::LowLevel	file:
Emit	include/nautilus/fmtout.h	/^    void (*Emit)(struct Output_Sink *o, int ch);$/;"	m	struct:Output_Sink
EndpointManager	src/legion_runtime/activemsg.cc	/^  EndpointManager(int num_endpoints)$/;"	f	class:EndpointManager
EndpointManager	src/legion_runtime/activemsg.cc	/^class EndpointManager {$/;"	c	file:
Entry	src/test/saxpy_array.cc	/^struct Entry {$/;"	s	file:
Enumerator	src/legion_runtime/legion_types.h	/^    typedef LowLevel::ElementMask::Enumerator Enumerator;$/;"	t	namespace:LegionRuntime::HighLevel
Enumerator	src/legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator::Enumerator(const ElementMask& _mask, int _start, int _polarity)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
Enumerator	src/legion_runtime/lowlevel.h	/^      class Enumerator {$/;"	c	class:LegionRuntime::LowLevel::ElementMask
Enumerator	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator::Enumerator(const ElementMask& _mask, int _start, int _polarity)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
Event	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Event Event;$/;"	t	namespace:LegionRuntime::HighLevel
Event	src/legion_runtime/lowlevel.h	/^    class Event {$/;"	c	namespace:LegionRuntime::LowLevel
EventGeneration	src/legion_runtime/shared_lowlevel.cc	/^	typedef unsigned EventGeneration;$/;"	t	class:LegionRuntime::LowLevel::EventImpl	file:
EventImpl	src/legion_runtime/shared_lowlevel.cc	/^	EventImpl(EventIndex idx, bool activate=false) $/;"	f	class:LegionRuntime::LowLevel::EventImpl
EventImpl	src/legion_runtime/shared_lowlevel.cc	/^    class EventImpl : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
EventIndex	src/legion_runtime/shared_lowlevel.cc	/^	typedef unsigned EventIndex;$/;"	t	class:LegionRuntime::LowLevel::EventImpl	file:
EventMerger	src/legion_runtime/lowlevel.cc	/^      EventMerger(Event _finish_event)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
EventMerger	src/legion_runtime/lowlevel.cc	/^    class EventMerger : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
EventStackEntry	src/legion_runtime/lowlevel.cc	/^	  EventStackEntry(Thread *_thread, Event _event, EventStackEntry *_next)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
EventStackEntry	src/legion_runtime/lowlevel.cc	/^	class EventStackEntry : public Event::Impl::EventWaiter {$/;"	c	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
EventSubscribeArgs	src/legion_runtime/lowlevel.cc	/^    struct EventSubscribeArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
EventSubscribeMessage	src/legion_runtime/lowlevel.cc	/^				      handle_event_subscribe> EventSubscribeMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
EventTableAllocator	src/legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<Event::Impl, 10, 8> EventTableAllocator;$/;"	t
EventTraceItem	src/legion_runtime/lowlevel_impl.h	/^    struct EventTraceItem {$/;"	s	namespace:LegionRuntime::LowLevel
EventTriggerArgs	src/legion_runtime/lowlevel.cc	/^    struct EventTriggerArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
EventTriggerMessage	src/legion_runtime/lowlevel.cc	/^				      handle_event_trigger> EventTriggerMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
EventWaiter	src/legion_runtime/lowlevel_impl.h	/^        EventWaiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::EventWaiter
EventWaiter	src/legion_runtime/lowlevel_impl.h	/^      class EventWaiter {$/;"	c	class:LegionRuntime::LowLevel::Event::Impl
ExclusiveAccess	src/legion_runtime/lowlevel_impl.h	/^      ExclusiveAccess(T* thing_with_data, bool already_held = false)$/;"	f	class:LegionRuntime::LowLevel::ExclusiveAccess
ExclusiveAccess	src/legion_runtime/lowlevel_impl.h	/^    class ExclusiveAccess {$/;"	c	namespace:LegionRuntime::LowLevel
ExecutionProfile	src/legion_runtime/legion.h	/^      struct ExecutionProfile {$/;"	s	class:LegionRuntime::HighLevel::Mapper
FADT2_REVISION_ID	include/acpi/actbl.h	268;"	d
FALSE	include/acpi/actypes.h	355;"	d
FALSE	include/acpi/actypes.h	357;"	d
FALSE	include/nautilus/naut_types.h	71;"	d
FALSE_PRED	src/legion_runtime/legion.cc	/^    const Predicate Predicate::FALSE_PRED = Predicate(false);$/;"	m	class:LegionRuntime::HighLevel::Predicate	file:
FALSE_PRED	src/legion_runtime/legion.h	/^      static const Predicate FALSE_PRED;$/;"	m	class:LegionRuntime::HighLevel::Predicate
FEATERR	src/dev/ata.c	78;"	d	file:
FEMTOS_PER_SEC	src/dev/hpet.c	42;"	d	file:
FENCE_OPERATION	src/legion_runtime/legion_logging.h	/^        FENCE_OPERATION = 2,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
FENCE_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      FENCE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FIBONACCI_TASK_ID	src/test/tasks_and_futures.cc	/^  FIBONACCI_TASK_ID,$/;"	e	enum:TaskIDs	file:
FID_CHARGE	src/test/circuit.h	/^  FID_CHARGE,$/;"	e	enum:NodeFields
FID_CURRENT	src/test/circuit.h	/^  FID_CURRENT,$/;"	e	enum:WireFields
FID_DERIV	src/test/multiple_partitions.cc	/^  FID_DERIV,$/;"	e	enum:FieldIDs	file:
FID_FIELD_A	src/test/logical_regions.cc	/^  FID_FIELD_A,$/;"	e	enum:FieldIDs	file:
FID_FIELD_B	src/test/logical_regions.cc	/^  FID_FIELD_B,$/;"	e	enum:FieldIDs	file:
FID_INDUCTANCE	src/test/circuit.h	/^  FID_INDUCTANCE,$/;"	e	enum:WireFields
FID_IN_LOC	src/test/circuit.h	/^  FID_IN_LOC,$/;"	e	enum:WireFields
FID_IN_PTR	src/test/circuit.h	/^  FID_IN_PTR,$/;"	e	enum:WireFields
FID_LAST	src/test/circuit.h	/^  FID_LAST = (FID_WIRE_VOLTAGE+WIRE_SEGMENTS-1),$/;"	e	enum:WireFields
FID_LEAKAGE	src/test/circuit.h	/^  FID_LEAKAGE,$/;"	e	enum:NodeFields
FID_LOCATOR	src/test/circuit.h	/^  FID_LOCATOR,$/;"	e	enum:LocatorFields
FID_NODE_CAP	src/test/circuit.h	/^  FID_NODE_CAP,$/;"	e	enum:NodeFields
FID_NODE_VOLTAGE	src/test/circuit.h	/^  FID_NODE_VOLTAGE,$/;"	e	enum:NodeFields
FID_OUT_LOC	src/test/circuit.h	/^  FID_OUT_LOC,$/;"	e	enum:WireFields
FID_OUT_PTR	src/test/circuit.h	/^  FID_OUT_PTR,$/;"	e	enum:WireFields
FID_RESISTANCE	src/test/circuit.h	/^  FID_RESISTANCE,$/;"	e	enum:WireFields
FID_VAL	src/test/multiple_partitions.cc	/^  FID_VAL,$/;"	e	enum:FieldIDs	file:
FID_WIRE_CAP	src/test/circuit.h	/^  FID_WIRE_CAP,$/;"	e	enum:WireFields
FID_WIRE_VOLTAGE	src/test/circuit.h	/^  FID_WIRE_VOLTAGE = (FID_CURRENT+WIRE_SEGMENTS),$/;"	e	enum:WireFields
FID_X	src/test/custom_mapper.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_X	src/test/partitioning.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_X	src/test/physical_regions.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_X	src/test/privileges.cc	/^  FID_X,$/;"	e	enum:FieldIDs	file:
FID_Y	src/test/custom_mapper.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Y	src/test/partitioning.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Y	src/test/physical_regions.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Y	src/test/privileges.cc	/^  FID_Y,$/;"	e	enum:FieldIDs	file:
FID_Z	src/test/custom_mapper.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FID_Z	src/test/partitioning.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FID_Z	src/test/physical_regions.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FID_Z	src/test/privileges.cc	/^  FID_Z,$/;"	e	enum:FieldIDs	file:
FIELDID_V	src/test/saxpy_array.cc	/^  FIELDID_V = 0,$/;"	e	enum:__anon106	file:
FIELD_ALLOCATION_MESSAGE	src/legion_runtime/runtime.h	/^        FIELD_ALLOCATION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
FIELD_ALL_ONES	src/legion_runtime/legion_types.h	639;"	d
FIELD_DELETION	src/legion_runtime/legion_ops.h	/^        FIELD_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
FIELD_DESTRUCTION_MESSAGE	src/legion_runtime/runtime.h	/^        FIELD_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
FIELD_LOG2	src/legion_runtime/legion_types.h	144;"	d
FIELD_MASK	src/legion_runtime/legion_types.h	638;"	d
FIELD_MASK	src/legion_runtime/legion_types.h	669;"	d
FIELD_SHIFT	src/legion_runtime/legion_types.h	637;"	d
FIELD_SHIFT	src/legion_runtime/legion_types.h	668;"	d
FIELD_SPACE_DELETION	src/legion_runtime/legion_ops.h	/^        FIELD_SPACE_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
FIELD_SPACE_DESTRUCTION_MESSAGE	src/legion_runtime/runtime.h	/^        FIELD_SPACE_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
FIELD_TYPE	src/legion_runtime/legion_types.h	636;"	d
FILE	include/lua/libdump.h	/^typedef void FILE;$/;"	t
FILE	include/nautilus/libccompat.h	/^typedef void FILE;$/;"	t
FILELINE	scripts/basic/docproc.c	/^typedef void FILELINE(char * file, char * line);$/;"	t	file:
FILEONLY	scripts/basic/docproc.c	/^typedef void FILEONLY(char * file);$/;"	t	file:
FILE_BUSY	scripts/kconfig/expr.h	26;"	d
FILE_LOCK	src/nautilus/fs.c	45;"	d	file:
FILE_LOCK_CONF	src/nautilus/fs.c	44;"	d	file:
FILE_PRINTED	scripts/kconfig/expr.h	28;"	d
FILE_SCANNED	scripts/kconfig/expr.h	27;"	d
FILE_UNLOCK	src/nautilus/fs.c	46;"	d	file:
FILTER_CLOSE_CALL	src/legion_runtime/region_tree.h	/^      FILTER_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FILTER_CURR_EPOCH_CALL	src/legion_runtime/region_tree.h	/^      FILTER_CURR_EPOCH_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FILTER_PREV_EPOCH_CALL	src/legion_runtime/region_tree.h	/^      FILTER_PREV_EPOCH_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FINALIZEDBIT	include/lua/lgc.h	90;"	d
FINAL_MESSAGE	src/legion_runtime/runtime.h	/^        FINAL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageHeader
FIND	src/dev/vesa.c	/^typedef enum {ENUM, FIND} scan_action;$/;"	e	enum:__anon139	file:
FIND_COPY_ACROSS_INSTANCES_CALL	src/legion_runtime/region_tree.h	/^      FIND_COPY_ACROSS_INSTANCES_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_COPY_PRECONDITIONS_ABOVE_CALL	src/legion_runtime/region_tree.h	/^      FIND_COPY_PRECONDITIONS_ABOVE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_COPY_PRECONDITIONS_CALL	src/legion_runtime/region_tree.h	/^      FIND_COPY_PRECONDITIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_LOCAL_COPY_PRECONDITIONS_CALL	src/legion_runtime/region_tree.h	/^      FIND_LOCAL_COPY_PRECONDITIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_VALID_INSTANCE_VIEWS_CALL	src/legion_runtime/region_tree.h	/^      FIND_VALID_INSTANCE_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIND_VALID_REDUCTION_VIEWS_CALL	src/legion_runtime/region_tree.h	/^      FIND_VALID_REDUCTION_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FIRST_AVAILABLE	src/legion_runtime/lowlevel.cc	/^      FIRST_AVAILABLE = 140,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
FIRST_EXT_IRQ	include/nautilus/irq.h	45;"	d
FIRST_PROC_GROUP_ID	src/legion_runtime/shared_lowlevel.cc	/^      static const int FIRST_PROC_GROUP_ID = 1000;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup	file:
FIRST_RESERVED	include/lua/llex.h	14;"	d
FIXEDBIT	include/lua/lgc.h	92;"	d
FLAGS	src/lua_src/lstrlib.c	825;"	d	file:
FLEXINT_H	scripts/kconfig/lex.zconf.c	29;"	d	file:
FLEX_BETA	scripts/kconfig/lex.zconf.c	13;"	d	file:
FLEX_SCANNER	scripts/kconfig/lex.zconf.c	8;"	d	file:
FLOOR_DIV	src/fs/ext2/ext2_access.c	38;"	d	file:
FLUSH_REDUCTIONS_CALL	src/legion_runtime/region_tree.h	/^      FLUSH_REDUCTIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
FL_HASH	src/nautilus/fmtout.c	/^  FL_HASH   = 0x20,		\/* # modifier *\/$/;"	e	enum:flags	file:
FL_MINUS	src/nautilus/fmtout.c	/^  FL_MINUS  = 0x02,		\/* Minus modifier *\/$/;"	e	enum:flags	file:
FL_PLUS	src/nautilus/fmtout.c	/^  FL_PLUS   = 0x04,		\/* Plus modifier *\/$/;"	e	enum:flags	file:
FL_SIGNED	src/nautilus/fmtout.c	/^  FL_SIGNED = 0x40,		\/* Number is signed *\/$/;"	e	enum:flags	file:
FL_SPACE	src/nautilus/fmtout.c	/^  FL_SPACE  = 0x10,		\/* Space modifier *\/$/;"	e	enum:flags	file:
FL_TICK	src/nautilus/fmtout.c	/^  FL_TICK   = 0x08,		\/* ' modifier *\/$/;"	e	enum:flags	file:
FL_UPPER	src/nautilus/fmtout.c	/^  FL_UPPER  = 0x80		\/* Upper case digits *\/$/;"	e	enum:flags	file:
FL_ZERO	src/nautilus/fmtout.c	/^  FL_ZERO   = 0x01,		\/* Zero modifier *\/$/;"	e	enum:flags	file:
FOLD_MANAGER_ALLOC	src/legion_runtime/legion_allocation.h	/^      FOLD_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FORMAT	src/lua_src/lundump.c	237;"	d	file:
FORMAT_TYPE_BYTE	src/nautilus/printk.c	/^	FORMAT_TYPE_BYTE,$/;"	e	enum:format_type	file:
FORMAT_TYPE_CHAR	src/nautilus/printk.c	/^	FORMAT_TYPE_CHAR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_INT	src/nautilus/printk.c	/^	FORMAT_TYPE_INT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_INVALID	src/nautilus/printk.c	/^	FORMAT_TYPE_INVALID,$/;"	e	enum:format_type	file:
FORMAT_TYPE_LONG	src/nautilus/printk.c	/^	FORMAT_TYPE_LONG,$/;"	e	enum:format_type	file:
FORMAT_TYPE_LONG_LONG	src/nautilus/printk.c	/^	FORMAT_TYPE_LONG_LONG,$/;"	e	enum:format_type	file:
FORMAT_TYPE_NONE	src/nautilus/printk.c	/^	FORMAT_TYPE_NONE, \/* Just a string part *\/$/;"	e	enum:format_type	file:
FORMAT_TYPE_NRCHARS	src/nautilus/printk.c	/^	FORMAT_TYPE_NRCHARS,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PERCENT_CHAR	src/nautilus/printk.c	/^	FORMAT_TYPE_PERCENT_CHAR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PRECISION	src/nautilus/printk.c	/^	FORMAT_TYPE_PRECISION,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PTR	src/nautilus/printk.c	/^	FORMAT_TYPE_PTR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_PTRDIFF	src/nautilus/printk.c	/^	FORMAT_TYPE_PTRDIFF$/;"	e	enum:format_type	file:
FORMAT_TYPE_SHORT	src/nautilus/printk.c	/^	FORMAT_TYPE_SHORT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_SIZE_T	src/nautilus/printk.c	/^	FORMAT_TYPE_SIZE_T,$/;"	e	enum:format_type	file:
FORMAT_TYPE_STR	src/nautilus/printk.c	/^	FORMAT_TYPE_STR,$/;"	e	enum:format_type	file:
FORMAT_TYPE_UBYTE	src/nautilus/printk.c	/^	FORMAT_TYPE_UBYTE,$/;"	e	enum:format_type	file:
FORMAT_TYPE_UINT	src/nautilus/printk.c	/^	FORMAT_TYPE_UINT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_ULONG	src/nautilus/printk.c	/^	FORMAT_TYPE_ULONG,$/;"	e	enum:format_type	file:
FORMAT_TYPE_USHORT	src/nautilus/printk.c	/^	FORMAT_TYPE_USHORT,$/;"	e	enum:format_type	file:
FORMAT_TYPE_WIDTH	src/nautilus/printk.c	/^	FORMAT_TYPE_WIDTH,$/;"	e	enum:format_type	file:
FPRINTK_BUFMAX	include/nautilus/fprintk.h	25;"	d
FPR_LOAD	src/asm/thread_lowlevel.S	/^#define FPR_LOAD()$/;"	d
FPR_SAVE	src/asm/thread_lowlevel.S	/^#define FPR_SAVE()			\/\/ WRITE ME$/;"	d
FPR_SAVE_SIZE	src/asm/thread_lowlevel.S	/^#define FPR_SAVE_SIZE (0)$/;"	d
FPU_DEBUG	src/nautilus/fpu.c	38;"	d	file:
FPU_ECX_FEAT_QUERY	src/nautilus/fpu.c	59;"	d	file:
FPU_EDX_FEAT_QUERY	src/nautilus/fpu.c	60;"	d	file:
FPU_PRINT	src/nautilus/fpu.c	37;"	d	file:
FPU_WARN	src/nautilus/fpu.c	39;"	d	file:
FREE	src/nautilus/scheduler.c	96;"	d	file:
FREE	src/nautilus/scheduler.c	99;"	d	file:
FREEABLE	src/legion_runtime/legion_types.h	/^      FREEABLE        = 0x00000002,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
FRIEND_ALL_RUNTIME_CLASSES	src/legion_runtime/legion_types.h	746;"	d
FS_BAD_FD	include/nautilus/fs.h	100;"	d
FS_BASE_MSR	src/asm/realmode.S	/^FS_BASE_MSR = 0xc0000100$/;"	d
FS_FD_ERR	include/nautilus/fs.h	101;"	d
FS_NAME_LEN	include/nautilus/fs.h	37;"	d
FS_WRITE_MAX	include/nautilus/fprintk.h	26;"	d
FULL_MESSAGE	src/legion_runtime/runtime.h	/^        FULL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageHeader
FULL_VIEW	scripts/kconfig/gconf.c	/^	SINGLE_VIEW, SPLIT_VIEW, FULL_VIEW$/;"	e	enum:__anon3	file:
FUNCTION	scripts/basic/docproc.c	64;"	d	file:
FUNC_HDR	src/test/benchmark.h	43;"	d
FUNC_HDR	src/test/benchmark.h	9;"	d
FUNC_TYPE	src/test/benchmark.h	10;"	d
FUNC_TYPE	src/test/benchmark.h	44;"	d
FUTURE_ALLOC	src/legion_runtime/legion_allocation.h	/^      FUTURE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FUTURE_MAP_ALLOC	src/legion_runtime/legion_allocation.h	/^      FUTURE_MAP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FUTURE_PRED_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      FUTURE_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FUTURE_RESULT_ALLOC	src/legion_runtime/legion_allocation.h	/^      FUTURE_RESULT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
FXSAVE_SIZE	include/nautilus/thread.h	105;"	d
Fallback	src/legion_runtime/legion.h	/^        struct Fallback { void legion_serialize(void *); };$/;"	s	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
FenceOp	src/legion_runtime/legion_ops.cc	/^    FenceOp::FenceOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
FenceOp	src/legion_runtime/legion_ops.cc	/^    FenceOp::FenceOp(const FenceOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
FenceOp	src/legion_runtime/legion_ops.h	/^    class FenceOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
FieldAccessor	src/legion_runtime/accessor.h	/^	FieldAccessor(void) {}$/;"	f	struct:LegionRuntime::Accessor::RegionAccessor::FieldAccessor
FieldAccessor	src/legion_runtime/accessor.h	/^      struct FieldAccessor : $/;"	s	struct:LegionRuntime::Accessor::RegionAccessor
FieldAllocator	src/legion_runtime/legion.cc	/^    FieldAllocator::FieldAllocator(FieldSpace f, Context p, $/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
FieldAllocator	src/legion_runtime/legion.cc	/^    FieldAllocator::FieldAllocator(const FieldAllocator &allocator)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
FieldAllocator	src/legion_runtime/legion.cc	/^    FieldAllocator::FieldAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
FieldAllocator	src/legion_runtime/legion.h	/^    class FieldAllocator {$/;"	c	namespace:LegionRuntime::HighLevel
FieldID	src/legion_runtime/legion_types.h	/^    typedef unsigned int FieldID;$/;"	t	namespace:LegionRuntime::HighLevel
FieldIDs	src/test/custom_mapper.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	src/test/logical_regions.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	src/test/multiple_partitions.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	src/test/partitioning.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	src/test/physical_regions.cc	/^enum FieldIDs {$/;"	g	file:
FieldIDs	src/test/privileges.cc	/^enum FieldIDs {$/;"	g	file:
FieldInfo	src/legion_runtime/region_tree.h	/^        FieldInfo(size_t size, unsigned id, bool loc)$/;"	f	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
FieldInfo	src/legion_runtime/region_tree.h	/^        FieldInfo(void) : field_size(0), idx(0), $/;"	f	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
FieldInfo	src/legion_runtime/region_tree.h	/^      struct FieldInfo {$/;"	s	class:LegionRuntime::HighLevel::FieldSpaceNode
FieldMask	src/legion_runtime/legion_types.h	/^    typedef AVXBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	src/legion_runtime/legion_types.h	/^    typedef AVXTLBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	src/legion_runtime/legion_types.h	/^    typedef BitMask<FIELD_TYPE,MAX_FIELDS,FIELD_SHIFT,FIELD_MASK> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	src/legion_runtime/legion_types.h	/^    typedef SSEBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	src/legion_runtime/legion_types.h	/^    typedef SSETLBitMask<MAX_FIELDS> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldMask	src/legion_runtime/legion_types.h	/^    typedef TLBitMask<FIELD_TYPE,MAX_FIELDS,FIELD_SHIFT,FIELD_MASK> FieldMask;$/;"	t	namespace:LegionRuntime::HighLevel
FieldPermutation	src/legion_runtime/legion_types.h	/^    typedef BitPermutation<FieldMask,FIELD_LOG2> FieldPermutation;$/;"	t	namespace:LegionRuntime::HighLevel
FieldSpace	src/legion_runtime/legion.cc	/^    FieldSpace::FieldSpace(const FieldSpace &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
FieldSpace	src/legion_runtime/legion.cc	/^    FieldSpace::FieldSpace(unsigned _id)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
FieldSpace	src/legion_runtime/legion.cc	/^    FieldSpace::FieldSpace(void)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
FieldSpace	src/legion_runtime/legion.h	/^    class FieldSpace {$/;"	c	namespace:LegionRuntime::HighLevel
FieldSpaceID	src/legion_runtime/legion_types.h	/^    typedef unsigned int FieldSpaceID;$/;"	t	namespace:LegionRuntime::HighLevel
FieldSpaceNode	src/legion_runtime/region_tree.cc	/^    FieldSpaceNode::FieldSpaceNode(FieldSpace sp, RegionTreeForest *ctx)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
FieldSpaceNode	src/legion_runtime/region_tree.cc	/^    FieldSpaceNode::FieldSpaceNode(const FieldSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
FieldSpaceNode	src/legion_runtime/region_tree.h	/^    class FieldSpaceNode {$/;"	c	namespace:LegionRuntime::HighLevel
FieldSpaceRequirement	src/legion_runtime/legion.cc	/^    FieldSpaceRequirement::FieldSpaceRequirement(FieldSpace _handle, $/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
FieldSpaceRequirement	src/legion_runtime/legion.cc	/^    FieldSpaceRequirement::FieldSpaceRequirement(void)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
FieldSpaceRequirement	src/legion_runtime/legion.h	/^    struct FieldSpaceRequirement {$/;"	s	namespace:LegionRuntime::HighLevel
FieldState	src/legion_runtime/region_tree.cc	/^    FieldState::FieldState(const GenericUser &user, const FieldMask &m, Color c)$/;"	f	class:LegionRuntime::HighLevel::FieldState
FieldState	src/legion_runtime/region_tree.h	/^    struct FieldState : public ChildState {$/;"	s	namespace:LegionRuntime::HighLevel
FieldTree	src/legion_runtime/field_tree.h	/^    FieldTree<UT>::FieldTree(const FieldMask &mask, bool merge\/* = false*\/)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
FieldTree	src/legion_runtime/field_tree.h	/^    FieldTree<UT>::FieldTree(const FieldTree<UT> &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
FieldTree	src/legion_runtime/field_tree.h	/^    class FieldTree {$/;"	c	namespace:LegionRuntime::HighLevel
Finish	include/nautilus/fmtout.h	/^    void (*Finish)(struct Output_Sink *o);$/;"	m	struct:Output_Sink
FoldReductionManager	src/legion_runtime/region_tree.cc	/^    FoldReductionManager::FoldReductionManager(RegionTreeForest *ctx, $/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
FoldReductionManager	src/legion_runtime/region_tree.cc	/^    FoldReductionManager::FoldReductionManager(const FoldReductionManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
FoldReductionManager	src/legion_runtime/region_tree.h	/^    class FoldReductionManager : public ReductionManager {$/;"	c	namespace:LegionRuntime::HighLevel
Format_Output	src/nautilus/fmtout.c	/^int Format_Output(struct Output_Sink *q, const char *format, va_list ap)$/;"	f
FortranArrayLinearization	src/legion_runtime/arrays.h	/^      FortranArrayLinearization(Rect<DIM> bounds, int first_index = 1)$/;"	f	class:LegionRuntime::Arrays::FortranArrayLinearization
FortranArrayLinearization	src/legion_runtime/arrays.h	/^      FortranArrayLinearization(void) {}$/;"	f	class:LegionRuntime::Arrays::FortranArrayLinearization
FortranArrayLinearization	src/legion_runtime/arrays.h	/^    class FortranArrayLinearization : public Linearization<DIM> {$/;"	c	namespace:LegionRuntime::Arrays
Fraction	src/legion_runtime/legion_utilities.h	/^    Fraction<T>::Fraction(T num, T denom)$/;"	f	class:LegionRuntime::HighLevel::Fraction
Fraction	src/legion_runtime/legion_utilities.h	/^    Fraction<T>::Fraction(const Fraction<T> &f)$/;"	f	class:LegionRuntime::HighLevel::Fraction
Fraction	src/legion_runtime/legion_utilities.h	/^    Fraction<T>::Fraction(void)$/;"	f	class:LegionRuntime::HighLevel::Fraction
Fraction	src/legion_runtime/legion_utilities.h	/^    class Fraction {$/;"	c	namespace:LegionRuntime::HighLevel
FuncPtr	src/legion_runtime/lowlevel.cc	/^      typedef void(*FuncPtr)(const void *args, size_t arglen, Processor *proc);$/;"	t	class:LegionRuntime::LowLevel::Task	file:
FuncState	include/lua/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	include/lua/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
Future	src/legion_runtime/legion.cc	/^    Future::Future(Future::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::Future
Future	src/legion_runtime/legion.cc	/^    Future::Future(const Future &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future
Future	src/legion_runtime/legion.cc	/^    Future::Future(void)$/;"	f	class:LegionRuntime::HighLevel::Future
Future	src/legion_runtime/legion.h	/^    class Future {$/;"	c	namespace:LegionRuntime::HighLevel
FutureMap	src/legion_runtime/legion.cc	/^    FutureMap::FutureMap(FutureMap::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
FutureMap	src/legion_runtime/legion.cc	/^    FutureMap::FutureMap(const FutureMap &map)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
FutureMap	src/legion_runtime/legion.cc	/^    FutureMap::FutureMap(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
FutureMap	src/legion_runtime/legion.h	/^    class FutureMap {$/;"	c	namespace:LegionRuntime::HighLevel
FuturePredOp	src/legion_runtime/legion_ops.cc	/^    FuturePredOp::FuturePredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
FuturePredOp	src/legion_runtime/legion_ops.cc	/^    FuturePredOp::FuturePredOp(const FuturePredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
FuturePredOp	src/legion_runtime/legion_ops.h	/^    class FuturePredOp : public Predicate::Impl {$/;"	c	namespace:LegionRuntime::HighLevel
G	include/lua/lstate.h	179;"	d
GARBAGE_COLLECT_CALL	src/legion_runtime/region_tree.h	/^      GARBAGE_COLLECT_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GASNETT_THREAD_SAFE	src/legion_runtime/activemsg.h	25;"	d
GASNET_PAR	src/legion_runtime/activemsg.h	22;"	d
GASNetHSL	src/legion_runtime/lowlevel_impl.h	/^      GASNetHSL(void) { gasnet_hsl_init(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
GASNetHSL	src/legion_runtime/lowlevel_impl.h	/^    class GASNetHSL {$/;"	c	namespace:LegionRuntime::LowLevel
GASNetMemory	src/legion_runtime/lowlevel.cc	/^    GASNetMemory::GASNetMemory(Memory _me, size_t size_per_node)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
GASNetMemory	src/legion_runtime/lowlevel_impl.h	/^    class GASNetMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GATE_TYPE_CALL	include/nautilus/idt.h	/^    GATE_TYPE_CALL = 0xc,$/;"	e	enum:__anon60
GATE_TYPE_INT	include/nautilus/idt.h	/^    GATE_TYPE_INT  = 0xe,$/;"	e	enum:__anon60
GATE_TYPE_TASK	include/nautilus/idt.h	/^    GATE_TYPE_TASK = 0x5,$/;"	e	enum:__anon60
GATE_TYPE_TRAP	include/nautilus/idt.h	/^    GATE_TYPE_TRAP = 0xf,$/;"	e	enum:__anon60
GCFINALIZENUM	src/lua_src/lgc.c	37;"	d	file:
GCObject	include/lua/lobject.h	/^typedef union GCObject GCObject;$/;"	t	typeref:union:GCObject
GCObject	include/lua/lstate.h	/^union GCObject {$/;"	u
GCSTEPSIZE	include/lua/lgc.h	32;"	d
GCSWEEPCOST	src/lua_src/lgc.c	31;"	d	file:
GCSWEEPMAX	src/lua_src/lgc.c	34;"	d	file:
GCSatomic	include/lua/lgc.h	40;"	d
GCSpause	include/lua/lgc.h	44;"	d
GCSpropagate	include/lua/lgc.h	39;"	d
GCSsweep	include/lua/lgc.h	43;"	d
GCSsweepstring	include/lua/lgc.h	41;"	d
GCSsweepudata	include/lua/lgc.h	42;"	d
GCTM	src/lua_src/lgc.c	/^static void GCTM (lua_State *L, int propagateerrors) {$/;"	f	file:
GCdebt	include/lua/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State
GCestimate	include/lua/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State
GCheader	include/lua/lobject.h	/^typedef struct GCheader {$/;"	s
GCheader	include/lua/lobject.h	/^} GCheader;$/;"	t	typeref:struct:GCheader
GCmemtrav	include/lua/lstate.h	/^  lu_mem GCmemtrav;  \/* memory traversed by the GC *\/$/;"	m	struct:global_State
GDRA	src/test/hpcg/comp-dotprod.h	100;"	d
GDRA	src/test/hpcg/comp-dotprod.h	44;"	d
GDRA	src/test/hpcg/comp-spmv.h	135;"	d
GDRA	src/test/hpcg/comp-spmv.h	44;"	d
GDRA	src/test/hpcg/comp-waxpby.h	112;"	d
GDRA	src/test/hpcg/comp-waxpby.h	44;"	d
GDT	src/asm/realmode.S	/^GDT   = LOAD_ADDR + (_gdt - .)$/;"	d
GDT16	src/asm/realmode.S	/^GDT16 = LOAD_ADDR + (_gdt16 - .)$/;"	d
GDT64	src/asm/realmode.S	/^GDT64 = LOAD_ADDR + (_gdt64 - .)$/;"	d
GENKSYMS	Makefile	/^GENKSYMS	= scripts\/genksyms\/genksyms$/;"	m
GEN_CAP_GET_CLK_PER	include/dev/hpet.h	42;"	d
GEN_CAP_GET_CNT_SZ_CAP	include/dev/hpet.h	45;"	d
GEN_CAP_GET_LEG_RT_CAP	include/dev/hpet.h	44;"	d
GEN_CAP_GET_NUM_TIMERS	include/dev/hpet.h	46;"	d
GEN_CAP_GET_REV_ID	include/dev/hpet.h	47;"	d
GEN_CAP_GET_VENDOR_ID	include/dev/hpet.h	43;"	d
GEN_CFG_GET_CNF_EN	include/dev/hpet.h	50;"	d
GEN_CFG_GET_LEG_RT_CNF	include/dev/hpet.h	49;"	d
GEN_DEF	src/nautilus/libccompat.c	/^GEN_DEF(__get_cpu_features);$/;"	v
GEN_DEF	src/nautilus/libccompat.c	42;"	d	file:
GEN_HDR	include/nautilus/libccompat.h	226;"	d
GEN_INT_GET_TN_INT_STAT	include/dev/hpet.h	52;"	d
GEN_NOP	include/asm/lowlevel.h	26;"	d
GEN_PROB_TID	src/test/hpcg/hpcg-problem.cc	/^    GEN_PROB_TID = 2,$/;"	e	enum:__anon112	file:
GEN_PT_MASK	include/nautilus/paging.h	129;"	d
GET	src/fs/ext2/ext2_access.c	/^enum dentry_op {GET,PUT,DEL_BY_NAME,DEL_BY_INODE};$/;"	e	enum:dentry_op	file:
GETARG_A	include/lua/lopcodes.h	97;"	d
GETARG_Ax	include/lua/lopcodes.h	109;"	d
GETARG_B	include/lua/lopcodes.h	100;"	d
GETARG_Bx	include/lua/lopcodes.h	106;"	d
GETARG_C	include/lua/lopcodes.h	103;"	d
GETARG_sBx	include/lua/lopcodes.h	112;"	d
GETCPU	src/test/benchmark.h	34;"	d
GETCPU	src/test/benchmark.h	67;"	d
GET_APIC_LOGICAL_ID	include/dev/apic.h	198;"	d
GET_APIC_LOGICAL_ID	include/dev/apic.h	202;"	d
GET_CURRENT_ARG_TYPE	src/acpi/acpica/acmacros.h	328;"	d
GET_NEXT_APERIODIC	src/nautilus/scheduler.c	293;"	d	file:
GET_NEXT_APERIODIC	src/nautilus/scheduler.c	297;"	d	file:
GET_NEXT_APERIODIC	src/nautilus/scheduler.c	306;"	d	file:
GET_NEXT_RT	src/nautilus/scheduler.c	322;"	d	file:
GET_NEXT_RT_PENDING	src/nautilus/scheduler.c	315;"	d	file:
GET_NODE_CALL	src/legion_runtime/region_tree.h	/^      GET_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GET_OPCODE	include/lua/lopcodes.h	89;"	d
GET_RECYCLE_EVENT_CALL	src/legion_runtime/region_tree.h	/^      GET_RECYCLE_EVENT_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GET_SUBVIEW_CALL	src/legion_runtime/region_tree.h	/^      GET_SUBVIEW_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
GHOST_PTR	src/test/circuit.h	/^  GHOST_PTR,$/;"	e	enum:PointerLocation
GLOBAL	include/asm/lowlevel.h	42;"	d
GLOBAL_LOCK	src/nautilus/scheduler.c	86;"	d	file:
GLOBAL_LOCK_CONF	src/nautilus/scheduler.c	85;"	d	file:
GLOBAL_MEM	src/legion_runtime/lowlevel.h	/^        GLOBAL_MEM, \/\/ Guaranteed visible to all processors on all nodes (e.g. GASNet memory, universally slow)$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
GLOBAL_MEM	src/legion_runtime/shared_lowlevel.cc	81;"	d	file:
GLOBAL_UNLOCK	src/nautilus/scheduler.c	87;"	d	file:
GLRA	src/test/hpcg/comp-spmv.h	136;"	d
GLRA	src/test/hpcg/comp-spmv.h	47;"	d
GLRA	src/test/hpcg/comp-waxpby.h	113;"	d
GLRA	src/test/hpcg/comp-waxpby.h	47;"	d
GOLDEN_RATIO_PRIME	src/nautilus/hashtable.c	83;"	d	file:
GOLDEN_RATIO_PRIME	src/nautilus/hashtable.c	87;"	d	file:
GPR_LOAD	src/asm/thread_lowlevel.S	/^#define GPR_LOAD()                              \\$/;"	d
GPR_LOAD_NO_RAX	src/asm/thread_lowlevel.S	/^#define GPR_LOAD_NO_RAX()	                \\$/;"	d
GPR_LOAD_SKIP_RAX	src/asm/thread_lowlevel.S	/^#define GPR_LOAD_SKIP_RAX()                     \\$/;"	d
GPR_RAX_OFFSET	src/nautilus/thread.c	253;"	d	file:
GPR_RDI_OFFSET	src/nautilus/thread.c	252;"	d	file:
GPR_SAVE	src/asm/thread_lowlevel.S	/^#define GPR_SAVE()	                        \\$/;"	d
GPR_SAVE_SIZE	src/asm/thread_lowlevel.S	/^#define GPR_SAVE_SIZE (15*8)$/;"	d
GPR_SAVE_SIZE	src/nautilus/thread.c	254;"	d	file:
GPUFBMemory	src/legion_runtime/lowlevel_gpu.cc	/^    GPUFBMemory::GPUFBMemory(Memory _me, GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
GPUFBMemory	src/legion_runtime/lowlevel_gpu.h	/^    class GPUFBMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GPUJob	src/legion_runtime/lowlevel_gpu.cc	/^      GPUJob(GPUProcessor *_gpu, Event _finish_event)$/;"	f	class:LegionRuntime::LowLevel::GPUJob
GPUJob	src/legion_runtime/lowlevel_gpu.cc	/^    class GPUJob : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUMemcpy	src/legion_runtime/lowlevel_gpu.cc	/^      GPUMemcpy(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
GPUMemcpy	src/legion_runtime/lowlevel_gpu.cc	/^    class GPUMemcpy : public GPUJob {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUMemcpy1D	src/legion_runtime/lowlevel_gpu.cc	/^      GPUMemcpy1D(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
GPUMemcpy1D	src/legion_runtime/lowlevel_gpu.cc	/^    class GPUMemcpy1D : public GPUMemcpy {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUMemcpy2D	src/legion_runtime/lowlevel_gpu.cc	/^      GPUMemcpy2D(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy2D
GPUMemcpy2D	src/legion_runtime/lowlevel_gpu.cc	/^    class GPUMemcpy2D : public GPUMemcpy {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUPeerMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      GPUPeerMemPairCopier(GPUProcessor *_src, GPUProcessor *_dst)$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
GPUPeerMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class GPUPeerMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUProcessor	src/legion_runtime/lowlevel_gpu.cc	/^    GPUProcessor::GPUProcessor(Processor _me, int _gpu_index, $/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
GPUProcessor	src/legion_runtime/lowlevel_gpu.h	/^    class GPUProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GPUTask	src/legion_runtime/lowlevel_gpu.cc	/^    GPUTask::GPUTask(GPUProcessor *_gpu, Event _finish_event,$/;"	f	class:LegionRuntime::LowLevel::GPUTask
GPUTask	src/legion_runtime/lowlevel_gpu.cc	/^    class GPUTask : public GPUJob {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUZCMemory	src/legion_runtime/lowlevel_gpu.cc	/^    GPUZCMemory::GPUZCMemory(Memory _me, GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
GPUZCMemory	src/legion_runtime/lowlevel_gpu.h	/^    class GPUZCMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
GPU_BASE_LEAF	src/test/circuit.h	/^  static const bool GPU_BASE_LEAF = true;$/;"	m	class:CalcNewCurrentsTask
GPU_BASE_LEAF	src/test/circuit.h	/^  static const bool GPU_BASE_LEAF = true;$/;"	m	class:DistributeChargeTask
GPU_BASE_LEAF	src/test/circuit.h	/^  static const bool GPU_BASE_LEAF = true;$/;"	m	class:UpdateVoltagesTask
GPU_FB_MEM	src/legion_runtime/lowlevel.h	/^        GPU_FB_MEM,   \/\/ Framebuffer memory for one GPU and all its SMs$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
GPUfromFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      GPUfromFBMemPairCopier(GPUProcessor *_gpu, Memory _dst_mem)$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
GPUfromFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class GPUfromFBMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUinFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      GPUinFBMemPairCopier(GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
GPUinFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class GPUinFBMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GPUtoFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      GPUtoFBMemPairCopier(Memory _src_mem, GPUProcessor *_gpu)$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
GPUtoFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class GPUtoFBMemPairCopier : public DelayedMemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
GP_EXCP	include/nautilus/idt.h	48;"	d
GRANT_ALLOC	src/legion_runtime/legion_allocation.h	/^      GRANT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
GRUBMKRESCUE	Makefile	/^GRUBMKRESCUE    = $(CROSS_COMPILE)grub-mkrescue$/;"	m
GS_BASE_MSR	src/asm/realmode.S	/^GS_BASE_MSR = 0xc0000101$/;"	d
GarbageCollectionArgs	src/legion_runtime/runtime.h	/^      struct GarbageCollectionArgs {$/;"	s	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
GarbageCollectionEpoch	src/legion_runtime/runtime.cc	/^    GarbageCollectionEpoch::GarbageCollectionEpoch($/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
GarbageCollectionEpoch	src/legion_runtime/runtime.cc	/^    GarbageCollectionEpoch::GarbageCollectionEpoch(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
GarbageCollectionEpoch	src/legion_runtime/runtime.h	/^    class GarbageCollectionEpoch {$/;"	c	namespace:LegionRuntime::HighLevel
GasnetGet	src/legion_runtime/lowlevel.cc	/^	GasnetGet(void *_tgt_ptr,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
GasnetGet	src/legion_runtime/lowlevel.cc	/^      class GasnetGet {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGet	src/legion_runtime/lowlevel_dma.cc	/^	GasnetGet(void *_tgt_ptr,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
GasnetGet	src/legion_runtime/lowlevel_dma.cc	/^      class GasnetGet {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGetAndPut	src/legion_runtime/lowlevel.cc	/^	GasnetGetAndPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
GasnetGetAndPut	src/legion_runtime/lowlevel.cc	/^      class GasnetGetAndPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGetAndPut	src/legion_runtime/lowlevel_dma.cc	/^	GasnetGetAndPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
GasnetGetAndPut	src/legion_runtime/lowlevel_dma.cc	/^      class GasnetGetAndPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetGetBatched	src/legion_runtime/lowlevel_dma.cc	/^	GasnetGetBatched(void *_tgt_ptr,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched
GasnetGetBatched	src/legion_runtime/lowlevel_dma.cc	/^      class GasnetGetBatched {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPut	src/legion_runtime/lowlevel.cc	/^	GasnetPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
GasnetPut	src/legion_runtime/lowlevel.cc	/^      class GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPut	src/legion_runtime/lowlevel_dma.cc	/^	GasnetPut(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
GasnetPut	src/legion_runtime/lowlevel_dma.cc	/^      class GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutBatched	src/legion_runtime/lowlevel_dma.cc	/^	GasnetPutBatched(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched
GasnetPutBatched	src/legion_runtime/lowlevel_dma.cc	/^      class GasnetPutBatched {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutRedList	src/legion_runtime/lowlevel_dma.cc	/^	GasnetPutRedList(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList
GasnetPutRedList	src/legion_runtime/lowlevel_dma.cc	/^      class GasnetPutRedList : public GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutReduce	src/legion_runtime/lowlevel.cc	/^	GasnetPutReduce(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
GasnetPutReduce	src/legion_runtime/lowlevel.cc	/^      class GasnetPutReduce : public GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GasnetPutReduce	src/legion_runtime/lowlevel_dma.cc	/^	GasnetPutReduce(Memory::Impl *_tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
GasnetPutReduce	src/legion_runtime/lowlevel_dma.cc	/^      class GasnetPutReduce : public GasnetPut {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GatherScatter	src/legion_runtime/shared_lowlevel.cc	/^	GatherScatter(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
GatherScatter	src/legion_runtime/shared_lowlevel.cc	/^      class GatherScatter {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
GenerationID	src/legion_runtime/legion_types.h	/^    typedef unsigned int GenerationID;$/;"	t	namespace:LegionRuntime::HighLevel
Generic	src/legion_runtime/accessor.h	/^      struct Generic {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
GenericDenseSubrectIterator	src/legion_runtime/arrays.h	/^      GenericDenseSubrectIterator(const Rect<T::IDIM> r, const T& m)$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
GenericDenseSubrectIterator	src/legion_runtime/arrays.h	/^    class GenericDenseSubrectIterator {$/;"	c	namespace:LegionRuntime::Arrays
GenericLinearSubrectIterator	src/legion_runtime/arrays.h	/^      GenericLinearSubrectIterator(const Rect<T::IDIM> r, const T& m)$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
GenericLinearSubrectIterator	src/legion_runtime/arrays.h	/^    class GenericLinearSubrectIterator {$/;"	c	namespace:LegionRuntime::Arrays
GenericPointInRectIterator	src/legion_runtime/arrays.h	/^      GenericPointInRectIterator(const Rect<DIM> _r) : r(_r)$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
GenericPointInRectIterator	src/legion_runtime/arrays.h	/^    class GenericPointInRectIterator {$/;"	c	namespace:LegionRuntime::Arrays
GenericUser	src/legion_runtime/region_tree.h	/^      GenericUser(const RegionUsage &u, const FieldMask &m)$/;"	f	struct:LegionRuntime::HighLevel::GenericUser
GenericUser	src/legion_runtime/region_tree.h	/^      GenericUser(void) { }$/;"	f	struct:LegionRuntime::HighLevel::GenericUser
GenericUser	src/legion_runtime/region_tree.h	/^    struct GenericUser {$/;"	s	namespace:LegionRuntime::HighLevel
Geometry	src/test/hpcg/geometry.h	/^    Geometry(int64_t size,$/;"	f	struct:lgncg::Geometry
Geometry	src/test/hpcg/geometry.h	/^    Geometry(void)$/;"	f	struct:lgncg::Geometry
Geometry	src/test/hpcg/geometry.h	/^struct Geometry {$/;"	s	namespace:lgncg
Grant	src/legion_runtime/legion.cc	/^    Grant::Grant(Grant::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::Grant
Grant	src/legion_runtime/legion.cc	/^    Grant::Grant(const Grant &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant
Grant	src/legion_runtime/legion.cc	/^    Grant::Grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant
Grant	src/legion_runtime/legion.h	/^    class Grant {$/;"	c	namespace:LegionRuntime::HighLevel
HANDLERARG_COPY_1	src/legion_runtime/activemsg.h	228;"	d
HANDLERARG_COPY_10	src/legion_runtime/activemsg.h	237;"	d
HANDLERARG_COPY_11	src/legion_runtime/activemsg.h	238;"	d
HANDLERARG_COPY_12	src/legion_runtime/activemsg.h	239;"	d
HANDLERARG_COPY_13	src/legion_runtime/activemsg.h	240;"	d
HANDLERARG_COPY_14	src/legion_runtime/activemsg.h	241;"	d
HANDLERARG_COPY_15	src/legion_runtime/activemsg.h	242;"	d
HANDLERARG_COPY_16	src/legion_runtime/activemsg.h	243;"	d
HANDLERARG_COPY_2	src/legion_runtime/activemsg.h	229;"	d
HANDLERARG_COPY_3	src/legion_runtime/activemsg.h	230;"	d
HANDLERARG_COPY_4	src/legion_runtime/activemsg.h	231;"	d
HANDLERARG_COPY_5	src/legion_runtime/activemsg.h	232;"	d
HANDLERARG_COPY_6	src/legion_runtime/activemsg.h	233;"	d
HANDLERARG_COPY_7	src/legion_runtime/activemsg.h	234;"	d
HANDLERARG_COPY_8	src/legion_runtime/activemsg.h	235;"	d
HANDLERARG_COPY_9	src/legion_runtime/activemsg.h	236;"	d
HANDLERARG_DECL_1	src/legion_runtime/activemsg.h	177;"	d
HANDLERARG_DECL_10	src/legion_runtime/activemsg.h	186;"	d
HANDLERARG_DECL_11	src/legion_runtime/activemsg.h	187;"	d
HANDLERARG_DECL_12	src/legion_runtime/activemsg.h	188;"	d
HANDLERARG_DECL_13	src/legion_runtime/activemsg.h	189;"	d
HANDLERARG_DECL_14	src/legion_runtime/activemsg.h	190;"	d
HANDLERARG_DECL_15	src/legion_runtime/activemsg.h	191;"	d
HANDLERARG_DECL_16	src/legion_runtime/activemsg.h	192;"	d
HANDLERARG_DECL_2	src/legion_runtime/activemsg.h	178;"	d
HANDLERARG_DECL_3	src/legion_runtime/activemsg.h	179;"	d
HANDLERARG_DECL_4	src/legion_runtime/activemsg.h	180;"	d
HANDLERARG_DECL_5	src/legion_runtime/activemsg.h	181;"	d
HANDLERARG_DECL_6	src/legion_runtime/activemsg.h	182;"	d
HANDLERARG_DECL_7	src/legion_runtime/activemsg.h	183;"	d
HANDLERARG_DECL_8	src/legion_runtime/activemsg.h	184;"	d
HANDLERARG_DECL_9	src/legion_runtime/activemsg.h	185;"	d
HANDLERARG_PARAMS_1	src/legion_runtime/activemsg.h	211;"	d
HANDLERARG_PARAMS_10	src/legion_runtime/activemsg.h	220;"	d
HANDLERARG_PARAMS_11	src/legion_runtime/activemsg.h	221;"	d
HANDLERARG_PARAMS_12	src/legion_runtime/activemsg.h	222;"	d
HANDLERARG_PARAMS_13	src/legion_runtime/activemsg.h	223;"	d
HANDLERARG_PARAMS_14	src/legion_runtime/activemsg.h	224;"	d
HANDLERARG_PARAMS_15	src/legion_runtime/activemsg.h	225;"	d
HANDLERARG_PARAMS_16	src/legion_runtime/activemsg.h	226;"	d
HANDLERARG_PARAMS_2	src/legion_runtime/activemsg.h	212;"	d
HANDLERARG_PARAMS_3	src/legion_runtime/activemsg.h	213;"	d
HANDLERARG_PARAMS_4	src/legion_runtime/activemsg.h	214;"	d
HANDLERARG_PARAMS_5	src/legion_runtime/activemsg.h	215;"	d
HANDLERARG_PARAMS_6	src/legion_runtime/activemsg.h	216;"	d
HANDLERARG_PARAMS_7	src/legion_runtime/activemsg.h	217;"	d
HANDLERARG_PARAMS_8	src/legion_runtime/activemsg.h	218;"	d
HANDLERARG_PARAMS_9	src/legion_runtime/activemsg.h	219;"	d
HANDLERARG_VALS_1	src/legion_runtime/activemsg.h	194;"	d
HANDLERARG_VALS_10	src/legion_runtime/activemsg.h	203;"	d
HANDLERARG_VALS_11	src/legion_runtime/activemsg.h	204;"	d
HANDLERARG_VALS_12	src/legion_runtime/activemsg.h	205;"	d
HANDLERARG_VALS_13	src/legion_runtime/activemsg.h	206;"	d
HANDLERARG_VALS_14	src/legion_runtime/activemsg.h	207;"	d
HANDLERARG_VALS_15	src/legion_runtime/activemsg.h	208;"	d
HANDLERARG_VALS_16	src/legion_runtime/activemsg.h	209;"	d
HANDLERARG_VALS_2	src/legion_runtime/activemsg.h	195;"	d
HANDLERARG_VALS_3	src/legion_runtime/activemsg.h	196;"	d
HANDLERARG_VALS_4	src/legion_runtime/activemsg.h	197;"	d
HANDLERARG_VALS_5	src/legion_runtime/activemsg.h	198;"	d
HANDLERARG_VALS_6	src/legion_runtime/activemsg.h	199;"	d
HANDLERARG_VALS_7	src/legion_runtime/activemsg.h	200;"	d
HANDLERARG_VALS_8	src/legion_runtime/activemsg.h	201;"	d
HANDLERARG_VALS_9	src/legion_runtime/activemsg.h	202;"	d
HAS_READ	src/legion_runtime/legion_utilities.h	54;"	d
HAS_WAR_DEPENDENCE_ABOVE_CALL	src/legion_runtime/region_tree.h	/^      HAS_WAR_DEPENDENCE_ABOVE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
HAS_WAR_DEPENDENCE_CALL	src/legion_runtime/region_tree.h	/^      HAS_WAR_DEPENDENCE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
HAS_WRITE	src/legion_runtime/legion_utilities.h	55;"	d
HAVE_APERIODIC	src/nautilus/scheduler.c	301;"	d	file:
HAVE_APERIODIC	src/nautilus/scheduler.c	311;"	d	file:
HAVE_RT	src/nautilus/scheduler.c	325;"	d	file:
HAVE_RT_PENDING	src/nautilus/scheduler.c	318;"	d	file:
HAVE_SYS_TYPES_H	src/fs/ext2/ext2_types.h	168;"	d
HCALL64	include/arch/hrt/hrt.h	62;"	d
HD	src/dev/ata.c	/^    enum {NONE=0, HD, CD} type;$/;"	e	enum:ata_blkdev_state::__anon134	file:
HELLO_WORLD_ID	src/test/hello_world.cc	/^  HELLO_WORLD_ID,$/;"	e	enum:TaskID	file:
HELLO_WORLD_INDEX_ID	src/test/index_tasks.cc	/^  HELLO_WORLD_INDEX_ID,$/;"	e	enum:TaskIDs	file:
HELP	scripts/kconfig/lex.zconf.c	807;"	d	file:
HIERARCHICAL_REMOVE_REMOTE	src/legion_runtime/runtime.h	/^        HIERARCHICAL_REMOVE_REMOTE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
HIERARCHICAL_REMOVE_RESOURCE	src/legion_runtime/runtime.h	/^        HIERARCHICAL_REMOVE_RESOURCE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
HLIST_HEAD	include/nautilus/list.h	468;"	d
HLIST_HEAD_INIT	include/nautilus/list.h	467;"	d
HLRTaskID	src/legion_runtime/legion_types.h	/^    enum HLRTaskID {$/;"	g	namespace:LegionRuntime::HighLevel
HLR_DEFERRED_COLLECT_ID	src/legion_runtime/legion_types.h	/^      HLR_DEFERRED_COLLECT_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_COMPLETE_ID	src/legion_runtime/legion_types.h	/^      HLR_DEFERRED_COMPLETE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_FUTURE_MAP_SET_ID	src/legion_runtime/legion_types.h	/^      HLR_DEFERRED_FUTURE_MAP_SET_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_FUTURE_SET_ID	src/legion_runtime/legion_types.h	/^      HLR_DEFERRED_FUTURE_SET_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_MAPPING_ID	src/legion_runtime/legion_types.h	/^      HLR_DEFERRED_MAPPING_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_RECYCLE_ID	src/legion_runtime/legion_types.h	/^      HLR_DEFERRED_RECYCLE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_DEFERRED_SLICE_ID	src/legion_runtime/legion_types.h	/^      HLR_DEFERRED_SLICE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MESSAGE_ID	src/legion_runtime/legion_types.h	/^      HLR_MESSAGE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MPI_RANK_ID	src/legion_runtime/legion_types.h	/^      HLR_MPI_RANK_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_DIST_ID	src/legion_runtime/legion_types.h	/^      HLR_MUST_DIST_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_INDEX_ID	src/legion_runtime/legion_types.h	/^      HLR_MUST_INDEX_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_INDIV_ID	src/legion_runtime/legion_types.h	/^      HLR_MUST_INDIV_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_LAUNCH_ID	src/legion_runtime/legion_types.h	/^      HLR_MUST_LAUNCH_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_MUST_MAP_ID	src/legion_runtime/legion_types.h	/^      HLR_MUST_MAP_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_POST_END_ID	src/legion_runtime/legion_types.h	/^      HLR_POST_END_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_RECLAIM_LOCAL_FIELD_ID	src/legion_runtime/legion_types.h	/^      HLR_RECLAIM_LOCAL_FIELD_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_RESOLVE_FUTURE_PRED_ID	src/legion_runtime/legion_types.h	/^      HLR_RESOLVE_FUTURE_PRED_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_SCHEDULER_ID	src/legion_runtime/legion_types.h	/^      HLR_SCHEDULER_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_TASK_ID	src/legion_runtime/legion_types.h	/^      HLR_TASK_ID           = LowLevel::Processor::TASK_ID_FIRST_AVAILABLE,$/;"	e	enum:LegionRuntime::HighLevel::__anon92
HLR_TRIGGER_DEPENDENCE_ID	src/legion_runtime/legion_types.h	/^      HLR_TRIGGER_DEPENDENCE_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_TRIGGER_OP_ID	src/legion_runtime/legion_types.h	/^      HLR_TRIGGER_OP_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HLR_TRIGGER_TASK_ID	src/legion_runtime/legion_types.h	/^      HLR_TRIGGER_TASK_ID,$/;"	e	enum:LegionRuntime::HighLevel::HLRTaskID
HOOKKEY	src/lua_src/ldblib.c	24;"	d	file:
HOSTCC	Makefile	/^HOSTCC  	= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	= -Wall -Wstrict-prototypes  -fomit-frame-pointer \\$/;"	m
HOSTCFLAGS_gconf.o	scripts/kconfig/Makefile	/^HOSTCFLAGS_gconf.o	= `pkg-config --cflags gtk+-2.0 gmodule-2.0 libglade-2.0` \\$/;"	m
HOSTCFLAGS_lex.zconf.o	scripts/kconfig/Makefile	/^HOSTCFLAGS_lex.zconf.o	:= -I$(src)$/;"	m
HOSTCFLAGS_zconf.tab.o	scripts/kconfig/Makefile	/^HOSTCFLAGS_zconf.tab.o	:= -I$(src)$/;"	m
HOSTCXX	Makefile	/^HOSTCXX  	= g++$/;"	m
HOSTCXXFLAGS	Makefile	/^HOSTCXXFLAGS	= -O$/;"	m
HOSTCXXFLAGS_qconf.o	scripts/kconfig/Makefile	/^HOSTCXXFLAGS_qconf.o	= $(KC_QT_CFLAGS) -D LKC_DIRECT_LINK$/;"	m
HOSTLOADLIBES_gconf	scripts/kconfig/Makefile	/^HOSTLOADLIBES_gconf	= `pkg-config --libs gtk+-2.0 gmodule-2.0 libglade-2.0`$/;"	m
HOSTLOADLIBES_qconf	scripts/kconfig/Makefile	/^HOSTLOADLIBES_qconf	= -ltinfo $(KC_QT_LIBS) -ldl $/;"	m
HOST_EXTRACFLAGS	scripts/kconfig/lxdialog/Makefile	/^HOST_EXTRACFLAGS = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ccflags)$/;"	m
HOST_LOADLIBES	scripts/kconfig/lxdialog/Makefile	/^HOST_LOADLIBES   = $(shell $(CONFIG_SHELL) $(check-lxdialog) -ldflags $(HOSTCC))$/;"	m
HPCGTaskArgs	src/test/hpcg/hpcg-problem.cc	/^    HPCGTaskArgs(const lgncg::Geometry &geom,$/;"	f	struct:__anon113::HPCGTaskArgs
HPCGTaskArgs	src/test/hpcg/hpcg-problem.cc	/^struct HPCGTaskArgs {$/;"	s	namespace:__anon113	file:
HPCG_PROBLEM_GENERATOR_H_INCLUDED	src/test/hpcg/hpcg-problem-generator.h	45;"	d
HPCG_PROBLEM_H_INCLUDED	src/test/hpcg/hpcg-problem.h	31;"	d
HPET_COUNTER_HALTED	include/dev/hpet.h	/^typedef enum { HPET_COUNTER_HALTED, HPET_COUNTER_RUNNING } hpet_stat_t;$/;"	e	enum:__anon77
HPET_COUNTER_RUNNING	include/dev/hpet.h	/^typedef enum { HPET_COUNTER_HALTED, HPET_COUNTER_RUNNING } hpet_stat_t;$/;"	e	enum:__anon77
HPET_DEBUG	src/dev/hpet.c	39;"	d	file:
HPET_GEN_CAP_ID_REG	include/dev/hpet.h	33;"	d
HPET_GEN_CFG_REG	include/dev/hpet.h	34;"	d
HPET_GEN_INT_STAT_REG	include/dev/hpet.h	35;"	d
HPET_MAIN_CTR_REG	include/dev/hpet.h	36;"	d
HPET_MAP_LEGACY	include/dev/hpet.h	/^typedef enum { HPET_MAP_STD, HPET_MAP_LEGACY } hpet_map_type_t;$/;"	e	enum:__anon76
HPET_MAP_STD	include/dev/hpet.h	/^typedef enum { HPET_MAP_STD, HPET_MAP_LEGACY } hpet_map_type_t;$/;"	e	enum:__anon76
HPET_PRINT	src/dev/hpet.c	38;"	d	file:
HRT_DEBUG	src/arch/hrt/hrt.c	39;"	d	file:
HRT_FLAGS	include/arch/hrt/hrt.h	114;"	d
HRT_FLAGS	include/arch/hrt/hrt.h	116;"	d
HRT_FLAGS	include/arch/hrt/hrt.h	118;"	d
HRT_FLAGS	include/arch/hrt/hrt.h	120;"	d
HRT_HIHALF_OFFSET	include/nautilus/paging.h	230;"	d
HRT_HIHALF_OFFSET	include/nautilus/paging.h	232;"	d
HRT_PRINT	src/arch/hrt/hrt.c	40;"	d	file:
HRT_WARN	src/arch/hrt/hrt.c	41;"	d	file:
HUGE_VAL	src/lua_src/lmathlib.c	8;"	d	file:
HVM_HCALL_NUM	include/arch/hrt/hrt.h	39;"	d
HandleType	src/legion_runtime/legion_types.h	/^    enum HandleType {$/;"	g	namespace:LegionRuntime::HighLevel
HandlerReplyFuture	src/legion_runtime/activemsg.h	/^  HandlerReplyFuture(void) {$/;"	f	struct:HandlerReplyFuture
HandlerReplyFuture	src/legion_runtime/activemsg.h	/^template <class T> struct HandlerReplyFuture {$/;"	s
HasSerialize	src/legion_runtime/legion.h	/^      struct HasSerialize {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
HierarchicalCollectable	src/legion_runtime/garbage_collection.cc	/^    HierarchicalCollectable::HierarchicalCollectable(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
HierarchicalCollectable	src/legion_runtime/garbage_collection.h	/^    class HierarchicalCollectable : public CollectableState {$/;"	c	namespace:LegionRuntime::HighLevel
HighLevel	src/legion_runtime/alt_mappers.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/alt_mappers.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/default_mapper.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/default_mapper.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/field_tree.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/garbage_collection.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/garbage_collection.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/interval_tree.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/legion.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_allocation.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_logging.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/legion_logging.h	/^  namespace HighLevel { $/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_ops.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/legion_ops.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_profiling.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_spy.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/legion_spy.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_tasks.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/legion_tasks.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_trace.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/legion_trace.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_types.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/legion_utilities.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/mapping_utilities.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/mapping_utilities.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/rectangle_set.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/region_tree.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/region_tree.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/runtime.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/runtime.h	/^  namespace HighLevel { $/;"	n	namespace:LegionRuntime
HighLevel	src/legion_runtime/shim_mapper.cc	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime	file:
HighLevel	src/legion_runtime/shim_mapper.h	/^  namespace HighLevel {$/;"	n	namespace:LegionRuntime
HighLevelRuntime	src/legion_runtime/legion.cc	/^    HighLevelRuntime::HighLevelRuntime(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
HighLevelRuntime	src/legion_runtime/legion.h	/^    class HighLevelRuntime {$/;"	c	namespace:LegionRuntime::HighLevel
HybridSOA	src/legion_runtime/accessor.h	/^      struct HybridSOA {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
I64Tuple	src/test/hpcg/sparsemat.h	/^    I64Tuple(int64_t a, int64_t b) : a(a), b(b) { ; }$/;"	f	struct:lgncg::I64Tuple
I64Tuple	src/test/hpcg/sparsemat.h	/^    I64Tuple(void) : a(0), b(0) { ; }$/;"	f	struct:lgncg::I64Tuple
I64Tuple	src/test/hpcg/sparsemat.h	/^struct I64Tuple {$/;"	s	namespace:lgncg
IA32_APIC_BASE_MSR_BSP	include/dev/apic.h	56;"	d
IA32_APIC_BASE_MSR_ENABLE	include/dev/apic.h	57;"	d
IA32_MISC_ENABLES	include/nautilus/msr.h	37;"	d
IA32_MSR_APIC_BASE	include/nautilus/msr.h	34;"	d
IA32_MSR_EFER	include/nautilus/msr.h	33;"	d
ICON_HEIGHT	include/nautilus/idle.h	27;"	d
ICON_WIDTH	include/nautilus/idle.h	26;"	d
ICR_DEL_MODE_INIT	include/dev/apic.h	75;"	d
ICR_DEL_MODE_LOWEST	include/dev/apic.h	72;"	d
ICR_DEL_MODE_NMI	include/dev/apic.h	74;"	d
ICR_DEL_MODE_SMI	include/dev/apic.h	73;"	d
ICR_DEL_MODE_STARTUP	include/dev/apic.h	76;"	d
ICR_DST_MODE_LOG	include/dev/apic.h	78;"	d
ICR_LEVEL_ASSERT	include/dev/apic.h	80;"	d
ICR_SEND_PENDING	include/dev/apic.h	79;"	d
ICR_TRIG_MODE_LEVEL	include/dev/apic.h	81;"	d
ID	src/legion_runtime/lowlevel_impl.h	/^      ID(IDType _value) : value(_value) {}$/;"	f	class:LegionRuntime::LowLevel::ID
ID	src/legion_runtime/lowlevel_impl.h	/^      ID(ID_Types _type, unsigned _node, IDType _index)$/;"	f	class:LegionRuntime::LowLevel::ID
ID	src/legion_runtime/lowlevel_impl.h	/^      ID(ID_Types _type, unsigned _node, IDType _index_h, IDType _index_l)$/;"	f	class:LegionRuntime::LowLevel::ID
ID	src/legion_runtime/lowlevel_impl.h	/^      ID(T thing_to_get_id_from) : value(thing_to_get_id_from.id) {}$/;"	f	class:LegionRuntime::LowLevel::ID
ID	src/legion_runtime/lowlevel_impl.h	/^    class ID {$/;"	c	namespace:LegionRuntime::LowLevel
IDFMT	src/legion_runtime/lowlevel.h	52;"	d
IDFMT	src/legion_runtime/lowlevel.h	55;"	d
IDIM	src/legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = 1 };$/;"	e	enum:LegionRuntime::Arrays::Linearization::__anon84
IDIM	src/legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Blockify::__anon85
IDIM	src/legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Translation::__anon83
IDIM	src/legion_runtime/arrays.h	/^      enum { IDIM = T::IDIM, ODIM = T::ODIM };$/;"	e	enum:LegionRuntime::Arrays::DynamicMapping::__anon82
IDIM	src/legion_runtime/arrays.h	/^      static const unsigned IDIM = IDIM_;$/;"	m	class:LegionRuntime::Arrays::Mapping
IDT16	src/asm/realmode.S	/^IDT16 = LOAD_ADDR + (_idt16 - .)$/;"	d
IDT64	src/asm/realmode.S	/^IDT64 = LOAD_ADDR + (_idt64 - .)$/;"	d
IDType	src/legion_runtime/legion_spy.h	/^      typedef LegionRuntime::LowLevel::IDType IDType;$/;"	t	namespace:LegionRuntime::HighLevel::LegionSpy
IDType	src/legion_runtime/lowlevel.h	/^    typedef unsigned IDType;$/;"	t	namespace:LegionRuntime::LowLevel
IDType	src/legion_runtime/lowlevel.h	/^    typedef unsigned long long IDType;$/;"	t	namespace:LegionRuntime::LowLevel
ID_ALLOCATOR	src/legion_runtime/lowlevel_impl.h	/^	ID_ALLOCATOR,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_EVENT	src/legion_runtime/lowlevel_impl.h	/^	ID_EVENT,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_GLOBAL_MEM	src/legion_runtime/lowlevel_impl.h	/^	ID_GLOBAL_MEM = (1U << INDEX_H_BITS) - 1,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Specials
ID_INDEXSPACE	src/legion_runtime/lowlevel_impl.h	/^	ID_INDEXSPACE,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_INSTANCE	src/legion_runtime/lowlevel_impl.h	/^	ID_INSTANCE,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_INVALID	src/legion_runtime/lowlevel_impl.h	/^	ID_INVALID = 0,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Specials
ID_LOCK	src/legion_runtime/lowlevel_impl.h	/^	ID_LOCK,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_MEMORY	src/legion_runtime/lowlevel_impl.h	/^	ID_MEMORY,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_PROCESSOR	src/legion_runtime/lowlevel_impl.h	/^	ID_PROCESSOR,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_PROCGROUP	src/legion_runtime/lowlevel_impl.h	/^	ID_PROCGROUP,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_SPECIAL	src/legion_runtime/lowlevel_impl.h	/^	ID_SPECIAL,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_Specials	src/legion_runtime/lowlevel_impl.h	/^      enum ID_Specials {$/;"	g	class:LegionRuntime::LowLevel::ID
ID_TYPE	src/legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_EVENT;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
ID_TYPE	src/legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_INDEXSPACE;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
ID_TYPE	src/legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_LOCK;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
ID_TYPE	src/legion_runtime/lowlevel_impl.h	/^      static const ID::ID_Types ID_TYPE = ID::ID_PROCGROUP;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
ID_Types	src/legion_runtime/lowlevel_impl.h	/^      enum ID_Types {$/;"	g	class:LegionRuntime::LowLevel::ID
ID_UNUSED_1	src/legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_1,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_11	src/legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_11,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_13	src/legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_13,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_15	src/legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_15,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_3	src/legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_3,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_5	src/legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_5,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
ID_UNUSED_7	src/legion_runtime/lowlevel_impl.h	/^	ID_UNUSED_7,$/;"	e	enum:LegionRuntime::LowLevel::ID::ID_Types
IF_EARLIER	include/dev/apic.h	/^typedef enum {UNCOND, IF_EARLIER, IF_LATER} nk_timer_condition_t;$/;"	e	enum:__anon71
IF_LATER	include/dev/apic.h	/^typedef enum {UNCOND, IF_EARLIER, IF_LATER} nk_timer_condition_t;$/;"	e	enum:__anon71
INACTIVE_STATE	src/legion_runtime/garbage_collection.h	/^        INACTIVE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
INCREMENT_ARG_LIST	src/acpi/acpica/acmacros.h	329;"	d
INDEXK	include/lua/lopcodes.h	140;"	d
INDEX_BITS	src/legion_runtime/lowlevel_impl.h	/^	INDEX_BITS = INDEX_H_BITS + INDEX_L_BITS,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon101
INDEX_DIM	src/test/circuit.h	37;"	d
INDEX_H_BITS	src/legion_runtime/lowlevel_impl.h	/^	INDEX_H_BITS = 12,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon101
INDEX_L_BITS	src/legion_runtime/lowlevel_impl.h	/^	INDEX_L_BITS = 32,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon101
INDEX_PARTITION_DELETION	src/legion_runtime/legion_ops.h	/^        INDEX_PARTITION_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
INDEX_PARTITION_DESTRUCTION_MESSAGE	src/legion_runtime/runtime.h	/^        INDEX_PARTITION_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDEX_SPACE_DELETION	src/legion_runtime/legion_ops.h	/^        INDEX_SPACE_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
INDEX_SPACE_DESTRUCTION_MESSAGE	src/legion_runtime/runtime.h	/^        INDEX_SPACE_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDEX_TASK_ALLOC	src/legion_runtime/legion_allocation.h	/^      INDEX_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INDEX_TASK_KIND	src/legion_runtime/legion_tasks.h	/^        INDEX_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
INDEX_TYPE	src/test/circuit.h	36;"	d
INDIVIDUAL_REMOTE_COMMIT	src/legion_runtime/runtime.h	/^        INDIVIDUAL_REMOTE_COMMIT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDIVIDUAL_REMOTE_COMPLETE	src/legion_runtime/runtime.h	/^        INDIVIDUAL_REMOTE_COMPLETE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDIVIDUAL_REMOTE_MAPPED	src/legion_runtime/runtime.h	/^        INDIVIDUAL_REMOTE_MAPPED,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
INDIVIDUAL_TASK_ALLOC	src/legion_runtime/legion_allocation.h	/^      INDIVIDUAL_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INDIVIDUAL_TASK_KIND	src/legion_runtime/legion_tasks.h	/^        INDIVIDUAL_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
INFO	src/dev/ata.c	35;"	d	file:
INFO	src/dev/kbd.c	39;"	d	file:
INFO	src/dev/ramdisk.c	34;"	d	file:
INFO	src/dev/vesa.c	35;"	d	file:
INFO	src/dev/virtio_pci.c	10;"	d	file:
INFO	src/fs/ext2/ext2.c	41;"	d	file:
INFO	src/nautilus/blkdev.c	35;"	d	file:
INFO	src/nautilus/chardev.c	35;"	d	file:
INFO	src/nautilus/dev.c	35;"	d	file:
INFO	src/nautilus/fs.c	31;"	d	file:
INFO	src/nautilus/netdev.c	35;"	d	file:
INFO	src/nautilus/realmode.c	36;"	d	file:
INFO	src/nautilus/scheduler.c	57;"	d	file:
INFO	src/nautilus/testfs.c	26;"	d	file:
INFO	src/nautilus/testfs.c	28;"	d	file:
INFO	src/nautilus/timer.c	42;"	d	file:
INFO	src/nautilus/vc.c	50;"	d	file:
INFO_PRINT	include/nautilus/nautilus.h	40;"	d
INFO_WIN_LINES	xeon_phi/linux_usr/phi_console.c	34;"	d	file:
INITIAL	scripts/kconfig/lex.zconf.c	805;"	d	file:
INITIALIZE_LOGICAL_CALL	src/legion_runtime/region_tree.h	/^      INITIALIZE_LOGICAL_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INITIALIZE_PHYSICAL_STATE_CALL	src/legion_runtime/region_tree.h	/^      INITIALIZE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INIT_FIELD_TASK_ID	src/test/custom_mapper.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FIELD_TASK_ID	src/test/multiple_partitions.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FIELD_TASK_ID	src/test/partitioning.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FIELD_TASK_ID	src/test/privileges.cc	/^  INIT_FIELD_TASK_ID,$/;"	e	enum:TaskIDs	file:
INIT_FUNC_ID	src/legion_runtime/legion_types.h	/^      INIT_FUNC_ID          = LowLevel::Processor::TASK_ID_PROCESSOR_INIT,$/;"	e	enum:LegionRuntime::HighLevel::__anon92
INIT_HLIST_HEAD	include/nautilus/list.h	469;"	d
INIT_HLIST_NODE	include/nautilus/list.h	/^static inline void INIT_HLIST_NODE(struct hlist_node *h)$/;"	f
INIT_LIST_HEAD	include/nautilus/list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
INLINE_MAPPABLE	src/legion_runtime/legion.h	/^        INLINE_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
INLINE_TASK_ALLOC	src/legion_runtime/legion_allocation.h	/^      INLINE_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INNER_BITS	src/legion_runtime/lowlevel_impl.h	/^      static const size_t INNER_BITS = _INNER_BITS;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableAllocator
INPUTBOX_BG	scripts/kconfig/lxdialog/colors.h	73;"	d
INPUTBOX_BORDER_BG	scripts/kconfig/lxdialog/colors.h	77;"	d
INPUTBOX_BORDER_FG	scripts/kconfig/lxdialog/colors.h	76;"	d
INPUTBOX_BORDER_HL	scripts/kconfig/lxdialog/colors.h	78;"	d
INPUTBOX_FG	scripts/kconfig/lxdialog/colors.h	72;"	d
INPUTBOX_HL	scripts/kconfig/lxdialog/colors.h	74;"	d
INSTALL_PATH	Makefile	/^export	INSTALL_PATH ?= \/build$/;"	m
INSTANCE_MANAGER_ALLOC	src/legion_runtime/legion_allocation.h	/^      INSTANCE_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
INSTRUMENT	src/nautilus/scheduler.c	53;"	d	file:
INSTR_CAL_LOOPS	include/nautilus/instrument.h	31;"	d
INST_DUMP	src/nautilus/scheduler.c	260;"	d	file:
INST_DUMP	src/nautilus/scheduler.c	281;"	d	file:
INST_SCHED_IN	src/nautilus/scheduler.c	245;"	d	file:
INST_SCHED_IN	src/nautilus/scheduler.c	279;"	d	file:
INST_SCHED_OUT	src/nautilus/scheduler.c	246;"	d	file:
INST_SCHED_OUT	src/nautilus/scheduler.c	280;"	d	file:
INT16_MAX	scripts/kconfig/lex.zconf.c	64;"	d	file:
INT16_MIN	scripts/kconfig/lex.zconf.c	55;"	d	file:
INT32	include/acpi/actypes.h	/^typedef int INT32;$/;"	t
INT32_MAX	scripts/kconfig/lex.zconf.c	67;"	d	file:
INT32_MIN	scripts/kconfig/lex.zconf.c	58;"	d	file:
INT64	include/acpi/actypes.h	/^typedef COMPILER_DEPENDENT_INT64 INT64;$/;"	t
INT8_MAX	scripts/kconfig/lex.zconf.c	61;"	d	file:
INT8_MIN	scripts/kconfig/lex.zconf.c	52;"	d	file:
INTMAX_RANK	src/nautilus/fmtout.c	77;"	d	file:
INTPOL_SHIFT	include/dev/ioapic.h	74;"	d
INT_ARG	src/legion_runtime/default_mapper.cc	68;"	d	file:
INT_ARG	src/legion_runtime/default_mapper.cc	88;"	d	file:
INT_ARG	src/legion_runtime/lowlevel.cc	8134;"	d	file:
INT_ARG	src/legion_runtime/runtime.cc	11523;"	d	file:
INT_ARG	src/legion_runtime/runtime.cc	11622;"	d	file:
INT_ARG	src/legion_runtime/shared_lowlevel.cc	5155;"	d	file:
INT_ARG	src/legion_runtime/shared_lowlevel.cc	5167;"	d	file:
INT_CONF	scripts/basic/fixdep.c	117;"	d	file:
INT_FIG_	scripts/basic/fixdep.c	120;"	d	file:
INT_MASK_SHIFT	include/dev/ioapic.h	76;"	d
INT_MAX	include/nautilus/limits.h	37;"	d
INT_MIN	include/nautilus/limits.h	40;"	d
INT_NFIG	scripts/basic/fixdep.c	119;"	d	file:
INT_ONFI	scripts/basic/fixdep.c	118;"	d	file:
INT_POL_ACTHI	include/nautilus/irq.h	/^typedef enum { INT_POL_BUS, INT_POL_ACTHI, INT_POL_RSVD, INT_POL_ACTLO } int_pol_t;$/;"	e	enum:__anon33
INT_POL_ACTLO	include/nautilus/irq.h	/^typedef enum { INT_POL_BUS, INT_POL_ACTHI, INT_POL_RSVD, INT_POL_ACTLO } int_pol_t;$/;"	e	enum:__anon33
INT_POL_BUS	include/nautilus/irq.h	/^typedef enum { INT_POL_BUS, INT_POL_ACTHI, INT_POL_RSVD, INT_POL_ACTLO } int_pol_t;$/;"	e	enum:__anon33
INT_POL_RSVD	include/nautilus/irq.h	/^typedef enum { INT_POL_BUS, INT_POL_ACTHI, INT_POL_RSVD, INT_POL_ACTLO } int_pol_t;$/;"	e	enum:__anon33
INT_TRIG_BUS	include/nautilus/irq.h	/^typedef enum { INT_TRIG_BUS, INT_TRIG_EDGE, INT_TRIG_RSVD, INT_TRIG_LEVEL } int_trig_t;$/;"	e	enum:__anon34
INT_TRIG_EDGE	include/nautilus/irq.h	/^typedef enum { INT_TRIG_BUS, INT_TRIG_EDGE, INT_TRIG_RSVD, INT_TRIG_LEVEL } int_trig_t;$/;"	e	enum:__anon34
INT_TRIG_LEVEL	include/nautilus/irq.h	/^typedef enum { INT_TRIG_BUS, INT_TRIG_EDGE, INT_TRIG_RSVD, INT_TRIG_LEVEL } int_trig_t;$/;"	e	enum:__anon34
INT_TRIG_RSVD	include/nautilus/irq.h	/^typedef enum { INT_TRIG_BUS, INT_TRIG_EDGE, INT_TRIG_RSVD, INT_TRIG_LEVEL } int_trig_t;$/;"	e	enum:__anon34
INT_TYPE_EXT	include/nautilus/irq.h	/^typedef enum { INT_TYPE_INT, INT_TYPE_NMI, INT_TYPE_SMI, INT_TYPE_EXT } int_type_t;$/;"	e	enum:__anon32
INT_TYPE_INT	include/nautilus/irq.h	/^typedef enum { INT_TYPE_INT, INT_TYPE_NMI, INT_TYPE_SMI, INT_TYPE_EXT } int_type_t;$/;"	e	enum:__anon32
INT_TYPE_NMI	include/nautilus/irq.h	/^typedef enum { INT_TYPE_INT, INT_TYPE_NMI, INT_TYPE_SMI, INT_TYPE_EXT } int_type_t;$/;"	e	enum:__anon32
INT_TYPE_SMI	include/nautilus/irq.h	/^typedef enum { INT_TYPE_INT, INT_TYPE_NMI, INT_TYPE_SMI, INT_TYPE_EXT } int_type_t;$/;"	e	enum:__anon32
INVALIDATE_INSTANCE_VIEWS_CALL	src/legion_runtime/region_tree.h	/^      INVALIDATE_INSTANCE_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INVALIDATE_LOGICAL_CALL	src/legion_runtime/region_tree.h	/^      INVALIDATE_LOGICAL_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INVALIDATE_PHYSICAL_STATE_CALL	src/legion_runtime/region_tree.h	/^      INVALIDATE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
INVALIDATE_REDUCTION_VIEWS_CALL	src/legion_runtime/region_tree.h	/^      INVALIDATE_REDUCTION_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
IN_LEGION	src/legion_runtime/runtime.h	/^        IN_LEGION,$/;"	e	enum:LegionRuntime::HighLevel::MPILegionHandshake::Impl::ControlState
IN_MPI	src/legion_runtime/runtime.h	/^        IN_MPI,$/;"	e	enum:LegionRuntime::HighLevel::MPILegionHandshake::Impl::ControlState
IOAPICARB_REG	include/dev/ioapic.h	44;"	d
IOAPICID_REG	include/dev/ioapic.h	39;"	d
IOAPICVER_REG	include/dev/ioapic.h	41;"	d
IOAPIC_DEBUG	src/dev/ioapic.c	34;"	d	file:
IOAPIC_DEFAULT_BASE	include/dev/ioapic.h	31;"	d
IOAPIC_GET_ARBID	include/dev/ioapic.h	45;"	d
IOAPIC_GET_ID	include/dev/ioapic.h	40;"	d
IOAPIC_GET_MAX_RED	include/dev/ioapic.h	43;"	d
IOAPIC_GET_VER	include/dev/ioapic.h	42;"	d
IOAPIC_IRQ_ENTRY_HI	include/dev/ioapic.h	50;"	d
IOAPIC_IRQ_ENTRY_LO	include/dev/ioapic.h	49;"	d
IOAPIC_MASK_IRQ	include/dev/ioapic.h	97;"	d
IOAPIC_PRINT	src/dev/ioapic.c	35;"	d	file:
IOREDTBL	include/dev/ioapic.h	46;"	d
IORED_DELIVS	include/dev/ioapic.h	66;"	d
IORED_DEL_MODE_MASK	include/dev/ioapic.h	53;"	d
IORED_DEST_MODE	include/dev/ioapic.h	65;"	d
IORED_DST_MASK_LOG	include/dev/ioapic.h	79;"	d
IORED_DST_MASK_PHY	include/dev/ioapic.h	78;"	d
IORED_GET_DEL_MODE	include/dev/ioapic.h	61;"	d
IORED_GET_DEST	include/dev/ioapic.h	55;"	d
IORED_GET_DST_MODE	include/dev/ioapic.h	60;"	d
IORED_GET_MASK	include/dev/ioapic.h	56;"	d
IORED_GET_POL	include/dev/ioapic.h	59;"	d
IORED_GET_RIRR	include/dev/ioapic.h	58;"	d
IORED_GET_TRIG	include/dev/ioapic.h	57;"	d
IORED_GET_VEC	include/dev/ioapic.h	62;"	d
IORED_INTPOL	include/dev/ioapic.h	67;"	d
IORED_INT_MASK	include/dev/ioapic.h	69;"	d
IORED_TRIGGER_MODE	include/dev/ioapic.h	68;"	d
IORED_VEC_MASK	include/dev/ioapic.h	52;"	d
IOREGSEL_REG	include/dev/ioapic.h	34;"	d
IOWIN_REG	include/dev/ioapic.h	35;"	d
IO_INPUT	src/lua_src/liolib.c	121;"	d	file:
IO_OUTPUT	src/lua_src/liolib.c	122;"	d	file:
IO_PREFIX	src/lua_src/liolib.c	120;"	d	file:
IPI_MAX_FNAME_LEN	include/test/ipi.h	37;"	d
IPI_MAX_TRIALS	include/test/ipi.h	34;"	d
IPI_NUM_CORES	include/test/ipi.h	35;"	d
IPI_PRINT	src/test/ipi.c	41;"	d	file:
IPI_VEC_XCALL	include/dev/apic.h	223;"	d
IRQ_HANDLER_END	include/nautilus/irq.h	51;"	d
ISK	include/lua/lopcodes.h	137;"	d
ISO_NAME	Makefile	/^ISO_NAME:=nautilus.iso$/;"	m
ISSUE_UPDATE_COPIES_CALL	src/legion_runtime/region_tree.h	/^      ISSUE_UPDATE_COPIES_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
ISSUE_UPDATE_REDUCTIONS_CALL	src/legion_runtime/region_tree.h	/^      ISSUE_UPDATE_REDUCTIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
IS_ATOMIC	src/legion_runtime/legion_utilities.h	61;"	d
IS_EXCLUSIVE	src/legion_runtime/legion_utilities.h	60;"	d
IS_IMMEDIATE	include/asm/bitops.h	42;"	d
IS_NO_ACCESS	src/legion_runtime/legion_utilities.h	52;"	d
IS_PROMOTED	src/legion_runtime/legion_utilities.h	59;"	d
IS_READ_ONLY	src/legion_runtime/legion_utilities.h	53;"	d
IS_REDUCE	src/legion_runtime/legion_utilities.h	58;"	d
IS_RELAXED	src/legion_runtime/legion_utilities.h	63;"	d
IS_SIMULT	src/legion_runtime/legion_utilities.h	62;"	d
IS_WRITE	src/legion_runtime/legion_utilities.h	56;"	d
IS_WRITE_ONLY	src/legion_runtime/legion_utilities.h	57;"	d
IT	src/legion_runtime/lowlevel_impl.h	/^      typedef int IT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
IT	src/legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::IT IT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
IT	src/legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::IT IT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableFreeList
ITEM_BG	scripts/kconfig/lxdialog/colors.h	105;"	d
ITEM_FG	scripts/kconfig/lxdialog/colors.h	104;"	d
ITEM_HL	scripts/kconfig/lxdialog/colors.h	106;"	d
ITEM_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	109;"	d
ITEM_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	108;"	d
ITEM_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	110;"	d
ImmovableLock	src/legion_runtime/utilities.h	/^    ImmovableLock(bool initialize = false) : mutex(NULL) { $/;"	f	class:LegionRuntime::ImmovableLock
ImmovableLock	src/legion_runtime/utilities.h	/^    ImmovableLock(const ImmovableLock &other) : mutex(other.mutex) { }$/;"	f	class:LegionRuntime::ImmovableLock
ImmovableLock	src/legion_runtime/utilities.h	/^  class ImmovableLock {$/;"	c	namespace:LegionRuntime
Impl	src/legion_runtime/legion_ops.cc	/^    Predicate::Impl::Impl(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
Impl	src/legion_runtime/legion_ops.h	/^    class Predicate::Impl : public Operation {$/;"	c	class:LegionRuntime::HighLevel::Predicate
Impl	src/legion_runtime/lowlevel.cc	/^    Event::Impl::Impl(void)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
Impl	src/legion_runtime/lowlevel.cc	/^    IndexSpace::Impl::Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
Impl	src/legion_runtime/lowlevel.cc	/^    IndexSpaceAllocator::Impl::Impl(IndexSpace::Impl *_is_impl)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
Impl	src/legion_runtime/lowlevel.cc	/^    Processor::Impl::Impl(Processor _me, Processor::Kind _kind, Processor _util \/*= Processor::NO_PROC*\/)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
Impl	src/legion_runtime/lowlevel.cc	/^    RegionInstance::Impl::Impl(RegionInstance _me, IndexSpace _is, Memory _memory, off_t _offset, size_t _size, ReductionOpID _redopid,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
Impl	src/legion_runtime/lowlevel.cc	/^    RegionInstance::Impl::Impl(RegionInstance _me, Memory _memory)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
Impl	src/legion_runtime/lowlevel.cc	/^    Reservation::Impl::Impl(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
Impl	src/legion_runtime/lowlevel.cc	/^    class IndexSpaceAllocator::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpaceAllocator	file:
Impl	src/legion_runtime/lowlevel_impl.h	/^    Impl(Memory _me, size_t _size, MemoryKind _kind, size_t _alignment, Kind _lowlevel_kind)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
Impl	src/legion_runtime/lowlevel_impl.h	/^    class Event::Impl {$/;"	c	class:LegionRuntime::LowLevel::Event
Impl	src/legion_runtime/lowlevel_impl.h	/^    class IndexSpace::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpace
Impl	src/legion_runtime/lowlevel_impl.h	/^    class Memory::Impl {$/;"	c	class:LegionRuntime::LowLevel::Memory
Impl	src/legion_runtime/lowlevel_impl.h	/^    class Processor::Impl {$/;"	c	class:LegionRuntime::LowLevel::Processor
Impl	src/legion_runtime/lowlevel_impl.h	/^    class RegionInstance::Impl {$/;"	c	class:LegionRuntime::LowLevel::RegionInstance
Impl	src/legion_runtime/lowlevel_impl.h	/^    class Reservation::Impl {$/;"	c	class:LegionRuntime::LowLevel::Reservation
Impl	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(ArgumentMapStore *st)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(ArgumentMapStore *st,$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(const Impl &impl)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl::Impl(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    Future::Impl::Impl(Runtime *rt, bool register_future, DistributedID did, $/;"	f	class:LegionRuntime::HighLevel::Future::Impl
Impl	src/legion_runtime/runtime.cc	/^    Future::Impl::Impl(const Future::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
Impl	src/legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(SingleTask *ctx, Event comp_event, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(SingleTask *ctx, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(SingleTask *ctx, TaskOp *t, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    FutureMap::Impl::Impl(const FutureMap::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
Impl	src/legion_runtime/runtime.cc	/^    Grant::Impl::Impl(const Grant::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
Impl	src/legion_runtime/runtime.cc	/^    Grant::Impl::Impl(const std::vector<ReservationRequest> &reqs)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
Impl	src/legion_runtime/runtime.cc	/^    Grant::Impl::Impl(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
Impl	src/legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl::Impl(bool in_mpi, int mpi_parts, int legion_parts)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
Impl	src/legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl::Impl(const MPILegionHandshake::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
Impl	src/legion_runtime/runtime.cc	/^    PhysicalRegion::Impl::Impl(const PhysicalRegion::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
Impl	src/legion_runtime/runtime.cc	/^    PhysicalRegion::Impl::Impl(const RegionRequirement &r, Event ready, bool m, $/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
Impl	src/legion_runtime/runtime.h	/^    class ArgumentMap::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::ArgumentMap
Impl	src/legion_runtime/runtime.h	/^    class Future::Impl : public DistributedCollectable {$/;"	c	class:LegionRuntime::HighLevel::Future
Impl	src/legion_runtime/runtime.h	/^    class FutureMap::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::FutureMap
Impl	src/legion_runtime/runtime.h	/^    class Grant::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::Grant
Impl	src/legion_runtime/runtime.h	/^    class MPILegionHandshake::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::MPILegionHandshake
Impl	src/legion_runtime/runtime.h	/^    class PhysicalRegion::Impl : public Collectable {$/;"	c	class:LegionRuntime::HighLevel::PhysicalRegion
Impl	src/legion_runtime/shared_lowlevel.cc	/^	Impl(int idx, size_t num, bool activate = false) {$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
Impl	src/legion_runtime/shared_lowlevel.cc	/^        Impl(int idx, IndexSpace r, Memory m, size_t num, size_t alloc, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
Impl	src/legion_runtime/shared_lowlevel.cc	/^        Impl(int idx, IndexSpace::Impl *par, const ElementMask &m, bool activate = false) {$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
Impl	src/legion_runtime/shared_lowlevel.cc	/^      Impl(IndexSpace is)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
Impl	src/legion_runtime/shared_lowlevel.cc	/^    class IndexSpace::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpace	file:
Impl	src/legion_runtime/shared_lowlevel.cc	/^    class IndexSpaceAllocator::Impl {$/;"	c	class:LegionRuntime::LowLevel::IndexSpaceAllocator	file:
Impl	src/legion_runtime/shared_lowlevel.cc	/^    class RegionInstance::Impl : public Triggerable { $/;"	c	class:LegionRuntime::LowLevel::RegionInstance	file:
IndexAllocator	src/legion_runtime/legion.cc	/^    IndexAllocator::IndexAllocator(IndexSpace space, IndexSpaceAllocator *a)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
IndexAllocator	src/legion_runtime/legion.cc	/^    IndexAllocator::IndexAllocator(const IndexAllocator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
IndexAllocator	src/legion_runtime/legion.cc	/^    IndexAllocator::IndexAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
IndexAllocator	src/legion_runtime/legion.h	/^    class IndexAllocator {$/;"	c	namespace:LegionRuntime::HighLevel
IndexIterator	src/legion_runtime/legion.cc	/^    IndexIterator::IndexIterator(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
IndexIterator	src/legion_runtime/legion.cc	/^    IndexIterator::IndexIterator(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
IndexIterator	src/legion_runtime/legion.cc	/^    IndexIterator::IndexIterator(const IndexIterator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
IndexIterator	src/legion_runtime/legion.h	/^    class IndexIterator {$/;"	c	namespace:LegionRuntime::HighLevel
IndexLauncher	src/legion_runtime/legion.cc	/^    IndexLauncher::IndexLauncher(Processor::TaskFuncID tid, Domain dom,$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
IndexLauncher	src/legion_runtime/legion.cc	/^    IndexLauncher::IndexLauncher(void)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
IndexLauncher	src/legion_runtime/legion.h	/^    struct IndexLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
IndexPartNode	src/legion_runtime/region_tree.cc	/^    IndexPartNode::IndexPartNode(IndexPartition p, IndexSpaceNode *par,$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
IndexPartNode	src/legion_runtime/region_tree.cc	/^    IndexPartNode::IndexPartNode(const IndexPartNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
IndexPartNode	src/legion_runtime/region_tree.h	/^    class IndexPartNode : public IndexTreeNode { $/;"	c	namespace:LegionRuntime::HighLevel
IndexPartition	src/legion_runtime/legion_types.h	/^    typedef unsigned int IndexPartition;$/;"	t	namespace:LegionRuntime::HighLevel
IndexSpace	src/legion_runtime/legion_types.h	/^    typedef LowLevel::IndexSpace IndexSpace;$/;"	t	namespace:LegionRuntime::HighLevel
IndexSpace	src/legion_runtime/lowlevel.h	/^    class IndexSpace {$/;"	c	namespace:LegionRuntime::LowLevel
IndexSpaceAllocator	src/legion_runtime/legion_types.h	/^    typedef LowLevel::IndexSpaceAllocator IndexSpaceAllocator;$/;"	t	namespace:LegionRuntime::HighLevel
IndexSpaceAllocator	src/legion_runtime/lowlevel.h	/^      IndexSpaceAllocator(Impl *_impl) : impl(_impl) {}$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
IndexSpaceAllocator	src/legion_runtime/lowlevel.h	/^      IndexSpaceAllocator(const IndexSpaceAllocator& to_copy)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
IndexSpaceAllocator	src/legion_runtime/lowlevel.h	/^    class IndexSpaceAllocator {$/;"	c	namespace:LegionRuntime::LowLevel
IndexSpaceNode	src/legion_runtime/region_tree.cc	/^    IndexSpaceNode::IndexSpaceNode(Domain d, IndexPartNode *par, Color c,$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
IndexSpaceNode	src/legion_runtime/region_tree.cc	/^    IndexSpaceNode::IndexSpaceNode(const IndexSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
IndexSpaceNode	src/legion_runtime/region_tree.h	/^    class IndexSpaceNode : public IndexTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
IndexSpaceRequirement	src/legion_runtime/legion.cc	/^    IndexSpaceRequirement::IndexSpaceRequirement(IndexSpace _handle, $/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
IndexSpaceRequirement	src/legion_runtime/legion.cc	/^    IndexSpaceRequirement::IndexSpaceRequirement(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
IndexSpaceRequirement	src/legion_runtime/legion.h	/^    struct IndexSpaceRequirement {$/;"	s	namespace:LegionRuntime::HighLevel
IndexSpaceTableAllocator	src/legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<IndexSpace::Impl, 10, 4> IndexSpaceTableAllocator;$/;"	t
IndexTask	src/legion_runtime/legion_tasks.cc	/^    IndexTask::IndexTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
IndexTask	src/legion_runtime/legion_tasks.cc	/^    IndexTask::IndexTask(const IndexTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
IndexTask	src/legion_runtime/legion_tasks.h	/^    class IndexTask : public MultiTask {$/;"	c	namespace:LegionRuntime::HighLevel
IndexTreeNode	src/legion_runtime/region_tree.cc	/^    IndexTreeNode::IndexTreeNode(Color c, unsigned d, RegionTreeForest *ctx)$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
IndexTreeNode	src/legion_runtime/region_tree.cc	/^    IndexTreeNode::IndexTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
IndexTreeNode	src/legion_runtime/region_tree.h	/^    class IndexTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
IndividualTask	src/legion_runtime/legion_tasks.cc	/^    IndividualTask::IndividualTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
IndividualTask	src/legion_runtime/legion_tasks.cc	/^    IndividualTask::IndividualTask(const IndividualTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
IndividualTask	src/legion_runtime/legion_tasks.h	/^    class IndividualTask : public SingleTask {$/;"	c	namespace:LegionRuntime::HighLevel
Inline	src/legion_runtime/legion.cc	/^    Inline::Inline(void)$/;"	f	class:LegionRuntime::HighLevel::Inline
Inline	src/legion_runtime/legion.h	/^    class Inline : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
InlineFnptr	src/legion_runtime/legion_types.h	/^    typedef void (*InlineFnptr)(const Task*,const std::vector<PhysicalRegion>&,$/;"	t	namespace:LegionRuntime::HighLevel
InlineLauncher	src/legion_runtime/legion.cc	/^    InlineLauncher::InlineLauncher(const RegionRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::InlineLauncher
InlineLauncher	src/legion_runtime/legion.cc	/^    InlineLauncher::InlineLauncher(void)$/;"	f	class:LegionRuntime::HighLevel::InlineLauncher
InlineLauncher	src/legion_runtime/legion.h	/^    struct InlineLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
InlineTask	src/legion_runtime/legion_tasks.cc	/^    InlineTask::InlineTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
InlineTask	src/legion_runtime/legion_tasks.cc	/^    InlineTask::InlineTask(const InlineTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
InlineTask	src/legion_runtime/legion_tasks.h	/^    class InlineTask : public WrapperTask {$/;"	c	namespace:LegionRuntime::HighLevel
InputArgs	src/legion_runtime/legion.h	/^    struct InputArgs {$/;"	s	namespace:LegionRuntime::HighLevel
InstFrac	src/legion_runtime/legion_types.h	/^    typedef Fraction<unsigned long> InstFrac;$/;"	t	namespace:LegionRuntime::HighLevel
InstPair	src/legion_runtime/lowlevel_dma.cc	/^    typedef std::pair<RegionInstance, RegionInstance> InstPair;$/;"	t	namespace:LegionRuntime::LowLevel	file:
InstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      InstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::InstPairCopier
InstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class InstPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
InstanceID	src/legion_runtime/legion_types.h	/^    typedef unsigned int InstanceID;$/;"	t	namespace:LegionRuntime::HighLevel
InstanceManager	src/legion_runtime/region_tree.cc	/^    InstanceManager::InstanceManager(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
InstanceManager	src/legion_runtime/region_tree.cc	/^    InstanceManager::InstanceManager(const InstanceManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
InstanceManager	src/legion_runtime/region_tree.h	/^    class InstanceManager : public PhysicalManager {$/;"	c	namespace:LegionRuntime::HighLevel
InstanceRef	src/legion_runtime/region_tree.cc	/^    InstanceRef::InstanceRef(Event ready, Reservation lock, const ViewHandle &h)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
InstanceRef	src/legion_runtime/region_tree.cc	/^    InstanceRef::InstanceRef(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
InstanceRef	src/legion_runtime/region_tree.h	/^    class InstanceRef {$/;"	c	namespace:LegionRuntime::HighLevel
InstanceView	src/legion_runtime/region_tree.cc	/^    InstanceView::InstanceView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::InstanceView
InstanceView	src/legion_runtime/region_tree.h	/^    class InstanceView : public LogicalView {$/;"	c	namespace:LegionRuntime::HighLevel
Instruction	include/lua/llimits.h	/^typedef lu_int32 Instruction;$/;"	t
IntPoint	include/lua/llimits.h	44;"	d
Internal	src/legion_runtime/lowlevel_gpu.cc	/^      Internal(GPUProcessor *_gpu, int _gpu_index, $/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
Internal	src/legion_runtime/lowlevel_gpu.cc	/^    class GPUProcessor::Internal {$/;"	c	class:LegionRuntime::LowLevel::GPUProcessor	file:
IntersectInfo	src/legion_runtime/region_tree.h	/^        IntersectInfo(bool has, bool own)$/;"	f	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
IntersectInfo	src/legion_runtime/region_tree.h	/^        IntersectInfo(bool has, bool own, const std::set<Domain> &ds)$/;"	f	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
IntersectInfo	src/legion_runtime/region_tree.h	/^        IntersectInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
IntersectInfo	src/legion_runtime/region_tree.h	/^      struct IntersectInfo {$/;"	s	class:LegionRuntime::HighLevel::IndexTreeNode
IntervalTree	src/legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>::IntervalTree(const IntervalTree &rhs)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
IntervalTree	src/legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>::IntervalTree(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
IntervalTree	src/legion_runtime/interval_tree.h	/^    class IntervalTree {$/;"	c	namespace:LegionRuntime::HighLevel
IntervalTreeNode	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>::IntervalTreeNode(T left, T right)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
IntervalTreeNode	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>::IntervalTreeNode(const IntervalTreeNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
IntervalTreeNode	src/legion_runtime/interval_tree.h	/^    class IntervalTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
IsAStruct	src/legion_runtime/accessor.h	/^      struct IsAStruct {$/;"	s	namespace:LegionRuntime::Accessor::TemplateFu
IsAStruct	src/legion_runtime/legion.h	/^      struct IsAStruct {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
JOIN_FUNC	src/test/benchmark.h	12;"	d
JOIN_FUNC	src/test/benchmark.h	46;"	d
JobQueue	src/legion_runtime/lowlevel_impl.h	/^    JobQueue<JOBTYPE>::JobQueue(void)$/;"	f	class:LegionRuntime::LowLevel::JobQueue
JobQueue	src/legion_runtime/lowlevel_impl.h	/^    class JobQueue {$/;"	c	namespace:LegionRuntime::LowLevel
KALLSYMS	Makefile	/^KALLSYMS	= scripts\/kallsyms$/;"	m
KBD_ACK_REG	src/dev/kbd.c	153;"	d	file:
KBD_CMD_REG	src/dev/kbd.c	154;"	d	file:
KBD_DATA_REG	src/dev/kbd.c	152;"	d	file:
KBD_RELEASE	src/dev/kbd.c	156;"	d	file:
KBUILD_BUILTIN	Makefile	/^  KBUILD_BUILTIN := $(if $(CONFIG_MODVERSIONS),1)$/;"	m
KBUILD_BUILTIN	Makefile	/^KBUILD_BUILTIN := 1$/;"	m
KBUILD_CHECKSRC	Makefile	/^    KBUILD_CHECKSRC = $(C)$/;"	m
KBUILD_CHECKSRC	Makefile	/^  KBUILD_CHECKSRC = 0$/;"	m
KBUILD_EXTMOD	Makefile	/^    KBUILD_EXTMOD := $(M)$/;"	m
KBUILD_EXTMOD	Makefile	/^  KBUILD_EXTMOD ?= $(SUBDIRS)$/;"	m
KBUILD_HAVE_NLS	scripts/kconfig/Makefile	/^KBUILD_HAVE_NLS := $(shell \\$/;"	m
KBUILD_IMAGE	Makefile	/^export KBUILD_IMAGE ?= nautilus$/;"	m
KBUILD_MODULES	Makefile	/^  KBUILD_MODULES := 1$/;"	m
KBUILD_MODULES	Makefile	/^KBUILD_MODULES :=$/;"	m
KBUILD_OUTPUT	Makefile	/^    KBUILD_OUTPUT := $(O)$/;"	m
KBUILD_OUTPUT	Makefile	/^KBUILD_OUTPUT := $(shell cd $(KBUILD_OUTPUT) && \/bin\/pwd)$/;"	m
KBUILD_VERBOSE	Makefile	/^    KBUILD_VERBOSE = $(V)$/;"	m
KBUILD_VERBOSE	Makefile	/^  KBUILD_VERBOSE = 0$/;"	m
KB_CTRL_DATA_OUT	include/dev/i8254.h	38;"	d
KB_CTRL_PORT_B	include/dev/i8254.h	39;"	d
KB_KEY_RELEASE	src/dev/kbd.c	48;"	d	file:
KBx	src/lua_src/lvm.c	502;"	d	file:
KERNELDOC	scripts/basic/docproc.c	62;"	d	file:
KERNELDOCPATH	scripts/basic/docproc.c	61;"	d	file:
KERNEL_CS	include/nautilus/gdt.h	56;"	d
KERNEL_DS	include/nautilus/gdt.h	57;"	d
KERNEL_SS	include/nautilus/gdt.h	58;"	d
KEYPAD_START	include/dev/kbd.h	86;"	d
KEY_ALT_FLAG	include/dev/kbd.h	50;"	d
KEY_CAPSLOCK	include/dev/kbd.h	80;"	d
KEY_CAPS_FLAG	include/dev/kbd.h	52;"	d
KEY_CTRL_FLAG	include/dev/kbd.h	51;"	d
KEY_F1	include/dev/kbd.h	61;"	d
KEY_F10	include/dev/kbd.h	70;"	d
KEY_F11	include/dev/kbd.h	71;"	d
KEY_F12	include/dev/kbd.h	72;"	d
KEY_F2	include/dev/kbd.h	62;"	d
KEY_F3	include/dev/kbd.h	63;"	d
KEY_F4	include/dev/kbd.h	64;"	d
KEY_F5	include/dev/kbd.h	65;"	d
KEY_F6	include/dev/kbd.h	66;"	d
KEY_F7	include/dev/kbd.h	67;"	d
KEY_F8	include/dev/kbd.h	68;"	d
KEY_F9	include/dev/kbd.h	69;"	d
KEY_KEYPAD_FLAG	include/dev/kbd.h	48;"	d
KEY_KPCENTER	include/dev/kbd.h	93;"	d
KEY_KPDEL	include/dev/kbd.h	100;"	d
KEY_KPDOWN	include/dev/kbd.h	97;"	d
KEY_KPEND	include/dev/kbd.h	96;"	d
KEY_KPHOME	include/dev/kbd.h	88;"	d
KEY_KPINSERT	include/dev/kbd.h	99;"	d
KEY_KPLEFT	include/dev/kbd.h	92;"	d
KEY_KPMINUS	include/dev/kbd.h	91;"	d
KEY_KPPGDN	include/dev/kbd.h	98;"	d
KEY_KPPGUP	include/dev/kbd.h	90;"	d
KEY_KPPLUS	include/dev/kbd.h	95;"	d
KEY_KPRIGHT	include/dev/kbd.h	94;"	d
KEY_KPUP	include/dev/kbd.h	89;"	d
KEY_LALT	include/dev/kbd.h	77;"	d
KEY_LCTRL	include/dev/kbd.h	73;"	d
KEY_LSHIFT	include/dev/kbd.h	75;"	d
KEY_NUMLOCK	include/dev/kbd.h	81;"	d
KEY_PRINTSCRN	include/dev/kbd.h	79;"	d
KEY_RALT	include/dev/kbd.h	78;"	d
KEY_RCTRL	include/dev/kbd.h	74;"	d
KEY_RSHIFT	include/dev/kbd.h	76;"	d
KEY_SCRLOCK	include/dev/kbd.h	82;"	d
KEY_SHIFT_FLAG	include/dev/kbd.h	49;"	d
KEY_SPECIAL_FLAG	include/dev/kbd.h	47;"	d
KEY_SYSREQ	include/dev/kbd.h	83;"	d
KEY_UNKNOWN	include/dev/kbd.h	60;"	d
KGC_EMERGENCY	include/lua/lstate.h	55;"	d
KGC_GEN	include/lua/lstate.h	56;"	d
KGC_NORMAL	include/lua/lstate.h	54;"	d
KMEM_DEBUG	src/nautilus/mm/kmem.c	42;"	d	file:
KMEM_ERROR	src/nautilus/mm/kmem.c	43;"	d	file:
KMEM_PRINT	src/nautilus/mm/kmem.c	44;"	d	file:
KMEM_WARN	src/nautilus/mm/kmem.c	45;"	d	file:
KSYM_NAME_LEN	scripts/kallsyms.c	34;"	d	file:
Keycode_QUEUE_SIZE	src/nautilus/vc.c	75;"	d	file:
Kind	src/legion_runtime/lowlevel.h	/^      enum Kind {$/;"	g	class:LegionRuntime::LowLevel::Memory
Kind	src/legion_runtime/lowlevel.h	/^      enum Kind {$/;"	g	class:LegionRuntime::LowLevel::Processor
L	include/lua/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	include/lua/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	include/lua/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
L	src/lua_src/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon140	file:
L	src/lua_src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	src/lua_src/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon142	file:
LAST_ALLOC	src/legion_runtime/legion_allocation.h	/^      LAST_ALLOC, \/\/ must be last$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LATCH	include/dev/i8254.h	77;"	d
LAUNCHER_STACK_SIZE	src/nautilus/thread.c	988;"	d	file:
LAUNCHPAD	src/nautilus/thread.c	985;"	d	file:
LAUNCH_TASK	src/legion_runtime/legion_logging.h	/^    LAUNCH_TASK = 10,$/;"	e	enum:LegionRuntime::TimingKind
LAYOUT_DESCRIPTION_ALLOC	src/legion_runtime/legion_allocation.h	/^      LAYOUT_DESCRIPTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LBAHI	src/dev/ata.c	82;"	d	file:
LBALO	src/dev/ata.c	80;"	d	file:
LBAMID	src/dev/ata.c	81;"	d	file:
LC_ALL	include/nautilus/libccompat.h	60;"	d
LC_COLLATE	include/nautilus/libccompat.h	61;"	d
LC_CTYPE	include/nautilus/libccompat.h	62;"	d
LC_MONETARY	include/nautilus/libccompat.h	63;"	d
LC_NUMERIC	include/nautilus/libccompat.h	64;"	d
LC_TIME	include/nautilus/libccompat.h	65;"	d
LClosure	include/lua/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	include/lua/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LD	Makefile	/^LD		= $(CROSS_COMPILE)k1om-mpss-linux-ld$/;"	m
LD	Makefile	/^LD		= $(CROSS_COMPILE)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS         := -z max-page-size=0x1000$/;"	m
LD_SCRIPT	Makefile	/^LD_SCRIPT:=link\/nautilus.ld$/;"	m
LD_SCRIPT	Makefile	/^LD_SCRIPT:=link\/nautilus.ld.hrt$/;"	m
LD_SCRIPT	Makefile	/^LD_SCRIPT:=link\/nautilus.ld.palacios$/;"	m
LD_SCRIPT	Makefile	/^LD_SCRIPT:=link\/nautilus.ld.xeon_phi$/;"	m
LEAF	src/test/circuit.h	/^  static const bool LEAF = true;$/;"	m	class:CheckTask
LEAF_BITS	src/legion_runtime/lowlevel_impl.h	/^      static const size_t LEAF_BITS = _LEAF_BITS;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableAllocator
LEFT	src/nautilus/printk.c	522;"	d	file:
LEFT_DIR	src/legion_runtime/rectangle_set.h	/^        LEFT_DIR = 0,$/;"	e	enum:LegionRuntime::HighLevel::Segment::Direction
LEGACY_ALT_IOSTART	src/dev/ata.c	74;"	d	file:
LEGACY_BUS_IOSTART	src/dev/ata.c	73;"	d	file:
LEGACY_IRQ	src/dev/ata.c	75;"	d	file:
LEGION_LOGGING_CHECK_NO_EVENT	src/legion_runtime/legion_logging.h	34;"	d
LEGION_STATIC_ASSERT	src/legion_runtime/legion_types.h	157;"	d
LEVEL1_CACHE	src/legion_runtime/lowlevel.h	/^        LEVEL1_CACHE, \/\/ CPU L1 Visible to all processors on the node, better performance to one processor$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
LEVEL2_CACHE	src/legion_runtime/lowlevel.h	/^        LEVEL2_CACHE, \/\/ CPU L2 Visible to all processors on the node, better performance to one processor$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
LEVEL3_CACHE	src/legion_runtime/lowlevel.h	/^        LEVEL3_CACHE, \/\/ CPU L3 Visible to all processors on the node, better performance to processors on same socket $/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
LEVELS1	src/lua_src/lauxlib.c	40;"	d	file:
LEVELS2	src/lua_src/lauxlib.c	41;"	d	file:
LEVEL_DEBUG	src/legion_runtime/utilities.h	/^    LEVEL_DEBUG,$/;"	e	enum:LogLevel
LEVEL_ERROR	src/legion_runtime/utilities.h	/^    LEVEL_ERROR,$/;"	e	enum:LogLevel
LEVEL_INFO	src/legion_runtime/utilities.h	/^    LEVEL_INFO,$/;"	e	enum:LogLevel
LEVEL_NONE	src/legion_runtime/utilities.h	/^    LEVEL_NONE,$/;"	e	enum:LogLevel
LEVEL_PRINT	src/legion_runtime/utilities.h	/^    LEVEL_PRINT,$/;"	e	enum:LogLevel
LEVEL_SPEW	src/legion_runtime/utilities.h	/^    LEVEL_SPEW,$/;"	e	enum:LogLevel
LEVEL_WARNING	src/legion_runtime/utilities.h	/^    LEVEL_WARNING,$/;"	e	enum:LogLevel
LFIELDS_PER_FLUSH	include/lua/lopcodes.h	285;"	d
LG	src/lua_src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	src/lua_src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LGNCG_CG_DATA_H_INCLUDED	src/test/hpcg/cg-data.h	31;"	d
LGNCG_CG_H_INCLUDED	src/test/hpcg/cg.h	31;"	d
LGNCG_CG_MAPPER_H_INCLUDED	src/test/hpcg/cg-mapper.h	31;"	d
LGNCG_COMP_DOTPROD_H_INCLUDED	src/test/hpcg/comp-dotprod.h	31;"	d
LGNCG_COMP_MG_H_INCLUDED	src/test/hpcg/comp-mg.h	31;"	d
LGNCG_COMP_PROLONGATION_H_INCLUDED	src/test/hpcg/comp-prolongation.h	31;"	d
LGNCG_COMP_RESTRICTION_H_INCLUDED	src/test/hpcg/comp-restriction.h	31;"	d
LGNCG_COMP_SPMV_H_INCLUDED	src/test/hpcg/comp-spmv.h	31;"	d
LGNCG_COMP_SYMGS_H_INCLUDED	src/test/hpcg/comp-symgs.h	31;"	d
LGNCG_COMP_WAXPBY_H_INCLUDED	src/test/hpcg/comp-waxpby.h	31;"	d
LGNCG_DENSE_DOTPROD_STRIP_SIZE	src/test/hpcg/comp-dotprod.h	42;"	d
LGNCG_DENSE_SPMV_STRIP_SIZE	src/test/hpcg/comp-spmv.h	42;"	d
LGNCG_DENSE_WAXPBY_STRIP_SIZE	src/test/hpcg/comp-waxpby.h	42;"	d
LGNCG_DOTPROD_ACCUMULATE_H_INCLUDED	src/test/hpcg/dotprod-accumulate.h	31;"	d
LGNCG_DOTPROD_RED_ID	src/test/hpcg/tids.h	/^    LGNCG_DOTPROD_RED_ID = 1$/;"	e	enum:lgncg::__anon110
LGNCG_DOTPROD_TID	src/test/hpcg/tids.h	/^    LGNCG_DOTPROD_TID      = 8,$/;"	e	enum:lgncg::__anon109
LGNCG_GEOMETRY_H_INCLUDED	src/test/hpcg/geometry.h	45;"	d
LGNCG_H_INCLUDED	src/test/hpcg/lgncg.h	31;"	d
LGNCG_MG_DATA_H_INCLUDED	src/test/hpcg/mg-data.h	31;"	d
LGNCG_PROLONGATION_TID	src/test/hpcg/tids.h	/^    LGNCG_PROLONGATION_TID = 11,$/;"	e	enum:lgncg::__anon109
LGNCG_RESTRICTION_TID	src/test/hpcg/tids.h	/^    LGNCG_RESTRICTION_TID  = 10,$/;"	e	enum:lgncg::__anon109
LGNCG_SETUP_HALO_H_INCLUDED	src/test/hpcg/setup-halo.h	45;"	d
LGNCG_SETUP_HALO_TID	src/test/hpcg/tids.h	/^    LGNCG_SETUP_HALO_TID   = 12$/;"	e	enum:lgncg::__anon109
LGNCG_SPARSEMAT_H_INCLUDED	src/test/hpcg/sparsemat.h	31;"	d
LGNCG_SPMV_TID	src/test/hpcg/tids.h	/^    LGNCG_SPMV_TID         = 6,$/;"	e	enum:lgncg::__anon109
LGNCG_SYMGS_TID	src/test/hpcg/tids.h	/^    LGNCG_SYMGS_TID        = 9,$/;"	e	enum:lgncg::__anon109
LGNCG_TIDS_H_INCLUDED	src/test/hpcg/tids.h	31;"	d
LGNCG_UTILS_H_INCLUDED	src/test/hpcg/utils.h	31;"	d
LGNCG_VECCP_H_INCLUDED	src/test/hpcg/veccp.h	31;"	d
LGNCG_VECCP_TID	src/test/hpcg/tids.h	/^    LGNCG_VECCP_TID        = 4,$/;"	e	enum:lgncg::__anon109
LGNCG_VECOR_H_INCLUDED	src/test/hpcg/vector.h	31;"	d
LGNCG_VEC_ZERO_H_INCLUDED	src/test/hpcg/vec-zero.h	31;"	d
LGNCG_VEC_ZERO_TID	src/test/hpcg/tids.h	/^    LGNCG_VEC_ZERO_TID     = 5,$/;"	e	enum:lgncg::__anon109
LGNCG_WAXPBY_TID	src/test/hpcg/tids.h	/^    LGNCG_WAXPBY_TID       = 7,$/;"	e	enum:lgncg::__anon109
LHS	src/legion_runtime/lowlevel.h	/^      typedef int LHS;$/;"	t	class:LegionRuntime::LowLevel::MyReductionOp
LHS	src/test/circuit.h	/^  typedef float LHS;$/;"	t	class:AccumulateCharge
LHS	src/test/hpcg/dotprod-accumulate.h	/^    typedef double LHS;$/;"	t	class:lgncg::DotProdAccumulate
LHS	src/test/saxpy_array.cc	/^  typedef float LHS;$/;"	t	struct:Add	file:
LHS_assign	src/lua_src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBCCOMPAT	src/lua_src/loslib.c	18;"	d	file:
LIBCCOMPAT	src/nautilus/libccompat.c	32;"	d	file:
LIB_FAIL	src/lua_src/loadlib.c	222;"	d	file:
LIB_FAIL	src/lua_src/loadlib.c	223;"	d	file:
LIB_FAIL	src/lua_src/loadlib.c	98;"	d	file:
LIB_LUA	src/lua_src/lauxlib.c	15;"	d	file:
LIB_LUA	src/lua_src/liolib.c	27;"	d	file:
LINE_REG_OFFSET	src/arch/k1om/xeon_phi.c	49;"	d	file:
LINE_REG_OFFSET	xeon_phi/linux_usr/phi_console.c	79;"	d	file:
LINUX_S_IFBLK	src/fs/ext2/ext2fs.h	458;"	d
LINUX_S_IFCHR	src/fs/ext2/ext2fs.h	460;"	d
LINUX_S_IFDIR	src/fs/ext2/ext2fs.h	459;"	d
LINUX_S_IFIFO	src/fs/ext2/ext2fs.h	461;"	d
LINUX_S_IFLNK	src/fs/ext2/ext2fs.h	456;"	d
LINUX_S_IFMT	src/fs/ext2/ext2fs.h	454;"	d
LINUX_S_IFREG	src/fs/ext2/ext2fs.h	457;"	d
LINUX_S_IFSOCK	src/fs/ext2/ext2fs.h	455;"	d
LINUX_S_IRGRP	src/fs/ext2/ext2fs.h	472;"	d
LINUX_S_IROTH	src/fs/ext2/ext2fs.h	477;"	d
LINUX_S_IRUSR	src/fs/ext2/ext2fs.h	467;"	d
LINUX_S_IRWXG	src/fs/ext2/ext2fs.h	471;"	d
LINUX_S_IRWXO	src/fs/ext2/ext2fs.h	476;"	d
LINUX_S_IRWXU	src/fs/ext2/ext2fs.h	466;"	d
LINUX_S_ISBLK	src/fs/ext2/ext2fs.h	485;"	d
LINUX_S_ISCHR	src/fs/ext2/ext2fs.h	484;"	d
LINUX_S_ISDIR	src/fs/ext2/ext2fs.h	483;"	d
LINUX_S_ISFIFO	src/fs/ext2/ext2fs.h	486;"	d
LINUX_S_ISGID	src/fs/ext2/ext2fs.h	463;"	d
LINUX_S_ISLNK	src/fs/ext2/ext2fs.h	481;"	d
LINUX_S_ISREG	src/fs/ext2/ext2fs.h	482;"	d
LINUX_S_ISSOCK	src/fs/ext2/ext2fs.h	487;"	d
LINUX_S_ISUID	src/fs/ext2/ext2fs.h	462;"	d
LINUX_S_ISVTX	src/fs/ext2/ext2fs.h	464;"	d
LINUX_S_IWGRP	src/fs/ext2/ext2fs.h	473;"	d
LINUX_S_IWOTH	src/fs/ext2/ext2fs.h	478;"	d
LINUX_S_IWUSR	src/fs/ext2/ext2fs.h	468;"	d
LINUX_S_IXGRP	src/fs/ext2/ext2fs.h	474;"	d
LINUX_S_IXOTH	src/fs/ext2/ext2fs.h	479;"	d
LINUX_S_IXUSR	src/fs/ext2/ext2fs.h	469;"	d
LIST_HEAD	include/nautilus/list.h	68;"	d
LIST_HEAD_INIT	include/nautilus/list.h	66;"	d
LIST_MANAGER_ALLOC	src/legion_runtime/legion_allocation.h	/^      LIST_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LIST_POISON1	include/nautilus/list.h	49;"	d
LIST_POISON2	include/nautilus/list.h	50;"	d
LKC_DIRECT_LINK	scripts/kconfig/conf.c	14;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/confdata.c	14;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/expr.c	10;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/kxgettext.c	10;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/lex.zconf.c	751;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/mconf.c	25;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/menu.c	9;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/symbol.c	12;"	d	file:
LKC_DIRECT_LINK	scripts/kconfig/zconf.tab.c	163;"	d	file:
LKC_H	scripts/kconfig/lkc.h	7;"	d
LL	src/lua_src/lobject.c	247;"	d	file:
LLONG_MAX	include/nautilus/limits.h	55;"	d
LLONG_MIN	include/nautilus/limits.h	58;"	d
LOAD_ADDR	src/asm/realmode.S	/^LOAD_ADDR = LOAD_SEG*16$/;"	d
LOAD_SEG	src/asm/realmode.S	/^LOAD_SEG  = NAUT_CONFIG_REAL_MODE_INTERFACE_SEGMENT$/;"	d
LOCALEDIR	scripts/kconfig/lkc.h	35;"	d
LOCAL_ARGS_ALLOC	src/legion_runtime/legion_allocation.h	/^      LOCAL_ARGS_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LOCAL_LOCK	src/nautilus/scheduler.c	90;"	d	file:
LOCAL_LOCK_CONF	src/nautilus/scheduler.c	89;"	d	file:
LOCAL_MEM	src/legion_runtime/shared_lowlevel.cc	82;"	d	file:
LOCAL_UNLOCK	src/nautilus/scheduler.c	91;"	d	file:
LOCK	src/test/benchmark.h	16;"	d
LOCK	src/test/benchmark.h	49;"	d
LOCK_COUNT	src/test/benchmark.c	89;"	d	file:
LOCK_DEINIT	src/test/benchmark.h	15;"	d
LOCK_DEINIT	src/test/benchmark.h	48;"	d
LOCK_FREE_MERGED_EVENTS	src/legion_runtime/lowlevel.cc	1079;"	d	file:
LOCK_GRANT_MSGID	src/legion_runtime/lowlevel.cc	/^      LOCK_GRANT_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
LOCK_INIT	src/test/benchmark.h	14;"	d
LOCK_INIT	src/test/benchmark.h	47;"	d
LOCK_RELEASE_MSGID	src/legion_runtime/lowlevel.cc	/^      LOCK_RELEASE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
LOCK_REQUEST_MSGID	src/legion_runtime/lowlevel.cc	/^      LOCK_REQUEST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
LOCK_T	src/test/benchmark.h	13;"	d
LOCK_T	src/test/benchmark.h	42;"	d
LOC_PROC	src/legion_runtime/lowlevel.h	/^	LOC_PROC, \/\/ Latency core$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
LOG2_LOOKUP	src/legion_runtime/legion_types.h	134;"	d
LOGICAL_FIELD_STATE_ALLOC	src/legion_runtime/legion_allocation.h	/^      LOGICAL_FIELD_STATE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LOGICAL_FIELD_TREE	src/legion_runtime/legion_types.h	43;"	d
LOGICAL_FIELD_VERSIONS_ALLOC	src/legion_runtime/legion_allocation.h	/^      LOGICAL_FIELD_VERSIONS_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LOGICAL_PARTITION_DELETION	src/legion_runtime/legion_ops.h	/^        LOGICAL_PARTITION_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
LOGICAL_PARTITION_DESTRUCTION_MESSAGE	src/legion_runtime/runtime.h	/^        LOGICAL_PARTITION_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
LOGICAL_REGION_DELETION	src/legion_runtime/legion_ops.h	/^        LOGICAL_REGION_DELETION,$/;"	e	enum:LegionRuntime::HighLevel::DeletionOp::DeletionKind
LOGICAL_REGION_DESTRUCTION_MESSAGE	src/legion_runtime/runtime.h	/^        LOGICAL_REGION_DESTRUCTION_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
LOGICAL_VIEW_ALLOC	src/legion_runtime/legion_allocation.h	/^      LOGICAL_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
LONG_LOCK_COUNT	src/test/benchmark.c	88;"	d	file:
LONG_MAX	include/nautilus/limits.h	46;"	d
LONG_MIN	include/nautilus/limits.h	49;"	d
LOOPS	include/dev/i8254.h	78;"	d
LOWLEVEL_DMA_H	src/legion_runtime/lowlevel_dma.h	17;"	d
LOWLEVEL_GPU_H	src/legion_runtime/lowlevel_gpu.h	17;"	d
LOWLEVEL_IMPL_H	src/legion_runtime/lowlevel_impl.h	17;"	d
LStream	src/lua_src/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LT	src/legion_runtime/lowlevel_impl.h	/^      typedef GASNetHSL LT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
LT	src/legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::LT LT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
LT	src/legion_runtime/lowlevel_impl.h	/^      typedef typename ALLOCATOR::LT LT;$/;"	t	class:LegionRuntime::LowLevel::DynamicTableFreeList
LUAC_HEADERSIZE	include/lua/lundump.h	26;"	d
LUAC_TAIL	include/lua/lundump.h	23;"	d
LUAI_BITSINT	include/lua/luaconf.h	319;"	d
LUAI_BITSINT	include/lua/luaconf.h	322;"	d
LUAI_DDEC	include/lua/luaconf.h	180;"	d
LUAI_DDEC	include/lua/luaconf.h	185;"	d
LUAI_DDEF	include/lua/luaconf.h	181;"	d
LUAI_DDEF	include/lua/luaconf.h	186;"	d
LUAI_EXTRAIEEE	include/lua/llimits.h	219;"	d
LUAI_EXTRAIEEE	include/lua/llimits.h	224;"	d
LUAI_FIRSTPSEUDOIDX	include/lua/luaconf.h	363;"	d
LUAI_FUNC	include/lua/luaconf.h	179;"	d
LUAI_FUNC	include/lua/luaconf.h	184;"	d
LUAI_GCMAJOR	src/lua_src/lstate.c	34;"	d	file:
LUAI_GCMUL	src/lua_src/lstate.c	38;"	d	file:
LUAI_GCPAUSE	src/lua_src/lstate.c	30;"	d	file:
LUAI_HASHLIMIT	src/lua_src/lstring.c	26;"	d	file:
LUAI_MAXCCALLS	include/lua/llimits.h	119;"	d
LUAI_MAXNUMBER2STR	include/lua/luaconf.h	405;"	d
LUAI_MAXSHORTLEN	include/lua/luaconf.h	232;"	d
LUAI_MAXSTACK	include/lua/luaconf.h	357;"	d
LUAI_MAXSTACK	include/lua/luaconf.h	359;"	d
LUAI_MEM	include/lua/luaconf.h	341;"	d
LUAI_MEM	include/lua/luaconf.h	346;"	d
LUAI_THROW	src/lua_src/ldo.c	55;"	d	file:
LUAI_THROW	src/lua_src/ldo.c	62;"	d	file:
LUAI_THROW	src/lua_src/ldo.c	68;"	d	file:
LUAI_TRY	src/lua_src/ldo.c	56;"	d	file:
LUAI_TRY	src/lua_src/ldo.c	63;"	d	file:
LUAI_TRY	src/lua_src/ldo.c	69;"	d	file:
LUAI_UACNUMBER	include/lua/luaconf.h	395;"	d
LUAI_UMEM	include/lua/luaconf.h	340;"	d
LUAI_UMEM	include/lua/luaconf.h	345;"	d
LUAI_USER_ALIGNMENT_T	include/lua/llimits.h	50;"	d
LUALIB_API	include/lua/luaconf.h	159;"	d
LUAL_BUFFERSIZE	include/lua/luaconf.h	376;"	d
LUAMOD_API	include/lua/luaconf.h	160;"	d
LUA_ANSI	include/lua/luaconf.h	28;"	d
LUA_API	include/lua/luaconf.h	146;"	d
LUA_API	include/lua/luaconf.h	148;"	d
LUA_API	include/lua/luaconf.h	153;"	d
LUA_AUTHORS	include/lua/lua.h	27;"	d
LUA_BITLIBNAME	include/lua/lualib.h	32;"	d
LUA_CDIR	include/lua/luaconf.h	105;"	d
LUA_CDIR	include/lua/luaconf.h	93;"	d
LUA_COLIBNAME	include/lua/lualib.h	17;"	d
LUA_COMPAT_LOADERS	include/lua/luaconf.h	259;"	d
LUA_COMPAT_LOADSTRING	include/lua/luaconf.h	281;"	d
LUA_COMPAT_LOG10	include/lua/luaconf.h	275;"	d
LUA_COMPAT_MAXN	include/lua/luaconf.h	286;"	d
LUA_COMPAT_MODULE	include/lua/luaconf.h	304;"	d
LUA_COMPAT_UNPACK	include/lua/luaconf.h	253;"	d
LUA_COPYRIGHT	include/lua/lua.h	26;"	d
LUA_CORE	src/lua_src/lapi.c	12;"	d	file:
LUA_CORE	src/lua_src/lcode.c	11;"	d	file:
LUA_CORE	src/lua_src/lctype.c	8;"	d	file:
LUA_CORE	src/lua_src/ldebug.c	14;"	d	file:
LUA_CORE	src/lua_src/ldo.c	13;"	d	file:
LUA_CORE	src/lua_src/ldump.c	10;"	d	file:
LUA_CORE	src/lua_src/lfunc.c	11;"	d	file:
LUA_CORE	src/lua_src/lgc.c	10;"	d	file:
LUA_CORE	src/lua_src/llex.c	12;"	d	file:
LUA_CORE	src/lua_src/lmem.c	11;"	d	file:
LUA_CORE	src/lua_src/lobject.c	13;"	d	file:
LUA_CORE	src/lua_src/lopcodes.c	9;"	d	file:
LUA_CORE	src/lua_src/lparser.c	12;"	d	file:
LUA_CORE	src/lua_src/lstate.c	12;"	d	file:
LUA_CORE	src/lua_src/lstring.c	11;"	d	file:
LUA_CORE	src/lua_src/ltable.c	24;"	d	file:
LUA_CORE	src/lua_src/ltm.c	11;"	d	file:
LUA_CORE	src/lua_src/lua_open.c	12;"	d	file:
LUA_CORE	src/lua_src/lundump.c	10;"	d	file:
LUA_CORE	src/lua_src/lvm.c	13;"	d	file:
LUA_CORE	src/lua_src/lzio.c	11;"	d	file:
LUA_CPATH	src/lua_src/loadlib.c	42;"	d	file:
LUA_CPATHVERSION	src/lua_src/loadlib.c	48;"	d	file:
LUA_CPATH_DEFAULT	include/lua/luaconf.h	109;"	d
LUA_CPATH_DEFAULT	include/lua/luaconf.h	97;"	d
LUA_CSUBSEP	src/lua_src/loadlib.c	80;"	d	file:
LUA_DBLIBNAME	include/lua/lualib.h	38;"	d
LUA_DIRSEP	include/lua/luaconf.h	120;"	d
LUA_DIRSEP	include/lua/luaconf.h	122;"	d
LUA_DL_DLL	include/lua/luaconf.h	37;"	d
LUA_ENV	include/lua/luaconf.h	131;"	d
LUA_ERRERR	include/lua/lua.h	51;"	d
LUA_ERRFILE	include/lua/lauxlib.h	20;"	d
LUA_ERRGCMM	include/lua/lua.h	50;"	d
LUA_ERRMEM	include/lua/lua.h	49;"	d
LUA_ERRRUN	include/lua/lua.h	47;"	d
LUA_ERRSYNTAX	include/lua/lua.h	48;"	d
LUA_EXEC_DIR	src/lua_src/loadlib.c	66;"	d	file:
LUA_EXTRALIBS	include/lua/newlib.h	2;"	d
LUA_FILEHANDLE	include/lua/lauxlib.h	185;"	d
LUA_FLTFRMLEN	src/lua_src/lstrlib.c	816;"	d	file:
LUA_FLTFRM_T	src/lua_src/lstrlib.c	817;"	d	file:
LUA_GCCOLLECT	include/lua/lua.h	283;"	d
LUA_GCCOUNT	include/lua/lua.h	284;"	d
LUA_GCCOUNTB	include/lua/lua.h	285;"	d
LUA_GCGEN	include/lua/lua.h	291;"	d
LUA_GCINC	include/lua/lua.h	292;"	d
LUA_GCISRUNNING	include/lua/lua.h	290;"	d
LUA_GCRESTART	include/lua/lua.h	282;"	d
LUA_GCSETMAJORINC	include/lua/lua.h	289;"	d
LUA_GCSETPAUSE	include/lua/lua.h	287;"	d
LUA_GCSETSTEPMUL	include/lua/lua.h	288;"	d
LUA_GCSTEP	include/lua/lua.h	286;"	d
LUA_GCSTOP	include/lua/lua.h	281;"	d
LUA_HOOKCALL	include/lua/lua.h	360;"	d
LUA_HOOKCOUNT	include/lua/lua.h	363;"	d
LUA_HOOKLINE	include/lua/lua.h	362;"	d
LUA_HOOKRET	include/lua/lua.h	361;"	d
LUA_HOOKTAILCALL	include/lua/lua.h	364;"	d
LUA_IDSIZE	include/lua/luaconf.h	204;"	d
LUA_IEEE754TRICK	include/lua/luaconf.h	511;"	d
LUA_IEEE754TRICK	include/lua/luaconf.h	519;"	d
LUA_IEEE754TRICK	include/lua/luaconf.h	524;"	d
LUA_IEEE754TRICK	include/lua/luaconf.h	530;"	d
LUA_IEEEENDIAN	include/lua/luaconf.h	504;"	d
LUA_IEEEENDIAN	include/lua/luaconf.h	513;"	d
LUA_IEEEENDIAN	include/lua/luaconf.h	520;"	d
LUA_IEEEENDIAN	include/lua/luaconf.h	525;"	d
LUA_IEEEENDIANLOC	include/lua/llimits.h	221;"	d
LUA_IEEEENDIANLOC	include/lua/llimits.h	223;"	d
LUA_IEEELL	include/lua/luaconf.h	512;"	d
LUA_IGMARK	src/lua_src/loadlib.c	69;"	d	file:
LUA_INIT	src/lua_src/lua.c	37;"	d	file:
LUA_INITVERSION	src/lua_src/lua.c	40;"	d	file:
LUA_INT32	include/lua/luaconf.h	339;"	d
LUA_INT32	include/lua/luaconf.h	344;"	d
LUA_INTEGER	include/lua/luaconf.h	460;"	d
LUA_INTFRMLEN	src/lua_src/lstrlib.c	797;"	d	file:
LUA_INTFRMLEN	src/lua_src/lstrlib.c	802;"	d	file:
LUA_INTFRM_T	src/lua_src/lstrlib.c	798;"	d	file:
LUA_INTFRM_T	src/lua_src/lstrlib.c	803;"	d	file:
LUA_IOLIBNAME	include/lua/lualib.h	23;"	d
LUA_LDIR	include/lua/luaconf.h	104;"	d
LUA_LDIR	include/lua/luaconf.h	92;"	d
LUA_LIB	src/lua_src/lbaselib.c	15;"	d	file:
LUA_LIB	src/lua_src/lbitlib.c	8;"	d	file:
LUA_LIB	src/lua_src/lcorolib.c	12;"	d	file:
LUA_LIB	src/lua_src/ldblib.c	14;"	d	file:
LUA_LIB	src/lua_src/linit.c	17;"	d	file:
LUA_LIB	src/lua_src/liolib.c	26;"	d	file:
LUA_LIB	src/lua_src/lmathlib.c	18;"	d	file:
LUA_LIB	src/lua_src/lnautlib.c	5;"	d	file:
LUA_LIB	src/lua_src/loadlib.c	25;"	d	file:
LUA_LIB	src/lua_src/loslib.c	17;"	d	file:
LUA_LIB	src/lua_src/lstrlib.c	15;"	d	file:
LUA_LIB	src/lua_src/ltablib.c	12;"	d	file:
LUA_LIB	src/lua_src/nt_lnautlib.c	1;"	d	file:
LUA_LLE_FLAGS	src/lua_src/loadlib.c	164;"	d	file:
LUA_LOADLIBNAME	include/lua/lualib.h	41;"	d
LUA_LSUBSEP	src/lua_src/loadlib.c	84;"	d	file:
LUA_MASKCALL	include/lua/lua.h	370;"	d
LUA_MASKCOUNT	include/lua/lua.h	373;"	d
LUA_MASKLINE	include/lua/lua.h	372;"	d
LUA_MASKRET	include/lua/lua.h	371;"	d
LUA_MATHLIBNAME	include/lua/lualib.h	35;"	d
LUA_MAXCAPTURES	src/lua_src/lstrlib.c	28;"	d	file:
LUA_MAXINPUT	src/lua_src/lua.c	33;"	d	file:
LUA_MINBUFFER	include/lua/llimits.h	150;"	d
LUA_MINSTACK	include/lua/lua.h	93;"	d
LUA_MSASMTRICK	include/lua/luaconf.h	503;"	d
LUA_MULTRET	include/lua/lua.h	34;"	d
LUA_NANTRICK	include/lua/luaconf.h	505;"	d
LUA_NANTRICK	include/lua/luaconf.h	514;"	d
LUA_NAUTLIBNAME	include/lua/lualib.h	44;"	d
LUA_NBITS	src/lua_src/lbitlib.c	18;"	d	file:
LUA_NOREF	include/lua/lauxlib.h	69;"	d
LUA_NUMBER	include/lua/luaconf.h	389;"	d
LUA_NUMBER_DOUBLE	include/lua/luaconf.h	388;"	d
LUA_NUMBER_FMT	include/lua/luaconf.h	403;"	d
LUA_NUMBER_SCAN	include/lua/luaconf.h	402;"	d
LUA_NUMTAGS	include/lua/lua.h	88;"	d
LUA_OFSEP	src/lua_src/loadlib.c	92;"	d	file:
LUA_OK	include/lua/lua.h	45;"	d
LUA_OPADD	include/lua/lua.h	184;"	d
LUA_OPDIV	include/lua/lua.h	187;"	d
LUA_OPEQ	include/lua/lua.h	194;"	d
LUA_OPLE	include/lua/lua.h	196;"	d
LUA_OPLT	include/lua/lua.h	195;"	d
LUA_OPMOD	include/lua/lua.h	188;"	d
LUA_OPMUL	include/lua/lua.h	186;"	d
LUA_OPPOW	include/lua/lua.h	189;"	d
LUA_OPSUB	include/lua/lua.h	185;"	d
LUA_OPUNM	include/lua/lua.h	190;"	d
LUA_OSLIBNAME	include/lua/lualib.h	26;"	d
LUA_PATH	src/lua_src/loadlib.c	38;"	d	file:
LUA_PATHSUFFIX	src/lua_src/loadlib.c	45;"	d	file:
LUA_PATHVERSION	src/lua_src/loadlib.c	47;"	d	file:
LUA_PATH_DEFAULT	include/lua/luaconf.h	106;"	d
LUA_PATH_DEFAULT	include/lua/luaconf.h	94;"	d
LUA_PATH_MARK	src/lua_src/loadlib.c	63;"	d	file:
LUA_PATH_SEP	src/lua_src/loadlib.c	60;"	d	file:
LUA_POF	src/lua_src/loadlib.c	89;"	d	file:
LUA_PROGNAME	src/lua_src/lua.c	29;"	d	file:
LUA_PROMPT	src/lua_src/lua.c	24;"	d	file:
LUA_PROMPT2	src/lua_src/lua.c	25;"	d	file:
LUA_QL	include/lua/luaconf.h	195;"	d
LUA_QS	include/lua/luaconf.h	196;"	d
LUA_REFNIL	include/lua/lauxlib.h	70;"	d
LUA_REGISTRYINDEX	include/lua/lua.h	40;"	d
LUA_RELEASE	include/lua/lua.h	25;"	d
LUA_RIDX_GLOBALS	include/lua/lua.h	98;"	d
LUA_RIDX_LAST	include/lua/lua.h	99;"	d
LUA_RIDX_MAINTHREAD	include/lua/lua.h	97;"	d
LUA_ROOT	include/lua/luaconf.h	103;"	d
LUA_SIGNATURE	include/lua/lua.h	31;"	d
LUA_STRFTIMEOPTIONS	src/lua_src/loslib.c	33;"	d	file:
LUA_STRFTIMEOPTIONS	src/lua_src/loslib.c	35;"	d	file:
LUA_STRLIBNAME	include/lua/lualib.h	29;"	d
LUA_TABLIBNAME	include/lua/lualib.h	20;"	d
LUA_TBOOLEAN	include/lua/lua.h	79;"	d
LUA_TCCL	include/lua/lobject.h	52;"	d
LUA_TDEADKEY	include/lua/lobject.h	24;"	d
LUA_TFUNCTION	include/lua/lua.h	84;"	d
LUA_TLCF	include/lua/lobject.h	51;"	d
LUA_TLCL	include/lua/lobject.h	50;"	d
LUA_TLIGHTUSERDATA	include/lua/lua.h	80;"	d
LUA_TLNGSTR	include/lua/lobject.h	57;"	d
LUA_TMPNAMBUFSIZE	src/lua_src/loslib.c	51;"	d	file:
LUA_TMPNAMBUFSIZE	src/lua_src/loslib.c	60;"	d	file:
LUA_TNIL	include/lua/lua.h	78;"	d
LUA_TNONE	include/lua/lua.h	76;"	d
LUA_TNUMBER	include/lua/lua.h	81;"	d
LUA_TOTALTAGS	include/lua/lobject.h	29;"	d
LUA_TPROTO	include/lua/lobject.h	22;"	d
LUA_TSHRSTR	include/lua/lobject.h	56;"	d
LUA_TSTRING	include/lua/lua.h	82;"	d
LUA_TTABLE	include/lua/lua.h	83;"	d
LUA_TTHREAD	include/lua/lua.h	86;"	d
LUA_TUPVAL	include/lua/lobject.h	23;"	d
LUA_TUSERDATA	include/lua/lua.h	85;"	d
LUA_UNSIGNED	include/lua/luaconf.h	466;"	d
LUA_USE_AFORMAT	include/lua/luaconf.h	38;"	d
LUA_USE_AFORMAT	include/lua/luaconf.h	48;"	d
LUA_USE_AFORMAT	include/lua/luaconf.h	57;"	d
LUA_USE_CTYPE	include/lua/lctype.h	23;"	d
LUA_USE_CTYPE	include/lua/lctype.h	26;"	d
LUA_USE_DLOPEN	include/lua/luaconf.h	45;"	d
LUA_USE_DLOPEN	include/lua/luaconf.h	54;"	d
LUA_USE_GMTIME_R	include/lua/luaconf.h	73;"	d
LUA_USE_ISATTY	include/lua/luaconf.h	70;"	d
LUA_USE_LONGLONG	include/lua/luaconf.h	49;"	d
LUA_USE_LONGLONG	include/lua/luaconf.h	58;"	d
LUA_USE_MKSTEMP	include/lua/luaconf.h	69;"	d
LUA_USE_POPEN	include/lua/luaconf.h	71;"	d
LUA_USE_POSIX	include/lua/luaconf.h	44;"	d
LUA_USE_POSIX	include/lua/luaconf.h	53;"	d
LUA_USE_READLINE	include/lua/luaconf.h	46;"	d
LUA_USE_READLINE	include/lua/luaconf.h	55;"	d
LUA_USE_STRTODHEX	include/lua/luaconf.h	47;"	d
LUA_USE_STRTODHEX	include/lua/luaconf.h	56;"	d
LUA_USE_ULONGJMP	include/lua/luaconf.h	72;"	d
LUA_VDIR	include/lua/luaconf.h	102;"	d
LUA_VERSION	include/lua/lua.h	24;"	d
LUA_VERSION_MAJOR	include/lua/lua.h	19;"	d
LUA_VERSION_MINOR	include/lua/lua.h	20;"	d
LUA_VERSION_NUM	include/lua/lua.h	21;"	d
LUA_VERSION_RELEASE	include/lua/lua.h	22;"	d
LUA_WIN	include/lua/luaconf.h	33;"	d
LUA_YIELD	include/lua/lua.h	46;"	d
LX	src/lua_src/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	src/lua_src/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_ESC	src/lua_src/lstrlib.c	222;"	d	file:
L_Umaxalign	include/lua/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
L_tmpnam	include/nautilus/libccompat.h	124;"	d
Labeldesc	include/lua/lparser.h	/^typedef struct Labeldesc {$/;"	s
Labeldesc	include/lua/lparser.h	/^} Labeldesc;$/;"	t	typeref:struct:Labeldesc
Labellist	include/lua/lparser.h	/^typedef struct Labellist {$/;"	s
Labellist	include/lua/lparser.h	/^} Labellist;$/;"	t	typeref:struct:Labellist
LayoutDescription	src/legion_runtime/region_tree.cc	/^    LayoutDescription::LayoutDescription(const FieldMask &mask, const Domain &d,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
LayoutDescription	src/legion_runtime/region_tree.cc	/^    LayoutDescription::LayoutDescription(const LayoutDescription &rhs)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
LayoutDescription	src/legion_runtime/region_tree.h	/^    class LayoutDescription {$/;"	c	namespace:LegionRuntime::HighLevel
LegionAllocation	src/legion_runtime/legion_allocation.h	/^    struct LegionAllocation {$/;"	s	namespace:LegionRuntime::HighLevel
LegionAllocator	src/legion_runtime/legion_allocation.h	/^      inline LegionAllocator(const LegionAllocator<T, A> &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
LegionAllocator	src/legion_runtime/legion_allocation.h	/^      inline LegionAllocator(const LegionAllocator<U, A> &rhs) $/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
LegionAllocator	src/legion_runtime/legion_allocation.h	/^      inline explicit LegionAllocator(void) $/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
LegionAllocator	src/legion_runtime/legion_allocation.h	/^    class LegionAllocator {$/;"	c	namespace:LegionRuntime::HighLevel
LegionContainer	src/legion_runtime/legion_allocation.h	/^    struct LegionContainer {$/;"	s	namespace:LegionRuntime::HighLevel
LegionErrorType	src/legion_runtime/legion_types.h	/^    enum LegionErrorType {$/;"	g	namespace:LegionRuntime::HighLevel
LegionKeyValue	src/legion_runtime/legion_allocation.h	/^    struct LegionKeyValue {$/;"	s	namespace:LegionRuntime::HighLevel
LegionLogging	src/legion_runtime/legion.cc	/^    namespace LegionLogging {$/;"	n	namespace:LegionRuntime::HighLevel	file:
LegionLogging	src/legion_runtime/legion_logging.h	/^    namespace LegionLogging {$/;"	n	namespace:LegionRuntime::HighLevel
LegionProf	src/legion_runtime/legion.cc	/^    namespace LegionProf {$/;"	n	namespace:LegionRuntime::HighLevel	file:
LegionProf	src/legion_runtime/legion_profiling.h	/^    namespace LegionProf {$/;"	n	namespace:LegionRuntime::HighLevel
LegionRuntime	src/legion_runtime/accessor.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/alt_mappers.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/alt_mappers.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/arrays.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/atomics.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/default_mapper.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/default_mapper.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/field_tree.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/garbage_collection.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/garbage_collection.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/interval_tree.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/legion.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_allocation.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_logging.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/legion_logging.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_ops.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/legion_ops.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_profiling.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_spy.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/legion_spy.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_tasks.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/legion_tasks.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_trace.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/legion_trace.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_types.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/legion_utilities.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/lowlevel.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/lowlevel.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/lowlevel_dma.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/lowlevel_dma.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/lowlevel_gpu.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/lowlevel_gpu.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/lowlevel_impl.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/mapping_utilities.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/mapping_utilities.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/rectangle_set.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/region_tree.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/region_tree.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/runtime.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/runtime.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/shared_lowlevel.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/shim_mapper.cc	/^namespace LegionRuntime {$/;"	n	file:
LegionRuntime	src/legion_runtime/shim_mapper.h	/^namespace LegionRuntime {$/;"	n
LegionRuntime	src/legion_runtime/utilities.h	/^namespace LegionRuntime {$/;"	n
LegionSerialization	src/legion_runtime/legion.h	/^    class LegionSerialization {$/;"	c	namespace:LegionRuntime::HighLevel
LegionSpy	src/legion_runtime/legion.cc	/^    namespace LegionSpy {$/;"	n	namespace:LegionRuntime::HighLevel	file:
LegionSpy	src/legion_runtime/legion_spy.h	/^    namespace LegionSpy {$/;"	n	namespace:LegionRuntime::HighLevel
LegionStack	src/legion_runtime/region_tree.cc	/^    LegionStack<T,MAX_SIZE,INC_SIZE>::LegionStack($/;"	f	class:LegionRuntime::HighLevel::LegionStack
LegionStack	src/legion_runtime/region_tree.cc	/^    LegionStack<T,MAX_SIZE,INC_SIZE>::LegionStack(void)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
LegionStack	src/legion_runtime/region_tree.h	/^    class LegionStack {$/;"	c	namespace:LegionRuntime::HighLevel
LegionStaticAssert	src/legion_runtime/legion_types.h	/^  template<> struct LegionStaticAssert<true> { };$/;"	s	namespace:LegionRuntime
LegionTaskWrapper	src/legion_runtime/legion.h	/^    class LegionTaskWrapper {$/;"	c	namespace:LegionRuntime::HighLevel
LegionTrace	src/legion_runtime/legion_trace.cc	/^    LegionTrace::LegionTrace(TraceID t, SingleTask *c)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
LegionTrace	src/legion_runtime/legion_trace.cc	/^    LegionTrace::LegionTrace(const LegionTrace &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
LegionTrace	src/legion_runtime/legion_trace.h	/^    class LegionTrace {$/;"	c	namespace:LegionRuntime::HighLevel
LegionTypeInequality	src/legion_runtime/legion_types.h	/^  struct LegionTypeInequality {$/;"	s	namespace:LegionRuntime
LegionTypeInequality	src/legion_runtime/legion_types.h	/^  struct LegionTypeInequality<T,T> {$/;"	s	namespace:LegionRuntime
LexState	include/lua/llex.h	/^typedef struct LexState {$/;"	s
LexState	include/lua/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LinearSubrectIterator	src/legion_runtime/arrays.h	/^      typedef GenericLinearSubrectIterator<Blockify<DIM> > LinearSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
LinearSubrectIterator	src/legion_runtime/arrays.h	/^      typedef GenericLinearSubrectIterator<Linearization<DIM> > LinearSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
LinearSubrectIterator	src/legion_runtime/arrays.h	/^      typedef GenericLinearSubrectIterator<Mapping<IDIM, ODIM> > LinearSubrectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
Linearization	src/legion_runtime/arrays.h	/^      Linearization(const Point<DIM> _strides, int _offset = 0)$/;"	f	class:LegionRuntime::Arrays::Linearization
Linearization	src/legion_runtime/arrays.h	/^      Linearization(void) {}$/;"	f	class:LegionRuntime::Arrays::Linearization
Linearization	src/legion_runtime/arrays.h	/^    class Linearization {$/;"	c	namespace:LegionRuntime::Arrays
ListReductionManager	src/legion_runtime/region_tree.cc	/^    ListReductionManager::ListReductionManager(RegionTreeForest *ctx, $/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
ListReductionManager	src/legion_runtime/region_tree.cc	/^    ListReductionManager::ListReductionManager(const ListReductionManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
ListReductionManager	src/legion_runtime/region_tree.h	/^    class ListReductionManager : public ReductionManager {$/;"	c	namespace:LegionRuntime::HighLevel
LoadBlock	src/lua_src/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	src/lua_src/lundump.c	37;"	d	file:
LoadChar	src/lua_src/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	src/lua_src/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	src/lua_src/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	src/lua_src/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadF	src/lua_src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	src/lua_src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	src/lua_src/lundump.c	/^static void LoadFunction(LoadState* S, Proto* f)$/;"	f	file:
LoadHeader	src/lua_src/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	src/lua_src/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMem	src/lua_src/lundump.c	36;"	d	file:
LoadNumber	src/lua_src/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	src/lua_src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	src/lua_src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	src/lua_src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon142	file:
LoadString	src/lua_src/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadUpvalues	src/lua_src/lundump.c	/^static void LoadUpvalues(LoadState* S, Proto* f)$/;"	f	file:
LoadVar	src/lua_src/lundump.c	38;"	d	file:
LoadVector	src/lua_src/lundump.c	39;"	d	file:
LocVar	include/lua/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	include/lua/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
LocalCPUMemory	src/legion_runtime/lowlevel.cc	/^      LocalCPUMemory(Memory _me, size_t _size,$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
LocalCPUMemory	src/legion_runtime/lowlevel.cc	/^    class LocalCPUMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
LocalFieldInfo	src/legion_runtime/legion_tasks.h	/^        LocalFieldInfo(FieldSpace sp, FieldID f,$/;"	f	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
LocalFieldInfo	src/legion_runtime/legion_tasks.h	/^        LocalFieldInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
LocalFieldInfo	src/legion_runtime/legion_tasks.h	/^      struct LocalFieldInfo {$/;"	s	class:LegionRuntime::HighLevel::SingleTask
LocalProcessor	src/legion_runtime/lowlevel.cc	/^      LocalProcessor(Processor _me, int _core_id, $/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
LocalProcessor	src/legion_runtime/lowlevel.cc	/^    class LocalProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
LocalReductionMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      LocalReductionMemPairCopier(Memory _src_mem, Memory _dst_mem,$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
LocalReductionMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class LocalReductionMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
LocatorFields	src/test/circuit.h	/^enum LocatorFields {$/;"	g
Lock	src/legion_runtime/activemsg.cc	/^    Lock(SrcDataPool& _sdp) : sdp(_sdp) { gasnet_hsl_lock(&sdp.mutex); }$/;"	f	class:SrcDataPool::Lock
Lock	src/legion_runtime/activemsg.cc	/^  class Lock {$/;"	c	class:SrcDataPool	file:
Lock	src/legion_runtime/legion.cc	/^    Lock::Lock(Reservation r)$/;"	f	class:LegionRuntime::HighLevel::Lock
Lock	src/legion_runtime/legion.cc	/^    Lock::Lock(void)$/;"	f	class:LegionRuntime::HighLevel::Lock
Lock	src/legion_runtime/legion.h	/^    class Lock {$/;"	c	namespace:LegionRuntime::HighLevel
LockGrantArgs	src/legion_runtime/lowlevel.cc	/^    struct LockGrantArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
LockGrantMessage	src/legion_runtime/lowlevel.cc	/^				       handle_lock_grant> LockGrantMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
LockReleaseArgs	src/legion_runtime/lowlevel.cc	/^    struct LockReleaseArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
LockReleaseMessage	src/legion_runtime/lowlevel.cc	/^				      handle_lock_release> LockReleaseMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
LockRequest	src/legion_runtime/legion.h	/^    struct LockRequest {$/;"	s	namespace:LegionRuntime::HighLevel
LockRequestArgs	src/legion_runtime/lowlevel.cc	/^    struct LockRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
LockRequestMessage	src/legion_runtime/lowlevel.cc	/^				      handle_lock_request> LockRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
LockTraceItem	src/legion_runtime/lowlevel_impl.h	/^    struct LockTraceItem {$/;"	s	namespace:LegionRuntime::LowLevel
LogLevel	src/legion_runtime/utilities.h	/^  enum LogLevel {$/;"	g
LogMsgEventDependency	src/legion_runtime/legion_logging.h	/^        LogMsgEventDependency(Event one, Event two) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventDependency
LogMsgEventDependency	src/legion_runtime/legion_logging.h	/^      struct LogMsgEventDependency {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgEventTiming	src/legion_runtime/legion_logging.h	/^        LogMsgEventTiming(Processor proc, Event event, TimingKind kind, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
LogMsgEventTiming	src/legion_runtime/legion_logging.h	/^      struct LogMsgEventTiming {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgFieldCreation	src/legion_runtime/legion_logging.h	/^        LogMsgFieldCreation(FieldSpace handle, FieldID fid, bool local) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
LogMsgFieldCreation	src/legion_runtime/legion_logging.h	/^      struct LogMsgFieldCreation {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgFieldSpace	src/legion_runtime/legion_logging.h	/^        LogMsgFieldSpace(FieldSpace handle) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldSpace
LogMsgFieldSpace	src/legion_runtime/legion_logging.h	/^      struct LogMsgFieldSpace {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgFutureWait	src/legion_runtime/legion_logging.h	/^        LogMsgFutureWait(Processor proc, UniqueID context, UniqueID wait_on, WaitKind kind, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
LogMsgFutureWait	src/legion_runtime/legion_logging.h	/^      struct LogMsgFutureWait {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgIndexPartition	src/legion_runtime/legion_logging.h	/^        LogMsgIndexPartition(IndexSpace parent, IndexPartition handle,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
LogMsgIndexPartition	src/legion_runtime/legion_logging.h	/^      struct LogMsgIndexPartition {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgIndexSlice	src/legion_runtime/legion_logging.h	/^        LogMsgIndexSlice(UniqueID index_id, UniqueID slice_id) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSlice
LogMsgIndexSlice	src/legion_runtime/legion_logging.h	/^      struct LogMsgIndexSlice {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgIndexSubspace	src/legion_runtime/legion_logging.h	/^        LogMsgIndexSubspace(IndexPartition parent, IndexSpace handle,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
LogMsgIndexSubspace	src/legion_runtime/legion_logging.h	/^      struct LogMsgIndexSubspace {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgInlineWait	src/legion_runtime/legion_logging.h	/^        LogMsgInlineWait(Processor proc, UniqueID context, Event wait_on, WaitKind kind, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
LogMsgInlineWait	src/legion_runtime/legion_logging.h	/^      struct LogMsgInlineWait {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLogicalRequirement	src/legion_runtime/legion_logging.h	/^        LogMsgLogicalRequirement(UniqueID unique_op_id, unsigned index,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
LogMsgLogicalRequirement	src/legion_runtime/legion_logging.h	/^      struct LogMsgLogicalRequirement {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLowlevelCopy	src/legion_runtime/legion_logging.h	/^        LogMsgLowlevelCopy(PhysicalInstance src_instance,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
LogMsgLowlevelCopy	src/legion_runtime/legion_logging.h	/^      struct LogMsgLowlevelCopy {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLowlevelCopyAssoc	src/legion_runtime/legion_logging.h	/^        LogMsgLowlevelCopyAssoc(Event highlevel_end_event, Event lowlevel_end_event, unsigned channel_id) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
LogMsgLowlevelCopyAssoc	src/legion_runtime/legion_logging.h	/^      struct LogMsgLowlevelCopyAssoc {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgLowlevelCopyChannel	src/legion_runtime/legion_logging.h	/^        LogMsgLowlevelCopyChannel(unsigned id, const char* name) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyChannel
LogMsgLowlevelCopyChannel	src/legion_runtime/legion_logging.h	/^      struct LogMsgLowlevelCopyChannel {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgMappingDependence	src/legion_runtime/legion_logging.h	/^        LogMsgMappingDependence(UniqueID parent_context, UniqueID previous_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
LogMsgMappingDependence	src/legion_runtime/legion_logging.h	/^      struct LogMsgMappingDependence {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgMemMemAffinity	src/legion_runtime/legion_logging.h	/^        LogMsgMemMemAffinity(Memory mem1, Memory mem2, size_t bandwidth,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
LogMsgMemMemAffinity	src/legion_runtime/legion_logging.h	/^      struct LogMsgMemMemAffinity {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgMemory	src/legion_runtime/legion_logging.h	/^        LogMsgMemory(Memory mem, Memory::Kind kind, size_t capacity) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
LogMsgMemory	src/legion_runtime/legion_logging.h	/^      struct LogMsgMemory {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperation	src/legion_runtime/legion_logging.h	/^        LogMsgOperation(Processor proc, LogMsgOperationKind k, UniqueID id, UniqueID context, unsigned long long time) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
LogMsgOperation	src/legion_runtime/legion_logging.h	/^      struct LogMsgOperation {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperationEvents	src/legion_runtime/legion_logging.h	/^        LogMsgOperationEvents(UniqueID unique_op_id, Event start_event,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
LogMsgOperationEvents	src/legion_runtime/legion_logging.h	/^      struct LogMsgOperationEvents {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperationKind	src/legion_runtime/legion_logging.h	/^      enum LogMsgOperationKind {$/;"	g	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgOperationTiming	src/legion_runtime/legion_logging.h	/^        LogMsgOperationTiming(Processor proc, UniqueID unique_op_id, TimingKind kind,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
LogMsgOperationTiming	src/legion_runtime/legion_logging.h	/^      struct LogMsgOperationTiming {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgPhysicalInstance	src/legion_runtime/legion_logging.h	/^        LogMsgPhysicalInstance(PhysicalInstance instance, Memory memory,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
LogMsgPhysicalInstance	src/legion_runtime/legion_logging.h	/^      struct LogMsgPhysicalInstance {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgPhysicalUser	src/legion_runtime/legion_logging.h	/^        LogMsgPhysicalUser(PhysicalInstance instance, UniqueID unique_op_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
LogMsgPhysicalUser	src/legion_runtime/legion_logging.h	/^      struct LogMsgPhysicalUser {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgPointPoint	src/legion_runtime/legion_logging.h	/^        LogMsgPointPoint(UniqueID orig_point, UniqueID new_point) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPointPoint
LogMsgPointPoint	src/legion_runtime/legion_logging.h	/^      struct LogMsgPointPoint {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgProcMemAffinity	src/legion_runtime/legion_logging.h	/^        LogMsgProcMemAffinity(Processor proc, Memory mem, size_t bandwidth,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
LogMsgProcMemAffinity	src/legion_runtime/legion_logging.h	/^      struct LogMsgProcMemAffinity {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgProcessor	src/legion_runtime/legion_logging.h	/^        LogMsgProcessor(AddressSpaceID address_space, Processor p) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcessor
LogMsgProcessor	src/legion_runtime/legion_logging.h	/^      struct LogMsgProcessor {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgRequirementFields	src/legion_runtime/legion_logging.h	/^        LogMsgRequirementFields(UniqueID unique_op_id, unsigned index,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
LogMsgRequirementFields	src/legion_runtime/legion_logging.h	/^      struct LogMsgRequirementFields {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgSlicePoint	src/legion_runtime/legion_logging.h	/^        LogMsgSlicePoint(UniqueID slice_id, UniqueID point_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
LogMsgSlicePoint	src/legion_runtime/legion_logging.h	/^      struct LogMsgSlicePoint {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgSliceSlice	src/legion_runtime/legion_logging.h	/^        LogMsgSliceSlice(UniqueID slice_parent, UniqueID slice_subslice) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSliceSlice
LogMsgSliceSlice	src/legion_runtime/legion_logging.h	/^      struct LogMsgSliceSlice {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskCollection	src/legion_runtime/legion_logging.h	/^        LogMsgTaskCollection(Processor::TaskFuncID task_id, bool leaf,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
LogMsgTaskCollection	src/legion_runtime/legion_logging.h	/^      struct LogMsgTaskCollection {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskInstanceRequirement	src/legion_runtime/legion_logging.h	/^        LogMsgTaskInstanceRequirement(UniqueID unique_id, unsigned index,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
LogMsgTaskInstanceRequirement	src/legion_runtime/legion_logging.h	/^      struct LogMsgTaskInstanceRequirement {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskInstanceVariant	src/legion_runtime/legion_logging.h	/^        LogMsgTaskInstanceVariant(UniqueID unique_op_id, VariantID vid) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceVariant
LogMsgTaskInstanceVariant	src/legion_runtime/legion_logging.h	/^      struct LogMsgTaskInstanceVariant {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskOperation	src/legion_runtime/legion_logging.h	/^        LogMsgTaskOperation(Processor proc, bool i, UniqueID id, Processor::TaskFuncID tid, UniqueID context, unsigned long long time, MappingTagID tag) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
LogMsgTaskOperation	src/legion_runtime/legion_logging.h	/^      struct LogMsgTaskOperation {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTaskVariant	src/legion_runtime/legion_logging.h	/^        LogMsgTaskVariant(Processor::TaskFuncID task_id,$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
LogMsgTaskVariant	src/legion_runtime/legion_logging.h	/^      struct LogMsgTaskVariant {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTopIndexSpace	src/legion_runtime/legion_logging.h	/^        LogMsgTopIndexSpace(IndexSpace space) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopIndexSpace
LogMsgTopIndexSpace	src/legion_runtime/legion_logging.h	/^      struct LogMsgTopIndexSpace {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTopLevelTask	src/legion_runtime/legion_logging.h	/^        LogMsgTopLevelTask(Processor::TaskFuncID task_id, UniqueID unique_op_id) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopLevelTask
LogMsgTopLevelTask	src/legion_runtime/legion_logging.h	/^      struct LogMsgTopLevelTask {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
LogMsgTopRegion	src/legion_runtime/legion_logging.h	/^        LogMsgTopRegion(IndexSpace ispace, FieldSpace fspace, RegionTreeID tid) :$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
LogMsgTopRegion	src/legion_runtime/legion_logging.h	/^      struct LogMsgTopRegion {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
Logger	src/legion_runtime/utilities.h	/^  class Logger {$/;"	c	namespace:LegionRuntime
LogicalCloser	src/legion_runtime/region_tree.cc	/^    LogicalCloser::LogicalCloser(ContextID c, const LogicalUser &u, bool val)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
LogicalCloser	src/legion_runtime/region_tree.h	/^    struct LogicalCloser {$/;"	s	namespace:LegionRuntime::HighLevel
LogicalDepAnalyzer	src/legion_runtime/region_tree.cc	/^    LogicalDepAnalyzer::LogicalDepAnalyzer(const LogicalUser &u,$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
LogicalDepAnalyzer	src/legion_runtime/region_tree.h	/^    class LogicalDepAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalFieldInvalidator	src/legion_runtime/region_tree.h	/^      LogicalFieldInvalidator(void) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
LogicalFieldInvalidator	src/legion_runtime/region_tree.h	/^    class LogicalFieldInvalidator {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalFilter	src/legion_runtime/region_tree.cc	/^    LogicalFilter::LogicalFilter(const FieldMask &mask,$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
LogicalFilter	src/legion_runtime/region_tree.h	/^    class LogicalFilter {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalInitializer	src/legion_runtime/region_tree.cc	/^    LogicalInitializer::LogicalInitializer(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
LogicalInitializer	src/legion_runtime/region_tree.cc	/^    LogicalInitializer::LogicalInitializer(const LogicalInitializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
LogicalInitializer	src/legion_runtime/region_tree.h	/^    class LogicalInitializer : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalInvalidator	src/legion_runtime/region_tree.cc	/^    LogicalInvalidator::LogicalInvalidator(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
LogicalInvalidator	src/legion_runtime/region_tree.cc	/^    LogicalInvalidator::LogicalInvalidator(const LogicalInvalidator &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
LogicalInvalidator	src/legion_runtime/region_tree.h	/^    class LogicalInvalidator : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalOpAnalyzer	src/legion_runtime/region_tree.cc	/^    LogicalOpAnalyzer<DOMINATE>::LogicalOpAnalyzer(Operation *o)$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
LogicalOpAnalyzer	src/legion_runtime/region_tree.h	/^    class LogicalOpAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalPartition	src/legion_runtime/legion.cc	/^    LogicalPartition::LogicalPartition(RegionTreeID tid, IndexPartition pid, $/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
LogicalPartition	src/legion_runtime/legion.cc	/^    LogicalPartition::LogicalPartition(const LogicalPartition &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
LogicalPartition	src/legion_runtime/legion.cc	/^    LogicalPartition::LogicalPartition(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
LogicalPartition	src/legion_runtime/legion.h	/^    class LogicalPartition {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalPathRegistrar	src/legion_runtime/region_tree.cc	/^    LogicalPathRegistrar::LogicalPathRegistrar(ContextID c, Operation *o,$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
LogicalPathRegistrar	src/legion_runtime/region_tree.cc	/^    LogicalPathRegistrar::LogicalPathRegistrar(const LogicalPathRegistrar&rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
LogicalPathRegistrar	src/legion_runtime/region_tree.h	/^    class LogicalPathRegistrar : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalRegion	src/legion_runtime/legion.cc	/^    LogicalRegion::LogicalRegion(RegionTreeID tid, IndexSpace index, $/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
LogicalRegion	src/legion_runtime/legion.cc	/^    LogicalRegion::LogicalRegion(const LogicalRegion &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
LogicalRegion	src/legion_runtime/legion.cc	/^    LogicalRegion::LogicalRegion(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
LogicalRegion	src/legion_runtime/legion.h	/^    class LogicalRegion {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalRegistrar	src/legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>::LogicalRegistrar(ContextID c, Operation *o,$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
LogicalRegistrar	src/legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>::LogicalRegistrar(const LogicalRegistrar &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
LogicalRegistrar	src/legion_runtime/region_tree.h	/^    class LogicalRegistrar : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
LogicalState	src/legion_runtime/region_tree.cc	/^    LogicalState::LogicalState(const LogicalState &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
LogicalState	src/legion_runtime/region_tree.cc	/^    LogicalState::LogicalState(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
LogicalState	src/legion_runtime/region_tree.h	/^    struct LogicalState {$/;"	s	namespace:LegionRuntime::HighLevel
LogicalUser	src/legion_runtime/region_tree.cc	/^    LogicalUser::LogicalUser(Operation *o, unsigned id, const RegionUsage &u,$/;"	f	class:LegionRuntime::HighLevel::LogicalUser
LogicalUser	src/legion_runtime/region_tree.cc	/^    LogicalUser::LogicalUser(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalUser
LogicalUser	src/legion_runtime/region_tree.h	/^    struct LogicalUser : public GenericUser {$/;"	s	namespace:LegionRuntime::HighLevel
LogicalView	src/legion_runtime/region_tree.cc	/^    LogicalView::LogicalView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::LogicalView
LogicalView	src/legion_runtime/region_tree.h	/^    class LogicalView : public HierarchicalCollectable {$/;"	c	namespace:LegionRuntime::HighLevel
LowLevel	src/legion_runtime/accessor.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	src/legion_runtime/arrays.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	src/legion_runtime/atomics.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	src/legion_runtime/lowlevel.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	src/legion_runtime/lowlevel.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	src/legion_runtime/lowlevel_dma.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	src/legion_runtime/lowlevel_dma.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	src/legion_runtime/lowlevel_gpu.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	src/legion_runtime/lowlevel_gpu.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	src/legion_runtime/lowlevel_impl.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevel	src/legion_runtime/shared_lowlevel.cc	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime	file:
LowLevel	src/legion_runtime/utilities.h	/^  namespace LowLevel {$/;"	n	namespace:LegionRuntime
LowLevelFnptr	src/legion_runtime/legion_types.h	/^    typedef void (*LowLevelFnptr)(const void*,size_t,Processor);$/;"	t	namespace:LegionRuntime::HighLevel
MACHINE_SHUTDOWN_MSGID	src/legion_runtime/lowlevel.cc	/^      MACHINE_SHUTDOWN_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
MACROPROXY	src/legion_runtime/activemsg.h	245;"	d
MAIN_TASK_ID	src/test/hpcg/hpcg-main.cc	/^    MAIN_TASK_ID = 0,$/;"	e	enum:__anon117::TID	file:
MALLOC	src/nautilus/scheduler.c	95;"	d	file:
MALLOC	src/nautilus/scheduler.c	98;"	d	file:
MAPPER_ID	src/test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:CalcNewCurrentsTask
MAPPER_ID	src/test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:CheckTask
MAPPER_ID	src/test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:DistributeChargeTask
MAPPER_ID	src/test/circuit.h	/^  static const int MAPPER_ID = 0;$/;"	m	class:UpdateVoltagesTask
MAPPING_OPERATION	src/legion_runtime/legion_logging.h	/^        MAPPING_OPERATION = 0,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationKind
MAPPING_TRAVERSE_CALL	src/legion_runtime/region_tree.h	/^      MAPPING_TRAVERSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
MAP_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      MAP_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MAP_PHYSICAL_REGION_ANALYSIS	src/legion_runtime/region_tree.h	/^      MAP_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
MAP_PHYSICAL_REGION_CALL	src/legion_runtime/region_tree.h	/^      MAP_PHYSICAL_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
MAP_REDUCTION_REGION_CALL	src/legion_runtime/region_tree.h	/^      MAP_REDUCTION_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
MASK	include/lua/lctype.h	46;"	d
MASK0	include/lua/lopcodes.h	83;"	d
MASK1	include/lua/lopcodes.h	80;"	d
MATERIALIZED_VIEW_ALLOC	src/legion_runtime/legion_allocation.h	/^      MATERIALIZED_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MAX	scripts/kconfig/lxdialog/dialog.h	56;"	d
MAX	src/fs/ext2/ext2_access.c	41;"	d	file:
MAX	src/nautilus/scheduler.c	75;"	d	file:
MAXARG_A	include/lua/lopcodes.h	74;"	d
MAXARG_Ax	include/lua/lopcodes.h	68;"	d
MAXARG_Ax	include/lua/lopcodes.h	70;"	d
MAXARG_B	include/lua/lopcodes.h	75;"	d
MAXARG_Bx	include/lua/lopcodes.h	60;"	d
MAXARG_Bx	include/lua/lopcodes.h	63;"	d
MAXARG_C	include/lua/lopcodes.h	76;"	d
MAXARG_sBx	include/lua/lopcodes.h	61;"	d
MAXARG_sBx	include/lua/lopcodes.h	64;"	d
MAXASIZE	src/lua_src/ltable.c	49;"	d	file:
MAXBITS	src/lua_src/ltable.c	44;"	d	file:
MAXBITS	src/lua_src/ltable.c	46;"	d	file:
MAXBUF	src/nautilus/doprnt.c	146;"	d	file:
MAXCCALLS	src/lua_src/lstrlib.c	218;"	d	file:
MAXFILES	scripts/basic/docproc.c	60;"	d	file:
MAXINDEXRK	include/lua/lopcodes.h	142;"	d
MAXLINESZ	scripts/basic/docproc.c	59;"	d	file:
MAXSIZE	src/lua_src/lstrlib.c	106;"	d	file:
MAXSTACK	include/lua/llimits.h	138;"	d
MAXTAGLOOP	src/lua_src/lvm.c	32;"	d	file:
MAXUPVAL	include/lua/llimits.h	126;"	d
MAXVARS	src/lua_src/lparser.c	32;"	d	file:
MAX_CONTEXTS	src/legion_runtime/legion_types.h	80;"	d
MAX_FIELDS	src/legion_runtime/legion_types.h	54;"	d
MAX_FIELDS_PER_INST	src/legion_runtime/lowlevel_impl.h	/^      static const unsigned MAX_FIELDS_PER_INST = 2048;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
MAX_FORMAT	src/lua_src/lstrlib.c	830;"	d	file:
MAX_HIST_LINES	xeon_phi/linux_usr/phi_console.c	36;"	d	file:
MAX_INT	include/lua/llimits.h	37;"	d
MAX_IOAPICS	include/dev/ioapic.h	29;"	d
MAX_IRQ_NUM	include/nautilus/irq.h	43;"	d
MAX_ITEM	src/lua_src/lstrlib.c	823;"	d	file:
MAX_LEN	scripts/kconfig/lxdialog/dialog.h	53;"	d
MAX_LINEARIZATION_LEN	src/legion_runtime/lowlevel_impl.h	/^      static const unsigned MAX_LINEARIZATION_LEN = 16;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
MAX_LMEM	include/lua/llimits.h	34;"	d
MAX_LUMEM	include/lua/llimits.h	32;"	d
MAX_MMAP_ENTRIES	include/nautilus/mm.h	29;"	d
MAX_NUMA_DOMAINS	include/nautilus/numa.h	32;"	d
MAX_NUM_NODES	src/legion_runtime/legion_types.h	61;"	d
MAX_NUM_PROCS	src/legion_runtime/legion_types.h	65;"	d
MAX_NUM_THREADS	src/legion_runtime/lowlevel_impl.h	28;"	d
MAX_POINT_DIM	src/legion_runtime/lowlevel.h	/^      enum { MAX_POINT_DIM = 3 };$/;"	e	enum:LegionRuntime::LowLevel::DomainPoint::__anon90
MAX_QUEUE	src/nautilus/scheduler.c	82;"	d	file:
MAX_RANK	src/nautilus/fmtout.c	75;"	d	file:
MAX_RECT_DIM	src/legion_runtime/lowlevel.h	/^      enum { MAX_RECT_DIM = 3 };$/;"	e	enum:LegionRuntime::LowLevel::Domain::__anon91
MAX_RETURN_SIZE	src/legion_runtime/legion_types.h	50;"	d
MAX_SIZET	include/lua/llimits.h	30;"	d
MAX_SIZE_T	src/lua_src/liolib.c	396;"	d	file:
MAX_STEAL_COUNT	src/test/saxpy_array.cc	33;"	d	file:
MAX_THREAD_NAME	include/nautilus/thread.h	107;"	d
MAX_TIMEOUT	xeon_phi/linux_usr/phi_console.c	44;"	d	file:
MAX_TRIES	src/dev/apic.c	1001;"	d	file:
MAX_VRINGS	include/dev/virtio_pci.h	4;"	d
MC_EXCP	include/nautilus/idt.h	52;"	d
MEMERRMSG	src/lua_src/lstate.c	42;"	d	file:
MEMORY_AVAILABLE_ALLOC	src/legion_runtime/legion_allocation.h	/^      MEMORY_AVAILABLE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MEMORY_INSTANCES_ALLOC	src/legion_runtime/legion_allocation.h	/^      MEMORY_INSTANCES_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MEMORY_REDUCTION_ALLOC	src/legion_runtime/legion_allocation.h	/^      MEMORY_REDUCTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MEMORY_STRIDE	src/legion_runtime/lowlevel_impl.h	/^      static const size_t MEMORY_STRIDE = 1024;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
MEM_1GB	include/nautilus/paging.h	121;"	d
MEM_2MB	include/nautilus/paging.h	122;"	d
MEM_BASE_PATH	xeon_phi/linux_usr/phi_console.c	41;"	d	file:
MEM_FILE	xeon_phi/linux_usr/phi_console.c	42;"	d	file:
MEM_UNUSABLE	include/nautilus/paging.h	/^    MEM_UNUSABLE,$/;"	e	enum:__anon58
MEM_USABLE	include/nautilus/paging.h	/^    MEM_USABLE,$/;"	e	enum:__anon58
MEM_ZONE_RP	include/nautilus/paging.h	64;"	d
MEM_ZONE_UC	include/nautilus/paging.h	58;"	d
MEM_ZONE_UCE	include/nautilus/paging.h	62;"	d
MEM_ZONE_WB	include/nautilus/paging.h	61;"	d
MEM_ZONE_WC	include/nautilus/paging.h	59;"	d
MEM_ZONE_WP	include/nautilus/paging.h	63;"	d
MEM_ZONE_WT	include/nautilus/paging.h	60;"	d
MEM_ZONE_XP	include/nautilus/paging.h	65;"	d
MENUBOX_BG	scripts/kconfig/lxdialog/colors.h	97;"	d
MENUBOX_BORDER_BG	scripts/kconfig/lxdialog/colors.h	101;"	d
MENUBOX_BORDER_FG	scripts/kconfig/lxdialog/colors.h	100;"	d
MENUBOX_BORDER_HL	scripts/kconfig/lxdialog/colors.h	102;"	d
MENUBOX_FG	scripts/kconfig/lxdialog/colors.h	96;"	d
MENUBOX_HL	scripts/kconfig/lxdialog/colors.h	98;"	d
MENU_CHANGED	scripts/kconfig/expr.h	141;"	d
MENU_ROOT	scripts/kconfig/expr.h	142;"	d
MESSAGE_BUFFER_ALLOC	src/legion_runtime/legion_allocation.h	/^      MESSAGE_BUFFER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MESSAGE_CHUNKS_MAGIC	src/legion_runtime/activemsg.h	/^  static const gasnet_handlerarg_t MESSAGE_CHUNKS_MAGIC = 0x0a550a55;$/;"	m	struct:BaseMedium
MESSAGE_ID_MAGIC	src/legion_runtime/activemsg.h	/^  static const gasnet_handlerarg_t MESSAGE_ID_MAGIC = 0x0bad0bad;$/;"	m	struct:BaseMedium
METHOD_NAME__ADR	include/acpi/acnames.h	52;"	d
METHOD_NAME__BBN	include/acpi/acnames.h	57;"	d
METHOD_NAME__BFS	include/acpi/acnames.h	66;"	d
METHOD_NAME__CID	include/acpi/acnames.h	50;"	d
METHOD_NAME__CRS	include/acpi/acnames.h	59;"	d
METHOD_NAME__GTS	include/acpi/acnames.h	67;"	d
METHOD_NAME__HID	include/acpi/acnames.h	49;"	d
METHOD_NAME__INI	include/acpi/acnames.h	53;"	d
METHOD_NAME__PRS	include/acpi/acnames.h	60;"	d
METHOD_NAME__PRT	include/acpi/acnames.h	58;"	d
METHOD_NAME__PRW	include/acpi/acnames.h	61;"	d
METHOD_NAME__PTS	include/acpi/acnames.h	68;"	d
METHOD_NAME__REG	include/acpi/acnames.h	55;"	d
METHOD_NAME__SEG	include/acpi/acnames.h	56;"	d
METHOD_NAME__SRS	include/acpi/acnames.h	62;"	d
METHOD_NAME__SST	include/acpi/acnames.h	69;"	d
METHOD_NAME__STA	include/acpi/acnames.h	54;"	d
METHOD_NAME__UID	include/acpi/acnames.h	51;"	d
METHOD_NAME__WAK	include/acpi/acnames.h	70;"	d
MF_EXCP	include/nautilus/idt.h	50;"	d
MGData	src/test/hpcg/mg-data.h	/^    MGData(int64_t nFineRows,$/;"	f	struct:lgncg::MGData
MGData	src/test/hpcg/mg-data.h	/^    MGData(void)$/;"	f	struct:lgncg::MGData
MGData	src/test/hpcg/mg-data.h	/^struct MGData {$/;"	s	namespace:lgncg
MIL	src/test/benchmark.c	87;"	d	file:
MIN	scripts/kconfig/lxdialog/dialog.h	55;"	d
MIN	src/fs/ext2/ext2_access.c	42;"	d	file:
MIN	src/nautilus/scheduler.c	71;"	d	file:
MINSIZEARRAY	src/lua_src/lmem.c	43;"	d	file:
MINSTRTABSIZE	include/lua/llimits.h	144;"	d
MIN_DESTRUCT_ITER	include/nautilus/thread.h	111;"	d
MIN_FRACTION_SPLIT	src/legion_runtime/legion_utilities.h	1128;"	d
MIN_FRACTION_SPLIT	src/legion_runtime/legion_utilities.h	1353;"	d
MIN_ORDER	src/nautilus/mm/kmem.c	52;"	d	file:
MIN_RANK	src/nautilus/fmtout.c	74;"	d	file:
MIN_TTY_COLS	xeon_phi/linux_usr/phi_console.c	48;"	d	file:
MIN_TTY_ROWS	xeon_phi/linux_usr/phi_console.c	49;"	d	file:
MKIND_GLOBAL	src/legion_runtime/lowlevel_impl.h	/^	MKIND_GLOBAL,  \/\/ accessible via GASnet (spread over all nodes)$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_GPUFB	src/legion_runtime/lowlevel_impl.h	/^	MKIND_GPUFB,   \/\/ GPU framebuffer memory (accessible via cudaMemcpy)$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_RDMA	src/legion_runtime/lowlevel_impl.h	/^	MKIND_RDMA,    \/\/ remote, but accessible via RDMA$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_REMOTE	src/legion_runtime/lowlevel_impl.h	/^	MKIND_REMOTE,  \/\/ not accessible$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_SYSMEM	src/legion_runtime/lowlevel_impl.h	/^	MKIND_SYSMEM,  \/\/ directly accessible from CPU$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MKIND_ZEROCOPY	src/legion_runtime/lowlevel_impl.h	/^	MKIND_ZEROCOPY, \/\/ CPU memory, pinned for GPU access$/;"	e	enum:LegionRuntime::LowLevel::Memory::Impl::MemoryKind
MODE_EXCL	src/legion_runtime/lowlevel_impl.h	/^      enum { MODE_EXCL = 0, ZERO_COUNT = 0x11223344 };$/;"	e	enum:LegionRuntime::LowLevel::Reservation::Impl::__anon102
MODVERDIR	Makefile	/^export MODVERDIR := $(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))\/).tmp_versions$/;"	m
MOUNT_PATH_LEN	include/nautilus/fs.h	38;"	d
MPILegionHandshake	src/legion_runtime/legion.cc	/^    MPILegionHandshake::MPILegionHandshake(MPILegionHandshake::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
MPILegionHandshake	src/legion_runtime/legion.cc	/^    MPILegionHandshake::MPILegionHandshake(const MPILegionHandshake &rhs)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
MPILegionHandshake	src/legion_runtime/legion.cc	/^    MPILegionHandshake::MPILegionHandshake(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
MPILegionHandshake	src/legion_runtime/legion.h	/^    class MPILegionHandshake {$/;"	c	namespace:LegionRuntime::HighLevel
MPIRankArgs	src/legion_runtime/runtime.h	/^      struct MPIRankArgs {$/;"	s	class:LegionRuntime::HighLevel::Runtime
MPI_HANDSHAKE_ALLOC	src/legion_runtime/legion_allocation.h	/^      MPI_HANDSHAKE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MP_TAB_BUS_LEN	include/nautilus/acpi.h	37;"	d
MP_TAB_CPU_LEN	include/nautilus/acpi.h	36;"	d
MP_TAB_IOAPIC_LEN	include/nautilus/acpi.h	38;"	d
MP_TAB_IO_INT_LEN	include/nautilus/acpi.h	39;"	d
MP_TAB_LINT_LEN	include/nautilus/acpi.h	40;"	d
MP_TAB_TYPE_BUS	include/nautilus/acpi.h	31;"	d
MP_TAB_TYPE_CPU	include/nautilus/acpi.h	30;"	d
MP_TAB_TYPE_IOAPIC	include/nautilus/acpi.h	32;"	d
MP_TAB_TYPE_IO_INT	include/nautilus/acpi.h	33;"	d
MP_TAB_TYPE_LINT	include/nautilus/acpi.h	34;"	d
MS	include/dev/i8254.h	76;"	d
MS	src/nautilus/scheduler.c	416;"	d	file:
MSGID_FLIP_ACK	src/legion_runtime/activemsg.cc	/^       MSGID_FLIP_ACK = 255 };$/;"	e	enum:__anon98	file:
MSGID_FLIP_REQ	src/legion_runtime/activemsg.cc	/^       MSGID_FLIP_REQ = 254,$/;"	e	enum:__anon98	file:
MSGID_LONG_EXTENSION	src/legion_runtime/activemsg.cc	/^enum { MSGID_LONG_EXTENSION = 253,$/;"	e	enum:__anon98	file:
MSGID_RELEASE_SRCPTR	src/legion_runtime/activemsg.h	/^enum { MSGID_RELEASE_SRCPTR = 252 };$/;"	e	enum:__anon87
MSR_APIC_GET_ADDR	include/nautilus/msr.h	36;"	d
MSR_APIC_IS_BSP	include/nautilus/msr.h	35;"	d
MSR_FS_BASE	include/nautilus/msr.h	39;"	d
MSR_GS_BASE	include/nautilus/msr.h	40;"	d
MSR_KERNEL_GS_BASE	include/nautilus/msr.h	41;"	d
MULTIBOOT2_BOOTLOADER_MAGIC	include/nautilus/multiboot2.h	33;"	d
MULTIBOOT2_HEADER_MAGIC	include/nautilus/multiboot2.h	30;"	d
MULTIBOOT_ARCHITECTURE_I386	include/nautilus/multiboot2.h	72;"	d
MULTIBOOT_ARCHITECTURE_MIPS32	include/nautilus/multiboot2.h	73;"	d
MULTIBOOT_CONSOLE_FLAGS_CONSOLE_REQUIRED	include/nautilus/multiboot2.h	76;"	d
MULTIBOOT_CONSOLE_FLAGS_EGA_TEXT_SUPPORTED	include/nautilus/multiboot2.h	77;"	d
MULTIBOOT_FRAMEBUFFER_TYPE_EGA_TEXT	include/nautilus/multiboot2.h	268;"	d
MULTIBOOT_FRAMEBUFFER_TYPE_INDEXED	include/nautilus/multiboot2.h	266;"	d
MULTIBOOT_FRAMEBUFFER_TYPE_RGB	include/nautilus/multiboot2.h	267;"	d
MULTIBOOT_HEADER	include/nautilus/multiboot2.h	23;"	d
MULTIBOOT_HEADER_ALIGN	include/nautilus/multiboot2.h	27;"	d
MULTIBOOT_HEADER_TAG_ADDRESS	include/nautilus/multiboot2.h	66;"	d
MULTIBOOT_HEADER_TAG_CONSOLE_FLAGS	include/nautilus/multiboot2.h	68;"	d
MULTIBOOT_HEADER_TAG_END	include/nautilus/multiboot2.h	64;"	d
MULTIBOOT_HEADER_TAG_ENTRY_ADDRESS	include/nautilus/multiboot2.h	67;"	d
MULTIBOOT_HEADER_TAG_FRAMEBUFFER	include/nautilus/multiboot2.h	69;"	d
MULTIBOOT_HEADER_TAG_INFORMATION_REQUEST	include/nautilus/multiboot2.h	65;"	d
MULTIBOOT_HEADER_TAG_MODULE_ALIGN	include/nautilus/multiboot2.h	70;"	d
MULTIBOOT_HEADER_TAG_OPTIONAL	include/nautilus/multiboot2.h	74;"	d
MULTIBOOT_INFO_ALIGN	include/nautilus/multiboot2.h	39;"	d
MULTIBOOT_MEMORY_ACPI_RECLAIMABLE	include/nautilus/multiboot2.h	176;"	d
MULTIBOOT_MEMORY_AVAILABLE	include/nautilus/multiboot2.h	174;"	d
MULTIBOOT_MEMORY_BADRAM	include/nautilus/multiboot2.h	178;"	d
MULTIBOOT_MEMORY_NVS	include/nautilus/multiboot2.h	177;"	d
MULTIBOOT_MEMORY_RESERVED	include/nautilus/multiboot2.h	175;"	d
MULTIBOOT_MOD_ALIGN	include/nautilus/multiboot2.h	36;"	d
MULTIBOOT_SEARCH	include/nautilus/multiboot2.h	26;"	d
MULTIBOOT_TAG_ALIGN	include/nautilus/multiboot2.h	43;"	d
MULTIBOOT_TAG_TYPE_ACPI_NEW	include/nautilus/multiboot2.h	59;"	d
MULTIBOOT_TAG_TYPE_ACPI_OLD	include/nautilus/multiboot2.h	58;"	d
MULTIBOOT_TAG_TYPE_APM	include/nautilus/multiboot2.h	54;"	d
MULTIBOOT_TAG_TYPE_BASIC_MEMINFO	include/nautilus/multiboot2.h	48;"	d
MULTIBOOT_TAG_TYPE_BOOTDEV	include/nautilus/multiboot2.h	49;"	d
MULTIBOOT_TAG_TYPE_BOOT_LOADER_NAME	include/nautilus/multiboot2.h	46;"	d
MULTIBOOT_TAG_TYPE_CMDLINE	include/nautilus/multiboot2.h	45;"	d
MULTIBOOT_TAG_TYPE_EFI32	include/nautilus/multiboot2.h	55;"	d
MULTIBOOT_TAG_TYPE_EFI64	include/nautilus/multiboot2.h	56;"	d
MULTIBOOT_TAG_TYPE_ELF_SECTIONS	include/nautilus/multiboot2.h	53;"	d
MULTIBOOT_TAG_TYPE_END	include/nautilus/multiboot2.h	44;"	d
MULTIBOOT_TAG_TYPE_FRAMEBUFFER	include/nautilus/multiboot2.h	52;"	d
MULTIBOOT_TAG_TYPE_HRT	include/nautilus/multiboot2.h	62;"	d
MULTIBOOT_TAG_TYPE_MMAP	include/nautilus/multiboot2.h	50;"	d
MULTIBOOT_TAG_TYPE_MODULE	include/nautilus/multiboot2.h	47;"	d
MULTIBOOT_TAG_TYPE_NETWORK	include/nautilus/multiboot2.h	60;"	d
MULTIBOOT_TAG_TYPE_SMBIOS	include/nautilus/multiboot2.h	57;"	d
MULTIBOOT_TAG_TYPE_VBE	include/nautilus/multiboot2.h	51;"	d
MUST_EPOCH_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      MUST_EPOCH_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
MUTABLE	src/legion_runtime/legion_types.h	/^      MUTABLE         = 0x00000003,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
MUTEX_DEINIT	src/test/benchmark.h	22;"	d
MUTEX_DEINIT	src/test/benchmark.h	55;"	d
MUTEX_INIT	src/test/benchmark.h	19;"	d
MUTEX_INIT	src/test/benchmark.h	52;"	d
MUTEX_LOCK	src/test/benchmark.h	20;"	d
MUTEX_LOCK	src/test/benchmark.h	53;"	d
MUTEX_T	src/test/benchmark.h	18;"	d
MUTEX_T	src/test/benchmark.h	51;"	d
MUTEX_UNLOCK	src/test/benchmark.h	21;"	d
MUTEX_UNLOCK	src/test/benchmark.h	54;"	d
MWAIT_LOOPS	src/test/benchmark.c	85;"	d	file:
MXCSR_DAZ	include/nautilus/fpu.h	36;"	d
MXCSR_DE	include/nautilus/fpu.h	31;"	d
MXCSR_DM	include/nautilus/fpu.h	38;"	d
MXCSR_FZ	include/nautilus/fpu.h	44;"	d
MXCSR_IE	include/nautilus/fpu.h	30;"	d
MXCSR_IM	include/nautilus/fpu.h	37;"	d
MXCSR_OE	include/nautilus/fpu.h	33;"	d
MXCSR_OM	include/nautilus/fpu.h	40;"	d
MXCSR_PE	include/nautilus/fpu.h	35;"	d
MXCSR_PM	include/nautilus/fpu.h	42;"	d
MXCSR_RC	include/nautilus/fpu.h	43;"	d
MXCSR_UE	include/nautilus/fpu.h	34;"	d
MXCSR_UM	include/nautilus/fpu.h	41;"	d
MXCSR_ZE	include/nautilus/fpu.h	32;"	d
MXCSR_ZM	include/nautilus/fpu.h	39;"	d
MYINT	src/lua_src/lundump.c	235;"	d	file:
M_EVENT	scripts/kconfig/lxdialog/dialog.h	177;"	d
Machine	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Machine Machine;$/;"	t	namespace:LegionRuntime::HighLevel
Machine	src/legion_runtime/lowlevel.cc	/^    Machine::Machine(int *argc, char ***argv,$/;"	f	class:LegionRuntime::LowLevel::Machine
Machine	src/legion_runtime/lowlevel.h	/^    class Machine {$/;"	c	namespace:LegionRuntime::LowLevel
Machine	src/legion_runtime/shared_lowlevel.cc	/^    Machine::Machine(int *argc, char ***argv,$/;"	f	class:LegionRuntime::LowLevel::Machine
MachineQueryInterface	src/legion_runtime/mapping_utilities.cc	/^      MachineQueryInterface::MachineQueryInterface(Machine *m)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
MachineQueryInterface	src/legion_runtime/mapping_utilities.h	/^      class MachineQueryInterface {$/;"	c	namespace:LegionRuntime::HighLevel::MappingUtilities
MachineRunArgs	src/legion_runtime/lowlevel.cc	/^    struct MachineRunArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
MachineRunArgs	src/legion_runtime/shared_lowlevel.cc	/^    struct MachineRunArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
MachineShutdownRequestArgs	src/legion_runtime/lowlevel.cc	/^    struct MachineShutdownRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
MachineShutdownRequestMessage	src/legion_runtime/lowlevel.cc	/^				      handle_machine_shutdown_request> MachineShutdownRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
MainArgs	src/test/saxpy_array.cc	/^struct MainArgs {$/;"	s	file:
MapOp	src/legion_runtime/legion_ops.cc	/^    MapOp::MapOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MapOp
MapOp	src/legion_runtime/legion_ops.cc	/^    MapOp::MapOp(const MapOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MapOp
MapOp	src/legion_runtime/legion_ops.h	/^    class MapOp : public Inline, public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
Mappable	src/legion_runtime/legion.cc	/^    Mappable::Mappable(void)$/;"	f	class:LegionRuntime::HighLevel::Mappable
Mappable	src/legion_runtime/legion.h	/^    class Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
MappableInfo	src/legion_runtime/region_tree.cc	/^    MappableInfo::MappableInfo(ContextID c, Mappable *m, Processor p,$/;"	f	class:LegionRuntime::HighLevel::MappableInfo
MappableInfo	src/legion_runtime/region_tree.h	/^    struct MappableInfo {$/;"	s	namespace:LegionRuntime::HighLevel
MappableKind	src/legion_runtime/legion.h	/^      enum MappableKind {$/;"	g	class:LegionRuntime::HighLevel::Mappable
Mapper	src/legion_runtime/legion.h	/^      Mapper(HighLevelRuntime *rt) $/;"	f	class:LegionRuntime::HighLevel::Mapper
Mapper	src/legion_runtime/legion.h	/^    class Mapper {$/;"	c	namespace:LegionRuntime::HighLevel
MapperID	src/legion_runtime/legion_types.h	/^    typedef unsigned int MapperID;$/;"	t	namespace:LegionRuntime::HighLevel
MapperInfo	src/legion_runtime/runtime.h	/^        MapperInfo(Processor p, MapperID mid)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
MapperInfo	src/legion_runtime/runtime.h	/^        MapperInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
MapperInfo	src/legion_runtime/runtime.h	/^      struct MapperInfo {$/;"	s	class:LegionRuntime::HighLevel::Runtime
MapperMessage	src/legion_runtime/runtime.h	/^        MapperMessage(Processor t, void *mes, size_t l)$/;"	f	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
MapperMessage	src/legion_runtime/runtime.h	/^        MapperMessage(void)$/;"	f	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
MapperMessage	src/legion_runtime/runtime.h	/^      struct MapperMessage {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
Mapping	src/legion_runtime/arrays.h	/^      Mapping(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
Mapping	src/legion_runtime/arrays.h	/^    class Mapping {$/;"	c	namespace:LegionRuntime::Arrays
MappingConstraint	src/legion_runtime/legion.h	/^        MappingConstraint(Task *one, unsigned id1,$/;"	f	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
MappingConstraint	src/legion_runtime/legion.h	/^      struct MappingConstraint {$/;"	s	class:LegionRuntime::HighLevel::Mapper
MappingDeserializerFn	src/legion_runtime/arrays.h	/^      typedef Mapping<IDIM, ODIM> *(*MappingDeserializerFn)(const int *data);$/;"	t	class:LegionRuntime::Arrays::MappingRegistry
MappingKey	src/legion_runtime/mapping_utilities.h	/^        typedef std::pair<Processor,Processor::TaskFuncID> MappingKey;$/;"	t	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
MappingMemoizer	src/legion_runtime/mapping_utilities.cc	/^      MappingMemoizer::MappingMemoizer(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
MappingMemoizer	src/legion_runtime/mapping_utilities.h	/^      class MappingMemoizer {$/;"	c	namespace:LegionRuntime::HighLevel::MappingUtilities
MappingProfiler	src/legion_runtime/mapping_utilities.cc	/^      MappingProfiler::MappingProfiler(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
MappingProfiler	src/legion_runtime/mapping_utilities.h	/^      class MappingProfiler {$/;"	c	namespace:LegionRuntime::HighLevel::MappingUtilities
MappingRef	src/legion_runtime/region_tree.cc	/^    MappingRef::MappingRef(LogicalView *v, const FieldMask &needed)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
MappingRef	src/legion_runtime/region_tree.cc	/^    MappingRef::MappingRef(const MappingRef &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
MappingRef	src/legion_runtime/region_tree.cc	/^    MappingRef::MappingRef(void)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
MappingRef	src/legion_runtime/region_tree.h	/^    class MappingRef {$/;"	c	namespace:LegionRuntime::HighLevel
MappingRegistry	src/legion_runtime/arrays.h	/^    class MappingRegistry {$/;"	c	namespace:LegionRuntime::Arrays
MappingTagID	src/legion_runtime/legion_types.h	/^    typedef unsigned long MappingTagID;$/;"	t	namespace:LegionRuntime::HighLevel
MappingTraverser	src/legion_runtime/region_tree.cc	/^    MappingTraverser::MappingTraverser(RegionTreePath &p, MappableInfo *in,$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
MappingTraverser	src/legion_runtime/region_tree.cc	/^    MappingTraverser::MappingTraverser(const MappingTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
MappingTraverser	src/legion_runtime/region_tree.h	/^    class MappingTraverser : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
MappingUtilities	src/legion_runtime/mapping_utilities.cc	/^    namespace MappingUtilities {$/;"	n	namespace:LegionRuntime::HighLevel	file:
MappingUtilities	src/legion_runtime/mapping_utilities.h	/^    namespace MappingUtilities {$/;"	n	namespace:LegionRuntime::HighLevel
MatchState	src/lua_src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	src/lua_src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
MaterializedView	src/legion_runtime/region_tree.cc	/^    MaterializedView::MaterializedView($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
MaterializedView	src/legion_runtime/region_tree.cc	/^    MaterializedView::MaterializedView(const MaterializedView &rhs)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
MaterializedView	src/legion_runtime/region_tree.h	/^    class MaterializedView : public InstanceView {$/;"	c	namespace:LegionRuntime::HighLevel
Mbuffer	include/lua/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	include/lua/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
MemPair	src/legion_runtime/lowlevel_dma.cc	/^    typedef std::pair<Memory, Memory> MemPair;$/;"	t	namespace:LegionRuntime::LowLevel	file:
MemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      MemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
MemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
Memcpy	src/legion_runtime/lowlevel.cc	/^	Memcpy(T *_dst_base, const T *_src_base)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	src/legion_runtime/lowlevel.cc	/^	Memcpy(void *_dst_base, const void *_src_base, size_t _elmt_size)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	src/legion_runtime/lowlevel.cc	/^      class Memcpy {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
Memcpy	src/legion_runtime/lowlevel_dma.cc	/^	Memcpy(T *_dst_base, const T *_src_base)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	src/legion_runtime/lowlevel_dma.cc	/^	Memcpy(void *_dst_base, const void *_src_base, size_t _elmt_size)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	src/legion_runtime/lowlevel_dma.cc	/^      class Memcpy {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
Memcpy	src/legion_runtime/shared_lowlevel.cc	/^        Memcpy(void *_dst_base, const void *_src_base, size_t _elmt_size)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
Memcpy	src/legion_runtime/shared_lowlevel.cc	/^      class Memcpy {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
MemcpyMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      MemcpyMemPairCopier(Memory _src_mem, Memory _dst_mem)$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
MemcpyMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class MemcpyMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
MemoizedMapping	src/legion_runtime/mapping_utilities.cc	/^      MappingMemoizer::MemoizedMapping::MemoizedMapping(size_t num_elmts)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
MemoizedMapping	src/legion_runtime/mapping_utilities.cc	/^      MappingMemoizer::MemoizedMapping::MemoizedMapping(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
MemoizedMapping	src/legion_runtime/mapping_utilities.h	/^        struct MemoizedMapping {$/;"	s	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
Memory	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Memory Memory;$/;"	t	namespace:LegionRuntime::HighLevel
Memory	src/legion_runtime/lowlevel.h	/^    class Memory {$/;"	c	namespace:LegionRuntime::LowLevel
MemoryEvent	src/legion_runtime/legion_profiling.h	/^        MemoryEvent(unsigned iid, unsigned long long t)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
MemoryEvent	src/legion_runtime/legion_profiling.h	/^        MemoryEvent(unsigned iid, unsigned mem, unsigned r, $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
MemoryEvent	src/legion_runtime/legion_profiling.h	/^      struct MemoryEvent {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
MemoryImpl	src/legion_runtime/shared_lowlevel.cc	/^	MemoryImpl(size_t max, Memory::Kind k) $/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
MemoryImpl	src/legion_runtime/shared_lowlevel.cc	/^    class MemoryImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
MemoryKind	src/legion_runtime/lowlevel_impl.h	/^      enum MemoryKind {$/;"	g	class:LegionRuntime::LowLevel::Memory::Impl
MemoryManager	src/legion_runtime/runtime.cc	/^    MemoryManager::MemoryManager(Memory m, Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
MemoryManager	src/legion_runtime/runtime.cc	/^    MemoryManager::MemoryManager(const MemoryManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
MemoryManager	src/legion_runtime/runtime.h	/^    class MemoryManager {$/;"	c	namespace:LegionRuntime::HighLevel
MemoryMemoryAffinity	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Machine::MemoryMemoryAffinity MemoryMemoryAffinity;$/;"	t	namespace:LegionRuntime::HighLevel
MemoryMemoryAffinity	src/legion_runtime/lowlevel.h	/^      struct MemoryMemoryAffinity {$/;"	s	class:LegionRuntime::LowLevel::Machine
MergeComparator	src/legion_runtime/rectangle_set.h	/^    struct MergeComparator {$/;"	s	namespace:LegionRuntime::HighLevel
Message	src/legion_runtime/lowlevel.cc	/^					handle_request> Message;$/;"	t	struct:LegionRuntime::LowLevel::BarrierAdjustMessage	file:
MessageHeader	src/legion_runtime/runtime.h	/^      enum MessageHeader {$/;"	g	class:LegionRuntime::HighLevel::MessageManager
MessageKind	src/legion_runtime/runtime.h	/^      enum MessageKind {$/;"	g	class:LegionRuntime::HighLevel::MessageManager
MessageManager	src/legion_runtime/runtime.cc	/^    MessageManager::MessageManager(AddressSpaceID remote,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
MessageManager	src/legion_runtime/runtime.cc	/^    MessageManager::MessageManager(const MessageManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
MessageManager	src/legion_runtime/runtime.h	/^    class MessageManager {$/;"	c	namespace:LegionRuntime::HighLevel
MessageRawArgsType	src/legion_runtime/activemsg.h	/^  typedef MessageRawArgs<MSGTYPE,MSGID,FNPTR,dummy_medium_handler,(sizeof(MSGTYPE)+3)\/4> MessageRawArgsType;$/;"	t	class:ActiveMessageShortNoReply
MessageRawArgsType	src/legion_runtime/activemsg.h	/^  typedef MessageRawArgs<MSGTYPE,MSGID,dummy_short_handler,FNPTR,(sizeof(MSGTYPE)+3)\/4> MessageRawArgsType;$/;"	t	class:ActiveMessageMediumNoReply
Mode	scripts/kconfig/lxdialog/lxdialog.c	/^struct Mode {$/;"	s	file:
MultiDomainColoring	src/legion_runtime/legion_types.h	/^    typedef std::map<Color,std::set<Domain> > MultiDomainColoring;$/;"	t	namespace:LegionRuntime::HighLevel
MultiNodeRollUp	src/legion_runtime/lowlevel.cc	/^    MultiNodeRollUp::MultiNodeRollUp(std::map<int,double>& _timers)$/;"	f	class:LegionRuntime::LowLevel::MultiNodeRollUp
MultiNodeRollUp	src/legion_runtime/lowlevel.cc	/^    class MultiNodeRollUp {$/;"	c	namespace:LegionRuntime::LowLevel	file:
MultiTask	src/legion_runtime/legion_tasks.cc	/^    MultiTask::MultiTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
MultiTask	src/legion_runtime/legion_tasks.h	/^    class MultiTask : public TaskOp {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochDistributor	src/legion_runtime/legion_ops.cc	/^    MustEpochDistributor::MustEpochDistributor(MustEpochOp *own)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochDistributor	src/legion_runtime/legion_ops.cc	/^    MustEpochDistributor::MustEpochDistributor(const MustEpochDistributor &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochDistributor	src/legion_runtime/legion_ops.h	/^    class MustEpochDistributor {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochDistributorArgs	src/legion_runtime/legion_ops.h	/^      struct MustEpochDistributorArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochIndexArgs	src/legion_runtime/legion_ops.h	/^      struct MustEpochIndexArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochIndivArgs	src/legion_runtime/legion_ops.h	/^      struct MustEpochIndivArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochLauncher	src/legion_runtime/legion.cc	/^    MustEpochLauncher::MustEpochLauncher(MapperID id \/*= 0*\/,   $/;"	f	class:LegionRuntime::HighLevel::MustEpochLauncher
MustEpochLauncher	src/legion_runtime/legion.h	/^    struct MustEpochLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
MustEpochLauncherArgs	src/legion_runtime/legion_ops.h	/^      struct MustEpochLauncherArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochDistributor
MustEpochMapArgs	src/legion_runtime/legion_ops.h	/^      struct MustEpochMapArgs {$/;"	s	class:LegionRuntime::HighLevel::MustEpochMapper
MustEpochMapper	src/legion_runtime/legion_ops.cc	/^    MustEpochMapper::MustEpochMapper(MustEpochOp *own)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
MustEpochMapper	src/legion_runtime/legion_ops.cc	/^    MustEpochMapper::MustEpochMapper(const MustEpochMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
MustEpochMapper	src/legion_runtime/legion_ops.h	/^    class MustEpochMapper {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochOp	src/legion_runtime/legion_ops.cc	/^    MustEpochOp::MustEpochOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
MustEpochOp	src/legion_runtime/legion_ops.cc	/^    MustEpochOp::MustEpochOp(const MustEpochOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
MustEpochOp	src/legion_runtime/legion_ops.h	/^    class MustEpochOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
MustEpochTriggerer	src/legion_runtime/legion_ops.cc	/^    MustEpochTriggerer::MustEpochTriggerer(MustEpochOp *own)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochTriggerer	src/legion_runtime/legion_ops.cc	/^    MustEpochTriggerer::MustEpochTriggerer(const MustEpochTriggerer &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
MustEpochTriggerer	src/legion_runtime/legion_ops.h	/^    class MustEpochTriggerer {$/;"	c	namespace:LegionRuntime::HighLevel
MyReductionOp	src/legion_runtime/lowlevel.h	/^    class MyReductionOp {$/;"	c	namespace:LegionRuntime::LowLevel
N	src/test/benchmark.c	1075;"	d	file:
N	src/test/benchmark.c	1076;"	d	file:
N0	src/lua_src/lundump.c	185;"	d	file:
N1	src/lua_src/lundump.c	186;"	d	file:
N2	src/lua_src/lundump.c	187;"	d	file:
N3	src/lua_src/lundump.c	188;"	d	file:
NAME	Makefile	/^NAME=Nautilus$/;"	m
NAUTILUS_DEEP_DEBUG	src/legion_runtime/naut_debug.h	13;"	d
NAUTILUS_DEEP_DEBUG	src/legion_runtime/naut_debug.h	14;"	d
NAUTILUS_DEEP_DEBUG	src/legion_runtime/naut_debug.h	18;"	d
NAUTILUS_DEEP_DEBUG	src/legion_runtime/naut_debug.h	19;"	d
NAUT_CONFIG_APERIODIC_DYNAMIC_LIFETIME	include/autoconf.h	48;"	d
NAUT_CONFIG_APERIODIC_DYNAMIC_LIFETIME	include/config/aperiodic/dynamic/lifetime.h	1;"	d
NAUT_CONFIG_APERIODIC_DYNAMIC_QUANTUM	include/autoconf.h	47;"	d
NAUT_CONFIG_APERIODIC_DYNAMIC_QUANTUM	include/config/aperiodic/dynamic/quantum.h	1;"	d
NAUT_CONFIG_APERIODIC_LOTTERY	include/autoconf.h	49;"	d
NAUT_CONFIG_APERIODIC_LOTTERY	include/config/aperiodic/lottery.h	1;"	d
NAUT_CONFIG_APERIODIC_RESERVATION	include/autoconf.h	42;"	d
NAUT_CONFIG_APERIODIC_RESERVATION	include/config/aperiodic/reservation.h	1;"	d
NAUT_CONFIG_APERIODIC_ROUND_ROBIN	include/autoconf.h	50;"	d
NAUT_CONFIG_APERIODIC_ROUND_ROBIN	include/config/aperiodic/round/robin.h	1;"	d
NAUT_CONFIG_APIC_FORCE_XAPIC_MODE	include/autoconf.h	87;"	d
NAUT_CONFIG_APIC_FORCE_XAPIC_MODE	include/config/apic/force/xapic/mode.h	1;"	d
NAUT_CONFIG_APIC_TIMER_CALIBRATE_INDEPENDENTLY	include/autoconf.h	88;"	d
NAUT_CONFIG_APIC_TIMER_CALIBRATE_INDEPENDENTLY	include/config/apic/timer/calibrate/independently.h	1;"	d
NAUT_CONFIG_ATA	include/autoconf.h	92;"	d
NAUT_CONFIG_ATA	include/config/ata.h	1;"	d
NAUT_CONFIG_AUTO_REAP	include/autoconf.h	44;"	d
NAUT_CONFIG_AUTO_REAP	include/config/auto/reap.h	1;"	d
NAUT_CONFIG_CXX_SUPPORT	include/autoconf.h	22;"	d
NAUT_CONFIG_CXX_SUPPORT	include/config/cxx/support.h	1;"	d
NAUT_CONFIG_DEBUG_DEV	include/autoconf.h	72;"	d
NAUT_CONFIG_DEBUG_DEV	include/config/debug/dev.h	1;"	d
NAUT_CONFIG_DEBUG_INFO	include/autoconf.h	65;"	d
NAUT_CONFIG_DEBUG_INFO	include/config/debug/info.h	1;"	d
NAUT_CONFIG_DEBUG_PRINTS	include/autoconf.h	66;"	d
NAUT_CONFIG_DEBUG_PRINTS	include/config/debug/prints.h	1;"	d
NAUT_CONFIG_DEBUG_VIRTUAL_CONSOLE	include/autoconf.h	71;"	d
NAUT_CONFIG_DEBUG_VIRTUAL_CONSOLE	include/config/debug/virtual/console.h	1;"	d
NAUT_CONFIG_ENABLE_ASSERTS	include/autoconf.h	67;"	d
NAUT_CONFIG_ENABLE_ASSERTS	include/config/enable/asserts.h	1;"	d
NAUT_CONFIG_ENABLE_STACK_CHECK	include/autoconf.h	70;"	d
NAUT_CONFIG_ENABLE_STACK_CHECK	include/config/enable/stack/check.h	1;"	d
NAUT_CONFIG_EXT2_FILESYSTEM_DRIVER	include/autoconf.h	97;"	d
NAUT_CONFIG_EXT2_FILESYSTEM_DRIVER	include/config/ext2/filesystem/driver.h	1;"	d
NAUT_CONFIG_FPU_SAVE	include/autoconf.h	56;"	d
NAUT_CONFIG_FPU_SAVE	include/config/fpu/save.h	1;"	d
NAUT_CONFIG_HALT_WHILE_IDLE	include/autoconf.h	58;"	d
NAUT_CONFIG_HALT_WHILE_IDLE	include/config/halt/while/idle.h	1;"	d
NAUT_CONFIG_HPET	include/autoconf.h	89;"	d
NAUT_CONFIG_HPET	include/config/hpet.h	1;"	d
NAUT_CONFIG_HVM_HRT	include/autoconf.h	13;"	d
NAUT_CONFIG_HVM_HRT	include/config/hvm/hrt.h	1;"	d
NAUT_CONFIG_HZ	include/autoconf.h	43;"	d
NAUT_CONFIG_HZ	include/config/hz.h	1;"	d
NAUT_CONFIG_INTERRUPT_THREAD	include/autoconf.h	46;"	d
NAUT_CONFIG_INTERRUPT_THREAD	include/config/interrupt/thread.h	1;"	d
NAUT_CONFIG_KICK_SCHEDULE	include/autoconf.h	57;"	d
NAUT_CONFIG_KICK_SCHEDULE	include/config/kick/schedule.h	1;"	d
NAUT_CONFIG_LEGION_RT	include/autoconf.h	77;"	d
NAUT_CONFIG_LEGION_RT	include/config/legion/rt.h	1;"	d
NAUT_CONFIG_MAX_CPUS	include/autoconf.h	14;"	d
NAUT_CONFIG_MAX_CPUS	include/config/max/cpus.h	1;"	d
NAUT_CONFIG_MAX_IOAPICS	include/autoconf.h	15;"	d
NAUT_CONFIG_MAX_IOAPICS	include/config/max/ioapics.h	1;"	d
NAUT_CONFIG_MAX_THREADS	include/autoconf.h	33;"	d
NAUT_CONFIG_MAX_THREADS	include/config/max/threads.h	1;"	d
NAUT_CONFIG_NDPC_RT	include/autoconf.h	78;"	d
NAUT_CONFIG_NDPC_RT	include/config/ndpc/rt.h	1;"	d
NAUT_CONFIG_NESL_RT	include/autoconf.h	79;"	d
NAUT_CONFIG_NESL_RT	include/config/nesl/rt.h	1;"	d
NAUT_CONFIG_NO_RT	include/autoconf.h	80;"	d
NAUT_CONFIG_NO_RT	include/config/no/rt.h	1;"	d
NAUT_CONFIG_PALACIOS	include/autoconf.h	16;"	d
NAUT_CONFIG_PALACIOS	include/config/palacios.h	1;"	d
NAUT_CONFIG_PROFILE	include/autoconf.h	68;"	d
NAUT_CONFIG_PROFILE	include/config/profile.h	1;"	d
NAUT_CONFIG_RAMDISK	include/autoconf.h	91;"	d
NAUT_CONFIG_RAMDISK	include/config/ramdisk.h	1;"	d
NAUT_CONFIG_REAL_MODE_INTERFACE	include/autoconf.h	51;"	d
NAUT_CONFIG_REAL_MODE_INTERFACE	include/config/real/mode/interface.h	1;"	d
NAUT_CONFIG_SERIAL_PORT	include/autoconf.h	86;"	d
NAUT_CONFIG_SERIAL_PORT	include/config/serial/port.h	1;"	d
NAUT_CONFIG_SERIAL_REDIRECT	include/autoconf.h	85;"	d
NAUT_CONFIG_SERIAL_REDIRECT	include/config/serial/redirect.h	1;"	d
NAUT_CONFIG_SILENCE_UNDEF_ERR	include/autoconf.h	69;"	d
NAUT_CONFIG_SILENCE_UNDEF_ERR	include/config/silence/undef/err.h	1;"	d
NAUT_CONFIG_SPORADIC_RESERVATION	include/autoconf.h	41;"	d
NAUT_CONFIG_SPORADIC_RESERVATION	include/config/sporadic/reservation.h	1;"	d
NAUT_CONFIG_THREAD_EXIT_KEYCODE	include/autoconf.h	28;"	d
NAUT_CONFIG_THREAD_EXIT_KEYCODE	include/config/thread/exit/keycode.h	1;"	d
NAUT_CONFIG_THREAD_OPTIMIZE	include/autoconf.h	59;"	d
NAUT_CONFIG_THREAD_OPTIMIZE	include/config/thread/optimize.h	1;"	d
NAUT_CONFIG_TOOLCHAIN_ROOT	include/autoconf.h	23;"	d
NAUT_CONFIG_TOOLCHAIN_ROOT	include/config/toolchain/root.h	1;"	d
NAUT_CONFIG_USE_IDLE_THREADS	include/autoconf.h	60;"	d
NAUT_CONFIG_USE_IDLE_THREADS	include/config/use/idle/threads.h	1;"	d
NAUT_CONFIG_USE_NAUT_BUILTINS	include/autoconf.h	21;"	d
NAUT_CONFIG_USE_NAUT_BUILTINS	include/config/use/naut/builtins.h	1;"	d
NAUT_CONFIG_USE_TICKETLOCKS	include/autoconf.h	34;"	d
NAUT_CONFIG_USE_TICKETLOCKS	include/config/use/ticketlocks.h	1;"	d
NAUT_CONFIG_UTILIZATION_LIMIT	include/autoconf.h	40;"	d
NAUT_CONFIG_UTILIZATION_LIMIT	include/config/utilization/limit.h	1;"	d
NAUT_CONFIG_VIRTIO_PCI	include/autoconf.h	90;"	d
NAUT_CONFIG_VIRTIO_PCI	include/config/virtio/pci.h	1;"	d
NAUT_CONFIG_VIRTUAL_CONSOLE_SERIAL_MIRROR	include/autoconf.h	35;"	d
NAUT_CONFIG_VIRTUAL_CONSOLE_SERIAL_MIRROR	include/config/virtual/console/serial/mirror.h	1;"	d
NAUT_CONFIG_WORK_STEALING	include/autoconf.h	45;"	d
NAUT_CONFIG_WORK_STEALING	include/config/work/stealing.h	1;"	d
NAUT_CONFIG_X86_64_HOST	include/autoconf.h	11;"	d
NAUT_CONFIG_X86_64_HOST	include/config/x86/64/host.h	1;"	d
NAUT_CONFIG_XEON_PHI	include/autoconf.h	12;"	d
NAUT_CONFIG_XEON_PHI	include/config/xeon/phi.h	1;"	d
NAUT_INCLUDE	Makefile	/^NAUT_INCLUDE      := -D__NAUTILUS__ -Iinclude \\$/;"	m
NAUT_WELCOME	src/arch/hrt/init.c	173;"	d	file:
NAUT_WELCOME	src/arch/x64/init.c	228;"	d	file:
NDIGITS_MAX	src/nautilus/fmtout.c	95;"	d	file:
NEMO_DEBUG	src/nautilus/nemo.c	33;"	d	file:
NEMO_ERR	src/nautilus/nemo.c	35;"	d	file:
NEMO_INFO	src/nautilus/nemo.c	34;"	d	file:
NEMO_INT_VEC	include/nautilus/nemo.h	28;"	d
NEMO_MAX_EVENTS	include/nautilus/nemo.h	27;"	d
NEMO_WARN	src/nautilus/nemo.c	36;"	d	file:
NID_INVAL	include/nautilus/acpi.h	266;"	d
NILCONSTANT	include/lua/lobject.h	110;"	d
NILCONSTANT	include/lua/lobject.h	296;"	d
NILCONSTANT	include/lua/lobject.h	303;"	d
NILCONSTANT	include/lua/lobject.h	314;"	d
NK_BARRIER_LAST	include/nautilus/barrier.h	32;"	d
NK_DEV_BLK	include/nautilus/dev.h	/^typedef enum {NK_DEV_CHAR, NK_DEV_BLK, NK_DEV_NET} nk_dev_type_t ; $/;"	e	enum:__anon64
NK_DEV_CHAR	include/nautilus/dev.h	/^typedef enum {NK_DEV_CHAR, NK_DEV_BLK, NK_DEV_NET} nk_dev_type_t ; $/;"	e	enum:__anon64
NK_DEV_NET	include/nautilus/dev.h	/^typedef enum {NK_DEV_CHAR, NK_DEV_BLK, NK_DEV_NET} nk_dev_type_t ; $/;"	e	enum:__anon64
NK_DEV_REQ_BLOCKING	include/nautilus/dev.h	/^typedef enum {NK_DEV_REQ_BLOCKING, NK_DEV_REQ_NONBLOCKING} nk_dev_request_type_t;$/;"	e	enum:__anon65
NK_DEV_REQ_NONBLOCKING	include/nautilus/dev.h	/^typedef enum {NK_DEV_REQ_BLOCKING, NK_DEV_REQ_NONBLOCKING} nk_dev_request_type_t;$/;"	e	enum:__anon65
NK_FS_READONLY	include/nautilus/fs.h	69;"	d
NK_LOCK	include/nautilus/spinlock.h	100;"	d
NK_LOCK	include/nautilus/spinlock.h	108;"	d
NK_LOCK_DEINIT	include/nautilus/spinlock.h	102;"	d
NK_LOCK_DEINIT	include/nautilus/spinlock.h	110;"	d
NK_LOCK_GLBINIT	include/nautilus/spinlock.h	105;"	d
NK_LOCK_GLBINIT	include/nautilus/spinlock.h	97;"	d
NK_LOCK_INIT	include/nautilus/spinlock.h	107;"	d
NK_LOCK_INIT	include/nautilus/spinlock.h	99;"	d
NK_LOCK_T	include/nautilus/spinlock.h	106;"	d
NK_LOCK_T	include/nautilus/spinlock.h	98;"	d
NK_MALLOC_PROF_ENTRY	include/nautilus/instrument.h	38;"	d
NK_MALLOC_PROF_ENTRY	include/nautilus/instrument.h	45;"	d
NK_MALLOC_PROF_EXIT	include/nautilus/instrument.h	39;"	d
NK_MALLOC_PROF_EXIT	include/nautilus/instrument.h	46;"	d
NK_PROFILE_ENTRY	include/nautilus/instrument.h	34;"	d
NK_PROFILE_ENTRY	include/nautilus/instrument.h	41;"	d
NK_PROFILE_ENTRY_NAME	include/nautilus/instrument.h	35;"	d
NK_PROFILE_ENTRY_NAME	include/nautilus/instrument.h	43;"	d
NK_PROFILE_EXIT	include/nautilus/instrument.h	37;"	d
NK_PROFILE_EXIT	include/nautilus/instrument.h	42;"	d
NK_PROFILE_EXIT_NAME	include/nautilus/instrument.h	36;"	d
NK_PROFILE_EXIT_NAME	include/nautilus/instrument.h	44;"	d
NK_SYS_LEGACY	include/nautilus/nautilus.h	86;"	d
NK_THR_EXITED	include/nautilus/thread.h	/^    NK_THR_EXITED$/;"	e	enum:__anon31
NK_THR_INIT	include/nautilus/thread.h	/^    NK_THR_INIT,$/;"	e	enum:__anon31
NK_THR_RUNNING	include/nautilus/thread.h	/^    NK_THR_RUNNING, $/;"	e	enum:__anon31
NK_THR_SUSPENDED	include/nautilus/thread.h	/^    NK_THR_SUSPENDED, $/;"	e	enum:__anon31
NK_THR_WAITING	include/nautilus/thread.h	/^    NK_THR_WAITING,$/;"	e	enum:__anon31
NK_UNLOCK	include/nautilus/spinlock.h	101;"	d
NK_UNLOCK	include/nautilus/spinlock.h	109;"	d
NM	Makefile	/^NM		= $(CROSS_COMPILE)k1om-mpss-linux-nm$/;"	m
NM	Makefile	/^NM		= $(CROSS_COMPILE)nm$/;"	m
NMI_INT	include/nautilus/idt.h	37;"	d
NM_EXCP	include/nautilus/idt.h	42;"	d
NNMARK	include/lua/lobject.h	292;"	d
NNMASK	include/lua/lobject.h	293;"	d
NODEBUG	xeon_phi/linux_usr/phi_console.c	28;"	d	file:
NODE_ALL_ONES	src/legion_runtime/legion_types.h	678;"	d
NODE_ANNOUNCE_DONE	src/legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_DONE = 0,$/;"	e	enum:LegionRuntime::LowLevel::__anon88	file:
NODE_ANNOUNCE_MEM	src/legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_MEM,  \/\/ MEM id size$/;"	e	enum:LegionRuntime::LowLevel::__anon88	file:
NODE_ANNOUNCE_MMA	src/legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_MMA,  \/\/ MMA mem1_id mem2_id bw latency$/;"	e	enum:LegionRuntime::LowLevel::__anon88	file:
NODE_ANNOUNCE_MSGID	src/legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
NODE_ANNOUNCE_PMA	src/legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_PMA,  \/\/ PMA proc_id mem_id bw latency$/;"	e	enum:LegionRuntime::LowLevel::__anon88	file:
NODE_ANNOUNCE_PROC	src/legion_runtime/lowlevel.cc	/^      NODE_ANNOUNCE_PROC, \/\/ PROC id kind$/;"	e	enum:LegionRuntime::LowLevel::__anon88	file:
NODE_BITS	src/legion_runtime/lowlevel_impl.h	/^	NODE_BITS = 64 - TYPE_BITS - INDEX_BITS \/* 16 = 64k nodes *\/$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon101
NODE_MASK	src/legion_runtime/legion_types.h	677;"	d
NODE_MASK	src/legion_runtime/legion_types.h	707;"	d
NODE_MASK_MASK	src/legion_runtime/lowlevel_impl.h	25;"	d
NODE_MASK_SHIFT	src/legion_runtime/lowlevel_impl.h	24;"	d
NODE_MASK_TYPE	src/legion_runtime/lowlevel_impl.h	23;"	d
NODE_SHIFT	src/legion_runtime/legion_types.h	676;"	d
NODE_SHIFT	src/legion_runtime/legion_types.h	706;"	d
NODE_TYPE	src/legion_runtime/legion_types.h	675;"	d
NOFUNCTION	scripts/basic/docproc.c	65;"	d	file:
NONE	src/dev/ata.c	/^    enum {NONE=0, HD, CD} type;$/;"	e	enum:ata_blkdev_state::__anon134	file:
NONE_DIR	src/legion_runtime/rectangle_set.h	/^        NONE_DIR = 2,$/;"	e	enum:LegionRuntime::HighLevel::Segment::Direction
NONVALIDVALUE	src/lua_src/lapi.c	38;"	d	file:
NOP_1BYTE	include/asm/lowlevel.h	28;"	d
NOP_2BYTE	include/asm/lowlevel.h	29;"	d
NOP_3BYTE	include/asm/lowlevel.h	30;"	d
NOP_4BYTE	include/asm/lowlevel.h	31;"	d
NOP_5BYTE	include/asm/lowlevel.h	32;"	d
NOP_6BYTE	include/asm/lowlevel.h	33;"	d
NOP_7BYTE	include/asm/lowlevel.h	34;"	d
NOP_8BYTE	include/asm/lowlevel.h	35;"	d
NOTIFY_INVALID_CALL	src/legion_runtime/region_tree.h	/^      NOTIFY_INVALID_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
NOT_OPEN	src/legion_runtime/legion_types.h	/^      NOT_OPEN            = 0,$/;"	e	enum:LegionRuntime::HighLevel::OpenState
NOT_PRED_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      NOT_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
NO_ACCESS	src/legion_runtime/legion_types.h	/^      NO_ACCESS       = 0x00000000, \/\/ Deprecated: use the NO_ACCESS_FLAG$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
NO_ACCESS_FLAG	src/legion_runtime/legion_types.h	/^      NO_ACCESS_FLAG  = 0x00000002,$/;"	e	enum:LegionRuntime::HighLevel::RegionFlags
NO_DEBUG_AMREQUESTS	src/legion_runtime/activemsg.cc	28;"	d	file:
NO_DEPENDENCE	src/legion_runtime/legion_types.h	/^      NO_DEPENDENCE = 0,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
NO_DOMAIN	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ const Domain Domain::NO_DOMAIN = Domain();$/;"	m	class:LegionRuntime::LowLevel::Domain	file:
NO_DOMAIN	src/legion_runtime/lowlevel.h	/^      static const Domain NO_DOMAIN;$/;"	m	class:LegionRuntime::LowLevel::Domain
NO_DOMAIN	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const Domain Domain::NO_DOMAIN = Domain();$/;"	m	class:LegionRuntime::LowLevel::Domain	file:
NO_ERROR	src/legion_runtime/legion_types.h	/^      NO_ERROR = 0,$/;"	e	enum:LegionRuntime::HighLevel::LegionErrorType
NO_EVENT	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ const Event Event::NO_EVENT = { 0, 0 };$/;"	m	class:LegionRuntime::LowLevel::Event	file:
NO_EVENT	src/legion_runtime/lowlevel.h	/^      static const Event NO_EVENT;$/;"	m	class:LegionRuntime::LowLevel::Event
NO_EVENT	src/legion_runtime/shared_lowlevel.cc	/^    \/* static *\/ const Event Event::NO_EVENT = { 0, 0 };$/;"	m	class:LegionRuntime::LowLevel::Event	file:
NO_FLAG	src/legion_runtime/legion_types.h	/^      NO_FLAG         = 0x00000000,$/;"	e	enum:LegionRuntime::HighLevel::RegionFlags
NO_INST	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ const RegionInstance RegionInstance::NO_INST = RegionInstance();$/;"	m	class:LegionRuntime::LowLevel::RegionInstance	file:
NO_INST	src/legion_runtime/lowlevel.h	/^      static const RegionInstance NO_INST;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance
NO_INST	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const RegionInstance RegionInstance::NO_INST = { 0 };$/;"	m	class:LegionRuntime::LowLevel::RegionInstance	file:
NO_JUMP	include/lua/lcode.h	20;"	d
NO_KEY	include/dev/kbd.h	42;"	d
NO_MEMORY	src/legion_runtime/legion_types.h	/^      NO_MEMORY       = 0x00000000,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
NO_MEMORY	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ const Memory Memory::NO_MEMORY = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Memory	file:
NO_MEMORY	src/legion_runtime/lowlevel.h	/^      static const Memory NO_MEMORY;$/;"	m	class:LegionRuntime::LowLevel::Memory
NO_MEMORY	src/legion_runtime/shared_lowlevel.cc	/^    const Memory Memory::NO_MEMORY = {0};$/;"	m	class:LegionRuntime::LowLevel::Memory	file:
NO_PART	src/legion_runtime/legion.cc	/^    const LogicalPartition LogicalPartition::NO_PART = LogicalPartition(); $/;"	m	class:LegionRuntime::HighLevel::LogicalPartition	file:
NO_PART	src/legion_runtime/legion.h	/^      static const LogicalPartition NO_PART; \/**< empty logical partition *\/$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
NO_PROC	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ const Processor Processor::NO_PROC = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Processor	file:
NO_PROC	src/legion_runtime/lowlevel.h	/^      static const Processor NO_PROC;$/;"	m	class:LegionRuntime::LowLevel::Processor
NO_PROC	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const Processor Processor::NO_PROC = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Processor	file:
NO_REG	include/lua/lopcodes.h	151;"	d
NO_REGION	src/legion_runtime/legion.cc	/^    const LogicalRegion LogicalRegion::NO_REGION = LogicalRegion();$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion	file:
NO_REGION	src/legion_runtime/legion.h	/^      static const LogicalRegion NO_REGION; \/**< empty logical region handle*\/$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
NO_RESERVATION	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ const Reservation Reservation::NO_RESERVATION = { 0 };$/;"	m	class:LegionRuntime::LowLevel::Reservation	file:
NO_RESERVATION	src/legion_runtime/lowlevel.h	/^      static const Reservation NO_RESERVATION;$/;"	m	class:LegionRuntime::LowLevel::Reservation
NO_RESERVATION	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const Reservation Reservation::NO_RESERVATION = Reservation();$/;"	m	class:LegionRuntime::LowLevel::Reservation	file:
NO_SCANCODE	include/dev/kbd.h	43;"	d
NO_SEPARATE_FENCE	src/legion_runtime/lowlevel_dma.cc	2137;"	d	file:
NO_SPACE	src/legion_runtime/legion.cc	/^    \/*static*\/ const FieldSpace FieldSpace::NO_SPACE = FieldSpace(0);$/;"	m	class:LegionRuntime::HighLevel::FieldSpace	file:
NO_SPACE	src/legion_runtime/legion.h	/^      static const FieldSpace NO_SPACE; \/**< empty field space handle*\/$/;"	m	class:LegionRuntime::HighLevel::FieldSpace
NO_SPACE	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ const IndexSpace IndexSpace::NO_SPACE = IndexSpace();$/;"	m	class:LegionRuntime::LowLevel::IndexSpace	file:
NO_SPACE	src/legion_runtime/lowlevel.h	/^      static const IndexSpace NO_SPACE;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace
NO_SPACE	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ const IndexSpace IndexSpace::NO_SPACE = IndexSpace();$/;"	m	class:LegionRuntime::LowLevel::IndexSpace	file:
NO_USER_EVENT	src/legion_runtime/lowlevel.cc	/^    \/* static *\/ const UserEvent UserEvent::NO_USER_EVENT = $/;"	m	class:LegionRuntime::LowLevel::UserEvent	file:
NO_USER_EVENT	src/legion_runtime/lowlevel.h	/^      static const UserEvent NO_USER_EVENT;$/;"	m	class:LegionRuntime::LowLevel::UserEvent
NO_USER_EVENT	src/legion_runtime/shared_lowlevel.cc	/^    \/* static *\/ const UserEvent UserEvent::NO_USER_EVENT = $/;"	m	class:LegionRuntime::LowLevel::UserEvent	file:
NO_USE_NBI_ACCESSREGION	src/legion_runtime/lowlevel.cc	3813;"	d	file:
NP_EXCP	include/nautilus/idt.h	46;"	d
NULL	include/acpi/actypes.h	365;"	d
NULL	include/nautilus/naut_types.h	69;"	d
NUMA_DEBUG	src/arch/x64/numa.c	43;"	d	file:
NUMA_DEBUG	src/nautilus/numa.c	46;"	d	file:
NUMA_ERROR	src/arch/x64/numa.c	44;"	d	file:
NUMA_ERROR	src/nautilus/numa.c	47;"	d	file:
NUMA_PRINT	src/arch/x64/numa.c	42;"	d	file:
NUMA_PRINT	src/nautilus/numa.c	45;"	d	file:
NUMA_WARN	src/nautilus/numa.c	48;"	d	file:
NUM_CALL_KIND	src/legion_runtime/region_tree.h	/^      NUM_CALL_KIND,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
NUM_DIRECT_DATA_BLOCKS	src/fs/ext2/ext2.c	38;"	d	file:
NUM_DMA_THREADS	src/legion_runtime/shared_lowlevel.cc	79;"	d	file:
NUM_EXCEPTIONS	include/nautilus/idt.h	33;"	d
NUM_EXT_IRQS	include/nautilus/irq.h	44;"	d
NUM_IDT_ENTRIES	include/nautilus/idt.h	32;"	d
NUM_OPCODES	include/lua/lopcodes.h	228;"	d
NUM_PDPT_ENTRIES	include/nautilus/paging.h	126;"	d
NUM_PD_ENTRIES	include/nautilus/paging.h	125;"	d
NUM_PERF_SLOTS	include/nautilus/pmc.h	29;"	d
NUM_PML4_ENTRIES	include/nautilus/paging.h	127;"	d
NUM_PROCS	src/legion_runtime/shared_lowlevel.cc	76;"	d	file:
NUM_PT_ENTRIES	include/nautilus/paging.h	124;"	d
NUM_RESERVED	include/lua/llex.h	34;"	d
NUM_TESTS	src/test/test_legion.c	24;"	d	file:
NUM_THREADS	src/test/benchmark.c	78;"	d	file:
NUM_UTIL_PROCS	src/legion_runtime/shared_lowlevel.cc	78;"	d	file:
N_	scripts/kconfig/lkc.h	38;"	d
NoShiftCaps	src/dev/kbd.c	/^static const nk_keycode_t NoShiftCaps[] = {$/;"	v	file:
NoShiftNoCaps	src/dev/kbd.c	/^static const nk_keycode_t NoShiftNoCaps[] = {$/;"	v	file:
Node	include/lua/lobject.h	/^typedef struct Node {$/;"	s
Node	include/lua/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
Node	src/legion_runtime/lowlevel.cc	/^    Node::Node(void)$/;"	f	class:LegionRuntime::LowLevel::Node
Node	src/legion_runtime/lowlevel_impl.h	/^    struct Node {$/;"	s
NodeAnnounceData	src/legion_runtime/lowlevel.cc	/^    struct Machine::NodeAnnounceData : public BaseMedium {$/;"	s	class:LegionRuntime::LowLevel::Machine	file:
NodeAnnounceMessage	src/legion_runtime/lowlevel.cc	/^				       node_announce_handler> NodeAnnounceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
NodeBase	src/legion_runtime/lowlevel_impl.h	/^      typedef DynamicTableNodeBase<LT, IT> NodeBase;$/;"	t	class:LegionRuntime::LowLevel::DynamicTable
NodeFields	src/test/circuit.h	/^enum NodeFields {$/;"	g
NodeMask	src/legion_runtime/legion_types.h	/^    typedef AVXBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	src/legion_runtime/legion_types.h	/^    typedef AVXTLBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	src/legion_runtime/legion_types.h	/^    typedef BitMask<NODE_TYPE,MAX_NUM_NODES,NODE_SHIFT,NODE_MASK> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	src/legion_runtime/legion_types.h	/^    typedef SSEBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	src/legion_runtime/legion_types.h	/^    typedef SSETLBitMask<MAX_NUM_NODES> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	src/legion_runtime/legion_types.h	/^    typedef TLBitMask<NODE_TYPE,MAX_NUM_NODES,NODE_SHIFT,NODE_MASK> NodeMask;$/;"	t	namespace:LegionRuntime::HighLevel
NodeMask	src/legion_runtime/lowlevel_impl.h	/^                                              NODE_MASK_SHIFT,NODE_MASK_MASK> NodeMask;$/;"	t	namespace:LegionRuntime::LowLevel
NodeProcMap	src/legion_runtime/lowlevel_impl.h	/^      typedef std::map<int, std::vector<int> > NodeProcMap;$/;"	t	class:LegionRuntime::LowLevel::ProcessorAssignment
NodeTraverser	src/legion_runtime/region_tree.h	/^    class NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
NonPODSerializer	src/legion_runtime/legion.h	/^      struct NonPODSerializer {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
NonPODSerializer	src/legion_runtime/legion.h	/^      struct NonPODSerializer<T,false> {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
NotPredOp	src/legion_runtime/legion_ops.cc	/^    NotPredOp::NotPredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
NotPredOp	src/legion_runtime/legion_ops.cc	/^    NotPredOp::NotPredOp(const NotPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
NotPredOp	src/legion_runtime/legion_ops.h	/^    class NotPredOp : public Predicate::Impl, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
Notifiable	src/legion_runtime/garbage_collection.h	/^    class Notifiable : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
O	Makefile	/^user init_task: O:=$(if $O,$O,$(objtree))$/;"	m
OASByInst	src/legion_runtime/lowlevel_dma.cc	/^    typedef std::map<InstPair, OASVec> OASByInst;$/;"	t	namespace:LegionRuntime::LowLevel	file:
OASByMem	src/legion_runtime/lowlevel_dma.cc	/^    typedef std::map<MemPair, OASByInst *> OASByMem;$/;"	t	namespace:LegionRuntime::LowLevel	file:
OASVec	src/legion_runtime/lowlevel_dma.cc	/^    typedef std::vector<OffsetsAndSize> OASVec;$/;"	t	namespace:LegionRuntime::LowLevel	file:
OBJCOPY	Makefile	/^OBJCOPY		= $(CROSS_COMPILE)k1om-mpss-linux-objcopy$/;"	m
OBJCOPY	Makefile	/^OBJCOPY		= $(CROSS_COMPILE)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP		= $(CROSS_COMPILE)k1om-mpss-linux-objdump$/;"	m
OBJDUMP	Makefile	/^OBJDUMP		= $(CROSS_COMPILE)objdump$/;"	m
OBJS	xeon_phi/linux_usr/Makefile	/^OBJS=$(SRC:%.c=%.o)$/;"	m
ODIM	src/legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = 1 };$/;"	e	enum:LegionRuntime::Arrays::Linearization::__anon84
ODIM	src/legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Blockify::__anon85
ODIM	src/legion_runtime/arrays.h	/^      enum { IDIM = DIM, ODIM = DIM };$/;"	e	enum:LegionRuntime::Arrays::Translation::__anon83
ODIM	src/legion_runtime/arrays.h	/^      enum { IDIM = T::IDIM, ODIM = T::ODIM };$/;"	e	enum:LegionRuntime::Arrays::DynamicMapping::__anon82
ODIM	src/legion_runtime/arrays.h	/^      static const unsigned ODIM = ODIM_;$/;"	m	class:LegionRuntime::Arrays::Mapping
OF_EXCP	include/nautilus/idt.h	39;"	d
OK	src/dev/ata.c	/^typedef enum {OK=0, ERR, DF} ata_error_t;$/;"	e	enum:__anon137	file:
OLDBIT	include/lua/lgc.h	93;"	d
OLD_NCURSES	scripts/kconfig/lxdialog/dialog.h	42;"	d
OLD_NCURSES	scripts/kconfig/lxdialog/dialog.h	46;"	d
ONE	src/dev/kbd.c	269;"	d	file:
ONES	src/legion_runtime/arrays.h	/^      static Point<DIM> ONES(void)$/;"	f	class:LegionRuntime::Arrays::Point
ONE_TASK_ONLY	src/legion_runtime/lowlevel.h	/^	ONE_TASK_ONLY,  \/\/ a single task on a single node of the machine$/;"	e	enum:LegionRuntime::LowLevel::Machine::RunStyle
ONE_TASK_PER_NODE	src/legion_runtime/lowlevel.h	/^	ONE_TASK_PER_NODE, \/\/ one task running on one proc of each node$/;"	e	enum:LegionRuntime::LowLevel::Machine::RunStyle
ONE_TASK_PER_PROC	src/legion_runtime/lowlevel.h	/^	ONE_TASK_PER_PROC, \/\/ a task for every processor in the machine$/;"	e	enum:LegionRuntime::LowLevel::Machine::RunStyle
OPEN_LOGICAL_NODE_CALL	src/legion_runtime/region_tree.h	/^      OPEN_LOGICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
OPEN_MULTI_REDUCE	src/legion_runtime/legion_types.h	/^      OPEN_MULTI_REDUCE   = 4, \/\/ multiple open children with same reduction$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OPEN_READ_ONLY	src/legion_runtime/legion_types.h	/^      OPEN_READ_ONLY      = 1,$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OPEN_READ_WRITE	src/legion_runtime/legion_types.h	/^      OPEN_READ_WRITE     = 2, \/\/ unknown dirty information below$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OPEN_SINGLE_REDUCE	src/legion_runtime/legion_types.h	/^      OPEN_SINGLE_REDUCE  = 3, \/\/ only one open child with reductions below$/;"	e	enum:LegionRuntime::HighLevel::OpenState
OPR_ADD	include/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	include/lua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_CONCAT	include/lua/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	include/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_EQ	include/lua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_GE	include/lua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	include/lua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LE	include/lua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_LEN	include/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	include/lua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_MINUS	include/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	include/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	include/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	include/lua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_NOBINOPR	include/lua/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	include/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	include/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	include/lua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	include/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SUB	include/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPSIZ	include/nautilus/naut_string.h	107;"	d
OP_ADD	include/lua/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon14
OP_CALL	include/lua/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon14
OP_CLOSURE	include/lua/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx])			*\/$/;"	e	enum:__anon14
OP_CONCAT	include/lua/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon14
OP_DIV	include/lua/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon14
OP_EQ	include/lua/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon14
OP_EXTRAARG	include/lua/lopcodes.h	/^OP_EXTRAARG\/*	Ax	extra (larger) argument for previous opcode	*\/$/;"	e	enum:__anon14
OP_FORLOOP	include/lua/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon14
OP_FORPREP	include/lua/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon14
OP_GETTABLE	include/lua/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon14
OP_GETTABUP	include/lua/lopcodes.h	/^OP_GETTABUP,\/*	A B C	R(A) := UpValue[B][RK(C)]			*\/$/;"	e	enum:__anon14
OP_GETUPVAL	include/lua/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon14
OP_JMP	include/lua/lopcodes.h	/^OP_JMP,\/*	A sBx	pc+=sBx; if (A) close all upvalues >= R(A - 1)	*\/$/;"	e	enum:__anon14
OP_LE	include/lua/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon14
OP_LEN	include/lua/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon14
OP_LOADBOOL	include/lua/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon14
OP_LOADK	include/lua/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon14
OP_LOADKX	include/lua/lopcodes.h	/^OP_LOADKX,\/*	A 	R(A) := Kst(extra arg)				*\/$/;"	e	enum:__anon14
OP_LOADNIL	include/lua/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A), R(A+1), ..., R(A+B) := nil		*\/$/;"	e	enum:__anon14
OP_LT	include/lua/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon14
OP_MOD	include/lua/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon14
OP_MOVE	include/lua/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon14
OP_MUL	include/lua/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon14
OP_NEWTABLE	include/lua/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon14
OP_NOT	include/lua/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon14
OP_POW	include/lua/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon14
OP_RETURN	include/lua/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon14
OP_SELF	include/lua/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon14
OP_SETLIST	include/lua/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon14
OP_SETTABLE	include/lua/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon14
OP_SETTABUP	include/lua/lopcodes.h	/^OP_SETTABUP,\/*	A B C	UpValue[A][RK(B)] := RK(C)			*\/$/;"	e	enum:__anon14
OP_SETUPVAL	include/lua/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon14
OP_SUB	include/lua/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon14
OP_TAILCALL	include/lua/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon14
OP_TEST	include/lua/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/$/;"	e	enum:__anon14
OP_TESTSET	include/lua/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/$/;"	e	enum:__anon14
OP_TFORCALL	include/lua/lopcodes.h	/^OP_TFORCALL,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));	*\/$/;"	e	enum:__anon14
OP_TFORLOOP	include/lua/lopcodes.h	/^OP_TFORLOOP,\/*	A sBx	if R(A+1) ~= nil then { R(A)=R(A+1); pc += sBx }*\/$/;"	e	enum:__anon14
OP_T_THRES	include/nautilus/naut_string.h	106;"	d
OP_UNM	include/lua/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon14
OP_VARARG	include/lua/lopcodes.h	/^OP_VARARG,\/*	A B	R(A), R(A+1), ..., R(A+B-2) = vararg		*\/$/;"	e	enum:__anon14
OR_PRED_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      OR_PRED_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
OSC_ACTIVE_STATE_PWR_SUPPORT	include/nautilus/acpi.h	298;"	d
OSC_CAPABILITIES_MASK_ERROR	include/nautilus/acpi.h	284;"	d
OSC_CLOCK_PWR_CAPABILITY_SUPPORT	include/nautilus/acpi.h	299;"	d
OSC_CONTROL_TYPE	include/nautilus/acpi.h	277;"	d
OSC_EXT_PCI_CONFIG_SUPPORT	include/nautilus/acpi.h	297;"	d
OSC_INVALID_REVISION_ERROR	include/nautilus/acpi.h	283;"	d
OSC_INVALID_UUID_ERROR	include/nautilus/acpi.h	282;"	d
OSC_MSI_SUPPORT	include/nautilus/acpi.h	301;"	d
OSC_PCI_CONTROL_MASKS	include/nautilus/acpi.h	311;"	d
OSC_PCI_EXPRESS_AER_CONTROL	include/nautilus/acpi.h	308;"	d
OSC_PCI_EXPRESS_CAP_STRUCTURE_CONTROL	include/nautilus/acpi.h	309;"	d
OSC_PCI_EXPRESS_NATIVE_HP_CONTROL	include/nautilus/acpi.h	305;"	d
OSC_PCI_EXPRESS_PME_CONTROL	include/nautilus/acpi.h	307;"	d
OSC_PCI_SEGMENT_GROUPS_SUPPORT	include/nautilus/acpi.h	300;"	d
OSC_PCI_SUPPORT_MASKS	include/nautilus/acpi.h	302;"	d
OSC_QUERY_ENABLE	include/nautilus/acpi.h	280;"	d
OSC_QUERY_TYPE	include/nautilus/acpi.h	275;"	d
OSC_REQUEST_ERROR	include/nautilus/acpi.h	281;"	d
OSC_SB_APEI_SUPPORT	include/nautilus/acpi.h	293;"	d
OSC_SB_CPUHP_OST_SUPPORT	include/nautilus/acpi.h	292;"	d
OSC_SB_PAD_SUPPORT	include/nautilus/acpi.h	289;"	d
OSC_SB_PPC_OST_SUPPORT	include/nautilus/acpi.h	290;"	d
OSC_SB_PR3_SUPPORT	include/nautilus/acpi.h	291;"	d
OSC_SHPC_NATIVE_HP_CONTROL	include/nautilus/acpi.h	306;"	d
OSC_SUPPORT_TYPE	include/nautilus/acpi.h	276;"	d
OSL_DEBUGGER_THREAD	include/acpi/acpiosxf.h	/^	OSL_DEBUGGER_THREAD,$/;"	e	enum:__anon27
OSL_EC_BURST_HANDLER	include/acpi/acpiosxf.h	/^	OSL_EC_BURST_HANDLER$/;"	e	enum:__anon27
OSL_EC_POLL_HANDLER	include/acpi/acpiosxf.h	/^	OSL_EC_POLL_HANDLER,$/;"	e	enum:__anon27
OSL_GLOBAL_LOCK_HANDLER	include/acpi/acpiosxf.h	/^	OSL_GLOBAL_LOCK_HANDLER,$/;"	e	enum:__anon27
OSL_GPE_HANDLER	include/acpi/acpiosxf.h	/^	OSL_GPE_HANDLER,$/;"	e	enum:__anon27
OSL_NOTIFY_HANDLER	include/acpi/acpiosxf.h	/^	OSL_NOTIFY_HANDLER,$/;"	e	enum:__anon27
OUTPUT_AVAIL_REG_OFFSET	src/arch/k1om/xeon_phi.c	45;"	d	file:
OUTPUT_AVAIL_REG_OFFSET	xeon_phi/linux_usr/phi_console.c	59;"	d	file:
OUTPUT_DRAWN_REG_OFFSET	src/arch/k1om/xeon_phi.c	46;"	d	file:
OUTPUT_DRAWN_REG_OFFSET	xeon_phi/linux_usr/phi_console.c	62;"	d	file:
OUTPUT_H	include/nautilus/fmtout.h	11;"	d
OVERLAP_MAYBE	src/legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	e	enum:LegionRuntime::LowLevel::ElementMask::OverlapResult
OVERLAP_NO	src/legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	e	enum:LegionRuntime::LowLevel::ElementMask::OverlapResult
OVERLAP_YES	src/legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	e	enum:LegionRuntime::LowLevel::ElementMask::OverlapResult
O_APPEND	include/nautilus/fs.h	108;"	d
O_CREAT	include/nautilus/fs.h	109;"	d
O_RDONLY	include/nautilus/fs.h	105;"	d
O_RDWR	include/nautilus/fs.h	107;"	d
O_TRUNC	include/nautilus/fs.h	110;"	d
O_WRONLY	include/nautilus/fs.h	106;"	d
OffsetEntry	src/legion_runtime/region_tree.h	/^        OffsetEntry(const FieldMask &m,$/;"	f	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
OffsetEntry	src/legion_runtime/region_tree.h	/^        OffsetEntry(const FieldMask &m,$/;"	f	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
OffsetEntry	src/legion_runtime/region_tree.h	/^        OffsetEntry(void) { }$/;"	f	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
OffsetEntry	src/legion_runtime/region_tree.h	/^        OffsetEntry(void) { }$/;"	f	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
OffsetEntry	src/legion_runtime/region_tree.h	/^      struct OffsetEntry {$/;"	s	class:LegionRuntime::HighLevel::InstanceManager
OffsetEntry	src/legion_runtime/region_tree.h	/^      struct OffsetEntry {$/;"	s	class:LegionRuntime::HighLevel::LayoutDescription
OffsetsAndSize	src/legion_runtime/lowlevel_dma.cc	/^    struct OffsetsAndSize {$/;"	s	namespace:LegionRuntime::LowLevel	file:
OpArgK	include/lua/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	include/lua/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	include/lua/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	include/lua/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	include/lua/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	include/lua/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon14
OpInstance	src/legion_runtime/legion_profiling.h	/^        OpInstance(UniqueID uid, UniqueID pid)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
OpInstance	src/legion_runtime/legion_profiling.h	/^        OpInstance(void) { }$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
OpInstance	src/legion_runtime/legion_profiling.h	/^      struct OpInstance {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
OpMode	include/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	g
OpenState	src/legion_runtime/legion_types.h	/^    enum OpenState {$/;"	g	namespace:LegionRuntime::HighLevel
Operation	src/legion_runtime/legion_ops.cc	/^    Operation::Operation(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::Operation
Operation	src/legion_runtime/legion_ops.h	/^    class Operation {$/;"	c	namespace:LegionRuntime::HighLevel
OrPredOp	src/legion_runtime/legion_ops.cc	/^    OrPredOp::OrPredOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
OrPredOp	src/legion_runtime/legion_ops.cc	/^    OrPredOp::OrPredOp(const OrPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
OrPredOp	src/legion_runtime/legion_ops.h	/^    class OrPredOp : public Predicate::Impl, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
OutgoingMessage	src/legion_runtime/activemsg.cc	/^OutgoingMessage::OutgoingMessage(unsigned _msgid, unsigned _num_args,$/;"	f	class:OutgoingMessage
OutgoingMessage	src/legion_runtime/activemsg.cc	/^struct OutgoingMessage {$/;"	s	file:
Output_Sink	include/nautilus/fmtout.h	/^struct Output_Sink {$/;"	s
OverlapResult	src/legion_runtime/lowlevel.h	/^      enum OverlapResult { OVERLAP_NO, OVERLAP_MAYBE, OVERLAP_YES };$/;"	g	class:LegionRuntime::LowLevel::ElementMask
P	scripts/kconfig/kconfig_load.c	25;"	d	file:
P	scripts/kconfig/kconfig_load.c	34;"	d	file:
P	scripts/kconfig/kconfig_load.c	7;"	d	file:
P	scripts/kconfig/kconfig_load.c	9;"	d	file:
P	scripts/kconfig/lkc.h	24;"	d
P	scripts/kconfig/lkc.h	27;"	d
P	scripts/kconfig/lkc.h	30;"	d
PACKAGE	scripts/kconfig/lkc.h	34;"	d
PAD	src/nautilus/scheduler.c	94;"	d	file:
PADDR_TO_PAGE	include/nautilus/paging.h	149;"	d
PADDR_TO_PDPT_IDX	include/nautilus/paging.h	144;"	d
PADDR_TO_PD_IDX	include/nautilus/paging.h	145;"	d
PADDR_TO_PML4_IDX	include/nautilus/paging.h	143;"	d
PADDR_TO_PT_IDX	include/nautilus/paging.h	146;"	d
PAGE_MAP_BIT_IDX	include/nautilus/paging.h	225;"	d
PAGE_MAP_OFFSET	include/nautilus/paging.h	222;"	d
PAGE_MASK	include/nautilus/paging.h	114;"	d
PAGE_SHIFT	include/nautilus/paging.h	108;"	d
PAGE_SHIFT_1GB	include/nautilus/paging.h	107;"	d
PAGE_SHIFT_2MB	include/nautilus/paging.h	106;"	d
PAGE_SHIFT_4KB	include/nautilus/paging.h	105;"	d
PAGE_SIZE	include/nautilus/paging.h	112;"	d
PAGE_SIZE_1GB	include/nautilus/paging.h	111;"	d
PAGE_SIZE_2MB	include/nautilus/paging.h	110;"	d
PAGE_SIZE_4KB	include/nautilus/paging.h	109;"	d
PAGE_TO_PADDR	include/nautilus/paging.h	148;"	d
PALACIOS_DIR	Makefile	/^  PALACIOS_DIR=$(subst ",,$(NAUT_CONFIG_PALACIOS_DIR))$/;"	m
PARAM	scripts/kconfig/lex.zconf.c	809;"	d	file:
PARTIAL_MESSAGE	src/legion_runtime/runtime.h	/^        PARTIAL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageHeader
PARTITIONING_MAPPER_ID	src/test/custom_mapper.cc	/^  PARTITIONING_MAPPER_ID = 1,$/;"	e	enum:__anon108	file:
PART_PROJECTION	src/legion_runtime/legion_types.h	/^      PART_PROJECTION, \/\/ projection from a partition$/;"	e	enum:LegionRuntime::HighLevel::HandleType
PATCHLEVEL	Makefile	/^PATCHLEVEL = 0$/;"	m
PAUSEADJ	src/lua_src/lgc.c	51;"	d	file:
PAUSE_WHILE	include/nautilus/cpu.h	105;"	d
PAYLOAD_COPY	src/legion_runtime/activemsg.h	/^       PAYLOAD_COPY, \/\/ make a copy of the payload$/;"	e	enum:__anon86
PAYLOAD_FREE	src/legion_runtime/activemsg.h	/^       PAYLOAD_FREE, \/\/ take ownership of payload, free when done$/;"	e	enum:__anon86
PAYLOAD_KEEP	src/legion_runtime/activemsg.h	/^       PAYLOAD_KEEP, \/\/ use payload pointer, guaranteed to be stable$/;"	e	enum:__anon86
PAYLOAD_KEEPREG	src/legion_runtime/activemsg.h	/^       PAYLOAD_KEEPREG, \/\/ use payload pointer, AND it's registered!$/;"	e	enum:__anon86
PAYLOAD_NONE	src/legion_runtime/activemsg.h	/^enum { PAYLOAD_NONE, \/\/ no payload in packet$/;"	e	enum:__anon86
PAYLOAD_PENDING	src/legion_runtime/activemsg.h	/^       PAYLOAD_PENDING, \/\/ payload needs to be copied, but hasn't yet$/;"	e	enum:__anon86
PAYLOAD_SRCPTR	src/legion_runtime/activemsg.h	/^       PAYLOAD_SRCPTR, \/\/ payload has been copied to the src data pool$/;"	e	enum:__anon86
PCI_BUS_SHIFT	include/dev/pci.h	32;"	d
PCI_CFG_ADDR_PORT	include/dev/pci.h	28;"	d
PCI_CFG_DATA_PORT	include/dev/pci.h	29;"	d
PCI_CLASS_BRIDGE	include/dev/pci.h	49;"	d
PCI_CLASS_BSP	include/dev/pci.h	51;"	d
PCI_CLASS_CRYPTO	include/dev/pci.h	59;"	d
PCI_CLASS_DISPLAY	include/dev/pci.h	46;"	d
PCI_CLASS_DOCK	include/dev/pci.h	53;"	d
PCI_CLASS_INPUT	include/dev/pci.h	52;"	d
PCI_CLASS_INTIO	include/dev/pci.h	57;"	d
PCI_CLASS_LEGACY	include/dev/pci.h	43;"	d
PCI_CLASS_MEM	include/dev/pci.h	48;"	d
PCI_CLASS_MULTIM	include/dev/pci.h	47;"	d
PCI_CLASS_NET	include/dev/pci.h	45;"	d
PCI_CLASS_NOCLASS	include/dev/pci.h	61;"	d
PCI_CLASS_PROC	include/dev/pci.h	54;"	d
PCI_CLASS_SAT	include/dev/pci.h	58;"	d
PCI_CLASS_SERIAL	include/dev/pci.h	55;"	d
PCI_CLASS_SIG	include/dev/pci.h	60;"	d
PCI_CLASS_SIMPLE	include/dev/pci.h	50;"	d
PCI_CLASS_STORAGE	include/dev/pci.h	44;"	d
PCI_CLASS_WIRELESS	include/dev/pci.h	56;"	d
PCI_DEBUG	src/dev/pci.c	35;"	d	file:
PCI_ENABLE_BIT	include/dev/pci.h	37;"	d
PCI_ERROR	src/dev/pci.c	37;"	d	file:
PCI_EXPRESS_ROOT_HID_STRING	include/acpi/actypes.h	340;"	d
PCI_FUN_SHIFT	include/dev/pci.h	33;"	d
PCI_MAX_BUS	include/dev/pci.h	39;"	d
PCI_MAX_DEV	include/dev/pci.h	40;"	d
PCI_MAX_FUN	include/dev/pci.h	41;"	d
PCI_PRINT	src/dev/pci.c	34;"	d	file:
PCI_REG_MASK	include/dev/pci.h	35;"	d
PCI_ROOT_HID_STRING	include/acpi/actypes.h	339;"	d
PCI_SLOT_SHIFT	include/dev/pci.h	31;"	d
PCI_SUBCLASS_BRIDGE_PCI	include/dev/pci.h	64;"	d
PCI_WARN	src/dev/pci.c	36;"	d	file:
PDE_KERNEL_ONLY	include/nautilus/paging.h	179;"	d
PDE_PRESENT	include/nautilus/paging.h	177;"	d
PDE_WRITABLE	include/nautilus/paging.h	178;"	d
PDE_WRITE_THROUGH	include/nautilus/paging.h	180;"	d
PDPTE_KERNEL_ONLY	include/nautilus/paging.h	174;"	d
PDPTE_PRESENT	include/nautilus/paging.h	172;"	d
PDPTE_WRITABLE	include/nautilus/paging.h	173;"	d
PDPTE_WRITE_THROUGH	include/nautilus/paging.h	175;"	d
PDPT_MASK	include/nautilus/paging.h	135;"	d
PDPT_SHIFT	include/nautilus/paging.h	134;"	d
PD_MASK	include/nautilus/paging.h	138;"	d
PD_SHIFT	include/nautilus/paging.h	137;"	d
PEEK_APERIODIC	src/nautilus/scheduler.c	303;"	d	file:
PEEK_APERIODIC	src/nautilus/scheduler.c	309;"	d	file:
PEEK_RT	src/nautilus/scheduler.c	326;"	d	file:
PEEK_RT_PENDING	src/nautilus/scheduler.c	319;"	d	file:
PENDING_ACTIVE_STATE	src/legion_runtime/garbage_collection.h	/^        PENDING_ACTIVE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PENDING_INACTIVE_STATE	src/legion_runtime/garbage_collection.h	/^        PENDING_INACTIVE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PENDING_INVALID_STATE	src/legion_runtime/garbage_collection.h	/^        PENDING_INVALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PENDING_MAP_STATE	src/legion_runtime/legion_ops.h	/^        PENDING_MAP_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
PENDING_QUEUE	src/nautilus/scheduler.c	/^	       PENDING_QUEUE = 1, $/;"	e	enum:__anon131	file:
PENDING_UPDATES_ALLOC	src/legion_runtime/legion_allocation.h	/^      PENDING_UPDATES_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PENDING_VALID_STATE	src/legion_runtime/garbage_collection.h	/^        PENDING_VALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
PERFORM_CLOSING_CHECKS_CALL	src/legion_runtime/region_tree.h	/^      PERFORM_CLOSING_CHECKS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_COPY_DOMAIN_CALL	src/legion_runtime/region_tree.h	/^      PERFORM_COPY_DOMAIN_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_DEPENDENCE_CHECKS_CALL	src/legion_runtime/region_tree.h	/^      PERFORM_DEPENDENCE_CHECKS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_LOGICAL_CLOSE_CALL	src/legion_runtime/region_tree.h	/^      PERFORM_LOGICAL_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_PREMAP_CLOSE_CALL	src/legion_runtime/region_tree.h	/^      PERFORM_PREMAP_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERFORM_REDUCTION_CALL	src/legion_runtime/region_tree.h	/^      PERFORM_REDUCTION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PERF_CTL_MSR_N	include/nautilus/pmc.h	49;"	d
PERF_CTR_MSR_N	include/nautilus/pmc.h	50;"	d
PERIODIC	include/nautilus/scheduler.h	/^typedef enum { APERIODIC = 0, SPORADIC = 1, PERIODIC = 2} nk_sched_constraint_type_t;$/;"	e	enum:__anon52
PERL	Makefile	/^PERL		= perl$/;"	m
PF2CTaskArgs	src/test/hpcg/hpcg-problem.cc	/^    PF2CTaskArgs(const lgncg::Geometry &fGeom,$/;"	f	struct:__anon113::PF2CTaskArgs
PF2CTaskArgs	src/test/hpcg/hpcg-problem.cc	/^struct PF2CTaskArgs {$/;"	s	namespace:__anon113	file:
PFN_ROUND_DOWN	include/nautilus/paging.h	119;"	d
PFN_ROUND_UP	include/nautilus/paging.h	118;"	d
PF_ERR_IFETCH	include/nautilus/paging.h	216;"	d
PF_ERR_NOT_PRESENT	include/nautilus/paging.h	208;"	d
PF_ERR_NO_IFETCH	include/nautilus/paging.h	215;"	d
PF_ERR_NO_RSVD	include/nautilus/paging.h	213;"	d
PF_ERR_PROT	include/nautilus/paging.h	207;"	d
PF_ERR_READ	include/nautilus/paging.h	209;"	d
PF_ERR_RSVD_BIT	include/nautilus/paging.h	214;"	d
PF_ERR_SUPER	include/nautilus/paging.h	211;"	d
PF_ERR_USR	include/nautilus/paging.h	212;"	d
PF_ERR_WRITE	include/nautilus/paging.h	210;"	d
PF_EXCP	include/nautilus/idt.h	49;"	d
PHI_BASE_PATH	xeon_phi/linux_usr/phi_console.c	64;"	d	file:
PHI_BOOT_OK_REG	include/arch/k1om/xeon_phi.h	29;"	d
PHI_BOOT_STR	xeon_phi/linux_usr/phi_console.c	66;"	d	file:
PHI_FB_ADDR	xeon_phi/linux_usr/phi_console.c	51;"	d	file:
PHI_FB_CTRL_REG_ADDR	src/arch/k1om/xeon_phi.c	43;"	d	file:
PHI_FB_HEIGHT	xeon_phi/linux_usr/phi_console.c	53;"	d	file:
PHI_FB_LEN	xeon_phi/linux_usr/phi_console.c	55;"	d	file:
PHI_FB_REGS_OFFSET	xeon_phi/linux_usr/phi_console.c	57;"	d	file:
PHI_FB_WIDTH	xeon_phi/linux_usr/phi_console.c	52;"	d	file:
PHI_GDDR_RANGE_SZ	xeon_phi/linux_usr/phi_console.c	39;"	d	file:
PHI_SBOX_BASE	include/arch/k1om/xeon_phi.h	28;"	d
PHI_STATE_FILE	xeon_phi/linux_usr/phi_console.c	65;"	d	file:
PHONY	Makefile	/^PHONY := _all$/;"	m
PHYSICAL_FIELD_TREE	src/legion_runtime/legion_types.h	44;"	d
PHYSICAL_MANAGER_ALLOC	src/legion_runtime/legion_allocation.h	/^      PHYSICAL_MANAGER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PHYSICAL_REGION_ALLOC	src/legion_runtime/legion_allocation.h	/^      PHYSICAL_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PHYSICAL_VERSION_ALLOC	src/legion_runtime/legion_allocation.h	/^      PHYSICAL_VERSION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PI	src/lua_src/lmathlib.c	25;"	d	file:
PI	src/lua_src/lmathlib.c	26;"	d	file:
PIC_MASTER_CMD_PORT	include/nautilus/irq.h	36;"	d
PIC_MASTER_DATA_PORT	include/nautilus/irq.h	37;"	d
PIC_MODE_ON	include/nautilus/irq.h	41;"	d
PIC_SLAVE_CMD_PORT	include/nautilus/irq.h	38;"	d
PIC_SLAVE_DATA_PORT	include/nautilus/irq.h	39;"	d
PING_VEC	include/test/ipi.h	29;"	d
PIN_POLARITY_HI	include/dev/ioapic.h	91;"	d
PIN_POLARITY_LO	include/dev/ioapic.h	92;"	d
PIT_ACC_MODE	include/dev/i8254.h	59;"	d
PIT_ACC_MODE_BOTH	include/dev/i8254.h	57;"	d
PIT_ACC_MODE_JUST_HI	include/dev/i8254.h	56;"	d
PIT_ACC_MODE_JUST_LO	include/dev/i8254.h	55;"	d
PIT_ACC_MODE_LATCH_CNT	include/dev/i8254.h	54;"	d
PIT_BIT_MODE_BCD	include/dev/i8254.h	72;"	d
PIT_BIT_MODE_BIN	include/dev/i8254.h	71;"	d
PIT_CHAN	include/dev/i8254.h	52;"	d
PIT_CHAN0_DATA	include/dev/i8254.h	41;"	d
PIT_CHAN1_DATA	include/dev/i8254.h	42;"	d
PIT_CHAN2_DATA	include/dev/i8254.h	43;"	d
PIT_CHAN_SEL_0	include/dev/i8254.h	48;"	d
PIT_CHAN_SEL_1	include/dev/i8254.h	49;"	d
PIT_CHAN_SEL_2	include/dev/i8254.h	50;"	d
PIT_CMD_REG	include/dev/i8254.h	44;"	d
PIT_MODE	include/dev/i8254.h	69;"	d
PIT_MODE_HWSTROBE	include/dev/i8254.h	65;"	d
PIT_MODE_ONESHOT	include/dev/i8254.h	61;"	d
PIT_MODE_RATEGEN	include/dev/i8254.h	62;"	d
PIT_MODE_RATEGEN2	include/dev/i8254.h	66;"	d
PIT_MODE_SQUARE	include/dev/i8254.h	63;"	d
PIT_MODE_SQUARE2	include/dev/i8254.h	67;"	d
PIT_MODE_SWSTROBE	include/dev/i8254.h	64;"	d
PIT_RATE	include/dev/i8254.h	74;"	d
PIT_TIMER_IRQ	include/dev/i8254.h	35;"	d
PLUS	src/nautilus/printk.c	520;"	d	file:
PMC_DEBUG	src/nautilus/pmc.c	30;"	d	file:
PMC_ERR	src/nautilus/pmc.c	32;"	d	file:
PMC_INFO	src/nautilus/pmc.c	31;"	d	file:
PMC_SLOT_FREE	include/nautilus/pmc.h	31;"	d
PMC_SLOT_USED	include/nautilus/pmc.h	32;"	d
PMC_WARN	src/nautilus/pmc.c	33;"	d	file:
PML4E_KERNEL_ONLY	include/nautilus/paging.h	169;"	d
PML4E_PRESENT	include/nautilus/paging.h	167;"	d
PML4E_WRITABLE	include/nautilus/paging.h	168;"	d
PML4E_WRITE_THROUGH	include/nautilus/paging.h	170;"	d
PML4_MASK	include/nautilus/paging.h	132;"	d
PML4_SHIFT	include/nautilus/paging.h	131;"	d
PML4_STRIDE	src/arch/hrt/hrt.c	32;"	d	file:
PM_APPLIANCE_PC	include/acpi/actbl.h	/^	PM_APPLIANCE_PC = 6$/;"	e	enum:acpi_prefered_pm_profiles
PM_DESKTOP	include/acpi/actbl.h	/^	PM_DESKTOP = 1,$/;"	e	enum:acpi_prefered_pm_profiles
PM_ENTERPRISE_SERVER	include/acpi/actbl.h	/^	PM_ENTERPRISE_SERVER = 4,$/;"	e	enum:acpi_prefered_pm_profiles
PM_MOBILE	include/acpi/actbl.h	/^	PM_MOBILE = 2,$/;"	e	enum:acpi_prefered_pm_profiles
PM_SOHO_SERVER	include/acpi/actbl.h	/^	PM_SOHO_SERVER = 5,$/;"	e	enum:acpi_prefered_pm_profiles
PM_TIMER_FREQUENCY	include/acpi/actypes.h	344;"	d
PM_TIMER_FREQUENCY	include/acpi/actypes.h	395;"	d
PM_UNSPECIFIED	include/acpi/actbl.h	/^	PM_UNSPECIFIED = 0,$/;"	e	enum:acpi_prefered_pm_profiles
PM_WORKSTATION	include/acpi/actbl.h	/^	PM_WORKSTATION = 3,$/;"	e	enum:acpi_prefered_pm_profiles
POINT_TASK_ALLOC	src/legion_runtime/legion_allocation.h	/^      POINT_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
POINT_TASK_KIND	src/legion_runtime/legion_tasks.h	/^        POINT_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
PONG_BCAST_VEC	include/test/ipi.h	31;"	d
PONG_VEC	include/test/ipi.h	30;"	d
POP_F2C_FID	src/test/hpcg/hpcg-problem.cc	/^    POP_F2C_FID$/;"	e	enum:__anon112	file:
POS	src/lua_src/lobject.c	251;"	d	file:
POSITION_INDICATOR_BG	scripts/kconfig/lxdialog/colors.h	93;"	d
POSITION_INDICATOR_FG	scripts/kconfig/lxdialog/colors.h	92;"	d
POSITION_INDICATOR_HL	scripts/kconfig/lxdialog/colors.h	94;"	d
POS_A	include/lua/lopcodes.h	47;"	d
POS_Ax	include/lua/lopcodes.h	51;"	d
POS_B	include/lua/lopcodes.h	49;"	d
POS_Bx	include/lua/lopcodes.h	50;"	d
POS_C	include/lua/lopcodes.h	48;"	d
POS_OP	include/lua/lopcodes.h	46;"	d
PRE	src/lua_src/lobject.c	250;"	d	file:
PREDICATE_ALLOC	src/legion_runtime/legion_allocation.h	/^      PREDICATE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PREFIX	src/acpi/osl.c	40;"	d	file:
PREFIX	src/acpi/tables.c	34;"	d	file:
PREFIX	src/nautilus/acpi.c	43;"	d	file:
PREMAP_PHYSICAL_REGION_ANALYSIS	src/legion_runtime/region_tree.h	/^      PREMAP_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
PREV_LOGICAL_ALLOC	src/legion_runtime/legion_allocation.h	/^      PREV_LOGICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PREV_PHYSICAL_ALLOC	src/legion_runtime/legion_allocation.h	/^      PREV_PHYSICAL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PRINT	src/test/benchmark.h	40;"	d
PRINT	src/test/benchmark.h	7;"	d
PRINTBIT	include/lua/lctype.h	41;"	d
PRINTD	scripts/kconfig/zconf.tab.c	170;"	d	file:
PRINTK_BUFMAX	include/nautilus/printk.h	30;"	d
PRINT_MAX	src/nautilus/vc.c	673;"	d	file:
PRINT_REG	src/legion_runtime/legion_tasks.cc	27;"	d	file:
PRINT_REG	src/legion_runtime/legion_tasks.cc	9871;"	d	file:
PRIVATE_PTR	src/test/circuit.h	/^  PRIVATE_PTR,$/;"	e	enum:PointerLocation
PRId64	src/test/hpcg/cg.h	56;"	d
PRId64	src/test/hpcg/hpcg-main.cc	55;"	d	file:
PROCESSOR_GROUP_ALLOC	src/legion_runtime/legion_allocation.h	/^      PROCESSOR_GROUP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
PROC_ALL_ONES	src/legion_runtime/legion_types.h	714;"	d
PROC_GROUP	src/legion_runtime/lowlevel.h	/^	PROC_GROUP, \/\/ Processor group$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
PROC_MASK	src/legion_runtime/legion_types.h	713;"	d
PROC_MASK	src/legion_runtime/legion_types.h	744;"	d
PROC_SHIFT	src/legion_runtime/legion_types.h	712;"	d
PROC_SHIFT	src/legion_runtime/legion_types.h	743;"	d
PROC_TYPE	src/legion_runtime/legion_types.h	711;"	d
PROF_BEGIN_DEP_ANALYSIS	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_DEP_ANALYSIS = 0,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_EXECUTION	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_EXECUTION = 6,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_GC	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_GC = 18,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_MAP_ANALYSIS	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_MAP_ANALYSIS = 4,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_MESSAGE	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_MESSAGE = 20,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_POST	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_POST = 14,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_PREMAP_ANALYSIS	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_PREMAP_ANALYSIS = 2,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_SCHEDULER	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_SCHEDULER = 10,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_TRIGGER	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_TRIGGER = 16,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_BEGIN_WAIT	src/legion_runtime/legion_profiling.h	/^      PROF_BEGIN_WAIT = 8,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_COMPLETE	src/legion_runtime/legion_profiling.h	/^      PROF_COMPLETE = 12,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_DEP_ANALYSIS	src/legion_runtime/legion_profiling.h	/^      PROF_END_DEP_ANALYSIS = 1,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_EXECUTION	src/legion_runtime/legion_profiling.h	/^      PROF_END_EXECUTION = 7,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_GC	src/legion_runtime/legion_profiling.h	/^      PROF_END_GC = 19,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_MAP_ANALYSIS	src/legion_runtime/legion_profiling.h	/^      PROF_END_MAP_ANALYSIS = 5,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_MESSAGE	src/legion_runtime/legion_profiling.h	/^      PROF_END_MESSAGE = 21,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_POST	src/legion_runtime/legion_profiling.h	/^      PROF_END_POST = 15,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_PREMAP_ANALYSIS	src/legion_runtime/legion_profiling.h	/^      PROF_END_PREMAP_ANALYSIS = 3,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_SCHEDULER	src/legion_runtime/legion_profiling.h	/^      PROF_END_SCHEDULER = 11,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_TRIGGER	src/legion_runtime/legion_profiling.h	/^      PROF_END_TRIGGER = 17,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_END_WAIT	src/legion_runtime/legion_profiling.h	/^      PROF_END_WAIT = 9,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROF_LAUNCH	src/legion_runtime/legion_profiling.h	/^      PROF_LAUNCH = 13,$/;"	e	enum:LegionRuntime::HighLevel::ProfKind
PROMOTED	src/legion_runtime/legion_types.h	/^      PROMOTED        = 0x00001000, \/\/ Internal use only$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
PROMOTED_DEPENDENCE	src/legion_runtime/legion_types.h	/^      PROMOTED_DEPENDENCE = 5,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
PS_1G	include/nautilus/paging.h	/^    PS_1G,$/;"	e	enum:__anon59
PS_2M	include/nautilus/paging.h	/^    PS_2M,$/;"	e	enum:__anon59
PS_4K	include/nautilus/paging.h	/^    PS_4K,$/;"	e	enum:__anon59
PTE_ACCESSED_BIT	include/nautilus/paging.h	160;"	d
PTE_ADDR	include/nautilus/paging.h	153;"	d
PTE_ADDR_MASK	include/nautilus/paging.h	151;"	d
PTE_CACHE_DISABLED	include/nautilus/paging.h	186;"	d
PTE_CACHE_DISABLE_BIT	include/nautilus/paging.h	159;"	d
PTE_DIRTY_BIT	include/nautilus/paging.h	161;"	d
PTE_GLOBAL_BIT	include/nautilus/paging.h	163;"	d
PTE_KERNEL_ONLY	include/nautilus/paging.h	184;"	d
PTE_KERNEL_ONLY_BIT	include/nautilus/paging.h	157;"	d
PTE_NX_BIT	include/nautilus/paging.h	165;"	d
PTE_PAGE_SIZE_BIT	include/nautilus/paging.h	162;"	d
PTE_PAT_BIT	include/nautilus/paging.h	164;"	d
PTE_PRESENT	include/nautilus/paging.h	182;"	d
PTE_PRESENT_BIT	include/nautilus/paging.h	155;"	d
PTE_WRITABLE	include/nautilus/paging.h	183;"	d
PTE_WRITABLE_BIT	include/nautilus/paging.h	156;"	d
PTE_WRITE_THROUGH	include/nautilus/paging.h	185;"	d
PTE_WRITE_THROUGH_BIT	include/nautilus/paging.h	158;"	d
PTHREAD_SAFE_CALL	src/legion_runtime/shared_lowlevel.cc	108;"	d	file:
PTHREAD_SAFE_CALL	src/legion_runtime/shared_lowlevel.cc	117;"	d	file:
PTHREAD_SAFE_CALL	src/legion_runtime/utilities.h	508;"	d
PTHREAD_SAFE_CALL	src/legion_runtime/utilities.h	517;"	d
PTHREAD_SAFE_CALL	src/legion_runtime/utilities.h	816;"	d
PTRDIFF_T_RANK	src/nautilus/fmtout.c	79;"	d	file:
PT_MASK	include/nautilus/paging.h	141;"	d
PT_SHIFT	include/nautilus/paging.h	140;"	d
PULL_VALID_VIEWS_CALL	src/legion_runtime/region_tree.h	/^      PULL_VALID_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
PUT	src/fs/ext2/ext2_access.c	/^enum dentry_op {GET,PUT,DEL_BY_NAME,DEL_BY_INODE};$/;"	e	enum:dentry_op	file:
PUT_APERIODIC	src/nautilus/scheduler.c	294;"	d	file:
PUT_APERIODIC	src/nautilus/scheduler.c	298;"	d	file:
PUT_APERIODIC	src/nautilus/scheduler.c	307;"	d	file:
PUT_RT	src/nautilus/scheduler.c	323;"	d	file:
PUT_RT_PENDING	src/nautilus/scheduler.c	316;"	d	file:
PVecItem	src/test/hpcg/vector.h	/^    PVecItem(const std::vector< Rect<1> > &sgb,$/;"	f	struct:lgncg::PVecItem
PVecItem	src/test/hpcg/vector.h	/^struct PVecItem {$/;"	s	namespace:lgncg
PXM_INVAL	include/nautilus/acpi.h	265;"	d
P_CHOICE	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
P_COMMENT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
P_DEFAULT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
P_MENU	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
P_PROMPT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
P_RANGE	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
P_SELECT	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
P_UNKNOWN	scripts/kconfig/expr.h	/^	P_UNKNOWN, P_PROMPT, P_COMMENT, P_MENU, P_DEFAULT, P_CHOICE, P_SELECT, P_RANGE$/;"	e	enum:prop_type
Parent	scripts/kconfig/qconf.h	/^	typedef class QLineEdit Parent;$/;"	t	class:ConfigLineEdit	typeref:class:ConfigLineEdit::QLineEdit
Parent	scripts/kconfig/qconf.h	/^	typedef class QListView Parent;$/;"	t	class:ConfigList	typeref:class:ConfigList::QListView
Parent	scripts/kconfig/qconf.h	/^	typedef class QListViewItem Parent;$/;"	t	class:ConfigItem	typeref:class:ConfigItem::QListViewItem
Parent	scripts/kconfig/qconf.h	/^	typedef class QVBox Parent;$/;"	t	class:ConfigView	typeref:class:ConfigView::QVBox
PartialWriteEntry	src/legion_runtime/lowlevel.cc	/^    struct PartialWriteEntry {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PartialWriteKey	src/legion_runtime/lowlevel.cc	/^    struct PartialWriteKey {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PartialWriteMap	src/legion_runtime/lowlevel.cc	/^    typedef std::map<PartialWriteKey, PartialWriteEntry> PartialWriteMap;$/;"	t	namespace:LegionRuntime::LowLevel	file:
PartitionNode	src/legion_runtime/region_tree.cc	/^    PartitionNode::PartitionNode(LogicalPartition p, RegionNode *par,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
PartitionNode	src/legion_runtime/region_tree.cc	/^    PartitionNode::PartitionNode(const PartitionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
PartitionNode	src/legion_runtime/region_tree.h	/^    class PartitionNode : public RegionTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
PartitionProjectionFnptr	src/legion_runtime/legion_types.h	/^    typedef LogicalRegion (*PartitionProjectionFnptr)(LogicalPartition parent, $/;"	t	namespace:LegionRuntime::HighLevel
PartitionProjectionTable	src/legion_runtime/legion_types.h	/^      PartitionProjectionTable;$/;"	t	namespace:LegionRuntime::HighLevel
PartitioningMapper	src/test/custom_mapper.cc	/^PartitioningMapper::PartitioningMapper(Machine *m,$/;"	f	class:PartitioningMapper
PartitioningMapper	src/test/custom_mapper.cc	/^class PartitioningMapper : public DefaultMapper {$/;"	c	file:
Partitions	src/test/circuit.h	/^struct Partitions {$/;"	s
PathReturner	src/legion_runtime/region_tree.cc	/^    PathReturner::PathReturner(RegionTreePath &path, ContextID c,$/;"	f	class:LegionRuntime::HighLevel::PathReturner
PathReturner	src/legion_runtime/region_tree.cc	/^    PathReturner::PathReturner(const PathReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
PathReturner	src/legion_runtime/region_tree.h	/^    class PathReturner : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PathTraverser	src/legion_runtime/region_tree.cc	/^    PathTraverser::PathTraverser(RegionTreePath &p)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
PathTraverser	src/legion_runtime/region_tree.cc	/^    PathTraverser::PathTraverser(const PathTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
PathTraverser	src/legion_runtime/region_tree.h	/^    class PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PayloadSource	src/legion_runtime/activemsg.cc	/^  PayloadSource(void) { }$/;"	f	class:PayloadSource
PayloadSource	src/legion_runtime/activemsg.cc	/^class PayloadSource {$/;"	c	file:
PendingGather	src/legion_runtime/lowlevel_dma.cc	/^      struct PendingGather {$/;"	s	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
PendingUpdates	src/legion_runtime/lowlevel.cc	/^      PendingUpdates(void) : unguarded_delta(0) {}$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates
PendingUpdates	src/legion_runtime/lowlevel.cc	/^    class Event::Impl::PendingUpdates {$/;"	c	class:LegionRuntime::LowLevel::Event::Impl	file:
PerNodeUpdates	src/legion_runtime/lowlevel.cc	/^      struct PerNodeUpdates {$/;"	s	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates	file:
PerThreadTimerData	src/legion_runtime/lowlevel.cc	/^      PerThreadTimerData(void)$/;"	f	struct:LegionRuntime::LowLevel::PerThreadTimerData
PerThreadTimerData	src/legion_runtime/lowlevel.cc	/^    struct PerThreadTimerData {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PerThreadTimerData	src/legion_runtime/shared_lowlevel.cc	/^      PerThreadTimerData(void)$/;"	f	struct:LegionRuntime::LowLevel::PerThreadTimerData
PerThreadTimerData	src/legion_runtime/shared_lowlevel.cc	/^    struct PerThreadTimerData {$/;"	s	namespace:LegionRuntime::LowLevel	file:
PerfTrace	src/legion_runtime/region_tree.cc	/^    RegionTreeForest::PerfTrace::PerfTrace(int k, unsigned long long s)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
PerfTrace	src/legion_runtime/region_tree.h	/^        PerfTrace(void)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
PerfTrace	src/legion_runtime/region_tree.h	/^      struct PerfTrace {$/;"	s	class:LegionRuntime::HighLevel::RegionTreeForest
PerfTracer	src/legion_runtime/region_tree.h	/^      PerfTracer(RegionTreeForest *f, int k)$/;"	f	class:LegionRuntime::HighLevel::PerfTracer
PerfTracer	src/legion_runtime/region_tree.h	/^    class PerfTracer {$/;"	c	namespace:LegionRuntime::HighLevel
Pfunc	include/lua/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PhaseBarrier	src/legion_runtime/legion.cc	/^    PhaseBarrier::PhaseBarrier(Barrier b, unsigned parts)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
PhaseBarrier	src/legion_runtime/legion.cc	/^    PhaseBarrier::PhaseBarrier(void)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
PhaseBarrier	src/legion_runtime/legion.h	/^    class PhaseBarrier {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalCloser	src/legion_runtime/region_tree.cc	/^    PhysicalCloser::PhysicalCloser(MappableInfo *in, bool open, LogicalRegion h)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
PhysicalCloser	src/legion_runtime/region_tree.cc	/^    PhysicalCloser::PhysicalCloser(const PhysicalCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
PhysicalCloser	src/legion_runtime/region_tree.h	/^    struct PhysicalCloser {$/;"	s	namespace:LegionRuntime::HighLevel
PhysicalCopyAnalyzer	src/legion_runtime/region_tree.cc	/^    PhysicalCopyAnalyzer<READING,REDUCE,TRACK,ABOVE>::PhysicalCopyAnalyzer($/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
PhysicalCopyAnalyzer	src/legion_runtime/region_tree.h	/^    class PhysicalCopyAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalDepAnalyzer	src/legion_runtime/region_tree.cc	/^    PhysicalDepAnalyzer<FILTER>::PhysicalDepAnalyzer(const PhysicalUser &u,$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
PhysicalDepAnalyzer	src/legion_runtime/region_tree.h	/^    class PhysicalDepAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalEventFilter	src/legion_runtime/region_tree.h	/^      PhysicalEventFilter(Event term)$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
PhysicalEventFilter	src/legion_runtime/region_tree.h	/^    class PhysicalEventFilter {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalFilter	src/legion_runtime/region_tree.cc	/^    PhysicalFilter::PhysicalFilter(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
PhysicalFilter	src/legion_runtime/region_tree.h	/^    class PhysicalFilter {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalInitializer	src/legion_runtime/region_tree.cc	/^    PhysicalInitializer::PhysicalInitializer(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
PhysicalInitializer	src/legion_runtime/region_tree.cc	/^    PhysicalInitializer::PhysicalInitializer(const PhysicalInitializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
PhysicalInitializer	src/legion_runtime/region_tree.h	/^    class PhysicalInitializer : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalInstance	src/legion_runtime/legion_types.h	/^    typedef LowLevel::RegionInstance PhysicalInstance;$/;"	t	namespace:LegionRuntime::HighLevel
PhysicalInvalidator	src/legion_runtime/region_tree.cc	/^    PhysicalInvalidator::PhysicalInvalidator(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
PhysicalInvalidator	src/legion_runtime/region_tree.cc	/^    PhysicalInvalidator::PhysicalInvalidator(ContextID c, const FieldMask &m,$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
PhysicalInvalidator	src/legion_runtime/region_tree.cc	/^    PhysicalInvalidator::PhysicalInvalidator(const PhysicalInvalidator &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
PhysicalInvalidator	src/legion_runtime/region_tree.h	/^    class PhysicalInvalidator : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalManager	src/legion_runtime/region_tree.cc	/^    PhysicalManager::PhysicalManager(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
PhysicalManager	src/legion_runtime/region_tree.h	/^    class PhysicalManager : public DistributedCollectable {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalRegion	src/legion_runtime/legion.cc	/^    PhysicalRegion::PhysicalRegion(PhysicalRegion::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
PhysicalRegion	src/legion_runtime/legion.cc	/^    PhysicalRegion::PhysicalRegion(const PhysicalRegion &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
PhysicalRegion	src/legion_runtime/legion.cc	/^    PhysicalRegion::PhysicalRegion(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
PhysicalRegion	src/legion_runtime/legion.h	/^    class PhysicalRegion {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalState	src/legion_runtime/region_tree.cc	/^    PhysicalState::PhysicalState(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::PhysicalState
PhysicalState	src/legion_runtime/region_tree.cc	/^    PhysicalState::PhysicalState(ContextID c, RegionTreeNode *n)$/;"	f	class:LegionRuntime::HighLevel::PhysicalState
PhysicalState	src/legion_runtime/region_tree.cc	/^    PhysicalState::PhysicalState(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalState
PhysicalState	src/legion_runtime/region_tree.h	/^    struct PhysicalState {$/;"	s	namespace:LegionRuntime::HighLevel
PhysicalUnpacker	src/legion_runtime/region_tree.cc	/^    PhysicalUnpacker::PhysicalUnpacker(FieldSpaceNode *node,$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
PhysicalUnpacker	src/legion_runtime/region_tree.h	/^    class PhysicalUnpacker {$/;"	c	namespace:LegionRuntime::HighLevel
PhysicalUser	src/legion_runtime/region_tree.cc	/^    PhysicalUser::PhysicalUser(const RegionUsage &u, const FieldMask &m,$/;"	f	class:LegionRuntime::HighLevel::PhysicalUser
PhysicalUser	src/legion_runtime/region_tree.cc	/^    PhysicalUser::PhysicalUser(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUser
PhysicalUser	src/legion_runtime/region_tree.h	/^    struct PhysicalUser : public GenericUser {$/;"	s	namespace:LegionRuntime::HighLevel
Point	src/legion_runtime/arrays.h	/^      Point(const Point<1>& other) { for(unsigned i = 0; i < DIM; i++) x[i] = other.x[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	src/legion_runtime/arrays.h	/^      Point(const Point<DIM>& other) { for(unsigned i = 0; i < DIM; i++) x[i] = other.x[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	src/legion_runtime/arrays.h	/^      Point(const int *vals) { for(unsigned i = 0; i < DIM; i++) x[i] = vals[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	src/legion_runtime/arrays.h	/^      Point(int val) { x[0] = val; }$/;"	f	class:LegionRuntime::Arrays::Point
Point	src/legion_runtime/arrays.h	/^      Point(void) {}$/;"	f	class:LegionRuntime::Arrays::Point
Point	src/legion_runtime/arrays.h	/^    class Point {$/;"	c	namespace:LegionRuntime::Arrays
Point	src/legion_runtime/arrays.h	/^    class Point<1> {$/;"	c	namespace:LegionRuntime::Arrays
PointInInputRectIterator	src/legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<DIM> PointInInputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
PointInInputRectIterator	src/legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<IDIM> PointInInputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
PointInInputRectIterator	src/legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<IDIM> PointInInputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
PointInOutputRectIterator	src/legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<DIM> PointInOutputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Blockify
PointInOutputRectIterator	src/legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<ODIM> PointInOutputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Linearization
PointInOutputRectIterator	src/legion_runtime/arrays.h	/^      typedef GenericPointInRectIterator<ODIM> PointInOutputRectIterator;$/;"	t	class:LegionRuntime::Arrays::Mapping
PointTask	src/legion_runtime/legion_tasks.cc	/^    PointTask::PointTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::PointTask
PointTask	src/legion_runtime/legion_tasks.cc	/^    PointTask::PointTask(const PointTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::PointTask
PointTask	src/legion_runtime/legion_tasks.h	/^    class PointTask : public SingleTask {$/;"	c	namespace:LegionRuntime::HighLevel
PointerLocation	src/test/circuit.h	/^enum PointerLocation {$/;"	g
PostEndArgs	src/legion_runtime/legion_tasks.h	/^      struct PostEndArgs {$/;"	s	class:LegionRuntime::HighLevel::SingleTask
PreconditionSet	src/legion_runtime/region_tree.h	/^      PreconditionSet(const FieldMask &m)$/;"	f	struct:LegionRuntime::HighLevel::PreconditionSet
PreconditionSet	src/legion_runtime/region_tree.h	/^      PreconditionSet(void) { }$/;"	f	struct:LegionRuntime::HighLevel::PreconditionSet
PreconditionSet	src/legion_runtime/region_tree.h	/^    struct PreconditionSet {$/;"	s	namespace:LegionRuntime::HighLevel
Predicate	src/legion_runtime/legion.cc	/^    Predicate::Predicate(Predicate::Impl *i)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	src/legion_runtime/legion.cc	/^    Predicate::Predicate(bool value)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	src/legion_runtime/legion.cc	/^    Predicate::Predicate(const Predicate &p)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	src/legion_runtime/legion.cc	/^    Predicate::Predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate
Predicate	src/legion_runtime/legion.h	/^    class Predicate {$/;"	c	namespace:LegionRuntime::HighLevel
PredicateFnptr	src/legion_runtime/legion_types.h	/^    typedef bool (*PredicateFnptr)(const void*, size_t, $/;"	t	namespace:LegionRuntime::HighLevel
PredicateOp	src/legion_runtime/legion_ops.h	/^    typedef Predicate::Impl PredicateOp;$/;"	t	namespace:LegionRuntime::HighLevel
PredicateWaiter	src/legion_runtime/legion_ops.h	/^    class PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
PreemptableThread	src/legion_runtime/lowlevel_impl.h	/^      PreemptableThread(void) {}$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
PreemptableThread	src/legion_runtime/lowlevel_impl.h	/^    class PreemptableThread {$/;"	c	namespace:LegionRuntime::LowLevel
PremapTraverser	src/legion_runtime/region_tree.cc	/^    PremapTraverser::PremapTraverser(RegionTreePath &p, MappableInfo *i)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
PremapTraverser	src/legion_runtime/region_tree.cc	/^    PremapTraverser::PremapTraverser(const PremapTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
PremapTraverser	src/legion_runtime/region_tree.h	/^    class PremapTraverser : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
PrivilegeMode	src/legion_runtime/legion_types.h	/^    enum PrivilegeMode {$/;"	g	namespace:LegionRuntime::HighLevel
Problem	src/test/hpcg/hpcg-problem.h	/^    Problem(const lgncg::Geometry &geom,$/;"	f	struct:Problem
Problem	src/test/hpcg/hpcg-problem.h	/^    Problem(void) { ; }$/;"	f	struct:Problem
Problem	src/test/hpcg/hpcg-problem.h	/^struct Problem {$/;"	s
ProblemGenerator	src/test/hpcg/hpcg-problem-generator.h	/^    ProblemGenerator(const lgncg::Geometry &geom,$/;"	f	struct:ProblemGenerator
ProblemGenerator	src/test/hpcg/hpcg-problem-generator.h	/^struct ProblemGenerator {$/;"	s
Processor	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Processor Processor;$/;"	t	namespace:LegionRuntime::HighLevel
Processor	src/legion_runtime/lowlevel.h	/^    class Processor {$/;"	c	namespace:LegionRuntime::LowLevel
ProcessorAssignment	src/legion_runtime/lowlevel.cc	/^    ProcessorAssignment::ProcessorAssignment(int _num_local_procs)$/;"	f	class:LegionRuntime::LowLevel::ProcessorAssignment
ProcessorAssignment	src/legion_runtime/lowlevel_impl.h	/^    class ProcessorAssignment {$/;"	c	namespace:LegionRuntime::LowLevel
ProcessorGroup	src/legion_runtime/lowlevel.cc	/^    ProcessorGroup::ProcessorGroup(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
ProcessorGroup	src/legion_runtime/lowlevel_impl.h	/^    class ProcessorGroup : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
ProcessorGroup	src/legion_runtime/shared_lowlevel.cc	/^      ProcessorGroup(Processor p) $/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
ProcessorGroup	src/legion_runtime/shared_lowlevel.cc	/^    class ProcessorGroup : public ProcessorImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ProcessorGroupInfo	src/legion_runtime/runtime.h	/^        ProcessorGroupInfo(Processor p, const ProcessorMask &m)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
ProcessorGroupInfo	src/legion_runtime/runtime.h	/^        ProcessorGroupInfo(void)$/;"	f	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
ProcessorGroupInfo	src/legion_runtime/runtime.h	/^      struct ProcessorGroupInfo {$/;"	s	class:LegionRuntime::HighLevel::Runtime
ProcessorGroupTableAllocator	src/legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<ProcessorGroup, 10, 4> ProcessorGroupTableAllocator;$/;"	t
ProcessorImpl	src/legion_runtime/shared_lowlevel.cc	/^        ProcessorImpl(nk_barrier_t *init, const Processor::TaskIDTable &table, $/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
ProcessorImpl	src/legion_runtime/shared_lowlevel.cc	/^        ProcessorImpl(nk_barrier_t *init, const Processor::TaskIDTable &table,$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
ProcessorImpl	src/legion_runtime/shared_lowlevel.cc	/^    class ProcessorImpl : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ProcessorManager	src/legion_runtime/runtime.cc	/^    ProcessorManager::ProcessorManager(Processor proc, Processor::Kind kind,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
ProcessorManager	src/legion_runtime/runtime.cc	/^    ProcessorManager::ProcessorManager(const ProcessorManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
ProcessorManager	src/legion_runtime/runtime.h	/^    class ProcessorManager {$/;"	c	namespace:LegionRuntime::HighLevel
ProcessorMask	src/legion_runtime/legion_types.h	/^                                                                  ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	src/legion_runtime/legion_types.h	/^    typedef AVXBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	src/legion_runtime/legion_types.h	/^    typedef AVXTLBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	src/legion_runtime/legion_types.h	/^    typedef BitMask<PROCTYPE,MAX_NUM_PROCS,PROC_SHIFT,PROC_MASK> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	src/legion_runtime/legion_types.h	/^    typedef BitMask<PROC_TYPE,MAX_NUM_PROCS,PROC_SHIFT,PROC_MASK> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	src/legion_runtime/legion_types.h	/^    typedef SSEBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMask	src/legion_runtime/legion_types.h	/^    typedef SSETLBitMask<MAX_NUM_PROCS> ProcessorMask;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMemoryAffinity	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Machine::ProcessorMemoryAffinity ProcessorMemoryAffinity;$/;"	t	namespace:LegionRuntime::HighLevel
ProcessorMemoryAffinity	src/legion_runtime/lowlevel.h	/^      struct ProcessorMemoryAffinity {$/;"	s	class:LegionRuntime::LowLevel::Machine
ProcessorProfiler	src/legion_runtime/legion_logging.h	/^        ProcessorProfiler() {$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
ProcessorProfiler	src/legion_runtime/legion_logging.h	/^        ProcessorProfiler(const ProcessorProfiler& copy_from) {assert(false);}$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
ProcessorProfiler	src/legion_runtime/legion_logging.h	/^      struct ProcessorProfiler {$/;"	s	namespace:LegionRuntime::HighLevel::LegionLogging
ProcessorProfiler	src/legion_runtime/legion_profiling.h	/^	ProcessorProfiler(const ProcessorProfiler& copy_from) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
ProcessorProfiler	src/legion_runtime/legion_profiling.h	/^        ProcessorProfiler(Processor p, bool util, Processor::Kind k) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
ProcessorProfiler	src/legion_runtime/legion_profiling.h	/^        ProcessorProfiler(void)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
ProcessorProfiler	src/legion_runtime/legion_profiling.h	/^      struct ProcessorProfiler {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
ProcessorThread	src/legion_runtime/lowlevel.cc	/^      ProcessorThread(int _id, int _core_id)$/;"	f	class:LegionRuntime::LowLevel::ProcessorThread
ProcessorThread	src/legion_runtime/lowlevel.cc	/^    class ProcessorThread : public ThreadImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ProfKind	src/legion_runtime/legion_profiling.h	/^    enum ProfKind {$/;"	g	namespace:LegionRuntime::HighLevel
ProfilingEvent	src/legion_runtime/legion_profiling.h	/^        ProfilingEvent(unsigned k, UniqueID uid, unsigned long long t)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
ProfilingEvent	src/legion_runtime/legion_profiling.h	/^      struct ProfilingEvent {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
ProjectionID	src/legion_runtime/legion_types.h	/^    typedef unsigned int ProjectionID;$/;"	t	namespace:LegionRuntime::HighLevel
Protect	src/lua_src/lvm.c	516;"	d	file:
Proto	include/lua/lobject.h	/^typedef struct Proto {$/;"	s
Proto	include/lua/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
PthreadCondWaiter	src/legion_runtime/lowlevel.cc	/^      PthreadCondWaiter(Event::Impl *i)$/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
PthreadCondWaiter	src/legion_runtime/lowlevel.cc	/^    class PthreadCondWaiter : public Event::Impl::EventWaiter {$/;"	c	namespace:LegionRuntime::LowLevel	file:
Q	Makefile	/^  Q = @$/;"	m
Q	Makefile	/^  Q =$/;"	m
QSettings	scripts/kconfig/qconf.h	/^class QSettings { };$/;"	c
QUANTUM_IN_NS	src/arch/hrt/init.c	69;"	d	file:
QUANTUM_IN_NS	src/arch/k1om/init.c	62;"	d	file:
QUANTUM_IN_NS	src/arch/x64/init.c	97;"	d	file:
QUEUE_LOCK	src/nautilus/vc.c	63;"	d	file:
QUEUE_LOCK_CONF	src/nautilus/vc.c	62;"	d	file:
QUEUE_UNLOCK	src/nautilus/vc.c	64;"	d	file:
RA	src/lua_src/lvm.c	494;"	d	file:
RADIANS_PER_DEGREE	src/lua_src/lmathlib.c	27;"	d	file:
RAMDISK_DEFAULT_BLOCK_SIZE	include/dev/ramdisk.h	26;"	d
RAMFS_END	include/nautilus/fs.h	131;"	d
RAMFS_START	include/nautilus/fs.h	130;"	d
RAND_MAX	include/nautilus/libccompat.h	39;"	d
RAW	include/nautilus/vc.h	/^enum nk_vc_type {RAW, COOKED, RAW_NOQUEUE};$/;"	e	enum:nk_vc_type
RAW_NOQUEUE	include/nautilus/vc.h	/^enum nk_vc_type {RAW, COOKED, RAW_NOQUEUE};$/;"	e	enum:nk_vc_type
RB	src/lua_src/lvm.c	496;"	d	file:
RB_BLACK	include/nautilus/rbtree.h	114;"	d
RB_CLEAR_NODE	include/nautilus/rbtree.h	147;"	d
RB_EMPTY_NODE	include/nautilus/rbtree.h	146;"	d
RB_EMPTY_ROOT	include/nautilus/rbtree.h	145;"	d
RB_RED	include/nautilus/rbtree.h	113;"	d
RB_ROOT	include/nautilus/rbtree.h	142;"	d
RC	src/lua_src/lvm.c	497;"	d	file:
RCS_FIND_IGNORE	Makefile	/^RCS_FIND_IGNORE := \\( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \\) -prune -o$/;"	m
RCS_TAR_IGNORE	Makefile	/^export RCS_TAR_IGNORE := --exclude SCCS --exclude BitKeeper --exclude .svn --exclude CVS --exclude .pc --exclude .hg --exclude .git$/;"	m
READ_ONLY	src/legion_runtime/legion_types.h	/^      READ_ONLY       = 0x00000001,$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
READ_WRITE	src/legion_runtime/legion_types.h	/^      READ_WRITE      = 0x00000007, \/\/ All three privileges$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
REAL_MODE_ARG_START	src/asm/realmode.S	/^REAL_MODE_ARG_START   = 0x7000  \/\/ within the segment, goes up to 0x8000       $/;"	d
REAL_MODE_STACK_START	src/asm/realmode.S	/^REAL_MODE_STACK_START = 0x7000  \/\/ within the segment$/;"	d
REAL_TO_LINEAR	include/dev/vesa.h	142;"	d
RECORD_CLOSE_CALL	src/legion_runtime/region_tree.h	/^      RECORD_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REDUCE	src/legion_runtime/legion_types.h	/^      REDUCE          = 0x00000004,$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
REDUCE_FROM_CALL	src/legion_runtime/region_tree.h	/^      REDUCE_FROM_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REDUCE_ID	src/test/circuit.h	/^  REDUCE_ID = 1,$/;"	e	enum:__anon121
REDUCE_TO_CALL	src/legion_runtime/region_tree.h	/^      REDUCE_TO_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REDUCTION_ALLOC	src/legion_runtime/legion_allocation.h	/^      REDUCTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
REDUCTION_VIEW_ALLOC	src/legion_runtime/legion_allocation.h	/^      REDUCTION_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
REGDMA_MEM	src/legion_runtime/lowlevel.h	/^        REGDMA_MEM, \/\/ Registered memory visible to all processors on a node, can be a target of RDMA$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
REGION_CREATION	src/legion_runtime/legion_types.h	/^      REGION_CREATION = 0x00000004,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
REGION_DELETION	src/legion_runtime/legion_types.h	/^      REGION_DELETION = 0x00000008,$/;"	e	enum:LegionRuntime::HighLevel::AllocateMode
REGION_DEPENDENCE_ANALYSIS	src/legion_runtime/region_tree.h	/^      REGION_DEPENDENCE_ANALYSIS,  $/;"	e	enum:LegionRuntime::HighLevel::TraceKind
REGISTER_LOGICAL_DEPS_CALL	src/legion_runtime/region_tree.h	/^      REGISTER_LOGICAL_DEPS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REGISTER_LOGICAL_NODE_CALL	src/legion_runtime/region_tree.h	/^      REGISTER_LOGICAL_NODE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REGISTER_PHYSICAL_REGION_ANALYSIS	src/legion_runtime/region_tree.h	/^      REGISTER_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
REGISTER_REGION_CALL	src/legion_runtime/region_tree.h	/^      REGISTER_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REG_LOAD	src/asm/thread_lowlevel.S	/^#define REG_LOAD() FPR_LOAD() SR_LOAD() GPR_LOAD()$/;"	d
REG_LOAD_SKIP_RAX	src/asm/thread_lowlevel.S	/^#define REG_LOAD_SKIP_RAX() FPR_LOAD() SR_LOAD() GPR_LOAD_SKIP_RAX()$/;"	d
REG_OP_ALLOC	lib/bitmap.c	/^	REG_OP_ALLOC,		\/* set all bits in region *\/$/;"	e	enum:__anon80	file:
REG_OP_ISFREE	lib/bitmap.c	/^	REG_OP_ISFREE,		\/* true if region is all zero bits *\/$/;"	e	enum:__anon80	file:
REG_OP_RELEASE	lib/bitmap.c	/^	REG_OP_RELEASE,		\/* clear all bits in region *\/$/;"	e	enum:__anon80	file:
REG_PROJECTION	src/legion_runtime/legion_types.h	/^      REG_PROJECTION, \/\/ projection from a region$/;"	e	enum:LegionRuntime::HighLevel::HandleType
REG_SAVE	src/asm/thread_lowlevel.S	/^#define REG_SAVE() GPR_SAVE() SR_SAVE() FPR_SAVE()$/;"	d
REG_SAVE_SIZE	src/asm/thread_lowlevel.S	/^#define REG_SAVE_SIZE (GPR_SAVE_SIZE+SR_SAVE_SIZE+FPR_SAVE_SIZE)$/;"	d
REJECT	scripts/kconfig/lex.zconf.c	734;"	d	file:
RELAXED	src/legion_runtime/legion_types.h	/^      RELAXED      = 3,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
RELEASE_MAPPABLE	src/legion_runtime/legion.h	/^        RELEASE_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
RELEASE_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      RELEASE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RELEASE_PHYSICAL_STATE_CALL	src/legion_runtime/region_tree.h	/^      RELEASE_PHYSICAL_STATE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REMAP_PHYSICAL_REGION_ANALYSIS	src/legion_runtime/region_tree.h	/^      REMAP_PHYSICAL_REGION_ANALYSIS,$/;"	e	enum:LegionRuntime::HighLevel::TraceKind
REMAP_REGION_CALL	src/legion_runtime/region_tree.h	/^      REMAP_REGION_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
REMOTE_COPY_MSGID	src/legion_runtime/lowlevel_dma.h	/^      REMOTE_COPY_MSGID = 200,$/;"	e	enum:LegionRuntime::LowLevel::DMAActiveMessageIDs
REMOTE_MALLOC_MSGID	src/legion_runtime/lowlevel.cc	/^      REMOTE_MALLOC_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_MALLOC_RPLID	src/legion_runtime/lowlevel.cc	/^      REMOTE_MALLOC_RPLID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_REDLIST_MSGID	src/legion_runtime/lowlevel.cc	/^      REMOTE_REDLIST_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_REDUCE_MSGID	src/legion_runtime/lowlevel.cc	/^      REMOTE_REDUCE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_TASK_ALLOC	src/legion_runtime/legion_allocation.h	/^      REMOTE_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
REMOTE_TASK_KIND	src/legion_runtime/legion_tasks.h	/^        REMOTE_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
REMOTE_WRITE_FENCE_MSGID	src/legion_runtime/lowlevel.cc	/^      REMOTE_WRITE_FENCE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOTE_WRITE_MSGID	src/legion_runtime/lowlevel.cc	/^      REMOTE_WRITE_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
REMOVE_APERIODIC	src/nautilus/scheduler.c	295;"	d	file:
REMOVE_APERIODIC	src/nautilus/scheduler.c	299;"	d	file:
REMOVE_APERIODIC	src/nautilus/scheduler.c	308;"	d	file:
REMOVE_RT	src/nautilus/scheduler.c	324;"	d	file:
REMOVE_RT_PENDING	src/nautilus/scheduler.c	317;"	d	file:
REM_CORE	src/test/benchmark.c	242;"	d	file:
REQUEST_DIR_ONLY	include/acpi/acpiosxf.h	275;"	d
REQUEST_FILE_ONLY	include/acpi/acpiosxf.h	274;"	d
RESERVED	include/lua/llex.h	/^enum RESERVED {$/;"	g
RESERVEDSLOT	src/lua_src/lbaselib.c	298;"	d	file:
RESERVE_CONTEXTS_CALL	src/legion_runtime/region_tree.h	/^      RESERVE_CONTEXTS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
RESIZE_CONTEXTS_CALL	src/legion_runtime/region_tree.h	/^      RESIZE_CONTEXTS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
RESOLVE_FALSE_STATE	src/legion_runtime/legion_ops.h	/^        RESOLVE_FALSE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
RESOLVE_SPECULATION	src/legion_runtime/legion_logging.h	/^    RESOLVE_SPECULATION = 11,$/;"	e	enum:LegionRuntime::TimingKind
RESOLVE_TRUE_STATE	src/legion_runtime/legion_ops.h	/^        RESOLVE_TRUE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
RESTORE_GPRS	include/nautilus/thread.h	240;"	d
RETS	src/lua_src/lobject.c	249;"	d	file:
RETURN	src/test/benchmark.h	11;"	d
RETURN	src/test/benchmark.h	45;"	d
RFLAGS_AF	include/nautilus/cpu.h	38;"	d
RFLAGS_CF	include/nautilus/cpu.h	36;"	d
RFLAGS_DF	include/nautilus/cpu.h	43;"	d
RFLAGS_IF	include/nautilus/cpu.h	42;"	d
RFLAGS_IOPL	include/nautilus/cpu.h	45;"	d
RFLAGS_OF	include/nautilus/cpu.h	44;"	d
RFLAGS_PF	include/nautilus/cpu.h	37;"	d
RFLAGS_SF	include/nautilus/cpu.h	40;"	d
RFLAGS_TF	include/nautilus/cpu.h	41;"	d
RFLAGS_VIF	include/nautilus/cpu.h	47;"	d
RFLAGS_VIP	include/nautilus/cpu.h	48;"	d
RFLAGS_VM	include/nautilus/cpu.h	46;"	d
RFLAGS_ZF	include/nautilus/cpu.h	39;"	d
RHS	src/legion_runtime/lowlevel.h	/^      typedef int RHS;$/;"	t	class:LegionRuntime::LowLevel::MyReductionOp
RHS	src/test/circuit.h	/^  typedef float RHS;$/;"	t	class:AccumulateCharge
RHS	src/test/hpcg/dotprod-accumulate.h	/^    typedef double RHS;$/;"	t	class:lgncg::DotProdAccumulate
RHS	src/test/saxpy_array.cc	/^  typedef float RHS;$/;"	t	struct:Add	file:
RIGHT_DIR	src/legion_runtime/rectangle_set.h	/^        RIGHT_DIR = 1,$/;"	e	enum:LegionRuntime::HighLevel::Segment::Direction
RKASK	include/lua/lopcodes.h	145;"	d
RKB	src/lua_src/lvm.c	498;"	d	file:
RKC	src/lua_src/lvm.c	500;"	d	file:
ROLL_UP_DATA_MSGID	src/legion_runtime/lowlevel.cc	/^      ROLL_UP_DATA_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
ROLL_UP_TIMER_MSGID	src/legion_runtime/lowlevel.cc	/^      ROLL_UP_TIMER_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
ROUND_DOWN_TO_PAGE	include/nautilus/paging.h	116;"	d
RSP	src/asm/realmode.S	/^RSP   = LOAD_ADDR + (_rsp - .)$/;"	d
RSP_STACK_OFFSET	src/nautilus/thread.c	251;"	d	file:
RUNNABLE_QUEUE	src/nautilus/scheduler.c	/^typedef enum { RUNNABLE_QUEUE = 0, $/;"	e	enum:__anon131	file:
RUNTIME_ACCESSOR_H	src/legion_runtime/accessor.h	17;"	d
RUNTIME_DISTRIBUTED_ALLOC	src/legion_runtime/legion_allocation.h	/^      RUNTIME_DISTRIBUTED_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_DIST_COLLECT_ALLOC	src/legion_runtime/legion_allocation.h	/^      RUNTIME_DIST_COLLECT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_FUTURE_ALLOC	src/legion_runtime/legion_allocation.h	/^      RUNTIME_FUTURE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_GC_EPOCH_ALLOC	src/legion_runtime/legion_allocation.h	/^      RUNTIME_GC_EPOCH_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_HIER_COLLECT_ALLOC	src/legion_runtime/legion_allocation.h	/^      RUNTIME_HIER_COLLECT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUNTIME_LOWLEVEL_H	src/legion_runtime/lowlevel.h	17;"	d
RUNTIME_REMOTE_ALLOC	src/legion_runtime/legion_allocation.h	/^      RUNTIME_REMOTE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
RUN_TRIALS	src/test/benchmark.c	606;"	d	file:
RangeExecutors	src/legion_runtime/lowlevel.cc	/^    namespace RangeExecutors {$/;"	n	namespace:LegionRuntime::LowLevel	file:
RangeExecutors	src/legion_runtime/lowlevel_dma.cc	/^    namespace RangeExecutors {$/;"	n	namespace:LegionRuntime::LowLevel	file:
RangeExecutors	src/legion_runtime/shared_lowlevel.cc	/^    namespace RangeExecutors {$/;"	n	namespace:LegionRuntime::LowLevel	file:
RebuildRect	src/legion_runtime/rectangle_set.h	/^      RebuildRect(T lx, T ly, T hx, T hy)$/;"	f	struct:LegionRuntime::HighLevel::RebuildRect
RebuildRect	src/legion_runtime/rectangle_set.h	/^    struct RebuildRect {$/;"	s	namespace:LegionRuntime::HighLevel
Rect	src/legion_runtime/arrays.h	/^      Rect(const Point<DIM> _lo, const Point<DIM> _hi) : lo(_lo), hi(_hi) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	src/legion_runtime/arrays.h	/^      Rect(const Rect<DIM>& other) : lo(other.lo), hi(other.hi) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	src/legion_runtime/arrays.h	/^      Rect(const int *vals) : lo(vals), hi(vals + DIM) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	src/legion_runtime/arrays.h	/^      Rect(void) {}$/;"	f	class:LegionRuntime::Arrays::Rect
Rect	src/legion_runtime/arrays.h	/^    class Rect {$/;"	c	namespace:LegionRuntime::Arrays
RectangleSet	src/legion_runtime/rectangle_set.h	/^    RectangleSet<T,DISCRETE>::RectangleSet(const RectangleSet &rhs)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
RectangleSet	src/legion_runtime/rectangle_set.h	/^    RectangleSet<T,DISCRETE>::RectangleSet(void)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
RectangleSet	src/legion_runtime/rectangle_set.h	/^    class RectangleSet {$/;"	c	namespace:LegionRuntime::HighLevel
RedopApply	src/legion_runtime/shared_lowlevel.cc	/^        RedopApply(const ReductionOpUntyped *_redop, void *_dst_base,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply
RedopApply	src/legion_runtime/shared_lowlevel.cc	/^      class RedopApply {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
RedopFold	src/legion_runtime/shared_lowlevel.cc	/^        RedopFold(const ReductionOpUntyped *_redop, void *_dst_base,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold
RedopFold	src/legion_runtime/shared_lowlevel.cc	/^      class RedopFold {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
ReduceInfo	src/legion_runtime/region_tree.h	/^        ReduceInfo(const FieldMask &valid, $/;"	f	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
ReduceInfo	src/legion_runtime/region_tree.h	/^        ReduceInfo(const FieldMask &valid, const Domain &dom)$/;"	f	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
ReduceInfo	src/legion_runtime/region_tree.h	/^        ReduceInfo(void) { }$/;"	f	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
ReduceInfo	src/legion_runtime/region_tree.h	/^      struct ReduceInfo {$/;"	s	class:LegionRuntime::HighLevel::CompositeView
ReduceRequest	src/legion_runtime/lowlevel_dma.cc	/^    ReduceRequest::ReduceRequest(const Domain& _domain,$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
ReduceRequest	src/legion_runtime/lowlevel_dma.cc	/^    ReduceRequest::ReduceRequest(const void *data, size_t datalen,$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
ReduceRequest	src/legion_runtime/lowlevel_dma.cc	/^    class ReduceRequest : public DmaRequest {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ReductionApply	src/legion_runtime/shared_lowlevel.cc	/^        ReductionApply(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply
ReductionApply	src/legion_runtime/shared_lowlevel.cc	/^      class ReductionApply {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
ReductionCloser	src/legion_runtime/region_tree.cc	/^    ReductionCloser::ReductionCloser(ContextID c, ReductionView *t,$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
ReductionCloser	src/legion_runtime/region_tree.cc	/^    ReductionCloser::ReductionCloser(const ReductionCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
ReductionCloser	src/legion_runtime/region_tree.h	/^    class ReductionCloser : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
ReductionFold	src/legion_runtime/accessor.h	/^      struct ReductionFold {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
ReductionFold	src/legion_runtime/shared_lowlevel.cc	/^        ReductionFold(const std::vector<Domain::CopySrcDstField>& _srcs,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold
ReductionFold	src/legion_runtime/shared_lowlevel.cc	/^      class ReductionFold {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
ReductionList	src/legion_runtime/accessor.h	/^      struct ReductionList {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
ReductionListEntry	src/legion_runtime/accessor.h	/^	struct ReductionListEntry {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionList
ReductionListEntry	src/legion_runtime/lowlevel.h	/^    struct ReductionListEntry {$/;"	s	namespace:LegionRuntime::LowLevel
ReductionManager	src/legion_runtime/region_tree.cc	/^    ReductionManager::ReductionManager(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
ReductionManager	src/legion_runtime/region_tree.h	/^    class ReductionManager : public PhysicalManager {$/;"	c	namespace:LegionRuntime::HighLevel
ReductionOp	src/legion_runtime/legion_types.h	/^    typedef LowLevel::ReductionOpUntyped ReductionOp;$/;"	t	namespace:LegionRuntime::HighLevel
ReductionOp	src/legion_runtime/lowlevel.h	/^      ReductionOp(void)$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
ReductionOp	src/legion_runtime/lowlevel.h	/^    class ReductionOp : public ReductionOpUntyped {$/;"	c	namespace:LegionRuntime::LowLevel
ReductionOpID	src/legion_runtime/legion_types.h	/^    typedef LowLevel::ReductionOpID ReductionOpID;$/;"	t	namespace:LegionRuntime::HighLevel
ReductionOpID	src/legion_runtime/lowlevel.h	/^    typedef int ReductionOpID;$/;"	t	namespace:LegionRuntime::LowLevel
ReductionOpTable	src/legion_runtime/lowlevel.h	/^    typedef std::map<ReductionOpID, const ReductionOpUntyped *> ReductionOpTable;$/;"	t	namespace:LegionRuntime::LowLevel
ReductionOpUntyped	src/legion_runtime/lowlevel.h	/^      ReductionOpUntyped(size_t _sizeof_lhs, size_t _sizeof_rhs,$/;"	f	class:LegionRuntime::LowLevel::ReductionOpUntyped
ReductionOpUntyped	src/legion_runtime/lowlevel.h	/^    class ReductionOpUntyped {$/;"	c	namespace:LegionRuntime::LowLevel
ReductionView	src/legion_runtime/region_tree.cc	/^    ReductionView::ReductionView(RegionTreeForest *ctx, DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
ReductionView	src/legion_runtime/region_tree.cc	/^    ReductionView::ReductionView(const ReductionView &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
ReductionView	src/legion_runtime/region_tree.h	/^    class ReductionView : public LogicalView {$/;"	c	namespace:LegionRuntime::HighLevel
RegionAccessor	src/legion_runtime/accessor.h	/^      RegionAccessor()$/;"	f	struct:LegionRuntime::Accessor::RegionAccessor
RegionAccessor	src/legion_runtime/accessor.h	/^      RegionAccessor(const typename AT::Untyped& to_copy)$/;"	f	struct:LegionRuntime::Accessor::RegionAccessor
RegionAccessor	src/legion_runtime/accessor.h	/^      RegionAccessor(const typename AT::template Typed<ET, PT>& to_copy) $/;"	f	struct:LegionRuntime::Accessor::RegionAccessor
RegionAccessor	src/legion_runtime/accessor.h	/^    struct RegionAccessor : public AT::template Typed<ET, PT> {$/;"	s	namespace:LegionRuntime::Accessor
RegionAccessor	src/legion_runtime/accessor.h	/^    template <typename AT> struct RegionAccessor<AT, void, void> : public AT::Untyped {$/;"	s	namespace:LegionRuntime::Accessor
RegionAccessor	src/legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorReductionList>::RegionAccessor(void *_internal_data,$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
RegionFlags	src/legion_runtime/legion_types.h	/^    enum RegionFlags {$/;"	g	namespace:LegionRuntime::HighLevel
RegionInstance	src/legion_runtime/lowlevel.h	/^    class RegionInstance {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessor	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessor(const RegionInstanceAccessorUntyped<AT> &_ria) : ria(_ria) {}$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
RegionInstanceAccessor	src/legion_runtime/lowlevel.h	/^      __device__ RegionInstanceAccessor(const RegionInstanceAccessorUntyped<AccessorGPU> &_ria) : ria(_ria) {}$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
RegionInstanceAccessor	src/legion_runtime/lowlevel.h	/^    class RegionInstanceAccessor {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessor	src/legion_runtime/lowlevel.h	/^    class RegionInstanceAccessor<ET,AccessorGPU> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorArray> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorArrayReductionFold> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorGPU> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorGPUReductionFold> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped(const RegionInstanceAccessorUntyped<AccessorReductionList> &old)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^      explicit RegionInstanceAccessorUntyped(void *_array_base)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^      explicit RegionInstanceAccessorUntyped(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorArray> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorArrayReductionFold> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorGPU> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorGPUReductionFold> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionInstanceAccessorUntyped	src/legion_runtime/lowlevel.h	/^    template <> class RegionInstanceAccessorUntyped<AccessorReductionList> {$/;"	c	namespace:LegionRuntime::LowLevel
RegionNode	src/legion_runtime/region_tree.cc	/^    RegionNode::RegionNode(LogicalRegion r, PartitionNode *par,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
RegionNode	src/legion_runtime/region_tree.cc	/^    RegionNode::RegionNode(const RegionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
RegionNode	src/legion_runtime/region_tree.h	/^    class RegionNode : public RegionTreeNode {$/;"	c	namespace:LegionRuntime::HighLevel
RegionProjectionFnptr	src/legion_runtime/legion_types.h	/^    typedef LogicalRegion (*RegionProjectionFnptr)(LogicalRegion parent, $/;"	t	namespace:LegionRuntime::HighLevel
RegionProjectionTable	src/legion_runtime/legion_types.h	/^      RegionProjectionTable;$/;"	t	namespace:LegionRuntime::HighLevel
RegionRequirement	src/legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(LogicalPartition pid, $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	src/legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(LogicalRegion _handle,  $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	src/legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(LogicalRegion _handle, $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	src/legion_runtime/legion.cc	/^    RegionRequirement::RegionRequirement(void)$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
RegionRequirement	src/legion_runtime/legion.h	/^    struct RegionRequirement {$/;"	s	namespace:LegionRuntime::HighLevel
RegionTreeContext	src/legion_runtime/runtime.h	/^      RegionTreeContext(ContextID c)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
RegionTreeContext	src/legion_runtime/runtime.h	/^      RegionTreeContext(void)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
RegionTreeContext	src/legion_runtime/runtime.h	/^    class RegionTreeContext {$/;"	c	namespace:LegionRuntime::HighLevel
RegionTreeForest	src/legion_runtime/region_tree.cc	/^    RegionTreeForest::RegionTreeForest(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
RegionTreeForest	src/legion_runtime/region_tree.cc	/^    RegionTreeForest::RegionTreeForest(const RegionTreeForest &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
RegionTreeForest	src/legion_runtime/region_tree.h	/^    class RegionTreeForest {$/;"	c	namespace:LegionRuntime::HighLevel
RegionTreeID	src/legion_runtime/legion_types.h	/^    typedef unsigned int RegionTreeID;$/;"	t	namespace:LegionRuntime::HighLevel
RegionTreeNode	src/legion_runtime/region_tree.cc	/^    RegionTreeNode::RegionTreeNode(RegionTreeForest *ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
RegionTreeNode	src/legion_runtime/region_tree.h	/^    class RegionTreeNode { $/;"	c	namespace:LegionRuntime::HighLevel
RegionTreePath	src/legion_runtime/region_tree.cc	/^    RegionTreePath::RegionTreePath(void) $/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
RegionTreePath	src/legion_runtime/region_tree.h	/^    class RegionTreePath {$/;"	c	namespace:LegionRuntime::HighLevel
RegionUsage	src/legion_runtime/legion_utilities.h	/^      RegionUsage(PrivilegeMode p, CoherenceProperty c, ReductionOpID r)$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
RegionUsage	src/legion_runtime/legion_utilities.h	/^      RegionUsage(const RegionRequirement &req)$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
RegionUsage	src/legion_runtime/legion_utilities.h	/^      RegionUsage(void)$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
RegionUsage	src/legion_runtime/legion_utilities.h	/^    struct RegionUsage {$/;"	s	namespace:LegionRuntime::HighLevel
RegistrationCallbackFnptr	src/legion_runtime/legion_types.h	/^    typedef void (*RegistrationCallbackFnptr)(Machine *machine, $/;"	t	namespace:LegionRuntime::HighLevel
Release	src/legion_runtime/legion.cc	/^    Release::Release(void)$/;"	f	class:LegionRuntime::HighLevel::Release
Release	src/legion_runtime/legion.h	/^    class Release : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
ReleaseLauncher	src/legion_runtime/legion.cc	/^    ReleaseLauncher::ReleaseLauncher(LogicalRegion reg, LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
ReleaseLauncher	src/legion_runtime/legion.h	/^    struct ReleaseLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
ReleaseOp	src/legion_runtime/legion_ops.cc	/^    ReleaseOp::ReleaseOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
ReleaseOp	src/legion_runtime/legion_ops.cc	/^    ReleaseOp::ReleaseOp(const ReleaseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
ReleaseOp	src/legion_runtime/legion_ops.h	/^    class ReleaseOp : public Release, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
RemoteCopyArgs	src/legion_runtime/lowlevel_dma.h	/^    struct RemoteCopyArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel
RemoteCopyMessage	src/legion_runtime/lowlevel_dma.h	/^				       handle_remote_copy> RemoteCopyMessage;$/;"	t	namespace:LegionRuntime::LowLevel
RemoteMemAllocArgs	src/legion_runtime/lowlevel.cc	/^    struct RemoteMemAllocArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteMemAllocMessage	src/legion_runtime/lowlevel.cc	/^				    handle_remote_mem_alloc> RemoteMemAllocMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteMemory	src/legion_runtime/lowlevel.cc	/^      RemoteMemory(Memory _me, size_t _size, Memory::Kind k, void *_regbase)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
RemoteMemory	src/legion_runtime/lowlevel.cc	/^    class RemoteMemory : public Memory::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteProcessor	src/legion_runtime/lowlevel.cc	/^      RemoteProcessor(Processor _me, Processor::Kind _kind, Processor _util)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
RemoteProcessor	src/legion_runtime/lowlevel.cc	/^    class RemoteProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteRedListArgs	src/legion_runtime/lowlevel.cc	/^    struct RemoteRedListArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteRedListMessage	src/legion_runtime/lowlevel.cc	/^				       handle_remote_redlist> RemoteRedListMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteReduceArgs	src/legion_runtime/lowlevel.cc	/^    struct RemoteReduceArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteReduceMessage	src/legion_runtime/lowlevel.cc	/^				       handle_remote_reduce> RemoteReduceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteTask	src/legion_runtime/legion_tasks.cc	/^    RemoteTask::RemoteTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
RemoteTask	src/legion_runtime/legion_tasks.cc	/^    RemoteTask::RemoteTask(const RemoteTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
RemoteTask	src/legion_runtime/legion_tasks.h	/^    class RemoteTask : public WrapperTask {$/;"	c	namespace:LegionRuntime::HighLevel
RemoteWrite	src/legion_runtime/lowlevel.cc	/^	RemoteWrite(Memory _tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
RemoteWrite	src/legion_runtime/lowlevel.cc	/^      class RemoteWrite {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
RemoteWrite	src/legion_runtime/lowlevel_dma.cc	/^	RemoteWrite(Memory _tgt_mem, off_t _tgt_offset,$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
RemoteWrite	src/legion_runtime/lowlevel_dma.cc	/^      class RemoteWrite {$/;"	c	namespace:LegionRuntime::LowLevel::RangeExecutors	file:
RemoteWriteArgs	src/legion_runtime/lowlevel.cc	/^    struct RemoteWriteArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteWriteFenceArgs	src/legion_runtime/lowlevel.cc	/^    struct RemoteWriteFenceArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RemoteWriteFenceMessage	src/legion_runtime/lowlevel.cc	/^				      handle_remote_write_fence> RemoteWriteFenceMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RemoteWriteInstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      RemoteWriteInstPairCopier(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
RemoteWriteInstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class RemoteWriteInstPairCopier : public InstPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteWriteMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      RemoteWriteMemPairCopier(Memory _src_mem, Memory _dst_mem)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
RemoteWriteMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class RemoteWriteMemPairCopier : public MemPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
RemoteWriteMessage	src/legion_runtime/lowlevel.cc	/^				       handle_remote_write> RemoteWriteMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
ReqRawArgsType	src/legion_runtime/activemsg.h	/^                         (sizeof(void*)+sizeof(REQTYPE)+3)\/4> ReqRawArgsType;$/;"	t	class:ActiveMessageMediumReply
ReqRawArgsType	src/legion_runtime/activemsg.h	/^                         (sizeof(void*)+sizeof(REQTYPE)+3)\/4> ReqRawArgsType;$/;"	t	class:ActiveMessageShortReply
RequestArgs	src/legion_runtime/lowlevel.cc	/^      struct RequestArgs {$/;"	s	struct:LegionRuntime::LowLevel::BarrierAdjustMessage	file:
Reservation	src/legion_runtime/legion_types.h	/^    typedef LowLevel::Reservation Reservation;$/;"	t	namespace:LegionRuntime::HighLevel
Reservation	src/legion_runtime/lowlevel.h	/^    class Reservation {$/;"	c	namespace:LegionRuntime::LowLevel
ReservationImpl	src/legion_runtime/shared_lowlevel.cc	/^	ReservationImpl(int idx, bool activate = false, size_t dsize = 0) : index(idx) {$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
ReservationImpl	src/legion_runtime/shared_lowlevel.cc	/^    class ReservationImpl : public Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
ReservationRecord	src/legion_runtime/shared_lowlevel.cc	/^	class ReservationRecord {$/;"	c	class:LegionRuntime::LowLevel::ReservationImpl	file:
ReservationRequest	src/legion_runtime/runtime.h	/^        ReservationRequest(Reservation r, unsigned m, bool e)$/;"	f	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
ReservationRequest	src/legion_runtime/runtime.h	/^        ReservationRequest(void)$/;"	f	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
ReservationRequest	src/legion_runtime/runtime.h	/^      struct ReservationRequest {$/;"	s	class:LegionRuntime::HighLevel::Grant::Impl
ReservationTableAllocator	src/legion_runtime/lowlevel_impl.h	/^    typedef DynamicTableAllocator<Reservation::Impl, 10, 8> ReservationTableAllocator;$/;"	t
ResolveFuturePredArgs	src/legion_runtime/legion_ops.h	/^      struct ResolveFuturePredArgs {$/;"	s	class:LegionRuntime::HighLevel::FuturePredOp
RestrictedTraverser	src/legion_runtime/region_tree.cc	/^    RestrictedTraverser::RestrictedTraverser(ContextID c, RegionTreePath &path)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
RestrictedTraverser	src/legion_runtime/region_tree.cc	/^    RestrictedTraverser::RestrictedTraverser(const RestrictedTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
RestrictedTraverser	src/legion_runtime/region_tree.h	/^    class RestrictedTraverser : public PathTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
RezCheck	src/legion_runtime/legion_utilities.h	/^      RezCheck(RezCheck &rhs) : rez(rhs.rez) { assert(false); }$/;"	f	class:LegionRuntime::HighLevel::RezCheck
RezCheck	src/legion_runtime/legion_utilities.h	/^      RezCheck(Serializer &r) : rez(r) { rez.begin_context(); }$/;"	f	class:LegionRuntime::HighLevel::RezCheck
RezCheck	src/legion_runtime/legion_utilities.h	/^    class RezCheck {$/;"	c	namespace:LegionRuntime::HighLevel
RollUpDataArgs	src/legion_runtime/lowlevel.cc	/^    struct RollUpDataArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RollUpDataMessage	src/legion_runtime/lowlevel.cc	/^                                       handle_roll_up_data> RollUpDataMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RollUpRequestArgs	src/legion_runtime/lowlevel.cc	/^    struct RollUpRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
RollUpRequestMessage	src/legion_runtime/lowlevel.cc	/^                                      handle_roll_up_request> RollUpRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
RplRawArgsType	src/legion_runtime/activemsg.h	/^  typedef MediumReplyRawArgs<RPLTYPE, RPLID, (sizeof(void*)+sizeof(RPLTYPE)+3)\/4> RplRawArgsType;$/;"	t	class:ActiveMessageMediumReply
RplRawArgsType	src/legion_runtime/activemsg.h	/^  typedef ShortReplyRawArgs<RPLTYPE, RPLID, (sizeof(void*)+sizeof(RPLTYPE)+3)\/4> RplRawArgsType;$/;"	t	class:ActiveMessageShortReply
RunStyle	src/legion_runtime/lowlevel.h	/^      enum RunStyle {$/;"	g	class:LegionRuntime::LowLevel::Machine
Runtime	src/legion_runtime/lowlevel_impl.h	/^    class Runtime {$/;"	c
Runtime	src/legion_runtime/runtime.cc	/^    Runtime::Runtime(Machine *m, AddressSpaceID unique,$/;"	f	class:LegionRuntime::HighLevel::Runtime
Runtime	src/legion_runtime/runtime.cc	/^    Runtime::Runtime(const Runtime &rhs)$/;"	f	class:LegionRuntime::HighLevel::Runtime
Runtime	src/legion_runtime/runtime.h	/^    class Runtime {$/;"	c	namespace:LegionRuntime::HighLevel
Runtime	src/legion_runtime/shared_lowlevel.cc	/^    Runtime::Runtime(Machine *m, const ReductionOpTable &table)$/;"	f	class:LegionRuntime::LowLevel::Runtime
Runtime	src/legion_runtime/shared_lowlevel.cc	/^    class Runtime {$/;"	c	namespace:LegionRuntime::LowLevel	file:
S4bios_request	include/acpi/actbl.h	/^	uint8_t S4bios_request;	\/* Value to write to SMI CMD to enter S4BIOS state *\/$/;"	m	struct:acpi_table_fadt
SANITY_CHECKS	src/nautilus/scheduler.c	55;"	d	file:
SAVE_GPRS	include/nautilus/thread.h	222;"	d
SCAN_MAX_QUEUE	src/dev/kbd.c	42;"	d	file:
SCHEDULER_ID	src/legion_runtime/legion_types.h	/^      SCHEDULER_ID          = LowLevel::Processor::TASK_ID_PROCESSOR_IDLE,$/;"	e	enum:LegionRuntime::HighLevel::__anon92
SCREEN_BG	scripts/kconfig/lxdialog/colors.h	29;"	d
SCREEN_FG	scripts/kconfig/lxdialog/colors.h	28;"	d
SCREEN_HL	scripts/kconfig/lxdialog/colors.h	30;"	d
SEARCHBOX_BG	scripts/kconfig/lxdialog/colors.h	81;"	d
SEARCHBOX_BORDER_BG	scripts/kconfig/lxdialog/colors.h	89;"	d
SEARCHBOX_BORDER_FG	scripts/kconfig/lxdialog/colors.h	88;"	d
SEARCHBOX_BORDER_HL	scripts/kconfig/lxdialog/colors.h	90;"	d
SEARCHBOX_FG	scripts/kconfig/lxdialog/colors.h	80;"	d
SEARCHBOX_HL	scripts/kconfig/lxdialog/colors.h	82;"	d
SEARCHBOX_TITLE_BG	scripts/kconfig/lxdialog/colors.h	85;"	d
SEARCHBOX_TITLE_FG	scripts/kconfig/lxdialog/colors.h	84;"	d
SEARCHBOX_TITLE_HL	scripts/kconfig/lxdialog/colors.h	86;"	d
SECTCOUNT	src/dev/ata.c	79;"	d	file:
SEEK_CUR	include/nautilus/libccompat.h	119;"	d
SEEK_END	include/nautilus/libccompat.h	117;"	d
SEEK_SET	include/nautilus/libccompat.h	120;"	d
SELECT_CLOSE_TARGETS_CALL	src/legion_runtime/region_tree.h	/^      SELECT_CLOSE_TARGETS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
SEND_BACK_COMPOSITE_VIEW	src/legion_runtime/runtime.h	/^        SEND_BACK_COMPOSITE_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_MATERIALIZED_VIEW	src/legion_runtime/runtime.h	/^        SEND_BACK_MATERIALIZED_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_PARTITION_STATE	src/legion_runtime/runtime.h	/^        SEND_BACK_PARTITION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_REDUCTION_VIEW	src/legion_runtime/runtime.h	/^        SEND_BACK_REDUCTION_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_REGION_STATE	src/legion_runtime/runtime.h	/^        SEND_BACK_REGION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_BACK_USER	src/legion_runtime/runtime.h	/^        SEND_BACK_USER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_COMPOSITE_UPDATE	src/legion_runtime/runtime.h	/^        SEND_COMPOSITE_UPDATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_COMPOSITE_VIEW	src/legion_runtime/runtime.h	/^        SEND_COMPOSITE_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FIELD_SPACE_NODE	src/legion_runtime/runtime.h	/^        SEND_FIELD_SPACE_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FUTURE	src/legion_runtime/runtime.h	/^        SEND_FUTURE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FUTURE_RESULT	src/legion_runtime/runtime.h	/^        SEND_FUTURE_RESULT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_FUTURE_SUBSCRIPTION	src/legion_runtime/runtime.h	/^        SEND_FUTURE_SUBSCRIPTION,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDEX_PARTITION_NODE	src/legion_runtime/runtime.h	/^        SEND_INDEX_PARTITION_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDEX_SPACE_NODE	src/legion_runtime/runtime.h	/^        SEND_INDEX_SPACE_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDIVIDUAL_REQUEST	src/legion_runtime/runtime.h	/^        SEND_INDIVIDUAL_REQUEST,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INDIVIDUAL_RETURN	src/legion_runtime/runtime.h	/^        SEND_INDIVIDUAL_RETURN,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_INSTANCE_MANAGER	src/legion_runtime/runtime.h	/^        SEND_INSTANCE_MANAGER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_LOGICAL_REGION_NODE	src/legion_runtime/runtime.h	/^        SEND_LOGICAL_REGION_NODE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MAKE_PERSISTENT	src/legion_runtime/runtime.h	/^        SEND_MAKE_PERSISTENT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MAPPER_MESSAGE	src/legion_runtime/runtime.h	/^        SEND_MAPPER_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MATERIALIZED_UPDATE	src/legion_runtime/runtime.h	/^        SEND_MATERIALIZED_UPDATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_MATERIALIZED_VIEW	src/legion_runtime/runtime.h	/^        SEND_MATERIALIZED_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_PARTITION_STATE	src/legion_runtime/runtime.h	/^        SEND_PARTITION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REDUCTION_MANAGER	src/legion_runtime/runtime.h	/^        SEND_REDUCTION_MANAGER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REDUCTION_UPDATE	src/legion_runtime/runtime.h	/^        SEND_REDUCTION_UPDATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REDUCTION_VIEW	src/legion_runtime/runtime.h	/^        SEND_REDUCTION_VIEW,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REGION_STATE	src/legion_runtime/runtime.h	/^        SEND_REGION_STATE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_REMOTE_REFERENCES	src/legion_runtime/runtime.h	/^        SEND_REMOTE_REFERENCES,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_SLICE_REQUEST	src/legion_runtime/runtime.h	/^        SEND_SLICE_REQUEST,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_SLICE_RETURN	src/legion_runtime/runtime.h	/^        SEND_SLICE_RETURN,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEND_SUBSCRIBER	src/legion_runtime/runtime.h	/^        SEND_SUBSCRIBER,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SEPARATED	include/lua/lgc.h	91;"	d
SERIAL_PRINT_DEBUG_LEVEL	include/dev/serial.h	34;"	d
SETARG_A	include/lua/lopcodes.h	98;"	d
SETARG_Ax	include/lua/lopcodes.h	110;"	d
SETARG_B	include/lua/lopcodes.h	101;"	d
SETARG_Bx	include/lua/lopcodes.h	107;"	d
SETARG_C	include/lua/lopcodes.h	104;"	d
SETARG_sBx	include/lua/lopcodes.h	113;"	d
SET_APIC_LOGICAL_ID	include/dev/apic.h	199;"	d
SET_APIC_LOGICAL_ID	include/dev/apic.h	203;"	d
SET_OPCODE	include/lua/lopcodes.h	90;"	d
SE_EXCP	include/nautilus/idt.h	55;"	d
SFI_APIC_SIG	include/nautilus/sfi.h	32;"	d
SFI_CPUS_SIG	include/nautilus/sfi.h	31;"	d
SFI_DEBUG	src/nautilus/sfi.c	36;"	d	file:
SFI_DEBUG	src/nautilus/sfi.c	38;"	d	file:
SFI_DEVS_SIG	include/nautilus/sfi.h	37;"	d
SFI_FREQ_SIG	include/nautilus/sfi.h	34;"	d
SFI_GPIO_SIG	include/nautilus/sfi.h	39;"	d
SFI_MMAP_SIG	include/nautilus/sfi.h	33;"	d
SFI_MRTC_SIG	include/nautilus/sfi.h	36;"	d
SFI_MTMR_SIG	include/nautilus/sfi.h	35;"	d
SFI_OEM_SIG	include/nautilus/sfi.h	40;"	d
SFI_SYST_SIG	include/nautilus/sfi.h	30;"	d
SFI_SYST_SRCH_END	include/nautilus/sfi.h	27;"	d
SFI_SYST_SRCH_START	include/nautilus/sfi.h	26;"	d
SFI_WAKE_SIG	include/nautilus/sfi.h	38;"	d
SHADOW_BG	scripts/kconfig/lxdialog/colors.h	33;"	d
SHADOW_FG	scripts/kconfig/lxdialog/colors.h	32;"	d
SHADOW_HL	scripts/kconfig/lxdialog/colors.h	34;"	d
SHARED_PTR	src/test/circuit.h	/^  SHARED_PTR,$/;"	e	enum:PointerLocation
SHRT_MAX	include/nautilus/limits.h	30;"	d
SHRT_MAX	src/lua_src/lparser.c	10;"	d	file:
SHRT_MIN	include/nautilus/limits.h	33;"	d
SHUTDOWN_FUNC_ID	src/legion_runtime/legion_types.h	/^      SHUTDOWN_FUNC_ID      = LowLevel::Processor::TASK_ID_PROCESSOR_SHUTDOWN,$/;"	e	enum:LegionRuntime::HighLevel::__anon92
SIGINT	include/nautilus/libccompat.h	67;"	d
SIGN	src/nautilus/printk.c	519;"	d	file:
SIG_DFL	include/nautilus/libccompat.h	68;"	d
SIMULTANEOUS	src/legion_runtime/legion_types.h	/^      SIMULTANEOUS = 2,$/;"	e	enum:LegionRuntime::HighLevel::CoherenceProperty
SIMULTANEOUS_DEPENDENCE	src/legion_runtime/legion_types.h	/^      SIMULTANEOUS_DEPENDENCE = 4,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
SINGLE_VIEW	scripts/kconfig/gconf.c	/^	SINGLE_VIEW, SPLIT_VIEW, FULL_VIEW$/;"	e	enum:__anon3	file:
SINGULAR	src/legion_runtime/legion_types.h	/^      SINGULAR, \/\/ a single logical region$/;"	e	enum:LegionRuntime::HighLevel::HandleType
SIPHON_LOGICAL_CHILDREN_CALL	src/legion_runtime/region_tree.h	/^      SIPHON_LOGICAL_CHILDREN_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
SIPHON_PHYSICAL_CHILDREN_CALL	src/legion_runtime/region_tree.h	/^      SIPHON_PHYSICAL_CHILDREN_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
SIZE	src/legion_runtime/lowlevel_impl.h	/^      static const size_t SIZE = _SIZE;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNode
SIZE	src/test/benchmark.c	80;"	d	file:
SIZE_A	include/lua/lopcodes.h	41;"	d
SIZE_APERIODIC	src/nautilus/scheduler.c	304;"	d	file:
SIZE_APERIODIC	src/nautilus/scheduler.c	310;"	d	file:
SIZE_Ax	include/lua/lopcodes.h	42;"	d
SIZE_B	include/lua/lopcodes.h	39;"	d
SIZE_Bx	include/lua/lopcodes.h	40;"	d
SIZE_C	include/lua/lopcodes.h	38;"	d
SIZE_MAX	include/nautilus/limits.h	64;"	d
SIZE_OP	include/lua/lopcodes.h	44;"	d
SIZE_T_RANK	src/nautilus/fmtout.c	78;"	d	file:
SLEEPING	src/nautilus/scheduler.c	/^	       SLEEPING,           \/\/ being removed from RT and non-RT run\/arrival queues$/;"	e	enum:__anon132	file:
SLICE_REMOTE_COMMIT	src/legion_runtime/runtime.h	/^        SLICE_REMOTE_COMMIT,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SLICE_REMOTE_COMPLETE	src/legion_runtime/runtime.h	/^        SLICE_REMOTE_COMPLETE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SLICE_REMOTE_MAPPED	src/legion_runtime/runtime.h	/^        SLICE_REMOTE_MAPPED,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
SLICE_TASK_ALLOC	src/legion_runtime/legion_allocation.h	/^      SLICE_TASK_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
SLICE_TASK_KIND	src/legion_runtime/legion_tasks.h	/^        SLICE_TASK_KIND,$/;"	e	enum:LegionRuntime::HighLevel::TaskOp::TaskKind
SMALL	src/nautilus/printk.c	523;"	d	file:
SMP_DEBUG	src/arch/x64/smp.c	38;"	d	file:
SMP_DEBUG	src/nautilus/smp.c	46;"	d	file:
SMP_ERROR	src/arch/x64/smp.c	39;"	d	file:
SMP_PRINT	src/arch/x64/smp.c	37;"	d	file:
SMP_PRINT	src/nautilus/smp.c	45;"	d	file:
SOA	src/legion_runtime/accessor.h	/^      struct SOA {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
SOCKET_MEM	src/legion_runtime/lowlevel.h	/^        SOCKET_MEM, \/\/ Memory visible to all processors within a node, better performance to processors on same socket $/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
SPACE	src/nautilus/printk.c	521;"	d	file:
SPACEBIT	include/lua/lctype.h	42;"	d
SPACECHARS	src/lua_src/lbaselib.c	61;"	d	file:
SPAWN_TASK_MSGID	src/legion_runtime/lowlevel.cc	/^      SPAWN_TASK_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
SPECIAL	src/nautilus/printk.c	524;"	d	file:
SPECIALIZED_RAW_ARGS	src/legion_runtime/activemsg.h	247;"	d
SPECIALS	src/lua_src/lstrlib.c	223;"	d	file:
SPECULATE_FALSE_STATE	src/legion_runtime/legion_ops.h	/^        SPECULATE_FALSE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
SPECULATE_TRUE_STATE	src/legion_runtime/legion_ops.h	/^        SPECULATE_TRUE_STATE,$/;"	e	enum:LegionRuntime::HighLevel::SpeculativeOp::SpecState
SPINLOCK_INITIALIZER	include/nautilus/spinlock.h	37;"	d
SPINLOCK_LOOPS	src/test/benchmark.c	83;"	d	file:
SPLIT_VIEW	scripts/kconfig/gconf.c	/^	SINGLE_VIEW, SPLIT_VIEW, FULL_VIEW$/;"	e	enum:__anon3	file:
SPORADIC	include/nautilus/scheduler.h	/^typedef enum { APERIODIC = 0, SPORADIC = 1, PERIODIC = 2} nk_sched_constraint_type_t;$/;"	e	enum:__anon52
SParser	src/lua_src/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SRC	xeon_phi/linux_usr/Makefile	/^SRC=$(wildcard *.c)$/;"	m
SRCTREE	scripts/kconfig/lkc.h	32;"	d
SRC_ALL	include/test/ipi.h	/^		SRC_ALL$/;"	e	enum:__anon29
SRC_ONE	include/test/ipi.h	/^		SRC_ONE,$/;"	e	enum:__anon29
SR_LOAD	src/asm/thread_lowlevel.S	/^#define SR_LOAD()$/;"	d
SR_SAVE	src/asm/thread_lowlevel.S	/^#define SR_SAVE()           \/\/ WRITE ME$/;"	d
SR_SAVE_SIZE	src/asm/thread_lowlevel.S	/^#define SR_SAVE_SIZE (0)$/;"	d
SSEBitMask	src/legion_runtime/legion_utilities.h	/^    SSEBitMask<MAX>::SSEBitMask(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
SSEBitMask	src/legion_runtime/legion_utilities.h	/^    SSEBitMask<MAX>::SSEBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
SSEBitMask	src/legion_runtime/legion_utilities.h	/^    class SSEBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
SSETLBitMask	src/legion_runtime/legion_utilities.h	/^    SSETLBitMask<MAX>::SSETLBitMask(const SSETLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
SSETLBitMask	src/legion_runtime/legion_utilities.h	/^    SSETLBitMask<MAX>::SSETLBitMask(uint64_t init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
SSETLBitMask	src/legion_runtime/legion_utilities.h	/^    class SSETLBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
SSE_ELMTS	src/legion_runtime/legion_utilities.h	2585;"	d
SSE_ELMTS	src/legion_runtime/legion_utilities.h	3790;"	d
SSE_FUNC	src/test/circuit.h	29;"	d
SSE_STACK_ALIGN	src/test/circuit.h	30;"	d
SS_EXCP	include/nautilus/idt.h	47;"	d
STACK_CLONE_DEPTH	src/nautilus/thread.c	986;"	d	file:
STACK_SAVE_SIZE	src/nautilus/thread.c	255;"	d	file:
STACK_SIZE	src/legion_runtime/shared_lowlevel.cc	84;"	d	file:
STACK_SIZE_MIN	src/nautilus/thread.c	987;"	d	file:
START_STRSIZE	scripts/kconfig/lex.zconf.c	754;"	d	file:
STATE_BEFORE_EVENT	src/legion_runtime/lowlevel_dma.cc	/^	STATE_BEFORE_EVENT,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_BLOCKED	src/legion_runtime/lowlevel.cc	/^		     STATE_BLOCKED, STATE_RESUMABLE };$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_DONE	src/legion_runtime/lowlevel_dma.cc	/^	STATE_DONE$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_IDLE	src/legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_INIT	src/legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_INIT	src/legion_runtime/lowlevel_dma.cc	/^	STATE_INIT,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_INIT_WAIT	src/legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_INST_LOCK	src/legion_runtime/lowlevel_dma.cc	/^	STATE_INST_LOCK,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_LOCK	src/dev/ata.c	39;"	d	file:
STATE_LOCK	src/dev/ramdisk.c	39;"	d	file:
STATE_LOCK	src/nautilus/dev.c	40;"	d	file:
STATE_LOCK	src/nautilus/fs.c	41;"	d	file:
STATE_LOCK	src/nautilus/timer.c	46;"	d	file:
STATE_LOCK	src/nautilus/vc.c	55;"	d	file:
STATE_LOCK_CONF	src/dev/ata.c	38;"	d	file:
STATE_LOCK_CONF	src/dev/ramdisk.c	38;"	d	file:
STATE_LOCK_CONF	src/nautilus/dev.c	39;"	d	file:
STATE_LOCK_CONF	src/nautilus/fs.c	40;"	d	file:
STATE_LOCK_CONF	src/nautilus/timer.c	45;"	d	file:
STATE_LOCK_CONF	src/nautilus/vc.c	54;"	d	file:
STATE_METADATA_FETCH	src/legion_runtime/lowlevel_dma.cc	/^	STATE_METADATA_FETCH,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_PREEMPTABLE	src/legion_runtime/lowlevel.cc	/^		     STATE_RUN, STATE_SUSPEND, STATE_PREEMPTABLE,$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_QUEUED	src/legion_runtime/lowlevel_dma.cc	/^	STATE_QUEUED,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_READY	src/legion_runtime/lowlevel_dma.cc	/^	STATE_READY,$/;"	e	enum:LegionRuntime::LowLevel::DmaRequest::State	file:
STATE_RESUMABLE	src/legion_runtime/lowlevel.cc	/^		     STATE_BLOCKED, STATE_RESUMABLE };$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_RUN	src/legion_runtime/lowlevel.cc	/^		     STATE_RUN, STATE_SUSPEND, STATE_PREEMPTABLE,$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_START	src/legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_SUSPEND	src/legion_runtime/lowlevel.cc	/^		     STATE_RUN, STATE_SUSPEND, STATE_PREEMPTABLE,$/;"	e	enum:LegionRuntime::LowLevel::LocalProcessor::Thread::State	file:
STATE_UNLOCK	src/dev/ata.c	40;"	d	file:
STATE_UNLOCK	src/dev/ramdisk.c	40;"	d	file:
STATE_UNLOCK	src/nautilus/dev.c	41;"	d	file:
STATE_UNLOCK	src/nautilus/fs.c	42;"	d	file:
STATE_UNLOCK	src/nautilus/timer.c	47;"	d	file:
STATE_UNLOCK	src/nautilus/vc.c	56;"	d	file:
STATIC_BREADTH_FIRST	src/legion_runtime/default_mapper.cc	26;"	d	file:
STATIC_LOG2	src/legion_runtime/legion_types.h	133;"	d
STATIC_MAX_FAILED_MAPPINGS	src/legion_runtime/default_mapper.cc	31;"	d	file:
STATIC_MAX_PERMITTED_STEALS	src/legion_runtime/default_mapper.cc	23;"	d	file:
STATIC_MAX_SCHEDULE_COUNT	src/legion_runtime/default_mapper.cc	29;"	d	file:
STATIC_MAX_STEAL_COUNT	src/legion_runtime/default_mapper.cc	24;"	d	file:
STATIC_NUM_PROFILE_SAMPLES	src/legion_runtime/default_mapper.cc	30;"	d	file:
STATIC_SPLIT_FACTOR	src/legion_runtime/default_mapper.cc	25;"	d	file:
STATIC_STEALING_ENABLED	src/legion_runtime/default_mapper.cc	28;"	d	file:
STATIC_WAR_ENABLED	src/legion_runtime/default_mapper.cc	27;"	d	file:
STATUS_ADDR	xeon_phi/linux_usr/phi_console.c	45;"	d	file:
STATUS_OK	xeon_phi/linux_usr/phi_console.c	46;"	d	file:
STATUS_OUTPUT_FULL	src/dev/kbd.c	158;"	d	file:
STEAL_MESSAGE	src/legion_runtime/runtime.h	/^        STEAL_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
STENCIL_TASK_ID	src/test/multiple_partitions.cc	/^  STENCIL_TASK_ID,$/;"	e	enum:TaskIDs	file:
STEPMULADJ	src/lua_src/lgc.c	44;"	d	file:
STEPS	src/test/circuit.h	33;"	d
STLComparator	src/legion_runtime/arrays.h	/^      struct STLComparator {$/;"	s	class:LegionRuntime::Arrays::Point
STLComparator	src/legion_runtime/lowlevel.h	/^      struct STLComparator {$/;"	s	class:LegionRuntime::LowLevel::DomainPoint
STORE_ARGUMENT_ALLOC	src/legion_runtime/legion_allocation.h	/^      STORE_ARGUMENT_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
STRING	scripts/kconfig/lex.zconf.c	808;"	d	file:
STRIP	Makefile	/^STRIP		= $(CROSS_COMPILE)k1om-mpss-linux-strip$/;"	m
STRIP	Makefile	/^STRIP		= $(CROSS_COMPILE)strip$/;"	m
SUBARCH	Makefile	/^SUBARCH := $(shell uname -m | sed -e s\/i.86\/i386\/  )$/;"	m
SUBLEVEL	Makefile	/^SUBLEVEL = 1$/;"	m
SUBREGION_TUNABLE	src/test/custom_mapper.cc	/^  SUBREGION_TUNABLE,$/;"	e	enum:__anon107	file:
SUBREGION_TUNABLE	src/test/hpcg/cg-mapper.h	/^    SUBREGION_TUNABLE$/;"	e	enum:__anon119
SUM_TASK_ID	src/test/tasks_and_futures.cc	/^  SUM_TASK_ID,$/;"	e	enum:TaskIDs	file:
SUPERBLOCK_OFFSET	src/fs/ext2/ext2fs.h	32;"	d
SUPERBLOCK_SIZE	src/fs/ext2/ext2fs.h	33;"	d
SUPUNSIGNED	include/lua/llimits.h	261;"	d
SYMBOL_AUTO	scripts/kconfig/expr.h	94;"	d
SYMBOL_CHANGED	scripts/kconfig/expr.h	92;"	d
SYMBOL_CHECK	scripts/kconfig/expr.h	85;"	d
SYMBOL_CHECKED	scripts/kconfig/expr.h	95;"	d
SYMBOL_CHOICE	scripts/kconfig/expr.h	86;"	d
SYMBOL_CHOICEVAL	scripts/kconfig/expr.h	87;"	d
SYMBOL_CONST	scripts/kconfig/expr.h	84;"	d
SYMBOL_HASHMASK	scripts/kconfig/expr.h	100;"	d
SYMBOL_HASHSIZE	scripts/kconfig/expr.h	99;"	d
SYMBOL_MAXLENGTH	scripts/kconfig/expr.h	98;"	d
SYMBOL_MOD	scripts/kconfig/expr.h	82;"	d
SYMBOL_NEW	scripts/kconfig/expr.h	93;"	d
SYMBOL_NO	scripts/kconfig/expr.h	83;"	d
SYMBOL_OPTIONAL	scripts/kconfig/expr.h	90;"	d
SYMBOL_PRINTED	scripts/kconfig/expr.h	88;"	d
SYMBOL_VALID	scripts/kconfig/expr.h	89;"	d
SYMBOL_WARNED	scripts/kconfig/expr.h	96;"	d
SYMBOL_WRITE	scripts/kconfig/expr.h	91;"	d
SYMBOL_YES	scripts/kconfig/expr.h	81;"	d
SYSTEM_MEM	src/legion_runtime/lowlevel.h	/^        SYSTEM_MEM, \/\/ Visible to all processors on a node$/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
S_BOOLEAN	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	enum:symbol_type
S_HEX	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	enum:symbol_type
S_INT	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	enum:symbol_type
S_OTHER	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	enum:symbol_type
S_STRING	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	enum:symbol_type
S_TRISTATE	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	enum:symbol_type
S_UNKNOWN	scripts/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING, S_OTHER$/;"	e	enum:symbol_type
Scancode_QUEUE_SIZE	src/nautilus/vc.c	76;"	d	file:
SchedulerArgs	src/legion_runtime/runtime.h	/^      struct SchedulerArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
ScopedPush	src/legion_runtime/utilities.h	/^        ScopedPush(int timer_kind) { push_timer(timer_kind); }$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer::ScopedPush
ScopedPush	src/legion_runtime/utilities.h	/^      class ScopedPush {$/;"	c	class:LegionRuntime::LowLevel::DetailedTimer
Segment	src/legion_runtime/rectangle_set.h	/^    Segment<T>::Segment(T one, T two, T other, Direction d)$/;"	f	class:LegionRuntime::HighLevel::Segment
Segment	src/legion_runtime/rectangle_set.h	/^    Segment<T>::Segment(const Segment<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Segment
Segment	src/legion_runtime/rectangle_set.h	/^    Segment<T>::Segment(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
Segment	src/legion_runtime/rectangle_set.h	/^    class Segment {$/;"	c	namespace:LegionRuntime::HighLevel
SegmentComparator	src/legion_runtime/rectangle_set.h	/^    class SegmentComparator {$/;"	c	namespace:LegionRuntime::HighLevel
SemInfo	include/lua/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon10
SequoiaMapper	src/legion_runtime/alt_mappers.cc	/^    SequoiaMapper::SequoiaMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
SequoiaMapper	src/legion_runtime/alt_mappers.h	/^    class SequoiaMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
Serial_Emit	src/dev/serial.c	/^Serial_Emit (struct Output_Sink * o, int ch) $/;"	f	file:
Serial_Finish	src/dev/serial.c	/^Serial_Finish (struct Output_Sink * o) { return; }$/;"	f	file:
Serializer	src/legion_runtime/legion_utilities.h	/^      Serializer(const Serializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Serializer
Serializer	src/legion_runtime/legion_utilities.h	/^      Serializer(size_t base_bytes = 4096)$/;"	f	class:LegionRuntime::HighLevel::Serializer
Serializer	src/legion_runtime/legion_utilities.h	/^    class Serializer {$/;"	c	namespace:LegionRuntime::HighLevel
SharedAccess	src/legion_runtime/lowlevel_impl.h	/^      SharedAccess(T* thing_with_data, bool already_held = false)$/;"	f	class:LegionRuntime::LowLevel::SharedAccess
SharedAccess	src/legion_runtime/lowlevel_impl.h	/^    class SharedAccess {$/;"	c	namespace:LegionRuntime::LowLevel
SharedMapper	src/legion_runtime/alt_mappers.cc	/^    SharedMapper::SharedMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::SharedMapper
SharedMapper	src/legion_runtime/alt_mappers.h	/^    class SharedMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
ShiftCaps	src/dev/kbd.c	/^static const nk_keycode_t ShiftCaps[] = {$/;"	v	file:
ShiftNoCaps	src/dev/kbd.c	/^static const nk_keycode_t ShiftNoCaps[] = {$/;"	v	file:
ShimMapper	src/legion_runtime/shim_mapper.cc	/^    ShimMapper::ShimMapper(Machine *m, HighLevelRuntime *rt, Processor local)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
ShimMapper	src/legion_runtime/shim_mapper.cc	/^    ShimMapper::ShimMapper(const ShimMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
ShimMapper	src/legion_runtime/shim_mapper.h	/^    class ShimMapper : public DefaultMapper {$/;"	c	namespace:LegionRuntime::HighLevel
SingleTask	src/legion_runtime/legion_tasks.cc	/^    SingleTask::SingleTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
SingleTask	src/legion_runtime/legion_tasks.h	/^    class SingleTask : public TaskOp {$/;"	c	namespace:LegionRuntime::HighLevel
SliceTask	src/legion_runtime/legion_tasks.cc	/^    SliceTask::SliceTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
SliceTask	src/legion_runtime/legion_tasks.cc	/^    SliceTask::SliceTask(const SliceTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
SliceTask	src/legion_runtime/legion_tasks.h	/^    class SliceTask : public MultiTask {$/;"	c	namespace:LegionRuntime::HighLevel
SpanBasedInstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      SpanBasedInstPairCopier(T *_span_copier, $/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
SpanBasedInstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^    class SpanBasedInstPairCopier : public InstPairCopier {$/;"	c	namespace:LegionRuntime::LowLevel	file:
SpanList	src/legion_runtime/activemsg.h	/^typedef std::vector<SpanListEntry> SpanList;$/;"	t
SpanListEntry	src/legion_runtime/activemsg.h	/^typedef std::pair<const void *, size_t> SpanListEntry;$/;"	t
SpanPayload	src/legion_runtime/activemsg.cc	/^SpanPayload::SpanPayload(const SpanList&_spans, size_t _size, int _mode)$/;"	f	class:SpanPayload
SpanPayload	src/legion_runtime/activemsg.cc	/^class SpanPayload : public PayloadSource {$/;"	c	file:
SparseMatrix	src/test/hpcg/sparsemat.h	/^    SparseMatrix(void)$/;"	f	struct:lgncg::SparseMatrix
SparseMatrix	src/test/hpcg/sparsemat.h	/^struct SparseMatrix {$/;"	s	namespace:lgncg
SpawnTaskArgs	src/legion_runtime/lowlevel.cc	/^    struct SpawnTaskArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
SpawnTaskMessage	src/legion_runtime/lowlevel.cc	/^				       handle_spawn_task_message> SpawnTaskMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
SpecState	src/legion_runtime/legion_ops.h	/^      enum SpecState {$/;"	g	class:LegionRuntime::HighLevel::SpeculativeOp
SpeculativeOp	src/legion_runtime/legion_ops.cc	/^    SpeculativeOp::SpeculativeOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
SpeculativeOp	src/legion_runtime/legion_ops.h	/^    class SpeculativeOp : public Operation, PredicateWaiter {$/;"	c	namespace:LegionRuntime::HighLevel
SplitComparator	src/legion_runtime/rectangle_set.h	/^    struct SplitComparator {$/;"	s	namespace:LegionRuntime::HighLevel
SplitSegment	src/legion_runtime/rectangle_set.h	/^      SplitSegment(Segment<T> *seg, Segment<T> *l, Segment<T> *h)$/;"	f	struct:LegionRuntime::HighLevel::SplitSegment
SplitSegment	src/legion_runtime/rectangle_set.h	/^      SplitSegment(void)$/;"	f	struct:LegionRuntime::HighLevel::SplitSegment
SplitSegment	src/legion_runtime/rectangle_set.h	/^    struct SplitSegment {$/;"	s	namespace:LegionRuntime::HighLevel
SrcDataPool	src/legion_runtime/activemsg.cc	/^SrcDataPool::SrcDataPool(void *base, size_t size)$/;"	f	class:SrcDataPool
SrcDataPool	src/legion_runtime/activemsg.cc	/^class SrcDataPool {$/;"	c	file:
State	src/legion_runtime/garbage_collection.h	/^      enum State {$/;"	g	class:LegionRuntime::HighLevel::CollectableState
State	src/legion_runtime/lowlevel.cc	/^	enum State { STATE_INIT, STATE_INIT_WAIT, STATE_START, STATE_IDLE, $/;"	g	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
State	src/legion_runtime/lowlevel_dma.cc	/^      enum State {$/;"	g	class:LegionRuntime::LowLevel::DmaRequest	file:
StateReturner	src/legion_runtime/region_tree.cc	/^    StateReturner::StateReturner(ContextID c, RegionTreeContext remote,$/;"	f	class:LegionRuntime::HighLevel::StateReturner
StateReturner	src/legion_runtime/region_tree.cc	/^    StateReturner::StateReturner(const StateReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
StateReturner	src/legion_runtime/region_tree.h	/^    class StateReturner : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
StateSender	src/legion_runtime/region_tree.cc	/^    StateSender::StateSender(ContextID c, UniqueID id, AddressSpaceID t,$/;"	f	class:LegionRuntime::HighLevel::StateSender
StateSender	src/legion_runtime/region_tree.cc	/^    StateSender::StateSender(const StateSender &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateSender
StateSender	src/legion_runtime/region_tree.h	/^    class StateSender : public NodeTraverser {$/;"	c	namespace:LegionRuntime::HighLevel
StaticAccess	src/legion_runtime/lowlevel_impl.h	/^      StaticAccess(T* thing_with_data, bool already_valid = false)$/;"	f	class:LegionRuntime::LowLevel::StaticAccess
StaticAccess	src/legion_runtime/lowlevel_impl.h	/^    class StaticAccess {$/;"	c	namespace:LegionRuntime::LowLevel
StaticData	src/legion_runtime/lowlevel_impl.h	/^      struct StaticData {$/;"	s	class:LegionRuntime::LowLevel::IndexSpace::Impl
StaticData	src/legion_runtime/lowlevel_impl.h	/^      struct StaticData {$/;"	s	class:LegionRuntime::LowLevel::RegionInstance::Impl
StaticData	src/legion_runtime/lowlevel_impl.h	/^      typedef typename T::StaticData StaticData;$/;"	t	class:LegionRuntime::LowLevel::StaticAccess
StkId	include/lua/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
Stride	src/legion_runtime/accessor.h	/^        Stride(size_t _value) : Const<size_t, STRIDE>(_value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Stride
Stride	src/legion_runtime/accessor.h	/^        Stride(void) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Stride
Stride	src/legion_runtime/accessor.h	/^      template <size_t STRIDE> struct Stride : public Const<size_t, STRIDE> {$/;"	s	namespace:LegionRuntime::Accessor::AccessorType
StructHandler	src/legion_runtime/legion.h	/^      struct StructHandler {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
StructHandler	src/legion_runtime/legion.h	/^      struct StructHandler<T,false> {$/;"	s	class:LegionRuntime::HighLevel::LegionSerialization
StructSpecific	src/legion_runtime/accessor.h	/^	template <typename T, typename PT, bool B> struct StructSpecific {};$/;"	s	struct:LegionRuntime::Accessor::AccessorType::Generic
StructSpecific	src/legion_runtime/accessor.h	/^      struct Generic::StructSpecific<T, PT, true> {$/;"	s	class:LegionRuntime::Accessor::AccessorType::Generic
SystemProcMap	src/legion_runtime/lowlevel_impl.h	/^      typedef std::map<int, NodeProcMap> SystemProcMap;$/;"	t	class:LegionRuntime::LowLevel::ProcessorAssignment
TAB	scripts/kconfig/lxdialog/dialog.h	52;"	d
TAG_BG	scripts/kconfig/lxdialog/colors.h	113;"	d
TAG_FG	scripts/kconfig/lxdialog/colors.h	112;"	d
TAG_HL	scripts/kconfig/lxdialog/colors.h	114;"	d
TAG_KEY_BG	scripts/kconfig/lxdialog/colors.h	121;"	d
TAG_KEY_FG	scripts/kconfig/lxdialog/colors.h	120;"	d
TAG_KEY_HL	scripts/kconfig/lxdialog/colors.h	122;"	d
TAG_KEY_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	125;"	d
TAG_KEY_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	124;"	d
TAG_KEY_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	126;"	d
TAG_SELECTED_BG	scripts/kconfig/lxdialog/colors.h	117;"	d
TAG_SELECTED_FG	scripts/kconfig/lxdialog/colors.h	116;"	d
TAG_SELECTED_HL	scripts/kconfig/lxdialog/colors.h	118;"	d
TARGET_XFER_SIZE	src/legion_runtime/lowlevel_dma.cc	/^      static const size_t TARGET_XFER_SIZE = 4 << 20;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
TASKID_ADD_VECTORS	src/test/saxpy_array.cc	/^  TASKID_ADD_VECTORS,$/;"	e	enum:__anon105	file:
TASKID_ADD_VECTORS_ALL	src/test/saxpy_array.cc	/^  TASKID_ADD_VECTORS_ALL,$/;"	e	enum:__anon105	file:
TASKID_INIT_VECTORS	src/test/saxpy_array.cc	/^  TASKID_INIT_VECTORS,$/;"	e	enum:__anon105	file:
TASKID_INIT_VECTORS_ALL	src/test/saxpy_array.cc	/^  TASKID_INIT_VECTORS_ALL,$/;"	e	enum:__anon105	file:
TASKID_MAIN	src/test/saxpy_array.cc	/^  TASKID_MAIN,$/;"	e	enum:__anon105	file:
TASK_ARGS_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_ARGS_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_BARRIER_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_BARRIER_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_ID	src/test/circuit.h	/^  static const int TASK_ID = CALC_NEW_CURRENTS_TASK_ID;$/;"	m	class:CalcNewCurrentsTask
TASK_ID	src/test/circuit.h	/^  static const int TASK_ID = CHECK_FIELD_TASK_ID;$/;"	m	class:CheckTask
TASK_ID	src/test/circuit.h	/^  static const int TASK_ID = DISTRIBUTE_CHARGE_TASK_ID;$/;"	m	class:DistributeChargeTask
TASK_ID	src/test/circuit.h	/^  static const int TASK_ID = UPDATE_VOLTAGES_TASK_ID;$/;"	m	class:UpdateVoltagesTask
TASK_ID_AVAILABLE	src/legion_runtime/legion_types.h	/^      TASK_ID_AVAILABLE     = (LowLevel::Processor::TASK_ID_FIRST_AVAILABLE+1),$/;"	e	enum:LegionRuntime::HighLevel::__anon92
TASK_ID_FIRST_AVAILABLE	src/legion_runtime/lowlevel.h	/^	TASK_ID_FIRST_AVAILABLE    = 4,$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon89
TASK_ID_PROCESSOR_IDLE	src/legion_runtime/lowlevel.h	/^	TASK_ID_PROCESSOR_IDLE     = 3, \/\/ typically used for high-level scheduler, only called by utility processors$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon89
TASK_ID_PROCESSOR_INIT	src/legion_runtime/lowlevel.h	/^	TASK_ID_PROCESSOR_INIT     = 1, \/\/ only called by utility processors$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon89
TASK_ID_PROCESSOR_SHUTDOWN	src/legion_runtime/lowlevel.h	/^	TASK_ID_PROCESSOR_SHUTDOWN = 2, \/\/ only called by utility processors$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon89
TASK_ID_REQUEST_SHUTDOWN	src/legion_runtime/lowlevel.h	/^	TASK_ID_REQUEST_SHUTDOWN   = 0,$/;"	e	enum:LegionRuntime::LowLevel::Processor::__anon89
TASK_INLINE_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_INLINE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_INLINE_REGION_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_INLINE_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_INSTANCE_REGION_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_INSTANCE_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_LOCAL_FIELD_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_LOCAL_FIELD_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_LOCAL_REGION_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_LOCAL_REGION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_MAPPABLE	src/legion_runtime/legion.h	/^        TASK_MAPPABLE,$/;"	e	enum:LegionRuntime::HighLevel::Mappable::MappableKind
TASK_MESSAGE	src/legion_runtime/runtime.h	/^        TASK_MESSAGE,$/;"	e	enum:LegionRuntime::HighLevel::MessageManager::MessageKind
TASK_NAME	src/test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:CalcNewCurrentsTask
TASK_NAME	src/test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:CheckTask
TASK_NAME	src/test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:DistributeChargeTask
TASK_NAME	src/test/circuit.h	/^  static const char * const TASK_NAME;$/;"	m	class:UpdateVoltagesTask
TASK_NAME	src/test/circuit_cpu.cc	/^\/*static*\/ const char * const CalcNewCurrentsTask::TASK_NAME = "calc_new_currents";$/;"	m	class:CalcNewCurrentsTask	file:
TASK_NAME	src/test/circuit_cpu.cc	/^\/*static*\/ const char * const DistributeChargeTask::TASK_NAME = "distribute_charge";$/;"	m	class:DistributeChargeTask	file:
TASK_NAME	src/test/circuit_cpu.cc	/^const char * const CheckTask::TASK_NAME = "check_task";$/;"	m	class:CheckTask	file:
TASK_NAME	src/test/circuit_cpu.cc	/^const char * const UpdateVoltagesTask::TASK_NAME = "update_voltages";$/;"	m	class:UpdateVoltagesTask	file:
TASK_RESERVATION_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_RESERVATION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TASK_TRACES_ALLOC	src/legion_runtime/legion_allocation.h	/^      TASK_TRACES_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TEST_STEALING	src/test/saxpy_array.cc	31;"	d	file:
TEST_TIME_SEC_RECIP	src/dev/apic.c	1000;"	d	file:
TF_COMMAND	scripts/kconfig/lkc.h	41;"	d
TF_PARAM	scripts/kconfig/lkc.h	42;"	d
THREAD_DEBUG	src/nautilus/thread.c	48;"	d	file:
THREAD_ERROR	src/nautilus/thread.c	47;"	d	file:
THREAD_INFO	src/nautilus/thread.c	46;"	d	file:
THREAD_SETUP_SIZE	src/nautilus/thread.c	256;"	d	file:
THREAD_T	src/test/benchmark.h	41;"	d
THREAD_T	src/test/benchmark.h	8;"	d
THREAD_WARN	src/nautilus/thread.c	49;"	d	file:
THR_CREATE_LOOPS	src/test/benchmark.c	81;"	d	file:
THR_LONG_CREATE_LOOPS	src/test/benchmark.c	82;"	d	file:
TID	src/test/hpcg/hpcg-main.cc	/^enum TID {$/;"	g	namespace:__anon117	file:
TILDE	src/dev/kbd.c	271;"	d	file:
TIMEOUT	src/legion_runtime/region_tree.h	/^      static const int TIMEOUT = DEFAULT_LOGICAL_USER_TIMEOUT;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
TIMER_CALLBACK	include/nautilus/timer.h	38;"	d
TIMER_DISABLED	include/dev/hpet.h	/^typedef enum {TIMER_DISABLED, TIMER_RUNNING} hpet_cmp_stat_t;$/;"	e	enum:__anon75
TIMER_EDGE	include/dev/hpet.h	/^typedef enum {TIMER_EDGE, TIMER_LEVEl} hpet_cmp_int_type_t;$/;"	e	enum:__anon74
TIMER_LEVEl	include/dev/hpet.h	/^typedef enum {TIMER_EDGE, TIMER_LEVEl} hpet_cmp_int_type_t;$/;"	e	enum:__anon74
TIMER_N_CFG_CAP_REG	include/dev/hpet.h	38;"	d
TIMER_N_CMP_VAL_REG	include/dev/hpet.h	39;"	d
TIMER_N_FSB_IR_REG	include/dev/hpet.h	40;"	d
TIMER_RUNNING	include/dev/hpet.h	/^typedef enum {TIMER_DISABLED, TIMER_RUNNING} hpet_cmp_stat_t;$/;"	e	enum:__anon75
TIMER_SIZE_32	include/dev/hpet.h	/^typedef enum {TIMER_SIZE_32, TIMER_SIZE_64} hpet_cmp_size_t;$/;"	e	enum:__anon73
TIMER_SIZE_64	include/dev/hpet.h	/^typedef enum {TIMER_SIZE_32, TIMER_SIZE_64} hpet_cmp_size_t;$/;"	e	enum:__anon73
TIMER_SPIN	include/nautilus/timer.h	37;"	d
TIMER_TYPE_ONESHOT	include/dev/hpet.h	/^typedef enum {TIMER_TYPE_ONESHOT, TIMER_TYPE_PERIODIC} hpet_cmp_type_t;$/;"	e	enum:__anon72
TIMER_TYPE_PERIODIC	include/dev/hpet.h	/^typedef enum {TIMER_TYPE_ONESHOT, TIMER_TYPE_PERIODIC} hpet_cmp_type_t;$/;"	e	enum:__anon72
TIME_AM	src/legion_runtime/utilities.h	/^  TIME_AM,$/;"	e	enum:__anon103
TIME_COPY	src/legion_runtime/utilities.h	/^  TIME_COPY,$/;"	e	enum:__anon103
TIME_HIGH_LEVEL	src/legion_runtime/utilities.h	/^  TIME_HIGH_LEVEL,$/;"	e	enum:__anon103
TIME_HIGH_LEVEL_ALLOCATE_FIELD	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_ALLOCATE_FIELD = 128,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_CHILDREN_MAPPED	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CHILDREN_MAPPED = 108,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_CREATE_FIELD_SPACE	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_FIELD_SPACE = 124,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_CREATE_INDEX_PARTITION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_INDEX_PARTITION = 120,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_CREATE_INDEX_SPACE	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_INDEX_SPACE = 118,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_CREATE_REGION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_CREATE_REGION = 100,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_DESTROY_FIELD_SPACE	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_FIELD_SPACE = 125,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_DESTROY_INDEX_PARTITION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_INDEX_PARTITION = 121,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_DESTROY_INDEX_SPACE	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_INDEX_SPACE = 119,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_DESTROY_PARTITION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_PARTITION = 105,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_DESTROY_REGION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_DESTROY_REGION = 101,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_ENQUEUE_TASKS	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_ENQUEUE_TASKS = 106,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_EXECUTE_TASK	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_EXECUTE_TASK = 113,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_FINISH_TASK	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_FINISH_TASK = 109,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_FREE_FIELD	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_FREE_FIELD = 129,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_GET_INDEX_PARTITION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_INDEX_PARTITION = 122,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_GET_INDEX_SUBSPACE	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_INDEX_SUBSPACE = 123,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_GET_LOGICAL_PARTITION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_LOGICAL_PARTITION = 126,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_GET_LOGICAL_SUBREGION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_LOGICAL_SUBREGION = 127,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_GET_SUBREGION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_GET_SUBREGION = 116,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_INLINE_MAP	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_INLINE_MAP = 117,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_ISSUE_STEAL	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_ISSUE_STEAL = 115,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_NOTIFY_FINISH	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_NOTIFY_FINISH = 112,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_NOTIFY_MAPPED	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_NOTIFY_MAPPED = 111,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_NOTIFY_START	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_NOTIFY_START = 110,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_SCHEDULER	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_SCHEDULER = 114,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_SMASH_REGION	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_SMASH_REGION = 102$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_HIGH_LEVEL_STEAL_REQUEST	src/legion_runtime/legion_types.h	/^      TIME_HIGH_LEVEL_STEAL_REQUEST = 107,$/;"	e	enum:LegionRuntime::HighLevel::__anon93
TIME_KERNEL	src/legion_runtime/utilities.h	/^  TIME_KERNEL,$/;"	e	enum:__anon103
TIME_LOW_LEVEL	src/legion_runtime/utilities.h	/^  TIME_LOW_LEVEL,$/;"	e	enum:__anon103
TIME_MAPPER	src/legion_runtime/utilities.h	/^  TIME_MAPPER,$/;"	e	enum:__anon103
TIME_NONE	src/legion_runtime/utilities.h	/^  TIME_NONE,$/;"	e	enum:__anon103
TIME_SYSTEM	src/legion_runtime/utilities.h	/^  TIME_SYSTEM,$/;"	e	enum:__anon103
TITLE_BG	scripts/kconfig/lxdialog/colors.h	41;"	d
TITLE_FG	scripts/kconfig/lxdialog/colors.h	40;"	d
TITLE_HL	scripts/kconfig/lxdialog/colors.h	42;"	d
TK_AND	include/lua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	include/lua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DBCOLON	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DO	include/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_ELSE	include/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	include/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	include/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_EQ	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_FALSE	include/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FOR	include/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	include/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_GOTO	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IF	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_LE	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_LOCAL	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	include/lua/llex.h	/^  TK_NUMBER, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_NE	include/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_NIL	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NUMBER	include/lua/llex.h	/^  TK_NUMBER, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_OR	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	include/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	include/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_STRING	include/lua/llex.h	/^  TK_NUMBER, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_THEN	include/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	include/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	include/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	include/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	include/lua/lobject.h	/^typedef union TKey {$/;"	u
TKey	include/lua/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TLBitMask	src/legion_runtime/legion_utilities.h	/^    TLBitMask<T,MAX,SHIFT,MASK>::TLBitMask(T init \/*= 0*\/)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
TLBitMask	src/legion_runtime/legion_utilities.h	/^    TLBitMask<T,MAX,SHIFT,MASK>::TLBitMask(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
TLBitMask	src/legion_runtime/legion_utilities.h	/^    class TLBitMask {$/;"	c	namespace:LegionRuntime::HighLevel
TLS_KEY_AVAIL	include/nautilus/thread.h	112;"	d
TLS_KEY_USABLE	include/nautilus/thread.h	113;"	d
TLS_MAX_KEYS	include/nautilus/thread.h	110;"	d
TMS	include/lua/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon19
TM_ADD	include/lua/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon19
TM_CALL	include/lua/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon19
TM_CONCAT	include/lua/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon19
TM_DIV	include/lua/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon19
TM_EQ	include/lua/ltm.h	/^  TM_EQ,  \/* last tag method with `fast' access *\/$/;"	e	enum:__anon19
TM_GC	include/lua/ltm.h	/^  TM_GC,$/;"	e	enum:__anon19
TM_INDEX	include/lua/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon19
TM_LE	include/lua/ltm.h	/^  TM_LE,$/;"	e	enum:__anon19
TM_LEN	include/lua/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon19
TM_LT	include/lua/ltm.h	/^  TM_LT,$/;"	e	enum:__anon19
TM_MOD	include/lua/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon19
TM_MODE	include/lua/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon19
TM_MUL	include/lua/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon19
TM_N	include/lua/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon19
TM_NEWINDEX	include/lua/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon19
TM_POW	include/lua/ltm.h	/^  TM_POW,$/;"	e	enum:__anon19
TM_SUB	include/lua/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon19
TM_UNM	include/lua/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon19
TN_ENABLE	include/dev/hpet.h	66;"	d
TN_GET_32MODE_CNF	include/dev/hpet.h	58;"	d
TN_GET_FSB_EN_CNF	include/dev/hpet.h	56;"	d
TN_GET_FSB_INT_DEL_CAP	include/dev/hpet.h	55;"	d
TN_GET_INT_ENB_CNF	include/dev/hpet.h	63;"	d
TN_GET_INT_ROUTE_CAP	include/dev/hpet.h	54;"	d
TN_GET_INT_ROUTE_CNF	include/dev/hpet.h	57;"	d
TN_GET_INT_TYPE_CNF	include/dev/hpet.h	64;"	d
TN_GET_PER_INT_CAP	include/dev/hpet.h	61;"	d
TN_GET_SIZE_CAP	include/dev/hpet.h	60;"	d
TN_GET_TYPE_CNF	include/dev/hpet.h	62;"	d
TN_GET_VAL_SET_CNF	include/dev/hpet.h	59;"	d
TN_PERIODIC	include/dev/hpet.h	67;"	d
TN_VAL_SET	include/dev/hpet.h	68;"	d
TOC_PROC	src/legion_runtime/lowlevel.h	/^	TOC_PROC, \/\/ Throughput core$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
TOLOWER	src/nautilus/printk.c	167;"	d	file:
TOPDIR	Makefile	/^TOPDIR		:= $(srctree)$/;"	m
TOP_LEVEL_TASK_ID	src/test/circuit.h	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:__anon120
TOP_LEVEL_TASK_ID	src/test/custom_mapper.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/global_vars.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/index_tasks.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/logical_regions.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/multiple_partitions.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/partitioning.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/physical_regions.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/privileges.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TOP_LEVEL_TASK_ID	src/test/saxpy_array.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:__anon105	file:
TOP_LEVEL_TASK_ID	src/test/tasks_and_futures.cc	/^  TOP_LEVEL_TASK_ID,$/;"	e	enum:TaskIDs	file:
TR	scripts/kconfig/lxdialog/dialog.h	49;"	d
TRACE_ALLOC	src/legion_runtime/legion_allocation.h	/^      TRACE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRACE_ALLOCATION_FREQUENCY	src/legion_runtime/legion_types.h	125;"	d
TRACE_CAPTURE_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      TRACE_CAPTURE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRACE_COMPLETE_OP_ALLOC	src/legion_runtime/legion_allocation.h	/^      TRACE_COMPLETE_OP_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRACK_MESSAGES	src/legion_runtime/activemsg.cc	1321;"	d	file:
TREE_CLOSE_ALLOC	src/legion_runtime/legion_allocation.h	/^      TREE_CLOSE_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TREE_CLOSE_IMPL_ALLOC	src/legion_runtime/legion_allocation.h	/^      TREE_CLOSE_IMPL_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
TRIALS	src/test/benchmark.c	807;"	d	file:
TRIGGER_MODE_EDGE	include/dev/ioapic.h	94;"	d
TRIGGER_MODE_LEVEL	include/dev/ioapic.h	95;"	d
TRIG_MODE_SHIFT	include/dev/ioapic.h	75;"	d
TRUE	include/acpi/actypes.h	360;"	d
TRUE	include/acpi/actypes.h	362;"	d
TRUE	include/nautilus/naut_types.h	72;"	d
TRUE_DEPENDENCE	src/legion_runtime/legion_types.h	/^      TRUE_DEPENDENCE = 1,$/;"	e	enum:LegionRuntime::HighLevel::DependenceType
TRUE_PRED	src/legion_runtime/legion.cc	/^    const Predicate Predicate::TRUE_PRED = Predicate(true);$/;"	m	class:LegionRuntime::HighLevel::Predicate	file:
TRUE_PRED	src/legion_runtime/legion.h	/^      static const Predicate TRUE_PRED;$/;"	m	class:LegionRuntime::HighLevel::Predicate
TSTACK_1MB	include/nautilus/thread.h	42;"	d
TSTACK_2MB	include/nautilus/thread.h	43;"	d
TSTACK_4KB	include/nautilus/thread.h	41;"	d
TSTACK_DEFAULT	include/nautilus/thread.h	40;"	d
TS_EXCP	include/nautilus/idt.h	45;"	d
TString	include/lua/lobject.h	/^typedef union TString {$/;"	u
TString	include/lua/lobject.h	/^} TString;$/;"	t	typeref:union:TString
TValue	include/lua/lobject.h	/^typedef struct lua_TValue TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	include/lua/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon9
TValuefields	include/lua/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue
TValuefields	include/lua/lobject.h	104;"	d
TValuefields	include/lua/lobject.h	295;"	d
TValuefields	include/lua/lobject.h	301;"	d
TValuefields	include/lua/lobject.h	312;"	d
TWO	src/dev/kbd.c	270;"	d	file:
TYPE_BITS	src/legion_runtime/lowlevel_impl.h	/^	TYPE_BITS = 4,$/;"	e	enum:LegionRuntime::LowLevel::ID::__anon101
TYPE_CHAR_DRAWN	src/arch/k1om/xeon_phi.c	/^    TYPE_CHAR_DRAWN,$/;"	e	enum:__anon129	file:
TYPE_CHAR_DRAWN	xeon_phi/linux_usr/phi_console.c	/^    TYPE_CHAR_DRAWN,$/;"	e	enum:__anon78	file:
TYPE_CONSOLE_SHUTDOWN	src/arch/k1om/xeon_phi.c	/^    TYPE_CONSOLE_SHUTDOWN,$/;"	e	enum:__anon129	file:
TYPE_CONSOLE_SHUTDOWN	xeon_phi/linux_usr/phi_console.c	/^    TYPE_CONSOLE_SHUTDOWN,$/;"	e	enum:__anon78	file:
TYPE_CURSOR_UPDATE	src/arch/k1om/xeon_phi.c	/^    TYPE_CURSOR_UPDATE,$/;"	e	enum:__anon129	file:
TYPE_CURSOR_UPDATE	xeon_phi/linux_usr/phi_console.c	/^    TYPE_CURSOR_UPDATE,$/;"	e	enum:__anon78	file:
TYPE_INVAL	src/arch/k1om/xeon_phi.c	/^    TYPE_INVAL$/;"	e	enum:__anon129	file:
TYPE_INVAL	xeon_phi/linux_usr/phi_console.c	/^    TYPE_INVAL$/;"	e	enum:__anon78	file:
TYPE_LINE_DRAWN	src/arch/k1om/xeon_phi.c	/^    TYPE_LINE_DRAWN,$/;"	e	enum:__anon129	file:
TYPE_LINE_DRAWN	xeon_phi/linux_usr/phi_console.c	/^    TYPE_LINE_DRAWN,$/;"	e	enum:__anon78	file:
TYPE_NO_UPDATE	src/arch/k1om/xeon_phi.c	/^    TYPE_NO_UPDATE = 0,$/;"	e	enum:__anon129	file:
TYPE_NO_UPDATE	xeon_phi/linux_usr/phi_console.c	/^    TYPE_NO_UPDATE = 0,$/;"	e	enum:__anon78	file:
TYPE_SCREEN_REDRAW	src/arch/k1om/xeon_phi.c	/^    TYPE_SCREEN_REDRAW,$/;"	e	enum:__anon129	file:
TYPE_SCREEN_REDRAW	xeon_phi/linux_usr/phi_console.c	/^    TYPE_SCREEN_REDRAW,$/;"	e	enum:__anon78	file:
TYPE_SCROLLUP	src/arch/k1om/xeon_phi.c	/^    TYPE_SCROLLUP,$/;"	e	enum:__anon129	file:
TYPE_SCROLLUP	xeon_phi/linux_usr/phi_console.c	/^    TYPE_SCROLLUP,$/;"	e	enum:__anon78	file:
T_AND	scripts/kconfig/zconf.tab.c	/^     T_AND = 287,$/;"	e	enum:yytokentype	file:
T_AND	scripts/kconfig/zconf.tab.c	141;"	d	file:
T_CHOICE	scripts/kconfig/zconf.tab.c	/^     T_CHOICE = 262,$/;"	e	enum:yytokentype	file:
T_CHOICE	scripts/kconfig/zconf.tab.c	116;"	d	file:
T_CLOSE_PAREN	scripts/kconfig/zconf.tab.c	/^     T_CLOSE_PAREN = 283,$/;"	e	enum:yytokentype	file:
T_CLOSE_PAREN	scripts/kconfig/zconf.tab.c	137;"	d	file:
T_COMMENT	scripts/kconfig/zconf.tab.c	/^     T_COMMENT = 264,$/;"	e	enum:yytokentype	file:
T_COMMENT	scripts/kconfig/zconf.tab.c	118;"	d	file:
T_CONFIG	scripts/kconfig/zconf.tab.c	/^     T_CONFIG = 265,$/;"	e	enum:yytokentype	file:
T_CONFIG	scripts/kconfig/zconf.tab.c	119;"	d	file:
T_DEFAULT	scripts/kconfig/zconf.tab.c	/^     T_DEFAULT = 276,$/;"	e	enum:yytokentype	file:
T_DEFAULT	scripts/kconfig/zconf.tab.c	130;"	d	file:
T_DEPENDS	scripts/kconfig/zconf.tab.c	/^     T_DEPENDS = 271,$/;"	e	enum:yytokentype	file:
T_DEPENDS	scripts/kconfig/zconf.tab.c	125;"	d	file:
T_ENDCHOICE	scripts/kconfig/zconf.tab.c	/^     T_ENDCHOICE = 263,$/;"	e	enum:yytokentype	file:
T_ENDCHOICE	scripts/kconfig/zconf.tab.c	117;"	d	file:
T_ENDIF	scripts/kconfig/zconf.tab.c	/^     T_ENDIF = 270,$/;"	e	enum:yytokentype	file:
T_ENDIF	scripts/kconfig/zconf.tab.c	124;"	d	file:
T_ENDMENU	scripts/kconfig/zconf.tab.c	/^     T_ENDMENU = 260,$/;"	e	enum:yytokentype	file:
T_ENDMENU	scripts/kconfig/zconf.tab.c	114;"	d	file:
T_EOL	scripts/kconfig/zconf.tab.c	/^     T_EOL = 285,$/;"	e	enum:yytokentype	file:
T_EOL	scripts/kconfig/zconf.tab.c	139;"	d	file:
T_EQUAL	scripts/kconfig/zconf.tab.c	/^     T_EQUAL = 288,$/;"	e	enum:yytokentype	file:
T_EQUAL	scripts/kconfig/zconf.tab.c	142;"	d	file:
T_HELP	scripts/kconfig/zconf.tab.c	/^     T_HELP = 267,$/;"	e	enum:yytokentype	file:
T_HELP	scripts/kconfig/zconf.tab.c	121;"	d	file:
T_HELPTEXT	scripts/kconfig/zconf.tab.c	/^     T_HELPTEXT = 268,$/;"	e	enum:yytokentype	file:
T_HELPTEXT	scripts/kconfig/zconf.tab.c	122;"	d	file:
T_IF	scripts/kconfig/zconf.tab.c	/^     T_IF = 269,$/;"	e	enum:yytokentype	file:
T_IF	scripts/kconfig/zconf.tab.c	123;"	d	file:
T_MAINMENU	scripts/kconfig/zconf.tab.c	/^     T_MAINMENU = 258,$/;"	e	enum:yytokentype	file:
T_MAINMENU	scripts/kconfig/zconf.tab.c	112;"	d	file:
T_MENU	scripts/kconfig/zconf.tab.c	/^     T_MENU = 259,$/;"	e	enum:yytokentype	file:
T_MENU	scripts/kconfig/zconf.tab.c	113;"	d	file:
T_MENUCONFIG	scripts/kconfig/zconf.tab.c	/^     T_MENUCONFIG = 266,$/;"	e	enum:yytokentype	file:
T_MENUCONFIG	scripts/kconfig/zconf.tab.c	120;"	d	file:
T_NOT	scripts/kconfig/zconf.tab.c	/^     T_NOT = 289$/;"	e	enum:yytokentype	file:
T_NOT	scripts/kconfig/zconf.tab.c	143;"	d	file:
T_ON	scripts/kconfig/zconf.tab.c	/^     T_ON = 279,$/;"	e	enum:yytokentype	file:
T_ON	scripts/kconfig/zconf.tab.c	133;"	d	file:
T_OPEN_PAREN	scripts/kconfig/zconf.tab.c	/^     T_OPEN_PAREN = 284,$/;"	e	enum:yytokentype	file:
T_OPEN_PAREN	scripts/kconfig/zconf.tab.c	138;"	d	file:
T_OPTIONAL	scripts/kconfig/zconf.tab.c	/^     T_OPTIONAL = 273,$/;"	e	enum:yytokentype	file:
T_OPTIONAL	scripts/kconfig/zconf.tab.c	127;"	d	file:
T_OR	scripts/kconfig/zconf.tab.c	/^     T_OR = 286,$/;"	e	enum:yytokentype	file:
T_OR	scripts/kconfig/zconf.tab.c	140;"	d	file:
T_PROMPT	scripts/kconfig/zconf.tab.c	/^     T_PROMPT = 274,$/;"	e	enum:yytokentype	file:
T_PROMPT	scripts/kconfig/zconf.tab.c	128;"	d	file:
T_RANGE	scripts/kconfig/zconf.tab.c	/^     T_RANGE = 278,$/;"	e	enum:yytokentype	file:
T_RANGE	scripts/kconfig/zconf.tab.c	132;"	d	file:
T_REQUIRES	scripts/kconfig/zconf.tab.c	/^     T_REQUIRES = 272,$/;"	e	enum:yytokentype	file:
T_REQUIRES	scripts/kconfig/zconf.tab.c	126;"	d	file:
T_SELECT	scripts/kconfig/zconf.tab.c	/^     T_SELECT = 277,$/;"	e	enum:yytokentype	file:
T_SELECT	scripts/kconfig/zconf.tab.c	131;"	d	file:
T_SOURCE	scripts/kconfig/zconf.tab.c	/^     T_SOURCE = 261,$/;"	e	enum:yytokentype	file:
T_SOURCE	scripts/kconfig/zconf.tab.c	115;"	d	file:
T_TYPE	scripts/kconfig/zconf.tab.c	/^     T_TYPE = 275,$/;"	e	enum:yytokentype	file:
T_TYPE	scripts/kconfig/zconf.tab.c	129;"	d	file:
T_UNEQUAL	scripts/kconfig/zconf.tab.c	/^     T_UNEQUAL = 282,$/;"	e	enum:yytokentype	file:
T_UNEQUAL	scripts/kconfig/zconf.tab.c	136;"	d	file:
T_WORD	scripts/kconfig/zconf.tab.c	/^     T_WORD = 280,$/;"	e	enum:yytokentype	file:
T_WORD	scripts/kconfig/zconf.tab.c	134;"	d	file:
T_WORD_QUOTE	scripts/kconfig/zconf.tab.c	/^     T_WORD_QUOTE = 281,$/;"	e	enum:yytokentype	file:
T_WORD_QUOTE	scripts/kconfig/zconf.tab.c	135;"	d	file:
Table	include/lua/lobject.h	/^typedef struct Table {$/;"	s
Table	include/lua/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
Task	src/legion_runtime/legion.cc	/^    Task::Task(void)$/;"	f	class:LegionRuntime::HighLevel::Task
Task	src/legion_runtime/legion.h	/^    class Task : public Mappable {$/;"	c	namespace:LegionRuntime::HighLevel
Task	src/legion_runtime/lowlevel.cc	/^      Task(FuncPtr _func, const void *_args, size_t _arglen,$/;"	f	class:LegionRuntime::LowLevel::Task
Task	src/legion_runtime/lowlevel.cc	/^    Task::Task(Processor _proc, Processor::TaskFuncID _func_id,$/;"	f	class:LegionRuntime::LowLevel::Task
Task	src/legion_runtime/lowlevel.cc	/^    class Task {$/;"	c	namespace:LegionRuntime::LowLevel	file:
Task	src/legion_runtime/lowlevel_impl.h	/^    class Task {$/;"	c	namespace:LegionRuntime::LowLevel
TaskArgument	src/legion_runtime/legion.h	/^      TaskArgument(const TaskArgument &rhs)$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
TaskArgument	src/legion_runtime/legion.h	/^      TaskArgument(const void *arg, size_t argsize)$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
TaskArgument	src/legion_runtime/legion.h	/^      TaskArgument(void) : args(NULL), arglen(0) { }$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
TaskArgument	src/legion_runtime/legion.h	/^    class TaskArgument {$/;"	c	namespace:LegionRuntime::HighLevel
TaskConfigOptions	src/legion_runtime/legion.cc	/^    TaskConfigOptions::TaskConfigOptions(bool l \/*=false*\/,$/;"	f	class:LegionRuntime::HighLevel::TaskConfigOptions
TaskConfigOptions	src/legion_runtime/legion.h	/^    struct TaskConfigOptions {$/;"	s	namespace:LegionRuntime::HighLevel
TaskDesc	src/legion_runtime/shared_lowlevel.cc	/^	class TaskDesc {$/;"	c	class:LegionRuntime::LowLevel::ProcessorImpl	file:
TaskDesc	src/legion_runtime/shared_lowlevel.cc	/^          TaskDesc(Processor::TaskFuncID id, const void *_args, size_t _arglen,$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc
TaskFuncID	src/legion_runtime/lowlevel.h	/^      typedef unsigned TaskFuncID;$/;"	t	class:LegionRuntime::LowLevel::Processor
TaskFuncPtr	src/legion_runtime/lowlevel.h	/^      typedef void (*TaskFuncPtr)(const void *args, size_t arglen, Processor proc);$/;"	t	class:LegionRuntime::LowLevel::Processor
TaskHelper	src/test/circuit.cc	/^namespace TaskHelper {$/;"	n	file:
TaskHelper	src/test/circuit.h	/^namespace TaskHelper {$/;"	n
TaskID	src/legion_runtime/legion_types.h	/^    typedef Processor::TaskFuncID TaskID;$/;"	t	namespace:LegionRuntime::HighLevel
TaskID	src/test/hello_world.cc	/^enum TaskID {$/;"	g	file:
TaskIDTable	src/legion_runtime/lowlevel.h	/^      typedef std::map<TaskFuncID, TaskFuncPtr> TaskIDTable;$/;"	t	class:LegionRuntime::LowLevel::Processor
TaskIDs	src/test/custom_mapper.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/global_vars.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/index_tasks.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/logical_regions.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/multiple_partitions.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/partitioning.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/physical_regions.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/privileges.cc	/^enum TaskIDs {$/;"	g	file:
TaskIDs	src/test/tasks_and_futures.cc	/^enum TaskIDs {$/;"	g	file:
TaskInstance	src/legion_runtime/legion_profiling.h	/^        TaskInstance(unsigned tid, UniqueID uid, const DomainPoint &p)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
TaskInstance	src/legion_runtime/legion_profiling.h	/^        TaskInstance(void) { }$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
TaskInstance	src/legion_runtime/legion_profiling.h	/^      struct TaskInstance {$/;"	s	namespace:LegionRuntime::HighLevel::LegionProf
TaskKind	src/legion_runtime/legion_tasks.h	/^      enum TaskKind {$/;"	g	class:LegionRuntime::HighLevel::TaskOp
TaskLauncher	src/legion_runtime/legion.cc	/^    TaskLauncher::TaskLauncher(Processor::TaskFuncID tid, TaskArgument arg,$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
TaskLauncher	src/legion_runtime/legion.cc	/^    TaskLauncher::TaskLauncher(void)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
TaskLauncher	src/legion_runtime/legion.h	/^    struct TaskLauncher {$/;"	s	namespace:LegionRuntime::HighLevel
TaskMap	src/legion_runtime/mapping_utilities.h	/^        typedef std::map<Processor::TaskFuncID,VariantMap> TaskMap;$/;"	t	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
TaskOp	src/legion_runtime/legion_tasks.cc	/^    TaskOp::TaskOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
TaskOp	src/legion_runtime/legion_tasks.h	/^    class TaskOp : public Task, public SpeculativeOp {$/;"	c	namespace:LegionRuntime::HighLevel
TaskPriority	src/legion_runtime/legion_types.h	/^    typedef int TaskPriority;$/;"	t	namespace:LegionRuntime::HighLevel
TaskVariantCollection	src/legion_runtime/legion.h	/^      TaskVariantCollection(Processor::TaskFuncID uid, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
TaskVariantCollection	src/legion_runtime/legion.h	/^    class TaskVariantCollection {$/;"	c	namespace:LegionRuntime::HighLevel
TemplateFu	src/legion_runtime/accessor.h	/^    namespace TemplateFu {$/;"	n	namespace:LegionRuntime::Accessor
Thread	src/legion_runtime/lowlevel.cc	/^	Thread(LocalProcessor *_proc) $/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
Thread	src/legion_runtime/lowlevel.cc	/^      class Thread : public PreemptableThread {$/;"	c	class:LegionRuntime::LowLevel::LocalProcessor	file:
ThreadImpl	src/legion_runtime/lowlevel.cc	/^      ThreadImpl(void)$/;"	f	class:LegionRuntime::LowLevel::ThreadImpl
ThreadImpl	src/legion_runtime/lowlevel.cc	/^    class ThreadImpl {$/;"	c	namespace:LegionRuntime::LowLevel	file:
TimeStamp	src/legion_runtime/utilities.h	/^    TimeStamp(const char *message, bool difference)$/;"	f	class:LegionRuntime::TimeStamp
TimeStamp	src/legion_runtime/utilities.h	/^  class TimeStamp {$/;"	c	namespace:LegionRuntime
TimerStackEntry	src/legion_runtime/lowlevel.cc	/^    struct TimerStackEntry {$/;"	s	namespace:LegionRuntime::LowLevel	file:
TimerStackEntry	src/legion_runtime/shared_lowlevel.cc	/^    struct TimerStackEntry {$/;"	s	namespace:LegionRuntime::LowLevel	file:
TimingKind	src/legion_runtime/legion_logging.h	/^  enum TimingKind {$/;"	g	namespace:LegionRuntime
Token	include/lua/llex.h	/^typedef struct Token {$/;"	s
Token	include/lua/llex.h	/^} Token;$/;"	t	typeref:struct:Token
TraceBlock	src/legion_runtime/utilities.h	/^	TraceBlock(size_t block_size, double exp_arrv_rate)$/;"	f	class:LegionRuntime::LowLevel::Tracer::TraceBlock
TraceBlock	src/legion_runtime/utilities.h	/^        explicit TraceBlock(const TraceBlock &refblk)$/;"	f	class:LegionRuntime::LowLevel::Tracer::TraceBlock
TraceBlock	src/legion_runtime/utilities.h	/^      class TraceBlock {$/;"	c	class:LegionRuntime::LowLevel::Tracer
TraceCaptureOp	src/legion_runtime/legion_trace.cc	/^    TraceCaptureOp::TraceCaptureOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
TraceCaptureOp	src/legion_runtime/legion_trace.cc	/^    TraceCaptureOp::TraceCaptureOp(const TraceCaptureOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
TraceCaptureOp	src/legion_runtime/legion_trace.h	/^    class TraceCaptureOp : public Operation {$/;"	c	namespace:LegionRuntime::HighLevel
TraceCompleteOp	src/legion_runtime/legion_trace.cc	/^    TraceCompleteOp::TraceCompleteOp(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
TraceCompleteOp	src/legion_runtime/legion_trace.cc	/^    TraceCompleteOp::TraceCompleteOp(const TraceCompleteOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
TraceCompleteOp	src/legion_runtime/legion_trace.h	/^    class TraceCompleteOp : public FenceOp {$/;"	c	namespace:LegionRuntime::HighLevel
TraceID	src/legion_runtime/legion_types.h	/^    typedef unsigned int TraceID;$/;"	t	namespace:LegionRuntime::HighLevel
TraceKind	src/legion_runtime/region_tree.h	/^    enum TraceKind {$/;"	g	namespace:LegionRuntime::HighLevel
Tracer	src/legion_runtime/utilities.h	/^    class Tracer {$/;"	c	namespace:LegionRuntime::LowLevel
Translation	src/legion_runtime/arrays.h	/^      Translation(const Point<DIM> _offset) : offset(_offset) {}$/;"	f	class:LegionRuntime::Arrays::Translation
Translation	src/legion_runtime/arrays.h	/^      Translation(void) : offset(0) {}$/;"	f	class:LegionRuntime::Arrays::Translation
Translation	src/legion_runtime/arrays.h	/^    class Translation {$/;"	c	namespace:LegionRuntime::Arrays
TreeClose	src/legion_runtime/region_tree.cc	/^    TreeClose::TreeClose(TreeCloseImpl *op)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
TreeClose	src/legion_runtime/region_tree.cc	/^    TreeClose::TreeClose(const TreeClose &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
TreeClose	src/legion_runtime/region_tree.cc	/^    TreeClose::TreeClose(void)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
TreeClose	src/legion_runtime/region_tree.h	/^    class TreeClose {$/;"	c	namespace:LegionRuntime::HighLevel
TreeCloseImpl	src/legion_runtime/region_tree.cc	/^    TreeCloseImpl::TreeCloseImpl(const TreeCloseImpl &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
TreeCloseImpl	src/legion_runtime/region_tree.cc	/^    TreeCloseImpl::TreeCloseImpl(int c, const FieldMask &m, bool o)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
TreeCloseImpl	src/legion_runtime/region_tree.h	/^    class TreeCloseImpl : public Collectable {$/;"	c	namespace:LegionRuntime::HighLevel
TreeStateLogger	src/legion_runtime/legion_logging.cc	/^    TreeStateLogger::TreeStateLogger(Processor local_proc)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
TreeStateLogger	src/legion_runtime/legion_spy.cc	/^    TreeStateLogger::TreeStateLogger(AddressSpaceID sid, bool verb,$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
TreeStateLogger	src/legion_runtime/legion_spy.cc	/^    TreeStateLogger::TreeStateLogger(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
TreeStateLogger	src/legion_runtime/legion_spy.h	/^    class TreeStateLogger {$/;"	c	namespace:LegionRuntime::HighLevel
TriggerHandle	src/legion_runtime/shared_lowlevel.cc	/^        typedef unsigned TriggerHandle;$/;"	t	class:LegionRuntime::LowLevel::Triggerable	file:
TriggerOpArgs	src/legion_runtime/runtime.h	/^      struct TriggerOpArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
TriggerTaskArgs	src/legion_runtime/runtime.h	/^      struct TriggerTaskArgs {$/;"	s	class:LegionRuntime::HighLevel::ProcessorManager
Triggerable	src/legion_runtime/shared_lowlevel.cc	/^    class Triggerable {$/;"	c	namespace:LegionRuntime::LowLevel	file:
TriggerableInfo	src/legion_runtime/shared_lowlevel.cc	/^            TriggerableInfo(Triggerable *t, TriggerHandle h,$/;"	f	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo
TriggerableInfo	src/legion_runtime/shared_lowlevel.cc	/^        struct TriggerableInfo {$/;"	s	class:LegionRuntime::LowLevel::EventImpl	file:
TunableID	src/legion_runtime/legion_types.h	/^    typedef unsigned int TunableID;$/;"	t	namespace:LegionRuntime::HighLevel
TwoDPayload	src/legion_runtime/activemsg.cc	/^TwoDPayload::TwoDPayload(const void *_srcptr, size_t _line_size,$/;"	f	class:TwoDPayload
TwoDPayload	src/legion_runtime/activemsg.cc	/^class TwoDPayload : public PayloadSource {$/;"	c	file:
TypeHandle	src/legion_runtime/legion_types.h	/^    typedef unsigned int TypeHandle;$/;"	t	namespace:LegionRuntime::HighLevel
Typed	src/legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed() : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(const Typed& other): Untyped(other.base, other.Stride<STRIDE>::value) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void *_base) : Untyped(_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void *_base, ptr_t *_next_entry) : Untyped(_base, _next_entry) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void *_base, size_t _stride) : Untyped(_base, _stride) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void *_base, size_t _stride) : Untyped(_base, _stride) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void *_base, size_t _stride, size_t _block_size, size_t _block_stride)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void *_internal, off_t _field_offset = 0) : Untyped(_internal, _field_offset) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void) : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
Typed	src/legion_runtime/accessor.h	/^	  Typed(void) : Untyped() {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
Typed	src/legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::AOS
Typed	src/legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::HybridSOA
Typed	src/legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionFold
Typed	src/legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionList
Typed	src/legion_runtime/accessor.h	/^	struct Typed : protected Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::SOA
Typed	src/legion_runtime/accessor.h	/^	struct Typed : public Untyped, public StructSpecific<T, PT, TemplateFu::IsAStruct<T>::value> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::Generic
UARROW_BG	scripts/kconfig/lxdialog/colors.h	137;"	d
UARROW_FG	scripts/kconfig/lxdialog/colors.h	136;"	d
UARROW_HL	scripts/kconfig/lxdialog/colors.h	138;"	d
UCHAR_MAX	include/nautilus/libccompat.h	66;"	d
UD_EXCP	include/nautilus/idt.h	41;"	d
UINT16	include/acpi/actypes.h	/^typedef unsigned short UINT16;$/;"	t
UINT16_MAX	scripts/kconfig/lex.zconf.c	73;"	d	file:
UINT32	include/acpi/actypes.h	/^typedef unsigned int UINT32;$/;"	t
UINT32_MAX	scripts/kconfig/lex.zconf.c	76;"	d	file:
UINT64	include/acpi/actypes.h	/^typedef COMPILER_DEPENDENT_UINT64 UINT64;$/;"	t
UINT8	include/acpi/actypes.h	/^typedef unsigned char UINT8;$/;"	t
UINT8_MAX	scripts/kconfig/lex.zconf.c	70;"	d	file:
UINT_MAX	include/nautilus/limits.h	43;"	d
ULLONG_MAX	include/nautilus/limits.h	61;"	d
ULONG_MAX	include/nautilus/limits.h	52;"	d
UNARY_PRIORITY	src/lua_src/lparser.c	1034;"	d	file:
UNCOND	include/dev/apic.h	/^typedef enum {UNCOND, IF_EARLIER, IF_LATER} nk_timer_condition_t;$/;"	e	enum:__anon71
UNDEF_FUN_ERR	include/nautilus/libccompat.h	33;"	d
UNDEF_FUN_ERR	include/nautilus/libccompat.h	35;"	d
UNIMPLEMENTED_METHOD	src/legion_runtime/legion.h	24;"	d
UNLOCK	src/test/benchmark.h	17;"	d
UNLOCK	src/test/benchmark.h	50;"	d
UNUSED	include/lua/llimits.h	89;"	d
UPCALL_MAGIC_ADDRESS	include/arch/hrt/hrt.h	36;"	d
UPCALL_MAGIC_ERROR	include/arch/hrt/hrt.h	37;"	d
UPDATE_CLOSE_CALL	src/legion_runtime/region_tree.h	/^      UPDATE_CLOSE_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_REDUCTION_VIEWS_CALL	src/legion_runtime/region_tree.h	/^      UPDATE_REDUCTION_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_VALID_VIEWS_CALL	src/legion_runtime/region_tree.h	/^      UPDATE_VALID_VIEWS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_VERSIONS_CALL	src/legion_runtime/region_tree.h	/^      UPDATE_VERSIONS_CALL,$/;"	e	enum:LegionRuntime::HighLevel::CallKind
UPDATE_VOLTAGES_TASK_ID	src/test/circuit.h	/^  UPDATE_VOLTAGES_TASK_ID,$/;"	e	enum:__anon120
US	src/nautilus/scheduler.c	415;"	d	file:
USE_BATCHED_GASNET_XFERS	src/legion_runtime/lowlevel_dma.cc	2617;"	d	file:
USHRT_MAX	include/nautilus/limits.h	27;"	d
UTIL_ONE	src/nautilus/scheduler.c	79;"	d	file:
UTIL_PROC	src/legion_runtime/lowlevel.h	/^	UTIL_PROC, \/\/ Utility core$/;"	e	enum:LegionRuntime::LowLevel::Processor::Kind
UTS_MACHINE	Makefile	/^UTS_MACHINE := $(ARCH)$/;"	m
Udata	include/lua/lobject.h	/^typedef union Udata {$/;"	u
Udata	include/lua/lobject.h	/^} Udata;$/;"	t	typeref:union:Udata
UnOpr	include/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	include/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UniqueID	src/legion_runtime/legion_types.h	/^    typedef unsigned long long UniqueID;$/;"	t	namespace:LegionRuntime::HighLevel
Untyped	src/legion_runtime/accessor.h	/^	  Untyped() : Stride<STRIDE>(), base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped() : Stride<STRIDE>(0), BlockSize<BLOCK_SIZE>(0), BlockStride<BLOCK_STRIDE>(0), base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped() : Stride<STRIDE>(STRIDE), base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped() : base(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped() : internal(0), field_offset(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped(void *_base) : base((char *)_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped(void *_base, size_t _stride) : Stride<STRIDE>(_stride), base((char *)_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped(void *_base, size_t _stride) : Stride<STRIDE>(_stride), base((char *)_base) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
Untyped	src/legion_runtime/accessor.h	/^	  Untyped(void *_internal, off_t _field_offset = 0) : internal(_internal), field_offset(_field_offset) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
Untyped	src/legion_runtime/accessor.h	/^	Untyped() : base(0), next_entry(0) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
Untyped	src/legion_runtime/accessor.h	/^	Untyped(void *_base, ptr_t *_next_entry) : base((char *)_base), next_entry(_next_entry) {}$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
Untyped	src/legion_runtime/accessor.h	/^	struct Untyped : public Stride<STRIDE> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::AOS
Untyped	src/legion_runtime/accessor.h	/^	struct Untyped : public Stride<STRIDE> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::SOA
Untyped	src/legion_runtime/accessor.h	/^	struct Untyped : public Stride<STRIDE>, public BlockSize<BLOCK_SIZE>, public BlockStride<BLOCK_STRIDE> {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::HybridSOA
Untyped	src/legion_runtime/accessor.h	/^	struct Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::Generic
Untyped	src/legion_runtime/accessor.h	/^	struct Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionFold
Untyped	src/legion_runtime/accessor.h	/^	struct Untyped {$/;"	s	struct:LegionRuntime::Accessor::AccessorType::ReductionList
Untyped	src/legion_runtime/accessor.h	/^          Untyped(void *_base, size_t _stride, size_t _block_size, size_t _block_stride) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
UpVal	include/lua/lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	include/lua/lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
UpdateVoltagesTask	src/test/circuit.h	/^class UpdateVoltagesTask : public IndexLauncher {$/;"	c
UpdateVoltagesTask	src/test/circuit_cpu.cc	/^UpdateVoltagesTask::UpdateVoltagesTask(LogicalPartition lp_pvt_nodes,$/;"	f	class:UpdateVoltagesTask
Upvaldesc	include/lua/lobject.h	/^typedef struct Upvaldesc {$/;"	s
Upvaldesc	include/lua/lobject.h	/^} Upvaldesc;$/;"	t	typeref:struct:Upvaldesc
Usage	scripts/kconfig/lxdialog/lxdialog.c	/^static void Usage(const char *name)$/;"	f	file:
UserEvent	src/legion_runtime/legion_types.h	/^    typedef LowLevel::UserEvent UserEvent;$/;"	t	namespace:LegionRuntime::HighLevel
UserEvent	src/legion_runtime/lowlevel.h	/^    class UserEvent : public Event {$/;"	c	namespace:LegionRuntime::LowLevel
UtilityBarrier	src/legion_runtime/utilities.h	/^      explicit UtilityBarrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::UtilityBarrier
UtilityBarrier	src/legion_runtime/utilities.h	/^    class UtilityBarrier {$/;"	c	namespace:LegionRuntime::LowLevel
UtilityProcessor	src/legion_runtime/lowlevel.cc	/^    UtilityProcessor::UtilityProcessor(Processor _me,$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
UtilityProcessor	src/legion_runtime/lowlevel_impl.h	/^    class UtilityProcessor : public Processor::Impl {$/;"	c	namespace:LegionRuntime::LowLevel
UtilityThread	src/legion_runtime/lowlevel.cc	/^      UtilityThread(UtilityProcessor *_proc)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
UtilityThread	src/legion_runtime/lowlevel.cc	/^    class UtilityProcessor::UtilityThread : public PreemptableThread {$/;"	c	class:LegionRuntime::LowLevel::UtilityProcessor	file:
V3_VM_RESET_ALL	src/nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon133	file:
V3_VM_RESET_CORE_RANGE	src/nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon133	file:
V3_VM_RESET_HRT	src/nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon133	file:
V3_VM_RESET_ROS	src/nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	e	enum:__anon133	file:
VALID_MASK_DATA_MSGID	src/legion_runtime/lowlevel.cc	/^      VALID_MASK_DATA_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
VALID_MASK_REQ_MSGID	src/legion_runtime/lowlevel.cc	/^      VALID_MASK_REQ_MSGID,$/;"	e	enum:LegionRuntime::LowLevel::ActiveMessageIDs	file:
VALID_REDUCTION_ALLOC	src/legion_runtime/legion_allocation.h	/^      VALID_REDUCTION_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
VALID_STATE	src/legion_runtime/garbage_collection.h	/^        VALID_STATE,$/;"	e	enum:LegionRuntime::HighLevel::CollectableState::State
VALID_VIEW_ALLOC	src/legion_runtime/legion_allocation.h	/^      VALID_VIEW_ALLOC,$/;"	e	enum:LegionRuntime::HighLevel::AllocationType
VARBITS	include/lua/lobject.h	39;"	d
VCALL	include/lua/lparser.h	/^  VCALL,	\/* info = instruction pc *\/$/;"	e	enum:__anon15
VC_CONTEXT	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VC_MENU	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VC_MENU_ALT	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VC_NEXT	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VC_NEXT_ALT	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VC_PREV	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VC_PREV_ALT	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VC_START	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	e	enum:__anon138	file:
VERIFIED_FLAG	src/legion_runtime/legion_types.h	/^      VERIFIED_FLAG   = 0x00000001,$/;"	e	enum:LegionRuntime::HighLevel::RegionFlags
VERSION	Makefile	/^VERSION = 0$/;"	m
VERSION	src/lua_src/lundump.c	236;"	d	file:
VESA_ATTR_COLOR	include/dev/vesa.h	86;"	d
VESA_ATTR_DOUBLESCAN	include/dev/vesa.h	91;"	d
VESA_ATTR_DUALDISP	include/dev/vesa.h	95;"	d
VESA_ATTR_GRAPHICS	include/dev/vesa.h	87;"	d
VESA_ATTR_HWSUPPORT	include/dev/vesa.h	84;"	d
VESA_ATTR_INTERLACE	include/dev/vesa.h	92;"	d
VESA_ATTR_LINEARFB	include/dev/vesa.h	90;"	d
VESA_ATTR_NOTVGA	include/dev/vesa.h	88;"	d
VESA_ATTR_NOTWINDOW	include/dev/vesa.h	89;"	d
VESA_ATTR_STEREO	include/dev/vesa.h	94;"	d
VESA_ATTR_TRIPLEBUF	include/dev/vesa.h	93;"	d
VESA_ATTR_TTY	include/dev/vesa.h	85;"	d
VESA_MODE_ACCEL	include/dev/vesa.h	37;"	d
VESA_MODE_DONT_CLEAR	include/dev/vesa.h	35;"	d
VESA_MODE_GRAPHICS_1024_768_24	include/dev/vesa.h	58;"	d
VESA_MODE_GRAPHICS_1280_1024_24	include/dev/vesa.h	59;"	d
VESA_MODE_GRAPHICS_1600_1200_16	include/dev/vesa.h	62;"	d
VESA_MODE_GRAPHICS_640_480_24	include/dev/vesa.h	56;"	d
VESA_MODE_GRAPHICS_800_600_16	include/dev/vesa.h	61;"	d
VESA_MODE_GRAPHICS_800_600_24	include/dev/vesa.h	57;"	d
VESA_MODE_INFO_BPP	include/dev/vesa.h	45;"	d
VESA_MODE_INFO_BPSL	include/dev/vesa.h	46;"	d
VESA_MODE_INFO_HEIGHT	include/dev/vesa.h	44;"	d
VESA_MODE_INFO_LINEAR_FB_PHYS_ADDR	include/dev/vesa.h	49;"	d
VESA_MODE_INFO_SIZE	include/dev/vesa.h	41;"	d
VESA_MODE_INFO_WIDTH	include/dev/vesa.h	43;"	d
VESA_MODE_LINEAR_FB_ENABLE	include/dev/vesa.h	36;"	d
VESA_MODE_MODE_MASK	include/dev/vesa.h	39;"	d
VESA_MODE_TEXT_132_60	include/dev/vesa.h	54;"	d
VESA_MODE_TEXT_80_25	include/dev/vesa.h	51;"	d
VESA_MODE_TEXT_80_60	include/dev/vesa.h	53;"	d
VESA_MODE_TEXT_GENERIC	include/dev/vesa.h	52;"	d
VESA_MODE_USER_CRTC	include/dev/vesa.h	38;"	d
VESA_PTR_TO_LINEAR	include/dev/vesa.h	145;"	d
VESA_PTR_TO_OFF	include/dev/vesa.h	144;"	d
VESA_PTR_TO_SEG	include/dev/vesa.h	143;"	d
VE_EXCP	include/nautilus/idt.h	54;"	d
VFALSE	include/lua/lparser.h	/^  VFALSE,$/;"	e	enum:__anon15
VGA_BASE_ADDR	include/dev/vga.h	31;"	d
VGA_BASE_ADDR	src/dev/vga.c	29;"	d	file:
VGA_HEIGHT	include/dev/vga.h	33;"	d
VGA_WIDTH	include/dev/vga.h	32;"	d
VINDEXED	include/lua/lparser.h	/^  VINDEXED,	\/* t = table register\/upvalue; idx = index R\/K *\/$/;"	e	enum:__anon15
VIRTIO_PCI_BLOCK	include/dev/virtio_pci.h	/^enum virtio_pci_dev_type { VIRTIO_PCI_NET, VIRTIO_PCI_BLOCK, VIRTIO_PCI_OTHER };$/;"	e	enum:virtio_pci_dev_type
VIRTIO_PCI_NET	include/dev/virtio_pci.h	/^enum virtio_pci_dev_type { VIRTIO_PCI_NET, VIRTIO_PCI_BLOCK, VIRTIO_PCI_OTHER };$/;"	e	enum:virtio_pci_dev_type
VIRTIO_PCI_OTHER	include/dev/virtio_pci.h	/^enum virtio_pci_dev_type { VIRTIO_PCI_NET, VIRTIO_PCI_BLOCK, VIRTIO_PCI_OTHER };$/;"	e	enum:virtio_pci_dev_type
VJMP	include/lua/lparser.h	/^  VJMP,		\/* info = instruction pc *\/$/;"	e	enum:__anon15
VK	include/lua/lparser.h	/^  VK,		\/* info = index of constant in `k' *\/$/;"	e	enum:__anon15
VKNUM	include/lua/lparser.h	/^  VKNUM,	\/* nval = numerical value *\/$/;"	e	enum:__anon15
VLOCAL	include/lua/lparser.h	/^  VLOCAL,	\/* info = local register *\/$/;"	e	enum:__anon15
VNIL	include/lua/lparser.h	/^  VNIL,$/;"	e	enum:__anon15
VNONRELOC	include/lua/lparser.h	/^  VNONRELOC,	\/* info = result register *\/$/;"	e	enum:__anon15
VPATH	Makefile	/^VPATH		:= $(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))$/;"	m
VRELOCABLE	include/lua/lparser.h	/^  VRELOCABLE,	\/* info = instruction pc *\/$/;"	e	enum:__anon15
VTRUE	include/lua/lparser.h	/^  VTRUE,$/;"	e	enum:__anon15
VUPVAL	include/lua/lparser.h	/^  VUPVAL,       \/* info = index of upvalue in 'upvalues' *\/$/;"	e	enum:__anon15
VVARARG	include/lua/lparser.h	/^  VVARARG	\/* info = instruction pc *\/$/;"	e	enum:__anon15
VVOID	include/lua/lparser.h	/^  VVOID,	\/* no value *\/$/;"	e	enum:__anon15
ValidMaskDataArgs	src/legion_runtime/lowlevel.cc	/^    struct ValidMaskDataArgs : public BaseMedium {$/;"	s	namespace:LegionRuntime::LowLevel	file:
ValidMaskDataMessage	src/legion_runtime/lowlevel.cc	/^				       handle_valid_mask_data> ValidMaskDataMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
ValidMaskRequestArgs	src/legion_runtime/lowlevel.cc	/^    struct ValidMaskRequestArgs {$/;"	s	namespace:LegionRuntime::LowLevel	file:
ValidMaskRequestMessage	src/legion_runtime/lowlevel.cc	/^				      handle_valid_mask_request> ValidMaskRequestMessage;$/;"	t	namespace:LegionRuntime::LowLevel	file:
Value	include/lua/lobject.h	/^typedef union Value Value;$/;"	t	typeref:union:Value
Value	include/lua/lobject.h	/^union Value {$/;"	u
Vardesc	include/lua/lparser.h	/^typedef struct Vardesc {$/;"	s
Vardesc	include/lua/lparser.h	/^} Vardesc;$/;"	t	typeref:struct:Vardesc
Variant	src/legion_runtime/legion.h	/^        Variant(Processor::TaskFuncID id, Processor::Kind k, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
Variant	src/legion_runtime/legion.h	/^        Variant(void)$/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
Variant	src/legion_runtime/legion.h	/^      class Variant {$/;"	c	class:LegionRuntime::HighLevel::TaskVariantCollection
VariantID	src/legion_runtime/legion_types.h	/^    typedef unsigned long VariantID;$/;"	t	namespace:LegionRuntime::HighLevel
VariantMap	src/legion_runtime/mapping_utilities.h	/^        typedef std::map<Processor::Kind,VariantProfile> VariantMap;$/;"	t	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
VariantProfile	src/legion_runtime/mapping_utilities.cc	/^      MappingProfiler::VariantProfile::VariantProfile(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler::VariantProfile
VariantProfile	src/legion_runtime/mapping_utilities.h	/^        struct VariantProfile {$/;"	s	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
Vector	src/test/hpcg/vector.h	/^struct Vector {$/;"	s	namespace:lgncg
VersionID	src/legion_runtime/legion_types.h	/^    typedef unsigned long long VersionID;$/;"	t	namespace:LegionRuntime::HighLevel
ViewHandle	src/legion_runtime/region_tree.cc	/^    ViewHandle::ViewHandle(LogicalView *v)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
ViewHandle	src/legion_runtime/region_tree.cc	/^    ViewHandle::ViewHandle(const ViewHandle &rhs)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
ViewHandle	src/legion_runtime/region_tree.cc	/^    ViewHandle::ViewHandle(void)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
ViewHandle	src/legion_runtime/region_tree.h	/^    class ViewHandle {$/;"	c	namespace:LegionRuntime::HighLevel
WAIT_BEGIN	src/legion_runtime/legion_logging.h	/^        WAIT_BEGIN = 0,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::WaitKind
WAIT_END	src/legion_runtime/legion_logging.h	/^        WAIT_END = 1,$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::WaitKind
WAIT_NOWAIT	src/legion_runtime/legion_logging.h	/^        WAIT_NOWAIT = 2, \/\/ indicates that the resource being waited on is already ready$/;"	e	enum:LegionRuntime::HighLevel::LegionLogging::WaitKind
WARAnalyzer	src/legion_runtime/region_tree.cc	/^    WARAnalyzer<ABOVE>::WARAnalyzer(int color\/*=-1*\/, $/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
WARAnalyzer	src/legion_runtime/region_tree.h	/^    class WARAnalyzer {$/;"	c	namespace:LegionRuntime::HighLevel
WARN	include/nautilus/bug.h	50;"	d
WARN_ON	include/nautilus/bug.h	59;"	d
WARN_ONCE	include/nautilus/bug.h	80;"	d
WARN_ON_ONCE	include/nautilus/bug.h	68;"	d
WARN_PRINT	include/nautilus/nautilus.h	39;"	d
WHITE0BIT	include/lua/lgc.h	87;"	d
WHITE1BIT	include/lua/lgc.h	88;"	d
WHITEBITS	include/lua/lgc.h	96;"	d
WIRE_SEGMENTS	src/test/circuit.h	32;"	d
WORDS_BIGENDIAN	src/fs/ext2/ext2_types.h	169;"	d
WORD_COPY_BWD	include/nautilus/naut_string.h	109;"	d
WRITE_DISCARD	src/legion_runtime/legion_types.h	/^      WRITE_DISCARD   = 0x00000002, \/\/ same as WRITE_ONLY$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
WRITE_ONLY	src/legion_runtime/legion_types.h	/^      WRITE_ONLY      = 0x00000002, \/\/ same as WRITE_DISCARD$/;"	e	enum:LegionRuntime::HighLevel::PrivilegeMode
WaitKind	src/legion_runtime/legion_logging.h	/^      enum WaitKind {$/;"	g	namespace:LegionRuntime::HighLevel::LegionLogging
Waiter	src/legion_runtime/lowlevel_dma.cc	/^        Waiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
Waiter	src/legion_runtime/lowlevel_dma.cc	/^      class Waiter : public Event::Impl::EventWaiter {$/;"	c	class:LegionRuntime::LowLevel::DmaRequest	file:
WireFields	src/test/circuit.h	/^enum WireFields {$/;"	g
WrapperTask	src/legion_runtime/legion_tasks.cc	/^    WrapperTask::WrapperTask(Runtime *rt)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
WrapperTask	src/legion_runtime/legion_tasks.h	/^    class WrapperTask : public SingleTask {$/;"	c	namespace:LegionRuntime::HighLevel
X2APIC_MMIO_REG_OFFSET_TO_MSR	include/dev/apic.h	166;"	d
X2APIC_MSR_ACCESS_BASE	include/dev/apic.h	165;"	d
XDIGITBIT	include/lua/lctype.h	43;"	d
XM_EXCP	include/nautilus/idt.h	53;"	d
Xdsdt	include/acpi/actbl.h	/^	uint64_t Xdsdt;		\/* 64-bit physical address of DSDT *\/$/;"	m	struct:acpi_table_fadt
Xfacs	include/acpi/actbl.h	/^	uint64_t Xfacs;		\/* 64-bit physical address of FACS *\/$/;"	m	struct:acpi_table_fadt
YIELD	src/test/benchmark.h	32;"	d
YIELD	src/test/benchmark.h	65;"	d
YIELDING	src/nautilus/scheduler.c	/^	       YIELDING,           \/\/ explit yield of slice$/;"	e	enum:__anon132	file:
YIELD_COUNT	src/test/benchmark.c	688;"	d	file:
YYABORT	scripts/kconfig/zconf.tab.c	807;"	d	file:
YYACCEPT	scripts/kconfig/zconf.tab.c	806;"	d	file:
YYBACKUP	scripts/kconfig/zconf.tab.c	819;"	d	file:
YYBISON	scripts/kconfig/zconf.tab.c	47;"	d	file:
YYBISON_VERSION	scripts/kconfig/zconf.tab.c	50;"	d	file:
YYCOPY	scripts/kconfig/zconf.tab.c	414;"	d	file:
YYCOPY	scripts/kconfig/zconf.tab.c	417;"	d	file:
YYDEBUG	scripts/kconfig/zconf.tab.c	185;"	d	file:
YYDEBUG	scripts/kconfig/zconf.tab.c	193;"	d	file:
YYDPRINTF	scripts/kconfig/zconf.tab.c	1045;"	d	file:
YYDPRINTF	scripts/kconfig/zconf.tab.c	899;"	d	file:
YYEMPTY	scripts/kconfig/zconf.tab.c	803;"	d	file:
YYEOF	scripts/kconfig/zconf.tab.c	804;"	d	file:
YYERRCODE	scripts/kconfig/zconf.tab.c	838;"	d	file:
YYERROR	scripts/kconfig/zconf.tab.c	808;"	d	file:
YYERROR_VERBOSE	scripts/kconfig/zconf.tab.c	187;"	d	file:
YYERROR_VERBOSE	scripts/kconfig/zconf.tab.c	198;"	d	file:
YYERROR_VERBOSE	scripts/kconfig/zconf.tab.c	199;"	d	file:
YYERROR_VERBOSE	scripts/kconfig/zconf.tab.c	201;"	d	file:
YYFAIL	scripts/kconfig/zconf.tab.c	815;"	d	file:
YYFINAL	scripts/kconfig/zconf.tab.c	447;"	d	file:
YYFPRINTF	scripts/kconfig/zconf.tab.c	896;"	d	file:
YYFREE	scripts/kconfig/zconf.tab.c	380;"	d	file:
YYID	scripts/kconfig/zconf.tab.c	/^YYID (int i)$/;"	f	file:
YYID	scripts/kconfig/zconf.tab.c	304;"	d	file:
YYINITDEPTH	scripts/kconfig/zconf.tab.c	1054;"	d	file:
YYLAST	scripts/kconfig/zconf.tab.c	449;"	d	file:
YYLEX	scripts/kconfig/zconf.tab.c	886;"	d	file:
YYLEX	scripts/kconfig/zconf.tab.c	888;"	d	file:
YYLLOC_DEFAULT	scripts/kconfig/zconf.tab.c	847;"	d	file:
YYLSP_NEEDED	scripts/kconfig/zconf.tab.c	59;"	d	file:
YYMALLOC	scripts/kconfig/zconf.tab.c	373;"	d	file:
YYMAXDEPTH	scripts/kconfig/zconf.tab.c	1065;"	d	file:
YYMAXUTOK	scripts/kconfig/zconf.tab.c	462;"	d	file:
YYNNTS	scripts/kconfig/zconf.tab.c	454;"	d	file:
YYNRULES	scripts/kconfig/zconf.tab.c	456;"	d	file:
YYNSTATES	scripts/kconfig/zconf.tab.c	458;"	d	file:
YYNTOKENS	scripts/kconfig/zconf.tab.c	452;"	d	file:
YYPACT_NINF	scripts/kconfig/zconf.tab.c	677;"	d	file:
YYPOPSTACK	scripts/kconfig/zconf.tab.c	1433;"	d	file:
YYPURE	scripts/kconfig/zconf.tab.c	56;"	d	file:
YYRECOVERING	scripts/kconfig/zconf.tab.c	817;"	d	file:
YYRHSLOC	scripts/kconfig/zconf.tab.c	845;"	d	file:
YYSIZE_MAXIMUM	scripts/kconfig/zconf.tab.c	281;"	d	file:
YYSIZE_T	scripts/kconfig/zconf.tab.c	269;"	d	file:
YYSIZE_T	scripts/kconfig/zconf.tab.c	271;"	d	file:
YYSIZE_T	scripts/kconfig/zconf.tab.c	275;"	d	file:
YYSIZE_T	scripts/kconfig/zconf.tab.c	277;"	d	file:
YYSKELETON_NAME	scripts/kconfig/zconf.tab.c	53;"	d	file:
YYSTACK_ALLOC	scripts/kconfig/zconf.tab.c	327;"	d	file:
YYSTACK_ALLOC	scripts/kconfig/zconf.tab.c	331;"	d	file:
YYSTACK_ALLOC	scripts/kconfig/zconf.tab.c	336;"	d	file:
YYSTACK_ALLOC	scripts/kconfig/zconf.tab.c	359;"	d	file:
YYSTACK_ALLOC_MAXIMUM	scripts/kconfig/zconf.tab.c	356;"	d	file:
YYSTACK_ALLOC_MAXIMUM	scripts/kconfig/zconf.tab.c	362;"	d	file:
YYSTACK_BYTES	scripts/kconfig/zconf.tab.c	406;"	d	file:
YYSTACK_FREE	scripts/kconfig/zconf.tab.c	350;"	d	file:
YYSTACK_FREE	scripts/kconfig/zconf.tab.c	360;"	d	file:
YYSTACK_GAP_MAXIMUM	scripts/kconfig/zconf.tab.c	402;"	d	file:
YYSTACK_RELOCATE	scripts/kconfig/zconf.tab.c	433;"	d	file:
YYSTATE	scripts/kconfig/lex.zconf.c	122;"	d	file:
YYSTYPE	scripts/kconfig/zconf.tab.c	/^	YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	scripts/kconfig/zconf.tab.c	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE_IS_DECLARED	scripts/kconfig/zconf.tab.c	224;"	d	file:
YYSTYPE_IS_TRIVIAL	scripts/kconfig/zconf.tab.c	225;"	d	file:
YYTABLES_NAME	scripts/kconfig/lex.zconf.c	2192;"	d	file:
YYTABLE_NINF	scripts/kconfig/zconf.tab.c	714;"	d	file:
YYTERROR	scripts/kconfig/zconf.tab.c	837;"	d	file:
YYTOKENTYPE	scripts/kconfig/zconf.tab.c	73;"	d	file:
YYTOKEN_TABLE	scripts/kconfig/zconf.tab.c	206;"	d	file:
YYTRANSLATE	scripts/kconfig/zconf.tab.c	464;"	d	file:
YYUNDEFTOK	scripts/kconfig/zconf.tab.c	461;"	d	file:
YYUSE	scripts/kconfig/zconf.tab.c	297;"	d	file:
YYUSE	scripts/kconfig/zconf.tab.c	299;"	d	file:
YY_	scripts/kconfig/zconf.tab.c	287;"	d	file:
YY_	scripts/kconfig/zconf.tab.c	291;"	d	file:
YY_AT_BOL	scripts/kconfig/lex.zconf.c	322;"	d	file:
YY_BREAK	scripts/kconfig/lex.zconf.c	928;"	d	file:
YY_BUFFER_EOF_PENDING	scripts/kconfig/lex.zconf.c	238;"	d	file:
YY_BUFFER_NEW	scripts/kconfig/lex.zconf.c	226;"	d	file:
YY_BUFFER_NORMAL	scripts/kconfig/lex.zconf.c	227;"	d	file:
YY_BUFFER_STATE	scripts/kconfig/lex.zconf.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	scripts/kconfig/lex.zconf.c	134;"	d	file:
YY_CHAR	scripts/kconfig/lex.zconf.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	scripts/kconfig/lex.zconf.c	254;"	d	file:
YY_CURRENT_BUFFER_LVALUE	scripts/kconfig/lex.zconf.c	261;"	d	file:
YY_DECL	scripts/kconfig/lex.zconf.c	2204;"	d	file:
YY_DECL	scripts/kconfig/lex.zconf.c	916;"	d	file:
YY_DECL_IS_OURS	scripts/kconfig/lex.zconf.c	2203;"	d	file:
YY_DECL_IS_OURS	scripts/kconfig/lex.zconf.c	912;"	d	file:
YY_DO_BEFORE_ACTION	scripts/kconfig/lex.zconf.c	2200;"	d	file:
YY_DO_BEFORE_ACTION	scripts/kconfig/lex.zconf.c	670;"	d	file:
YY_END_OF_BUFFER	scripts/kconfig/lex.zconf.c	678;"	d	file:
YY_END_OF_BUFFER_CHAR	scripts/kconfig/lex.zconf.c	130;"	d	file:
YY_EXIT_FAILURE	scripts/kconfig/lex.zconf.c	2022;"	d	file:
YY_EXTRA_TYPE	scripts/kconfig/lex.zconf.c	820;"	d	file:
YY_FATAL_ERROR	scripts/kconfig/lex.zconf.c	903;"	d	file:
YY_FLEX_MAJOR_VERSION	scripts/kconfig/lex.zconf.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	scripts/kconfig/lex.zconf.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	scripts/kconfig/lex.zconf.c	11;"	d	file:
YY_FLUSH_BUFFER	scripts/kconfig/lex.zconf.c	2195;"	d	file:
YY_FLUSH_BUFFER	scripts/kconfig/lex.zconf.c	290;"	d	file:
YY_INPUT	scripts/kconfig/lex.zconf.c	872;"	d	file:
YY_INT_ALIGNED	scripts/kconfig/lex.zconf.c	4;"	d	file:
YY_LESS_LINENO	scripts/kconfig/lex.zconf.c	150;"	d	file:
YY_LOCATION_PRINT	scripts/kconfig/zconf.tab.c	873;"	d	file:
YY_LOCATION_PRINT	scripts/kconfig/zconf.tab.c	878;"	d	file:
YY_MORE_ADJ	scripts/kconfig/lex.zconf.c	736;"	d	file:
YY_NEW_FILE	scripts/kconfig/lex.zconf.c	128;"	d	file:
YY_NEW_FILE	scripts/kconfig/lex.zconf.c	2194;"	d	file:
YY_NULL	scripts/kconfig/lex.zconf.c	102;"	d	file:
YY_NUM_RULES	scripts/kconfig/lex.zconf.c	677;"	d	file:
YY_READ_BUF_SIZE	scripts/kconfig/lex.zconf.c	857;"	d	file:
YY_REDUCE_PRINT	scripts/kconfig/zconf.tab.c	1035;"	d	file:
YY_REDUCE_PRINT	scripts/kconfig/zconf.tab.c	1048;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	scripts/kconfig/lex.zconf.c	737;"	d	file:
YY_RULE_SETUP	scripts/kconfig/lex.zconf.c	931;"	d	file:
YY_SC_TO_UI	scripts/kconfig/lex.zconf.c	109;"	d	file:
YY_SKIP_YYWRAP	scripts/kconfig/lex.zconf.c	327;"	d	file:
YY_STACK_PRINT	scripts/kconfig/zconf.tab.c	1047;"	d	file:
YY_STACK_PRINT	scripts/kconfig/zconf.tab.c	997;"	d	file:
YY_START	scripts/kconfig/lex.zconf.c	121;"	d	file:
YY_START_STACK_INCR	scripts/kconfig/lex.zconf.c	898;"	d	file:
YY_STATE_EOF	scripts/kconfig/lex.zconf.c	125;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	scripts/kconfig/lex.zconf.c	179;"	d	file:
YY_SYMBOL_PRINT	scripts/kconfig/zconf.tab.c	1046;"	d	file:
YY_SYMBOL_PRINT	scripts/kconfig/zconf.tab.c	905;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	scripts/kconfig/lex.zconf.c	138;"	d	file:
YY_TYPEDEF_YY_SIZE_T	scripts/kconfig/lex.zconf.c	174;"	d	file:
YY_USER_ACTION	scripts/kconfig/lex.zconf.c	923;"	d	file:
YY_USE_CONST	scripts/kconfig/lex.zconf.c	84;"	d	file:
YY_USE_CONST	scripts/kconfig/lex.zconf.c	90;"	d	file:
Z	src/lua_src/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon142	file:
ZERO	src/nautilus/scheduler.c	102;"	d	file:
ZEROES	src/legion_runtime/arrays.h	/^      static Point<DIM> ZEROES(void)$/;"	f	class:LegionRuntime::Arrays::Point
ZEROPAD	src/nautilus/printk.c	518;"	d	file:
ZERO_COUNT	src/legion_runtime/lowlevel_impl.h	/^      enum { MODE_EXCL = 0, ZERO_COUNT = 0x11223344 };$/;"	e	enum:LegionRuntime::LowLevel::Reservation::Impl::__anon102
ZERO_SIZE_INSTANCE_OFFSET	src/legion_runtime/lowlevel.cc	/^    static const off_t ZERO_SIZE_INSTANCE_OFFSET = 1ULL << 50;$/;"	m	namespace:LegionRuntime::LowLevel	file:
ZIO	include/lua/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Z_COPY_MEM	src/legion_runtime/lowlevel.h	/^        Z_COPY_MEM, \/\/ Zero-Copy memory visible to all CPUs within a node and one or more GPUs $/;"	e	enum:LegionRuntime::LowLevel::Memory::Kind
Zio	include/lua/lzio.h	/^struct Zio {$/;"	s
_	scripts/kconfig/lkc.h	37;"	d
_	scripts/kconfig/qconf.cc	30;"	d	file:
_	scripts/kconfig/qconf.cc	31;"	d	file:
_AB	src/nautilus/random.c	60;"	d	file:
_ACCONFIG_H	src/acpi/acpica/acconfig.h	45;"	d
_ACPI_DIV	src/acpi/acpica/acmacros.h	214;"	d
_ACPI_MOD	src/acpi/acpica/acmacros.h	216;"	d
_ACPI_MUL	src/acpi/acpica/acmacros.h	215;"	d
_ACUTILS_H	src/acpi/acpica/acutils.h	45;"	d
_ADNBND	include/acpi/platform/acenv.h	295;"	d
_AMD_FPU_FEAT_QUERY	src/nautilus/fpu.c	50;"	d	file:
_ARCH_X86_64_ACPI_H	include/nautilus/acpi-x86_64.h	2;"	d
_ARRAYS_H	src/legion_runtime/arrays.h	19;"	d
_ASM_X86_BITOPS_H	include/asm/bitops.h	2;"	d
_AUPBND	include/acpi/platform/acenv.h	294;"	d
_C	include/nautilus/naut_string.h	37;"	d
_COMPONENT	src/acpi/acpica/tbinstal.c	49;"	d	file:
_COMPONENT	src/acpi/acpica/tbutils.c	50;"	d	file:
_COMPONENT	src/acpi/acpica/tbxface.c	50;"	d	file:
_COMPONENT	src/acpi/acpica/tbxfroot.c	48;"	d	file:
_COMPONENT	src/acpi/acpica/utalloc.c	48;"	d	file:
_COMPONENT	src/acpi/acpica/utglobal.c	50;"	d	file:
_COMPONENT	src/acpi/acpica/utmisc.c	48;"	d	file:
_COMPONENT	src/acpi/acpica/utxferror.c	48;"	d	file:
_COMPONENT	src/acpi/osl.c	38;"	d	file:
_D	include/nautilus/naut_string.h	36;"	d
_EXT2FS_EXT2FS_H	src/fs/ext2/ext2fs.h	13;"	d
_EXT2_TYPES_H	src/fs/ext2/ext2_types.h	32;"	d
_FILE_OFFSET_BITS	src/lua_src/liolib.c	14;"	d	file:
_GNU_SOURCE	scripts/kallsyms.c	27;"	d	file:
_GNU_SOURCE	src/test/benchmark.c	25;"	d	file:
_GNU_SOURCE	src/test/benchmark.h	6;"	d
_INTEL_FPU_FEAT_QUERY	src/nautilus/fpu.c	41;"	d	file:
_IOFBF	include/nautilus/libccompat.h	121;"	d
_IOLBF	include/nautilus/libccompat.h	122;"	d
_IONBF	include/nautilus/libccompat.h	123;"	d
_JBLEN	include/nautilus/libccompat.h	87;"	d
_KEYPAD	include/dev/kbd.h	87;"	d
_L	include/nautilus/naut_string.h	35;"	d
_LARGEFILE_SOURCE	src/lua_src/liolib.c	13;"	d	file:
_LINUX_BITOPS_H	include/lib/linux_bitops.h	26;"	d
_P	include/nautilus/naut_string.h	38;"	d
_S	include/nautilus/naut_string.h	39;"	d
_SCHEDULER_H_	include/nautilus/scheduler.h	29;"	d
_SP	include/nautilus/naut_string.h	41;"	d
_SPECIAL	include/dev/kbd.h	59;"	d
_STDLIB_H	scripts/kconfig/zconf.tab.c	341;"	d	file:
_STDLIB_H	scripts/kconfig/zconf.tab.c	369;"	d	file:
_STRUCT_TIMESPEC	include/nautilus/libccompat.h	110;"	d
_TRACE_TAG	include/nautilus/backtrace.h	30;"	d
_U	include/nautilus/naut_string.h	34;"	d
_URC_CONTINUE_UNWIND	include/nautilus/cxxglue.h	/^    _URC_CONTINUE_UNWIND = 8$/;"	e	enum:__anon54
_URC_END_OF_STACK	include/nautilus/cxxglue.h	/^    _URC_END_OF_STACK = 5,$/;"	e	enum:__anon54
_URC_FATAL_PHASE1_ERROR	include/nautilus/cxxglue.h	/^    _URC_FATAL_PHASE1_ERROR = 3,$/;"	e	enum:__anon54
_URC_FATAL_PHASE2_ERROR	include/nautilus/cxxglue.h	/^    _URC_FATAL_PHASE2_ERROR = 2,$/;"	e	enum:__anon54
_URC_FOREIGN_EXCEPTION_CAUGHT	include/nautilus/cxxglue.h	/^    _URC_FOREIGN_EXCEPTION_CAUGHT = 1,$/;"	e	enum:__anon54
_URC_HANDLER_FOUND	include/nautilus/cxxglue.h	/^    _URC_HANDLER_FOUND = 6,$/;"	e	enum:__anon54
_URC_INSTALL_CONTEXT	include/nautilus/cxxglue.h	/^    _URC_INSTALL_CONTEXT = 7,$/;"	e	enum:__anon54
_URC_NORMAL_STOP	include/nautilus/cxxglue.h	/^    _URC_NORMAL_STOP = 4,$/;"	e	enum:__anon54
_URC_NO_REASON	include/nautilus/cxxglue.h	/^    _URC_NO_REASON = 0,$/;"	e	enum:__anon54
_Unwind_Context	include/nautilus/cxxglue.h	/^struct _Unwind_Context {$/;"	s
_Unwind_DeleteException	src/cxx/cxxglue.cc	/^_Unwind_DeleteException (struct _Unwind_Exception *exception_object)$/;"	f
_Unwind_Exception	include/nautilus/cxxglue.h	/^struct _Unwind_Exception { $/;"	s
_Unwind_GetDataRelBase	src/cxx/cxxglue.cc	/^_Unwind_GetDataRelBase(struct _Unwind_Context * context)$/;"	f
_Unwind_GetIP	src/cxx/cxxglue.cc	/^_Unwind_GetIP (struct _Unwind_Context *context)$/;"	f
_Unwind_GetIPInfo	src/cxx/cxxglue.cc	/^_Unwind_GetIPInfo (struct _Unwind_Context *context, int *ip_before_insn)$/;"	f
_Unwind_GetLanguageSpecificData	src/cxx/cxxglue.cc	/^_Unwind_GetLanguageSpecificData (struct _Unwind_Context *context){$/;"	f
_Unwind_GetRegionStart	src/cxx/cxxglue.cc	/^_Unwind_GetRegionStart(struct _Unwind_Context *context)$/;"	f
_Unwind_GetTextRelBase	src/cxx/cxxglue.cc	/^_Unwind_GetTextRelBase(struct _Unwind_Context *context)$/;"	f
_Unwind_RaiseException	src/cxx/cxxglue.cc	/^_Unwind_RaiseException (struct _Unwind_Exception *exception_object)$/;"	f
_Unwind_Reason_Code	include/nautilus/cxxglue.h	/^} _Unwind_Reason_Code;$/;"	t	typeref:enum:__anon54
_Unwind_Resume	src/cxx/cxxglue.cc	/^void _Unwind_Resume(void)$/;"	f
_Unwind_Resume_or_Rethrow	src/cxx/cxxglue.cc	/^_Unwind_Resume_or_Rethrow (struct _Unwind_Exception * exception_object)$/;"	f
_Unwind_SetGR	src/cxx/cxxglue.cc	/^_Unwind_SetGR (struct _Unwind_Context *context,$/;"	f
_Unwind_SetIP	src/cxx/cxxglue.cc	/^_Unwind_SetIP (struct _Unwind_Context *context, uint64_t new_value)$/;"	f
_VALIST	include/acpi/platform/acenv.h	287;"	d
_VERBOSE_STRUCTURES	src/acpi/acpica/acmacros.h	472;"	d
_X	include/nautilus/naut_string.h	40;"	d
_XOPEN_SOURCE	src/fs/ext2/ext2fs.h	22;"	d
__ACCOMMON_H__	src/acpi/acpica/accommon.h	45;"	d
__ACENV_H__	include/acpi/platform/acenv.h	45;"	d
__ACEXCEP_H__	include/acpi/acexcep.h	45;"	d
__ACGCC_H__	include/acpi/platform/acgcc.h	45;"	d
__ACGLOBAL_H__	src/acpi/acpica/acglobal.h	45;"	d
__ACLOCAL_H__	src/acpi/acpica/aclocal.h	45;"	d
__ACMACROS_H__	src/acpi/acpica/acmacros.h	45;"	d
__ACNAMES_H__	include/acpi/acnames.h	45;"	d
__ACNAUTILUS_H__	include/acpi/platform/acnautilus.h	45;"	d
__ACOUTPUT_H__	include/acpi/acoutput.h	45;"	d
__ACPIOSXF_H__	include/acpi/acpiosxf.h	48;"	d
__ACPI_H__	include/acpi/acpi.h	45;"	d
__ACRESTYP_H__	include/acpi/acrestyp.h	45;"	d
__ACTABLES_H__	src/acpi/acpica/actables.h	45;"	d
__ACTBL1_H__	include/acpi/actbl1.h	45;"	d
__ACTBL2_H__	include/acpi/actbl2.h	45;"	d
__ACTBL_H__	include/acpi/actbl.h	45;"	d
__ACTYPES_H__	include/acpi/actypes.h	45;"	d
__ACXFACE_H__	include/acpi/acpixf.h	46;"	d
__ALIGN_KERNEL_MASK	include/lib/bitops.h	28;"	d
__ALIGN_MASK	include/lib/bitops.h	29;"	d
__ALTERNATIVE_MAPPERS__	src/legion_runtime/alt_mappers.h	18;"	d
__APIC_H__	include/dev/apic.h	24;"	d
__ATOMIC_H__	include/nautilus/atomic.h	24;"	d
__AVX2__	src/legion_runtime/naut_debug.h	6;"	d
__AVX__	src/legion_runtime/naut_debug.h	5;"	d
__BACKTRACE_H__	include/nautilus/backtrace.h	24;"	d
__BARRIER_H__	include/nautilus/barrier.h	24;"	d
__BENCHMARK_H__	src/test/benchmark.h	2;"	d
__BITOPS_H__	include/lib/bitops.h	26;"	d
__BITS_H__	include/nautilus/bits.h	24;"	d
__BLK_DEV	include/nautilus/blkdev.h	25;"	d
__BUDDY_H__	include/nautilus/buddy.h	24;"	d
__BUG_H__	include/nautilus/bug.h	24;"	d
__CHAR_DEV	include/nautilus/chardev.h	25;"	d
__CHECK_BIT	include/nautilus/bits.h	28;"	d
__CIRCUIT_H__	src/test/circuit.h	18;"	d
__CIRCUIT_MAPPER_H__	src/test/circuit_mapper.h	17;"	d
__CONDVAR_H__	include/nautilus/condvar.h	24;"	d
__CPUID_H__	include/nautilus/cpuid.h	24;"	d
__CPU_H__	include/nautilus/cpu.h	24;"	d
__CXXGLUE_H__	include/nautilus/cxxglue.h	24;"	d
__DEFAULT_MAPPER_H__	src/legion_runtime/default_mapper.h	18;"	d
__DEV	include/nautilus/dev.h	25;"	d
__DOPRNT_H_INCLUDED__	include/nautilus/doprnt.h	23;"	d
__ERRNO_H__	include/nautilus/errno.h	24;"	d
__FPU_H__	include/nautilus/fpu.h	24;"	d
__FS_EXT2_H__	include/fs/ext2/ext2.h	28;"	d
__FS_H__	include/nautilus/fs.h	27;"	d
__GDT_H__	include/nautilus/gdt.h	24;"	d
__GET_BIT	include/nautilus/bits.h	27;"	d
__HASHTABLE_H__	include/nautilus/hashtable.h	38;"	d
__HPET_H__	include/dev/hpet.h	24;"	d
__HRT_H__	include/arch/hrt/hrt.h	24;"	d
__I8254_H__	include/dev/i8254.h	24;"	d
__IDLE_H__	include/nautilus/idle.h	24;"	d
__IDT_H__	include/nautilus/idt.h	24;"	d
__INIT_H_	include/arch/x64/init.h	2;"	d
__INIT_H__	include/arch/hrt/init.h	24;"	d
__INIT_H__	include/arch/k1om/init.h	24;"	d
__INSTRUMENT_H__	include/nautilus/instrument.h	24;"	d
__INTRINSICS_H__	include/nautilus/intrinsics.h	24;"	d
__IOAPIC_H__	include/dev/ioapic.h	24;"	d
__IPI_H__	include/test/ipi.h	2;"	d
__IRQ_H__	include/nautilus/irq.h	24;"	d
__K1OMSFI_H__	include/arch/k1om/k1omsfi.h	24;"	d
__KBD_H__	include/dev/kbd.h	27;"	d
__LEGION_ALLOCATION__	src/legion_runtime/legion_allocation.h	18;"	d
__LEGION_ATOMICS__	src/legion_runtime/atomics.h	18;"	d
__LEGION_FIELD_TREE_H__	src/legion_runtime/field_tree.h	18;"	d
__LEGION_GARBAGE_COLLECTION__	src/legion_runtime/garbage_collection.h	18;"	d
__LEGION_INTERVAL_TREE_H__	src/legion_runtime/interval_tree.h	18;"	d
__LEGION_LOGGING_H__	src/legion_runtime/legion_logging.h	19;"	d
__LEGION_OPERATIONS_H__	src/legion_runtime/legion_ops.h	18;"	d
__LEGION_PROFILING_H__	src/legion_runtime/legion_profiling.h	18;"	d
__LEGION_RECTANGLE_SET_H__	src/legion_runtime/rectangle_set.h	18;"	d
__LEGION_REGION_TREE_H__	src/legion_runtime/region_tree.h	18;"	d
__LEGION_RUNTIME_H__	src/legion_runtime/legion.h	18;"	d
__LEGION_SPY_H__	src/legion_runtime/legion_spy.h	18;"	d
__LEGION_TASKS_H__	src/legion_runtime/legion_tasks.h	18;"	d
__LEGION_TRACE__	src/legion_runtime/legion_trace.h	18;"	d
__LEGION_TYPES_H__	src/legion_runtime/legion_types.h	18;"	d
__LEGION_UTILITIES_H__	src/legion_runtime/legion_utilities.h	18;"	d
__LEGION__	src/legion_runtime/shared_lowlevel.cc	50;"	d	file:
__LIBCCOMPAT_H__	include/nautilus/libccompat.h	24;"	d
__LIMITS_H__	include/nautilus/limits.h	24;"	d
__LINUX_BITMAP_H	include/lib/bitmap.h	26;"	d
__LIST_H__	include/nautilus/list.h	23;"	d
__LOWLEVEL_H__	include/asm/lowlevel.h	24;"	d
__LUA_SCRIPT_END	src/asm/lua_script.S	/^__LUA_SCRIPT_END:$/;"	l
__LUA_SCRIPT_START	src/asm/lua_script.S	/^__LUA_SCRIPT_START:$/;"	l
__MACROS_H__	include/nautilus/macros.h	24;"	d
__MAIN_H__	include/arch/hrt/main.h	24;"	d
__MAIN_H__	include/arch/k1om/main.h	24;"	d
__MAIN_H__	include/arch/x64/main.h	2;"	d
__MAPPING_UTILITIES__	src/legion_runtime/mapping_utilities.h	18;"	d
__MATH_H__	include/nautilus/math.h	24;"	d
__MB_UTIL_H__	include/nautilus/mb_utils.h	25;"	d
__MCS_LOCK_H__	include/nautilus/mcslock.h	24;"	d
__MM_H__	include/nautilus/mm.h	24;"	d
__MSR_H__	include/nautilus/msr.h	24;"	d
__MWAIT_H__	include/nautilus/mwait.h	24;"	d
__NAUTILUS_H__	include/nautilus/nautilus.h	24;"	d
__NAUTILUS_MAIN__	src/arch/hrt/init.c	23;"	d	file:
__NAUTILUS_MAIN__	src/arch/hrt/main.c	23;"	d	file:
__NAUTILUS_MAIN__	src/arch/k1om/init.c	23;"	d	file:
__NAUTILUS_MAIN__	src/arch/k1om/main.c	23;"	d	file:
__NAUTILUS_MAIN__	src/arch/x64/init.c	23;"	d	file:
__NAUTILUS_MAIN__	src/arch/x64/main.c	23;"	d	file:
__NAUT_ACPI_H__	include/nautilus/acpi.h	24;"	d
__NAUT_ASSERT_H__	include/nautilus/naut_assert.h	24;"	d
__NAUT_DEBUG_H__	src/legion_runtime/naut_debug.h	2;"	d
__NAUT_TYPES_H__	include/nautilus/naut_types.h	24;"	d
__NEMO_H__	include/nautilus/nemo.h	24;"	d
__NET_DEV	include/nautilus/netdev.h	25;"	d
__NK_ATA	include/dev/ata.h	25;"	d
__NK_REAL_MODE	include/nautilus/realmode.h	25;"	d
__NK_SHELL	include/nautilus/shell.h	25;"	d
__NK_VC	include/nautilus/vc.h	28;"	d
__NK_VESA	include/dev/vesa.h	25;"	d
__NK_VMM	include/nautilus/vmm.h	25;"	d
__NUMA_H__	include/nautilus/numa.h	24;"	d
__PAGING_H__	include/nautilus/paging.h	24;"	d
__PCI_H__	include/dev/pci.h	24;"	d
__PER_CPU_H__	include/nautilus/percpu.h	24;"	d
__PMC_H__	include/nautilus/pmc.h	24;"	d
__PRINTK_H__	include/nautilus/printk.h	24;"	d
__QUEUE_H__	include/nautilus/queue.h	24;"	d
__RAMDISK	include/dev/ramdisk.h	24;"	d
__RAMDISK_END	src/asm/ramdisk.S	/^__RAMDISK_END:$/;"	l
__RAMDISK_START	src/asm/ramdisk.S	/^__RAMDISK_START:$/;"	l
__RANDOM_H__	include/nautilus/random.h	24;"	d
__RBTREE_H	include/nautilus/rbtree.h	95;"	d
__RUNTIME_H__	src/legion_runtime/runtime.h	18;"	d
__RUNTIME_UTILITIES_H__	src/legion_runtime/utilities.h	18;"	d
__RWLOCK_H__	include/nautilus/rwlock.h	24;"	d
__S16_TYPEDEF	src/fs/ext2/ext2_types.h	158;"	d
__S16_TYPEDEF	src/fs/ext2/ext2_types.h	36;"	d
__S32_TYPEDEF	src/fs/ext2/ext2_types.h	160;"	d
__S32_TYPEDEF	src/fs/ext2/ext2_types.h	38;"	d
__S64_TYPEDEF	src/fs/ext2/ext2_types.h	162;"	d
__S64_TYPEDEF	src/fs/ext2/ext2_types.h	40;"	d
__S8_TYPEDEF	src/fs/ext2/ext2_types.h	156;"	d
__S8_TYPEDEF	src/fs/ext2/ext2_types.h	34;"	d
__SERIAL_H__	include/dev/serial.h	24;"	d
__SETJMP_H__	include/nautilus/setjmp.h	24;"	d
__SETJMP_H__	src/include/nautilus/setjmp.h	24;"	d
__SFI_H__	include/nautilus/sfi.h	24;"	d
__SHIM_MAPPER_H__	src/legion_runtime/shim_mapper.h	18;"	d
__SHUTDOWN_H__	include/nautilus/shutdown.h	24;"	d
__SMP_H__	include/nautilus/smp.h	24;"	d
__SPINLOCK_H__	include/nautilus/spinlock.h	24;"	d
__SSE2__	src/legion_runtime/naut_debug.h	7;"	d
__STRING_H__	include/nautilus/naut_string.h	24;"	d
__TESTFS_H__	include/nautilus/testfs.h	25;"	d
__THREAD_H__	include/nautilus/thread.h	24;"	d
__TICKET_LOCK_H__	include/nautilus/ticketlock.h	24;"	d
__TIMER_H__	include/nautilus/timer.h	24;"	d
__U16_TYPEDEF	src/fs/ext2/ext2_types.h	159;"	d
__U16_TYPEDEF	src/fs/ext2/ext2_types.h	37;"	d
__U32_TYPEDEF	src/fs/ext2/ext2_types.h	161;"	d
__U32_TYPEDEF	src/fs/ext2/ext2_types.h	39;"	d
__U64_TYPEDEF	src/fs/ext2/ext2_types.h	163;"	d
__U64_TYPEDEF	src/fs/ext2/ext2_types.h	41;"	d
__U8_TYPEDEF	src/fs/ext2/ext2_types.h	157;"	d
__U8_TYPEDEF	src/fs/ext2/ext2_types.h	35;"	d
__VIRTIO_PCI	include/dev/virtio_pci.h	2;"	d
__X64_VGA__	include/dev/vga.h	26;"	d
__XEON_PHI_H__	include/arch/k1om/xeon_phi.h	24;"	d
__acpi_configure_legacy	src/arch/x64/smp.c	/^static int __acpi_configure_legacy(struct naut_info * naut)$/;"	f	file:
__align	include/nautilus/intrinsics.h	46;"	d
__always_inline	include/nautilus/intrinsics.h	30;"	d
__areg_1	include/nautilus/percpu.h	43;"	d
__areg_2	include/nautilus/percpu.h	44;"	d
__areg_4	include/nautilus/percpu.h	45;"	d
__areg_8	include/nautilus/percpu.h	46;"	d
__assert_fail	src/nautilus/libccompat.c	/^__assert_fail (const char * assertion, const char * file, unsigned line, const char * function)$/;"	f
__associate_domains_adhoc	src/nautilus/numa.c	/^__associate_domains_adhoc (struct nk_locality_info * loc)$/;"	f	file:
__associate_domains_slit	src/nautilus/numa.c	/^__associate_domains_slit (struct nk_locality_info * loc)$/;"	f	file:
__atexit_func_count	src/cxx/cxxglue.cc	/^unsigned __atexit_func_count = 0;$/;"	v
__atexit_funcs	src/cxx/cxxglue.cc	/^atexit_func_entry_t __atexit_funcs[ATEXIT_MAX_FUNCS];$/;"	v
__bitmap_empty	lib/bitmap.c	/^int __bitmap_empty(const unsigned long *bitmap, int bits)$/;"	f
__bitmap_full	lib/bitmap.c	/^int __bitmap_full(const unsigned long *bitmap, int bits)$/;"	f
__clear_bit	src/nautilus/mm/buddy.c	/^__clear_bit (ulong_t nr, volatile void * addr)$/;"	f	file:
__cmpop_1	include/nautilus/percpu.h	38;"	d
__cmpop_2	include/nautilus/percpu.h	39;"	d
__cmpop_4	include/nautilus/percpu.h	40;"	d
__cmpop_8	include/nautilus/percpu.h	41;"	d
__coalesce_regions	src/nautilus/numa.c	/^__coalesce_regions (struct numa_domain * d)$/;"	f	file:
__construct_tables_1g	src/nautilus/paging.c	/^__construct_tables_1g (pml4e_t * pml, ulong_t bytes)$/;"	f	file:
__construct_tables_2m	src/nautilus/paging.c	/^__construct_tables_2m (pml4e_t * pml, ulong_t bytes)$/;"	f	file:
__construct_tables_4k	src/nautilus/paging.c	/^__construct_tables_4k (pml4e_t * pml, ulong_t bytes)$/;"	f	file:
__ctype_get_mb_cur_max	src/nautilus/libccompat.c	/^size_t __ctype_get_mb_cur_max (void)$/;"	f
__cxa_atexit	src/cxx/cxxglue.cc	/^__cxa_atexit (void (*destructor)(void*), void * arg, void * __dso_handle)$/;"	f
__cxa_finalize	src/cxx/cxxglue.cc	/^__cxa_finalize (void *f)$/;"	f
__cxa_pure_virtual	src/cxx/cxxglue.cc	/^__cxa_pure_virtual (void)$/;"	f
__do_backtrace	src/nautilus/backtrace.c	/^__do_backtrace (void ** fp, unsigned depth)$/;"	f
__do_ctors_init	src/cxx/cxxinit.c	/^__do_ctors_init (void) $/;"	f	file:
__dso_handle	src/cxx/cxxglue.cc	/^void * __dso_handle;$/;"	v
__duplocale	src/nautilus/libccompat.c	/^locale_t __duplocale (locale_t locobj)$/;"	f
__early_init_fadt_legacy	src/arch/x64/smp.c	/^static int __early_init_fadt_legacy(struct naut_info * naut)$/;"	f	file:
__early_init_hrt	src/arch/hrt/hrt.c	/^__early_init_hrt (struct naut_info * naut)$/;"	f
__early_init_madt	src/arch/x64/smp.c	/^__early_init_madt (struct naut_info * naut)$/;"	f	file:
__early_init_mp	src/arch/x64/smp.c	/^__early_init_mp (struct naut_info * naut)$/;"	f	file:
__early_init_sfi	src/arch/k1om/sfi.c	/^__early_init_sfi (struct naut_info * naut)$/;"	f
__exit_refok	src/acpi/osl.c	57;"	d	file:
__expr_eliminate_eq	scripts/kconfig/expr.c	/^static void __expr_eliminate_eq(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	file:
__ffs	include/asm/bitops.h	/^static inline unsigned long __ffs(unsigned long word)$/;"	f
__ffs64	include/lib/bitops.h	/^static inline unsigned long __ffs64(uint64_t word)$/;"	f
__ffs64	include/lib/linux_bitops.h	/^static inline unsigned long __ffs64(u64 word)$/;"	f
__fill_pd	src/nautilus/paging.c	/^__fill_pd (pde_t * pd, $/;"	f	file:
__fill_pdpt	src/nautilus/paging.c	/^__fill_pdpt (pdpte_t * pdpt, $/;"	f	file:
__fill_pml	src/nautilus/paging.c	/^__fill_pml (pml4e_t * pml, $/;"	f	file:
__fill_pt	src/nautilus/paging.c	/^__fill_pt (pte_t * pt, $/;"	f	file:
__fls	include/asm/bitops.h	/^static inline unsigned long __fls(unsigned long word)$/;"	f
__fs_find	src/nautilus/fs.c	/^static struct nk_fs *__fs_find(char *name)$/;"	f	file:
__hlist_del	include/nautilus/list.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f
__ilog2_u32	include/nautilus/math.h	/^int __ilog2_u32(uint32_t n)$/;"	f
__ilog2_u64	include/nautilus/math.h	/^int __ilog2_u64(uint64_t n)$/;"	f
__init	src/acpi/acpica/accommon.h	59;"	d
__init	src/acpi/osl.c	51;"	d	file:
__init	src/acpi/tables.c	38;"	d	file:
__init_refok	src/acpi/osl.c	55;"	d	file:
__initdata	src/acpi/acpica/accommon.h	60;"	d
__initdata_refok	src/acpi/osl.c	56;"	d	file:
__ioapic_init	src/dev/ioapic.c	/^__ioapic_init (struct ioapic * ioapic, uint8_t ioapic_id)$/;"	f	file:
__iomem	src/acpi/osl.c	52;"	d	file:
__ipi_measure_bcast	src/test/ipi.c	/^__ipi_measure_bcast (void * arg)$/;"	f	file:
__ipi_measure_oneway	src/test/ipi.c	/^__ipi_measure_oneway (void * arg)$/;"	f	file:
__ipi_measure_roundtrip	src/test/ipi.c	/^__ipi_measure_roundtrip (void * arg)$/;"	f	file:
__ismask	include/nautilus/naut_string.h	45;"	d
__jmp_buf	include/nautilus/setjmp.h	/^typedef uint64_t __jmp_buf[8];$/;"	t
__jmp_buf	src/include/nautilus/setjmp.h	/^typedef uint64_t __jmp_buf[8];$/;"	t
__jmp_buf_tag	include/nautilus/setjmp.h	/^struct __jmp_buf_tag {$/;"	s
__jmp_buf_tag	src/include/nautilus/setjmp.h	/^struct __jmp_buf_tag {$/;"	s
__jmpbuf	include/nautilus/setjmp.h	/^	__jmp_buf __jmpbuf;$/;"	m	struct:__jmp_buf_tag
__jmpbuf	src/include/nautilus/setjmp.h	/^	__jmp_buf __jmpbuf;$/;"	m	struct:__jmp_buf_tag
__list_add	include/nautilus/list.h	/^static inline void __list_add(struct list_head *nelm,$/;"	f
__list_del	include/nautilus/list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_for_each	include/nautilus/list.h	321;"	d
__list_splice	include/nautilus/list.h	/^static inline void __list_splice(struct list_head *list,$/;"	f
__m128	include/nautilus/intrinsics.h	/^typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));$/;"	t
__m128d	include/nautilus/intrinsics.h	/^typedef double __m128d __attribute__ ((__vector_size__ (16), __may_alias__));$/;"	t
__m128i	include/nautilus/intrinsics.h	/^typedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__, aligned(16)));$/;"	t
__m64	include/nautilus/intrinsics.h	/^typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));$/;"	t
__mm_boot_alloc	src/nautilus/mm/boot_mm.c	/^__mm_boot_alloc (ulong_t size, ulong_t align, ulong_t goal)$/;"	f
__movop_1	include/nautilus/percpu.h	34;"	d
__movop_2	include/nautilus/percpu.h	35;"	d
__movop_4	include/nautilus/percpu.h	36;"	d
__movop_8	include/nautilus/percpu.h	37;"	d
__newlocale	src/nautilus/libccompat.c	/^locale_t __newlocale (int category_mask, const char *locale, locale_t base)$/;"	f
__nl_langinfo_l	src/nautilus/libccompat.c	/^char *__nl_langinfo_l (nl_item item, locale_t locale)$/;"	f
__noinline	include/nautilus/intrinsics.h	34;"	d
__packed	include/dev/pci.h	/^    } __packed;$/;"	m	struct:pci_cfg_space	typeref:union:pci_cfg_space::__anon66
__packed	include/dev/pci.h	/^} __packed;$/;"	v	typeref:struct:pci_cfg_space
__packed	include/dev/vesa.h	/^} __packed;$/;"	v	typeref:struct:vesa_adapter_info
__packed	include/dev/vesa.h	/^} __packed;$/;"	v	typeref:struct:vesa_mode_info
__packed	include/nautilus/acpi.h	/^    } __packed;$/;"	m	struct:mp_table_entry	typeref:union:mp_table_entry::__anon35
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_float_ptr_struct
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_table
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_table_entry
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_table_entry_bus
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_table_entry_cpu
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_table_entry_ioapic
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_table_entry_ioint
__packed	include/nautilus/acpi.h	/^} __packed;$/;"	v	typeref:struct:mp_table_entry_lint
__packed	include/nautilus/cpuid.h	/^        } __packed;$/;"	m	union:cpuid_amd_ecx_flags::__anon40	typeref:struct:cpuid_amd_ecx_flags::__anon40::__anon41
__packed	include/nautilus/cpuid.h	/^        } __packed;$/;"	m	union:cpuid_amd_edx_flags::__anon42	typeref:struct:cpuid_amd_edx_flags::__anon42::__anon43
__packed	include/nautilus/cpuid.h	/^        } __packed;$/;"	m	union:cpuid_ecx_flags::__anon36	typeref:struct:cpuid_ecx_flags::__anon36::__anon37
__packed	include/nautilus/cpuid.h	/^        } __packed;$/;"	m	union:cpuid_edx_flags::__anon38	typeref:struct:cpuid_edx_flags::__anon38::__anon39
__packed	include/nautilus/cpuid.h	/^        } __packed;$/;"	m	union:cpuid_ext_feat_flags_ebx::__anon44	typeref:struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
__packed	include/nautilus/cpuid.h	/^    } __packed;$/;"	m	struct:cpuid_amd_ecx_flags	typeref:union:cpuid_amd_ecx_flags::__anon40
__packed	include/nautilus/cpuid.h	/^    } __packed;$/;"	m	struct:cpuid_amd_edx_flags	typeref:union:cpuid_amd_edx_flags::__anon42
__packed	include/nautilus/cpuid.h	/^    } __packed;$/;"	m	struct:cpuid_ecx_flags	typeref:union:cpuid_ecx_flags::__anon36
__packed	include/nautilus/cpuid.h	/^    } __packed;$/;"	m	struct:cpuid_edx_flags	typeref:union:cpuid_edx_flags::__anon38
__packed	include/nautilus/cpuid.h	/^    } __packed;$/;"	m	struct:cpuid_ext_feat_flags_ebx	typeref:union:cpuid_ext_feat_flags_ebx::__anon44
__packed	include/nautilus/cpuid.h	/^} __packed;$/;"	v	typeref:struct:cpuid_amd_ecx_flags
__packed	include/nautilus/cpuid.h	/^} __packed;$/;"	v	typeref:struct:cpuid_amd_edx_flags
__packed	include/nautilus/cpuid.h	/^} __packed;$/;"	v	typeref:struct:cpuid_ecx_flags
__packed	include/nautilus/cpuid.h	/^} __packed;$/;"	v	typeref:struct:cpuid_edx_flags
__packed	include/nautilus/cpuid.h	/^} __packed;$/;"	v	typeref:struct:cpuid_ext_feat_flags_ebx
__packed	include/nautilus/cpuid.h	/^} __packed;$/;"	v	typeref:struct:cpuid_feature_flags
__packed	include/nautilus/gdt.h	/^} __packed;$/;"	v	typeref:struct:gdt_desc32
__packed	include/nautilus/gdt.h	/^} __packed;$/;"	v	typeref:struct:gdt_desc64
__packed	include/nautilus/idt.h	/^        } __packed;$/;"	m	union:gate_desc64::__anon61	typeref:struct:gate_desc64::__anon61::__anon63
__packed	include/nautilus/idt.h	/^    } __packed;$/;"	m	struct:gate_desc64	typeref:union:gate_desc64::__anon61
__packed	include/nautilus/idt.h	/^} __packed;$/;"	v	typeref:struct:excp_entry_state
__packed	include/nautilus/idt.h	/^} __packed;$/;"	v	typeref:struct:gate_desc64
__packed	include/nautilus/idt.h	/^} __packed;$/;"	v	typeref:struct:idt_desc
__packed	include/nautilus/intrinsics.h	27;"	d
__packed	include/nautilus/paging.h	/^} __packed;$/;"	v	typeref:struct:nk_pf_error
__packed	include/nautilus/realmode.h	/^} __packed;$/;"	v	typeref:struct:nk_real_mode_int_args
__packed	include/nautilus/sfi.h	/^} __packed; $/;"	v	typeref:struct:efi_mem_desc
__packed	include/nautilus/sfi.h	/^} __packed;$/;"	v	typeref:struct:sfi_common_hdr
__packed	include/nautilus/sfi.h	/^} __packed;$/;"	v	typeref:struct:sfi_gpio_entry
__packed	include/nautilus/sfi.h	/^} __packed;$/;"	v	typeref:struct:sfi_m_rtc_entry
__packed	include/nautilus/sfi.h	/^} __packed;$/;"	v	typeref:struct:sfi_m_timer_entry
__packed	include/nautilus/sfi.h	/^} __packed;$/;"	v	typeref:struct:sfi_plat_dev_entry
__packed	include/nautilus/smp.h	/^} __packed;$/;"	v	typeref:struct:ap_init_area
__packed	include/nautilus/thread.h	/^} __packed;$/;"	v	typeref:struct:nk_thread
__packed	src/nautilus/libccompat.c	/^    } __packed;$/;"	m	union:ieee754dbl	typeref:struct:ieee754dbl::__anon130	file:
__packed	src/nautilus/libccompat.c	/^} __packed;$/;"	v	typeref:union:ieee754dbl
__packed	src/nautilus/mm/kmem.c	/^} __packed;$/;"	v	typeref:struct:kmem_block_hdr
__page_align	include/nautilus/paging.h	219;"	d
__per_cpu_get	include/nautilus/percpu.h	55;"	d
__per_cpu_put	include/nautilus/percpu.h	88;"	d
__percpu_seg	include/nautilus/percpu.h	50;"	d
__popcountdi2	src/nautilus/libccompat.c	/^__popcountdi2 (long long a)$/;"	f
__rb_erase_color	src/nautilus/rbtree.c	/^static void __rb_erase_color(struct rb_node *node, struct rb_node *parent,$/;"	f	file:
__rb_rotate_left	src/nautilus/rbtree.c	/^static void __rb_rotate_left(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__rb_rotate_right	src/nautilus/rbtree.c	/^static void __rb_rotate_right(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__ref	src/acpi/osl.c	53;"	d	file:
__refdata	src/acpi/osl.c	54;"	d	file:
__reg_op	lib/bitmap.c	/^static int __reg_op(unsigned long *bitmap, int pos, int order, int reg_op)$/;"	f	file:
__roundup_pow_of_two	include/nautilus/math.h	/^unsigned long __roundup_pow_of_two(unsigned long n)$/;"	f
__s16	src/fs/ext2/ext2_types.h	/^typedef __S16_TYPEDEF __s16;$/;"	t
__s32	src/fs/ext2/ext2_types.h	/^typedef __S32_TYPEDEF __s32;$/;"	t
__s64	src/fs/ext2/ext2_types.h	/^typedef __S64_TYPEDEF __s64;$/;"	t
__s64	src/fs/ext2/ext2_types.h	/^typedef __signed__ long long 	__s64;$/;"	t
__s64	src/fs/ext2/ext2_types.h	/^typedef int		__s64;$/;"	t
__s64	src/fs/ext2/ext2_types.h	/^typedef long		__s64;$/;"	t
__s64	src/fs/ext2/ext2_types.h	/^typedef signed long long 	__s64;$/;"	t
__s8	src/fs/ext2/ext2_types.h	/^typedef __S8_TYPEDEF __s8;$/;"	t
__s8	src/fs/ext2/ext2_types.h	/^typedef signed char __s8;$/;"	t
__seek	src/nautilus/fs.c	/^static ssize_t __seek(nk_fs_fd_t fd, size_t offset, int whence) $/;"	f	file:
__serial_print	src/dev/serial.c	/^__serial_print (const char * format, va_list ap) $/;"	f
__set_bit	src/nautilus/mm/buddy.c	/^__set_bit (ulong_t nr, volatile void * addr)$/;"	f	file:
__srctree	Makefile	/^__srctree = $(srctree)\/$/;"	m
__srctree	Makefile	/^__srctree =$/;"	m
__stringify	include/nautilus/percpu.h	49;"	d
__sync_add_and_fetch	src/legion_runtime/atomics.h	/^    inline int __sync_add_and_fetch(int *ptr, int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	src/legion_runtime/atomics.h	/^    inline long __sync_add_and_fetch(long *ptr, long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	src/legion_runtime/atomics.h	/^    inline long long __sync_add_and_fetch(long long *ptr, long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	src/legion_runtime/atomics.h	/^    inline unsigned int __sync_add_and_fetch(unsigned int *ptr, unsigned int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	src/legion_runtime/atomics.h	/^    inline unsigned long __sync_add_and_fetch(unsigned long *ptr, unsigned long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_add_and_fetch	src/legion_runtime/atomics.h	/^    inline unsigned long long __sync_add_and_fetch(unsigned long long *ptr, unsigned long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	src/legion_runtime/atomics.h	/^    inline int __sync_fetch_and_add(int *ptr, int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	src/legion_runtime/atomics.h	/^    inline long __sync_fetch_and_add(long *ptr, long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	src/legion_runtime/atomics.h	/^    inline long long __sync_fetch_and_add(long long *ptr, long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	src/legion_runtime/atomics.h	/^    inline unsigned int __sync_fetch_and_add(unsigned int *ptr, unsigned int value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	src/legion_runtime/atomics.h	/^    inline unsigned long __sync_fetch_and_add(unsigned long *ptr, unsigned long value)$/;"	f	namespace:LegionRuntime::LowLevel
__sync_fetch_and_add	src/legion_runtime/atomics.h	/^    inline unsigned long long __sync_fetch_and_add(unsigned long long *ptr, unsigned long long value)$/;"	f	namespace:LegionRuntime::LowLevel
__thread_fork	src/nautilus/thread.c	/^__thread_fork (void)$/;"	f
__tolower	include/nautilus/naut_string.h	/^static inline unsigned char __tolower(unsigned char c)$/;"	f
__toupper	include/nautilus/naut_string.h	/^static inline unsigned char __toupper(unsigned char c)$/;"	f
__u16	src/fs/ext2/ext2_types.h	/^typedef	unsigned int	__u16;$/;"	t
__u16	src/fs/ext2/ext2_types.h	/^typedef	unsigned short	__u16;$/;"	t
__u16	src/fs/ext2/ext2_types.h	/^typedef __U16_TYPEDEF __u16;$/;"	t
__u32	src/fs/ext2/ext2_types.h	/^typedef	unsigned int	__u32;$/;"	t
__u32	src/fs/ext2/ext2_types.h	/^typedef	unsigned long	__u32;$/;"	t
__u32	src/fs/ext2/ext2_types.h	/^typedef	unsigned short	__u32;$/;"	t
__u32	src/fs/ext2/ext2_types.h	/^typedef __U32_TYPEDEF __u32;$/;"	t
__u64	src/fs/ext2/ext2_types.h	/^typedef __U64_TYPEDEF __u64;$/;"	t
__u64	src/fs/ext2/ext2_types.h	/^typedef unsigned int	__u64;$/;"	t
__u64	src/fs/ext2/ext2_types.h	/^typedef unsigned long	__u64;$/;"	t
__u64	src/fs/ext2/ext2_types.h	/^typedef unsigned long long	__u64;$/;"	t
__u8	src/fs/ext2/ext2_types.h	/^typedef __U8_TYPEDEF __u8;$/;"	t
__u8	src/fs/ext2/ext2_types.h	/^typedef unsigned char __u8;$/;"	t
__v16qi	include/nautilus/intrinsics.h	/^typedef char __v16qi __attribute__ ((__vector_size__ (16)));$/;"	t
__v2df	include/nautilus/intrinsics.h	/^typedef double __v2df __attribute__ ((__vector_size__ (16)));$/;"	t
__v2di	include/nautilus/intrinsics.h	/^typedef long long __v2di __attribute__ ((__vector_size__ (16)));$/;"	t
__v4sf	include/nautilus/intrinsics.h	/^typedef float __v4sf __attribute__ ((__vector_size__ (16)));$/;"	t
__v4si	include/nautilus/intrinsics.h	/^typedef int __v4si __attribute__ ((__vector_size__ (16)));$/;"	t
__v8hi	include/nautilus/intrinsics.h	/^typedef short __v8hi __attribute__ ((__vector_size__ (16)));$/;"	t
__xpand_str	include/nautilus/percpu.h	48;"	d
_acpi_module_name	include/acpi/acoutput.h	198;"	d
_apic_msr_read	include/dev/apic.h	/^static inline uint64_t _apic_msr_read(uint32_t msr)$/;"	f
_apic_msr_write	include/dev/apic.h	/^static inline void _apic_msr_write(uint32_t msr, $/;"	f
_bnd	include/acpi/platform/acenv.h	300;"	d
_compat	src/asm/realmode.S	/^_compat:$/;"	l
_compat_again	src/asm/realmode.S	/^_compat_again:$/;"	l
_ctype	src/nautilus/naut_string.c	/^unsigned char _ctype[] = {$/;"	v
_desc_long	src/asm/realmode.S	/^_desc_long:	$/;"	l
_desc_real	src/asm/realmode.S	/^_desc_real:$/;"	l
_destroy_vc	src/nautilus/vc.c	/^static int _destroy_vc(struct nk_virtual_console *vc) $/;"	f	file:
_doprnt	src/nautilus/doprnt.c	/^void _doprnt (register const char * fmt, $/;"	f
_doprnt_truncates	src/nautilus/doprnt.c	/^bool_t	_doprnt_truncates = FALSE;$/;"	v
_eextratext	scripts/kallsyms.c	/^static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext, _eextratext;$/;"	v	file:
_einittext	scripts/kallsyms.c	/^static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext, _eextratext;$/;"	v	file:
_etext	scripts/kallsyms.c	/^static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext, _eextratext;$/;"	v	file:
_gdt	src/asm/realmode.S	/^_gdt:$/;"	l
_gdt16	src/asm/realmode.S	/^_gdt16:$/;"	l
_gdt64	src/asm/realmode.S	/^_gdt64:$/;"	l
_gdtend	src/asm/realmode.S	/^_gdtend:$/;"	l
_idt16	src/asm/realmode.S	/^_idt16:$/;"	l
_idt64	src/asm/realmode.S	/^_idt64:$/;"	l
_int_instr	src/asm/realmode.S	/^_int_instr:$/;"	l
_local_data	src/asm/realmode.S	/^_local_data:	$/;"	l
_long_again	src/asm/realmode.S	/^_long_again:	$/;"	l
_long_orig_gdt	src/asm/realmode.S	/^_long_orig_gdt:$/;"	l
_mm_add_ps	include/nautilus/intrinsics.h	/^_mm_add_ps (__m128 __A, __m128 __B)$/;"	f
_mm_and_si128	include/nautilus/intrinsics.h	/^_mm_and_si128 (__m128i __A, __m128i __B)$/;"	f
_mm_andnot_si128	include/nautilus/intrinsics.h	/^_mm_andnot_si128 (__m128i __A, __m128i __B)$/;"	f
_mm_cvtsi128_si32	include/nautilus/intrinsics.h	/^_mm_cvtsi128_si32 (__m128i __A)$/;"	f
_mm_cvtsi32_si128	include/nautilus/intrinsics.h	/^_mm_cvtsi32_si128 (int __A)$/;"	f
_mm_load_ps	include/nautilus/intrinsics.h	/^_mm_load_ps (float const *__P)$/;"	f
_mm_mul_ps	include/nautilus/intrinsics.h	/^_mm_mul_ps (__m128 __A, __m128 __B)$/;"	f
_mm_or_si128	include/nautilus/intrinsics.h	/^_mm_or_si128 (__m128i __A, __m128i __B)$/;"	f
_mm_rcp_ps	include/nautilus/intrinsics.h	/^_mm_rcp_ps (__m128 __A)$/;"	f
_mm_set1_epi32	include/nautilus/intrinsics.h	/^_mm_set1_epi32 (int __A)$/;"	f
_mm_set1_ps	include/nautilus/intrinsics.h	/^_mm_set1_ps (float __F)$/;"	f
_mm_set_epi32	include/nautilus/intrinsics.h	/^_mm_set_epi32 (int __q3, int __q2, int __q1, int __q0)$/;"	f
_mm_set_ps	include/nautilus/intrinsics.h	/^_mm_set_ps (const float __Z, const float __Y, const float __X, const float __W)$/;"	f
_mm_shuffle_epi32	include/nautilus/intrinsics.h	/^_mm_shuffle_epi32 (__m128i __A, const int __mask)$/;"	f
_mm_stream_ps	include/nautilus/intrinsics.h	/^_mm_stream_ps (float *__P, __m128 __A)$/;"	f
_mm_sub_ps	include/nautilus/intrinsics.h	/^_mm_sub_ps (__m128 __A, __m128 __B)$/;"	f
_mm_xor_si128	include/nautilus/intrinsics.h	/^_mm_xor_si128 (__m128i __A, __m128i __B)$/;"	f
_nk_real_mode_int	src/asm/realmode.S	/^_nk_real_mode_int:$/;"	l
_nk_real_mode_int_END	src/asm/realmode.S	/^_nk_real_mode_int_END:$/;"	l
_nk_thread_init	src/nautilus/thread.c	/^_nk_thread_init (nk_thread_t * t, $/;"	f
_out	src/asm/realmode.S	/^_out:$/;"	l
_real	src/asm/realmode.S	/^_real:$/;"	l
_rsp	src/asm/realmode.S	/^_rsp:$/;"	l
_scan_modes	src/dev/vesa.c	/^static int _scan_modes(struct vesa_mode_request *r, vesa_mode_t *mode, scan_action s)$/;"	f	file:
_sched_make_runnable	src/nautilus/scheduler.c	/^static int    _sched_make_runnable(struct nk_thread *thread, int cpu, int admit, int have_lock)$/;"	f	file:
_sched_need_resched	src/nautilus/scheduler.c	/^struct nk_thread *_sched_need_resched(int have_lock)$/;"	f
_seg_start	src/asm/realmode.S	/^_seg_start:	          \/\/ this is at address 0x0 in the segment$/;"	l
_sextratext	scripts/kallsyms.c	/^static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext, _eextratext;$/;"	v	file:
_sinittext	scripts/kallsyms.c	/^static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext, _eextratext;$/;"	v	file:
_sleep	src/nautilus/timer.c	/^static int _sleep(uint64_t ns, int spin) $/;"	f	file:
_stext	scripts/kallsyms.c	/^static unsigned long long _stext, _etext, _sinittext, _einittext, _sextratext, _eextratext;$/;"	v	file:
_switch_to_vc	src/nautilus/vc.c	/^static int _switch_to_vc(struct nk_virtual_console *vc) $/;"	f	file:
_unreal	src/asm/realmode.S	/^_unreal:	$/;"	l
_unreal_again	src/asm/realmode.S	/^_unreal_again:	$/;"	l
_vc_clear_specific	src/nautilus/vc.c	/^static int _vc_clear_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f	file:
_vc_display_char	src/nautilus/vc.c	/^static int _vc_display_char(uint8_t c, uint8_t attr, uint8_t x, uint8_t y) $/;"	f	file:
_vc_display_char_specific	src/nautilus/vc.c	/^static int _vc_display_char_specific(struct nk_virtual_console *vc, uint8_t c, uint8_t attr, uint8_t x, uint8_t y) $/;"	f	file:
_vc_print_specific	src/nautilus/vc.c	/^static int _vc_print_specific(struct nk_virtual_console *vc, char *s) $/;"	f	file:
_vc_putchar	src/nautilus/vc.c	/^static int _vc_putchar(uint8_t c) $/;"	f	file:
_vc_putchar_specific	src/nautilus/vc.c	/^static int _vc_putchar_specific(struct nk_virtual_console *vc, uint8_t c) $/;"	f	file:
_vc_scrollup_specific	src/nautilus/vc.c	/^static int _vc_scrollup_specific(struct nk_virtual_console *vc) $/;"	f	file:
_vc_setattr_specific	src/nautilus/vc.c	/^static int _vc_setattr_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f	file:
_vc_setpos	src/nautilus/vc.c	/^static int _vc_setpos(uint8_t x, uint8_t y) $/;"	f	file:
_vc_setpos_specific	src/nautilus/vc.c	/^static int _vc_setpos_specific(struct nk_virtual_console *vc, uint8_t x, uint8_t y) $/;"	f	file:
_vesa_doit	src/dev/vesa.c	/^static int _vesa_doit(struct nk_real_mode_int_args *r, void *esdidata, int count)$/;"	f	file:
_vesa_done	src/dev/vesa.c	/^static int _vesa_done()$/;"	f	file:
a	include/nautilus/cpuid.h	/^    uint32_t a;$/;"	m	struct:cpuid_ret
a	src/lua_src/nt_lnautlib.c	/^	int a;$/;"	m	struct:test	file:
a	src/lua_src/test.c	/^char a;$/;"	m	struct:test	file:
a	src/test/hpcg/sparsemat.h	/^    int64_t a;$/;"	m	struct:lgncg::I64Tuple
a1	src/legion_runtime/rectangle_set.h	/^      T a1, a2, b;$/;"	m	class:LegionRuntime::HighLevel::Segment
a2	src/legion_runtime/rectangle_set.h	/^      T a1, a2, b;$/;"	m	class:LegionRuntime::HighLevel::Segment
a_flags	Makefile	/^a_flags = -Wp,-MD,$(depfile) $(AFLAGS) $(AFLAGS_KERNEL) \\$/;"	m
abm	include/nautilus/cpuid.h	/^            uint8_t abm         : 1; \/\/ advanced bit manipulation (LZCNT instr)$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
abort	src/nautilus/libccompat.c	/^abort(void) $/;"	f
abs	src/nautilus/libccompat.c	/^double abs(double x)$/;"	f
abs_time	src/legion_runtime/utilities.h	/^      static double abs_time(void)$/;"	f	class:LegionRuntime::LowLevel::Clock
abs_to_rel	src/legion_runtime/utilities.h	/^      static double abs_to_rel(double abs_time)$/;"	f	class:LegionRuntime::LowLevel::Clock
access_bit_mask	src/acpi/acpica/aclocal.h	/^	u16 access_bit_mask;$/;"	m	struct:acpi_bit_register_info
access_size	include/acpi/acrestyp.h	/^	uint8_t access_size;$/;"	m	struct:acpi_resource_generic_register
access_width	include/acpi/actbl.h	/^	uint8_t access_width;	\/* Minimum Access size (ACPI 3.0) *\/$/;"	m	struct:acpi_generic_address
access_width	include/dev/hpet.h	/^    uint8_t access_width;$/;"	m	struct:hpet_dev
accum_child_time	src/legion_runtime/lowlevel.cc	/^      double accum_child_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
accum_child_time	src/legion_runtime/shared_lowlevel.cc	/^      double accum_child_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
accumulate_events	src/legion_runtime/region_tree.cc	/^    void MaterializedView::accumulate_events(std::set<Event> &all_events)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
ack_bitmap	include/test/ipi.h	/^    volatile uint64_t * ack_bitmap;     \/\/ for bcast, remote cores set their corresponding bit on a recv$/;"	m	struct:ipi_exp_data
acos	src/nautilus/libccompat.c	/^double acos(double x)$/;"	f
acpi	include/nautilus/cpuid.h	/^            uint8_t acpi     : 1; \/\/ thermal monitor and software controlled clock facilities$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
acpi_address_range_id	include/nautilus/acpi.h	/^enum acpi_address_range_id {$/;"	g
acpi_adr_space_handler	include/acpi/actypes.h	/^acpi_status(*acpi_adr_space_handler) (uint32_t function,$/;"	t
acpi_adr_space_setup	include/acpi/actypes.h	/^acpi_status(*acpi_adr_space_setup) (acpi_handle region_handle,$/;"	t
acpi_adr_space_type	include/acpi/actypes.h	/^typedef uint8_t acpi_adr_space_type;$/;"	t
acpi_asf_address	include/acpi/actbl2.h	/^struct acpi_asf_address {$/;"	s
acpi_asf_alert	include/acpi/actbl2.h	/^struct acpi_asf_alert {$/;"	s
acpi_asf_alert_data	include/acpi/actbl2.h	/^struct acpi_asf_alert_data {$/;"	s
acpi_asf_control_data	include/acpi/actbl2.h	/^struct acpi_asf_control_data {$/;"	s
acpi_asf_header	include/acpi/actbl2.h	/^struct acpi_asf_header {$/;"	s
acpi_asf_info	include/acpi/actbl2.h	/^struct acpi_asf_info {$/;"	s
acpi_asf_remote	include/acpi/actbl2.h	/^struct acpi_asf_remote {$/;"	s
acpi_asf_rmcp	include/acpi/actbl2.h	/^struct acpi_asf_rmcp {$/;"	s
acpi_asf_type	include/acpi/actbl2.h	/^enum acpi_asf_type {$/;"	g
acpi_bert_error_severity	include/acpi/actbl1.h	/^enum acpi_bert_error_severity {$/;"	g
acpi_bert_region	include/acpi/actbl1.h	/^struct acpi_bert_region {$/;"	s
acpi_bit_register_info	src/acpi/acpica/aclocal.h	/^struct acpi_bit_register_info {$/;"	s
acpi_btype	src/acpi/acpica/aclocal.h	/^	u32 acpi_btype;$/;"	m	struct:acpi_parse_obj_asl
acpi_buffer	include/acpi/actypes.h	/^struct acpi_buffer {$/;"	s
acpi_ca_version	include/acpi/actypes.h	/^	uint32_t acpi_ca_version;$/;"	m	struct:acpi_system_info
acpi_cache_t	include/acpi/actypes.h	233;"	d
acpi_cache_t	include/acpi/actypes.h	235;"	d
acpi_common_state	src/acpi/acpica/aclocal.h	/^struct acpi_common_state {$/;"	s
acpi_control_state	src/acpi/acpica/aclocal.h	/^struct acpi_control_state {$/;"	s
acpi_cpep_polling	include/acpi/actbl1.h	/^struct acpi_cpep_polling {$/;"	s
acpi_cpu_flags	include/acpi/actypes.h	226;"	d
acpi_cpu_flags	include/acpi/platform/acnautilus.h	72;"	d
acpi_create_field_info	src/acpi/acpica/aclocal.h	/^struct acpi_create_field_info {$/;"	s
acpi_current_gpe_count	src/acpi/acpica/acglobal.h	/^u32 acpi_current_gpe_count;$/;"	v
acpi_db_method_info	src/acpi/acpica/aclocal.h	/^struct acpi_db_method_info {$/;"	s
acpi_debug_mem_block	src/acpi/acpica/aclocal.h	/^struct acpi_debug_mem_block {$/;"	s
acpi_debug_mem_header	src/acpi/acpica/aclocal.h	/^struct acpi_debug_mem_header {$/;"	s
acpi_device_info	include/acpi/actypes.h	/^struct acpi_device_info {$/;"	s
acpi_disable	include/acpi/actbl.h	/^	uint8_t acpi_disable;	\/* Value to write to smi_cmd to disable ACPI *\/$/;"	m	struct:acpi_table_fadt
acpi_disable	src/arch/hrt/shutdown.c	/^    uint8_t   acpi_disable;$/;"	m	struct:shutdown_info	file:
acpi_disable	src/arch/x64/shutdown.c	/^    uint8_t   acpi_disable;$/;"	m	struct:shutdown_info	file:
acpi_disabled	src/nautilus/acpi.c	/^int acpi_disabled;$/;"	v
acpi_dmar_atsr	include/acpi/actbl2.h	/^struct acpi_dmar_atsr {$/;"	s
acpi_dmar_device_scope	include/acpi/actbl2.h	/^struct acpi_dmar_device_scope {$/;"	s
acpi_dmar_hardware_unit	include/acpi/actbl2.h	/^struct acpi_dmar_hardware_unit {$/;"	s
acpi_dmar_header	include/acpi/actbl2.h	/^struct acpi_dmar_header {$/;"	s
acpi_dmar_pci_path	include/acpi/actbl2.h	/^struct acpi_dmar_pci_path {$/;"	s
acpi_dmar_reserved_memory	include/acpi/actbl2.h	/^struct acpi_dmar_reserved_memory {$/;"	s
acpi_dmar_rhsa	include/acpi/actbl2.h	/^struct acpi_dmar_rhsa {$/;"	s
acpi_dmar_scope_type	include/acpi/actbl2.h	/^enum acpi_dmar_scope_type {$/;"	g
acpi_dmar_type	include/acpi/actbl2.h	/^enum acpi_dmar_type {$/;"	g
acpi_einj_actions	include/acpi/actbl1.h	/^enum acpi_einj_actions {$/;"	g
acpi_einj_command_status	include/acpi/actbl1.h	/^enum acpi_einj_command_status {$/;"	g
acpi_einj_entry	include/acpi/actbl1.h	/^struct acpi_einj_entry {$/;"	s
acpi_einj_instructions	include/acpi/actbl1.h	/^enum acpi_einj_instructions {$/;"	g
acpi_einj_trigger	include/acpi/actbl1.h	/^struct acpi_einj_trigger {$/;"	s
acpi_enable	include/acpi/actbl.h	/^	uint8_t acpi_enable;		\/* Value to write to smi_cmd to enable ACPI *\/$/;"	m	struct:acpi_table_fadt
acpi_enable	src/arch/hrt/shutdown.c	/^    uint8_t   acpi_enable;$/;"	m	struct:shutdown_info	file:
acpi_enable	src/arch/x64/shutdown.c	/^    uint8_t   acpi_enable;$/;"	m	struct:shutdown_info	file:
acpi_error	src/acpi/acpica/utxferror.c	/^acpi_error(const char *module_name, u32 line_number, const char *format, ...)$/;"	f
acpi_erst_actions	include/acpi/actbl1.h	/^enum acpi_erst_actions {$/;"	g
acpi_erst_command_status	include/acpi/actbl1.h	/^enum acpi_erst_command_status {$/;"	g
acpi_erst_entry	include/acpi/actbl1.h	/^struct acpi_erst_entry {$/;"	s
acpi_erst_info	include/acpi/actbl1.h	/^struct acpi_erst_info {$/;"	s
acpi_erst_instructions	include/acpi/actbl1.h	/^enum acpi_erst_instructions {$/;"	g
acpi_event_handler	include/acpi/actypes.h	/^typedef uint32_t(*acpi_event_handler) (void *context);$/;"	t
acpi_event_status	include/acpi/actypes.h	/^typedef uint32_t acpi_event_status;$/;"	t
acpi_event_type	include/acpi/actypes.h	/^typedef uint32_t acpi_event_type;$/;"	t
acpi_exception_handler	include/acpi/actypes.h	/^acpi_status(*acpi_exception_handler) (acpi_status aml_status,$/;"	t
acpi_execute_type	include/acpi/acpiosxf.h	/^} acpi_execute_type;$/;"	t	typeref:enum:__anon27
acpi_field_info	src/acpi/acpica/aclocal.h	/^struct acpi_field_info {$/;"	s
acpi_find_context	src/acpi/acpica/aclocal.h	/^struct acpi_find_context {$/;"	s
acpi_find_root_pointer	src/acpi/acpica/tbxfroot.c	/^acpi_status acpi_find_root_pointer(acpi_size *table_address)$/;"	f
acpi_fix_pin2_polarity	src/nautilus/acpi.c	/^int acpi_fix_pin2_polarity ;$/;"	v
acpi_fixed_event_count	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_fixed_event_count[ACPI_NUM_FIXED_EVENTS];$/;"	v
acpi_fixed_event_handler	src/acpi/acpica/aclocal.h	/^struct acpi_fixed_event_handler {$/;"	s
acpi_fixed_event_info	src/acpi/acpica/aclocal.h	/^struct acpi_fixed_event_info {$/;"	s
acpi_gbl_FADT	src/acpi/acpica/acglobal.h	/^struct acpi_table_fadt acpi_gbl_FADT;$/;"	v	typeref:struct:acpi_table_fadt
acpi_gbl_exception_names_aml	include/acpi/acexcep.h	/^char const *acpi_gbl_exception_names_aml[] = {$/;"	v
acpi_gbl_exception_names_ctrl	include/acpi/acexcep.h	/^char const *acpi_gbl_exception_names_ctrl[] = {$/;"	v
acpi_gbl_exception_names_env	include/acpi/acexcep.h	/^char const *acpi_gbl_exception_names_env[] = {$/;"	v
acpi_gbl_exception_names_pgm	include/acpi/acexcep.h	/^char const *acpi_gbl_exception_names_pgm[] = {$/;"	v
acpi_gbl_exception_names_tbl	include/acpi/acexcep.h	/^char const *acpi_gbl_exception_names_tbl[] = {$/;"	v
acpi_gbl_integer_bit_width	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u8 acpi_gbl_integer_bit_width;$/;"	v
acpi_gbl_integer_byte_width	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u8 acpi_gbl_integer_byte_width;$/;"	v
acpi_gbl_integer_nybble_width	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u8 acpi_gbl_integer_nybble_width;$/;"	v
acpi_gbl_original_dbg_layer	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_original_dbg_layer;$/;"	v
acpi_gbl_original_dbg_level	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_original_dbg_level;$/;"	v
acpi_gbl_root_table_list	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN struct acpi_table_list acpi_gbl_root_table_list;$/;"	v	typeref:struct:acpi_table_list
acpi_gbl_system_awake_and_running	src/acpi/acpica/acglobal.h	/^u8 acpi_gbl_system_awake_and_running;$/;"	v
acpi_gbl_trace_dbg_layer	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_trace_dbg_layer;$/;"	v
acpi_gbl_trace_dbg_level	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gbl_trace_dbg_level;$/;"	v
acpi_gbl_trace_flags	src/acpi/acpica/acglobal.h	/^u32 acpi_gbl_trace_flags;$/;"	v
acpi_gbl_trace_method_name	src/acpi/acpica/acglobal.h	/^acpi_name acpi_gbl_trace_method_name;$/;"	v
acpi_generic_address	include/acpi/actbl.h	/^struct acpi_generic_address {$/;"	s
acpi_generic_state	src/acpi/acpica/aclocal.h	/^union acpi_generic_state {$/;"	u
acpi_get_override_irq	include/nautilus/acpi.h	215;"	d
acpi_get_table_with_size	src/acpi/acpica/tbxface.c	/^acpi_get_table_with_size(char *signature,$/;"	f
acpi_gpe_block_info	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_block_info {$/;"	s
acpi_gpe_callback	src/acpi/acpica/aclocal.h	/^typedef acpi_status(*acpi_gpe_callback) (struct acpi_gpe_xrupt_info *gpe_xrupt_info,$/;"	t
acpi_gpe_count	src/acpi/acpica/acglobal.h	/^ACPI_EXTERN u32 acpi_gpe_count;$/;"	v
acpi_gpe_device_info	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_device_info {$/;"	s
acpi_gpe_dispatch_info	src/acpi/acpica/aclocal.h	/^union acpi_gpe_dispatch_info {$/;"	u
acpi_gpe_event_info	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_event_info {$/;"	s
acpi_gpe_handler	include/acpi/actypes.h	/^uint32_t (*acpi_gpe_handler) (acpi_handle gpe_device, uint32_t gpe_number, void *context);$/;"	t
acpi_gpe_handler_info	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_handler_info {$/;"	s
acpi_gpe_notify_object	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_notify_object {$/;"	s
acpi_gpe_register_info	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_register_info {$/;"	s
acpi_gpe_walk_info	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_walk_info {$/;"	s
acpi_gpe_xrupt_info	src/acpi/acpica/aclocal.h	/^struct acpi_gpe_xrupt_info {$/;"	s
acpi_handle	include/acpi/actypes.h	/^typedef void *acpi_handle;	\/* Actually a ptr to a NS Node *\/$/;"	t
acpi_hest_aer	include/acpi/actbl1.h	/^struct acpi_hest_aer {$/;"	s
acpi_hest_aer_bridge	include/acpi/actbl1.h	/^struct acpi_hest_aer_bridge {$/;"	s
acpi_hest_aer_common	include/acpi/actbl1.h	/^struct acpi_hest_aer_common {$/;"	s
acpi_hest_aer_root	include/acpi/actbl1.h	/^struct acpi_hest_aer_root {$/;"	s
acpi_hest_generic	include/acpi/actbl1.h	/^struct acpi_hest_generic {$/;"	s
acpi_hest_generic_data	include/acpi/actbl1.h	/^struct acpi_hest_generic_data {$/;"	s
acpi_hest_generic_status	include/acpi/actbl1.h	/^struct acpi_hest_generic_status {$/;"	s
acpi_hest_header	include/acpi/actbl1.h	/^struct acpi_hest_header {$/;"	s
acpi_hest_ia_corrected	include/acpi/actbl1.h	/^struct acpi_hest_ia_corrected {$/;"	s
acpi_hest_ia_error_bank	include/acpi/actbl1.h	/^struct acpi_hest_ia_error_bank {$/;"	s
acpi_hest_ia_machine_check	include/acpi/actbl1.h	/^struct acpi_hest_ia_machine_check {$/;"	s
acpi_hest_ia_nmi	include/acpi/actbl1.h	/^struct acpi_hest_ia_nmi {$/;"	s
acpi_hest_notify	include/acpi/actbl1.h	/^struct acpi_hest_notify {$/;"	s
acpi_hest_notify_types	include/acpi/actbl1.h	/^enum acpi_hest_notify_types {$/;"	g
acpi_hest_types	include/acpi/actbl1.h	/^enum acpi_hest_types {$/;"	g
acpi_hpet_page_protect	include/acpi/actbl2.h	/^enum acpi_hpet_page_protect {$/;"	g
acpi_ibft_control	include/acpi/actbl2.h	/^struct acpi_ibft_control {$/;"	s
acpi_ibft_header	include/acpi/actbl2.h	/^struct acpi_ibft_header {$/;"	s
acpi_ibft_initiator	include/acpi/actbl2.h	/^struct acpi_ibft_initiator {$/;"	s
acpi_ibft_nic	include/acpi/actbl2.h	/^struct acpi_ibft_nic {$/;"	s
acpi_ibft_target	include/acpi/actbl2.h	/^struct acpi_ibft_target {$/;"	s
acpi_ibft_type	include/acpi/actbl2.h	/^enum acpi_ibft_type {$/;"	g
acpi_init_handler	include/acpi/actypes.h	/^typedef acpi_status(*acpi_init_handler) (acpi_handle object, uint32_t function);$/;"	t
acpi_initialize_tables	src/acpi/acpica/tbxface.c	/^acpi_initialize_tables(struct acpi_table_desc * initial_table_array,$/;"	f
acpi_integer	include/acpi/actypes.h	/^typedef uint64_t acpi_integer;$/;"	t
acpi_integrity_info	src/acpi/acpica/aclocal.h	/^struct acpi_integrity_info {$/;"	s
acpi_interface_handler	include/acpi/actypes.h	/^uint32_t (*acpi_interface_handler) (acpi_string interface_name, uint32_t supported);$/;"	t
acpi_interface_info	src/acpi/acpica/aclocal.h	/^struct acpi_interface_info {$/;"	s
acpi_interpreter_mode	src/acpi/acpica/aclocal.h	/^} acpi_interpreter_mode;$/;"	t	typeref:enum:__anon104
acpi_interrupt_id	include/nautilus/acpi.h	/^enum acpi_interrupt_id {$/;"	g
acpi_io_address	include/acpi/actypes.h	/^typedef uint32_t acpi_io_address;$/;"	t
acpi_io_address	include/acpi/actypes.h	/^typedef uint64_t acpi_io_address;$/;"	t
acpi_io_attribute	include/acpi/acrestyp.h	/^struct acpi_io_attribute {$/;"	s
acpi_ioapic	src/nautilus/acpi.c	/^int acpi_ioapic;$/;"	v
acpi_irq_model_id	include/nautilus/acpi.h	/^enum acpi_irq_model_id {$/;"	g
acpi_ivrs_de_header	include/acpi/actbl2.h	/^struct acpi_ivrs_de_header {$/;"	s
acpi_ivrs_device4	include/acpi/actbl2.h	/^struct acpi_ivrs_device4 {$/;"	s
acpi_ivrs_device8a	include/acpi/actbl2.h	/^struct acpi_ivrs_device8a {$/;"	s
acpi_ivrs_device8b	include/acpi/actbl2.h	/^struct acpi_ivrs_device8b {$/;"	s
acpi_ivrs_device8c	include/acpi/actbl2.h	/^struct acpi_ivrs_device8c {$/;"	s
acpi_ivrs_device_entry_type	include/acpi/actbl2.h	/^enum acpi_ivrs_device_entry_type {$/;"	g
acpi_ivrs_hardware	include/acpi/actbl2.h	/^struct acpi_ivrs_hardware {$/;"	s
acpi_ivrs_header	include/acpi/actbl2.h	/^struct acpi_ivrs_header {$/;"	s
acpi_ivrs_memory	include/acpi/actbl2.h	/^struct acpi_ivrs_memory {$/;"	s
acpi_ivrs_type	include/acpi/actbl2.h	/^enum acpi_ivrs_type {$/;"	g
acpi_lapic	src/nautilus/acpi.c	/^int acpi_lapic;$/;"	v
acpi_lapic_addr	src/nautilus/acpi.c	/^static uint64_t acpi_lapic_addr = APIC_DEFAULT_PHYS_BASE;$/;"	v	file:
acpi_madt_entry_handler	include/nautilus/acpi.h	/^typedef int (*acpi_madt_entry_handler) (struct acpi_subtable_header *header,$/;"	t
acpi_madt_interrupt_override	include/acpi/actbl1.h	/^struct acpi_madt_interrupt_override {$/;"	s
acpi_madt_interrupt_source	include/acpi/actbl1.h	/^struct acpi_madt_interrupt_source {$/;"	s
acpi_madt_io_apic	include/acpi/actbl1.h	/^struct acpi_madt_io_apic {$/;"	s
acpi_madt_io_sapic	include/acpi/actbl1.h	/^struct acpi_madt_io_sapic {$/;"	s
acpi_madt_local_apic	include/acpi/actbl1.h	/^struct acpi_madt_local_apic {$/;"	s
acpi_madt_local_apic_nmi	include/acpi/actbl1.h	/^struct acpi_madt_local_apic_nmi {$/;"	s
acpi_madt_local_apic_override	include/acpi/actbl1.h	/^struct acpi_madt_local_apic_override {$/;"	s
acpi_madt_local_sapic	include/acpi/actbl1.h	/^struct acpi_madt_local_sapic {$/;"	s
acpi_madt_local_x2apic	include/acpi/actbl1.h	/^struct acpi_madt_local_x2apic {$/;"	s
acpi_madt_local_x2apic_nmi	include/acpi/actbl1.h	/^struct acpi_madt_local_x2apic_nmi {$/;"	s
acpi_madt_nmi_source	include/acpi/actbl1.h	/^struct acpi_madt_nmi_source {$/;"	s
acpi_madt_type	include/acpi/actbl1.h	/^enum acpi_madt_type {$/;"	g
acpi_mcfg_allocation	include/acpi/actbl2.h	/^struct acpi_mcfg_allocation {$/;"	s
acpi_mem_space_context	include/acpi/actypes.h	/^struct acpi_mem_space_context {$/;"	s
acpi_memory_attribute	include/acpi/acrestyp.h	/^struct acpi_memory_attribute {$/;"	s
acpi_memory_list	include/acpi/actypes.h	/^struct acpi_memory_list {$/;"	s
acpi_msct_proximity	include/acpi/actbl1.h	/^struct acpi_msct_proximity {$/;"	s
acpi_mutex	include/acpi/actypes.h	247;"	d
acpi_mutex	include/acpi/actypes.h	265;"	d
acpi_mutex_handle	src/acpi/acpica/aclocal.h	/^typedef u32 acpi_mutex_handle;$/;"	t
acpi_mutex_info	src/acpi/acpica/aclocal.h	/^struct acpi_mutex_info {$/;"	s
acpi_name	include/acpi/actypes.h	/^typedef uint32_t acpi_name;		\/* 4-byte ACPI name *\/$/;"	t
acpi_name_info	src/acpi/acpica/aclocal.h	/^struct acpi_name_info {$/;"	s
acpi_name_union	include/acpi/actbl.h	/^union acpi_name_union {$/;"	u
acpi_namespace_node	src/acpi/acpica/aclocal.h	/^struct acpi_namespace_node {$/;"	s
acpi_namestring_info	src/acpi/acpica/aclocal.h	/^struct acpi_namestring_info {$/;"	s
acpi_native_int	include/acpi/actypes.h	/^typedef s32 acpi_native_int;$/;"	t
acpi_native_int	include/acpi/actypes.h	/^typedef sint64_t acpi_native_int;$/;"	t
acpi_noirq	src/nautilus/acpi.c	/^int acpi_noirq;				\/* skip ACPI IRQ initialization *\/$/;"	v
acpi_notify_handler	include/acpi/actypes.h	/^void (*acpi_notify_handler) (acpi_handle device, uint32_t value, void *context);$/;"	t
acpi_notify_info	src/acpi/acpica/aclocal.h	/^struct acpi_notify_info {$/;"	s
acpi_ns_search_data	src/acpi/acpica/aclocal.h	/^struct acpi_ns_search_data {$/;"	s
acpi_object	include/acpi/actypes.h	/^union acpi_object {$/;"	u
acpi_object_handler	include/acpi/actypes.h	/^void (*acpi_object_handler) (acpi_handle object, void *data);$/;"	t
acpi_object_list	include/acpi/actypes.h	/^struct acpi_object_list {$/;"	s
acpi_object_type	include/acpi/actypes.h	/^typedef uint32_t acpi_object_type;$/;"	t
acpi_opcode_info	src/acpi/acpica/aclocal.h	/^struct acpi_opcode_info {$/;"	s
acpi_os_acquire_mutex	include/acpi/actypes.h	250;"	d
acpi_os_allocate	include/acpi/platform/acnautilus.h	/^static inline void *acpi_os_allocate(acpi_size size)$/;"	f
acpi_os_allocate_zeroed	include/acpi/platform/acnautilus.h	/^static inline void *acpi_os_allocate_zeroed(acpi_size size)$/;"	f
acpi_os_create_mutex	include/acpi/actypes.h	248;"	d
acpi_os_delete_mutex	include/acpi/actypes.h	249;"	d
acpi_os_dpc	src/acpi/osl.c	/^struct acpi_os_dpc {$/;"	s	file:
acpi_os_get_root_pointer	src/acpi/osl.c	/^acpi_physical_address acpi_os_get_root_pointer(void)$/;"	f
acpi_os_get_thread_id	include/acpi/platform/acnautilus.h	/^static inline acpi_thread_id acpi_os_get_thread_id(void)$/;"	f
acpi_os_ioremap	include/nautilus/acpi.h	/^static inline void *acpi_os_ioremap(acpi_physical_address phys,$/;"	f
acpi_os_map_memory	src/acpi/osl.c	/^acpi_os_map_memory(acpi_physical_address phys, acpi_size size)$/;"	f
acpi_os_printf	src/acpi/osl.c	/^void acpi_os_printf(const char *fmt, ...)$/;"	f
acpi_os_release_mutex	include/acpi/actypes.h	251;"	d
acpi_os_unmap_memory	src/acpi/osl.c	/^void __ref acpi_os_unmap_memory(void __iomem *virt, acpi_size size)$/;"	f
acpi_os_vprintf	src/acpi/osl.c	/^void acpi_os_vprintf(const char *fmt, va_list args)$/;"	f
acpi_osc_context	include/nautilus/acpi.h	/^struct acpi_osc_context {$/;"	s
acpi_osd_exec_callback	include/acpi/actypes.h	/^ (ACPI_SYSTEM_XFACE * acpi_osd_exec_callback) (void *context);$/;"	t
acpi_osd_handler	include/acpi/actypes.h	/^typedef uint32_t(ACPI_SYSTEM_XFACE * acpi_osd_handler) (void *context);$/;"	t
acpi_owner_id	include/acpi/actypes.h	/^typedef uint8_t acpi_owner_id;$/;"	t
acpi_package_info	src/acpi/acpica/aclocal.h	/^struct acpi_package_info {$/;"	s
acpi_package_info2	src/acpi/acpica/aclocal.h	/^struct acpi_package_info2 {$/;"	s
acpi_package_info3	src/acpi/acpica/aclocal.h	/^struct acpi_package_info3 {$/;"	s
acpi_parse_downwards	src/acpi/acpica/aclocal.h	/^acpi_status(*acpi_parse_downwards) (struct acpi_walk_state * walk_state,$/;"	t
acpi_parse_fadt	src/arch/x64/smp.c	/^static int acpi_parse_fadt(struct acpi_table_header * hdr, void * arg)$/;"	f	file:
acpi_parse_interrupt_override	src/arch/x64/smp.c	/^static int acpi_parse_interrupt_override (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_interrupt_source	src/arch/x64/smp.c	/^static int acpi_parse_interrupt_source (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_io_sapic	src/arch/x64/smp.c	/^static int acpi_parse_io_sapic (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_ioapic	src/arch/x64/smp.c	/^acpi_parse_ioapic (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_lapic	src/arch/x64/smp.c	/^acpi_parse_lapic (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_local_apic_nmi	src/arch/x64/smp.c	/^static int acpi_parse_local_apic_nmi (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_local_apic_override	src/arch/x64/smp.c	/^static int acpi_parse_local_apic_override (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_local_sapic	src/arch/x64/smp.c	/^static int acpi_parse_local_sapic (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_local_x2apic	src/arch/x64/smp.c	/^static int acpi_parse_local_x2apic (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_local_x2apic_nmi	src/arch/x64/smp.c	/^static int acpi_parse_local_x2apic_nmi (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_madt	src/arch/x64/smp.c	/^acpi_parse_madt (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
acpi_parse_madt_reserved	src/arch/x64/smp.c	/^static int acpi_parse_madt_reserved (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_memory_affinity	src/arch/x64/numa.c	/^acpi_parse_memory_affinity(struct acpi_subtable_header * header,$/;"	f	file:
acpi_parse_nmi_source	src/arch/x64/smp.c	/^static int acpi_parse_nmi_source (struct acpi_subtable_header * hdr,$/;"	f	file:
acpi_parse_obj_asl	src/acpi/acpica/aclocal.h	/^struct acpi_parse_obj_asl {$/;"	s
acpi_parse_obj_common	src/acpi/acpica/aclocal.h	/^struct acpi_parse_obj_common {$/;"	s
acpi_parse_obj_named	src/acpi/acpica/aclocal.h	/^struct acpi_parse_obj_named {$/;"	s
acpi_parse_object	src/acpi/acpica/aclocal.h	/^union acpi_parse_object {$/;"	u
acpi_parse_processor_affinity	src/arch/x64/numa.c	/^acpi_parse_processor_affinity(struct acpi_subtable_header * header,$/;"	f	file:
acpi_parse_slit	src/arch/x64/numa.c	/^acpi_parse_slit(struct acpi_table_header *table, void * arg)$/;"	f	file:
acpi_parse_srat	src/arch/x64/numa.c	/^acpi_parse_srat (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
acpi_parse_state	src/acpi/acpica/aclocal.h	/^struct acpi_parse_state {$/;"	s
acpi_parse_upwards	src/acpi/acpica/aclocal.h	/^typedef acpi_status(*acpi_parse_upwards) (struct acpi_walk_state * walk_state);$/;"	t
acpi_parse_value	src/acpi/acpica/aclocal.h	/^union acpi_parse_value {$/;"	u
acpi_parse_x2apic_affinity	src/arch/x64/numa.c	/^acpi_parse_x2apic_affinity(struct acpi_subtable_header *header,$/;"	f	file:
acpi_pci_disabled	src/nautilus/acpi.c	/^int acpi_pci_disabled;		\/* skip ACPI PCI scan and IRQ initialization *\/$/;"	v
acpi_pci_driver	include/nautilus/acpi.h	/^struct acpi_pci_driver {$/;"	s
acpi_pci_id	include/acpi/actypes.h	/^struct acpi_pci_id {$/;"	s
acpi_pci_routing_table	include/acpi/acrestyp.h	/^struct acpi_pci_routing_table {$/;"	s
acpi_physical_address	include/acpi/actypes.h	/^typedef uint32_t acpi_physical_address;$/;"	t
acpi_physical_address	include/acpi/actypes.h	/^typedef uint64_t acpi_physical_address;$/;"	t
acpi_pkg_state	src/acpi/acpica/aclocal.h	/^struct acpi_pkg_state {$/;"	s
acpi_port_info	src/acpi/acpica/aclocal.h	/^struct acpi_port_info {$/;"	s
acpi_predefined_data	src/acpi/acpica/aclocal.h	/^struct acpi_predefined_data {$/;"	s
acpi_predefined_info	src/acpi/acpica/aclocal.h	/^union acpi_predefined_info {$/;"	u
acpi_predefined_names	include/acpi/actypes.h	/^struct acpi_predefined_names {$/;"	s
acpi_prefered_pm_profiles	include/acpi/actbl.h	/^enum acpi_prefered_pm_profiles {$/;"	g
acpi_pscope_state	src/acpi/acpica/aclocal.h	/^struct acpi_pscope_state {$/;"	s
acpi_reboot	src/arch/hrt/shutdown.c	/^acpi_reboot (void)$/;"	f
acpi_reboot	src/arch/x64/shutdown.c	/^acpi_reboot (void)$/;"	f
acpi_resource	include/acpi/acrestyp.h	/^struct acpi_resource {$/;"	s
acpi_resource_address	include/acpi/acrestyp.h	/^struct acpi_resource_address {$/;"	s
acpi_resource_address16	include/acpi/acrestyp.h	/^struct acpi_resource_address16 {$/;"	s
acpi_resource_address32	include/acpi/acrestyp.h	/^struct acpi_resource_address32 {$/;"	s
acpi_resource_address64	include/acpi/acrestyp.h	/^struct acpi_resource_address64 {$/;"	s
acpi_resource_attribute	include/acpi/acrestyp.h	/^union acpi_resource_attribute {$/;"	u
acpi_resource_data	include/acpi/acrestyp.h	/^union acpi_resource_data {$/;"	u
acpi_resource_dma	include/acpi/acrestyp.h	/^struct acpi_resource_dma {$/;"	s
acpi_resource_end_tag	include/acpi/acrestyp.h	/^struct acpi_resource_end_tag {$/;"	s
acpi_resource_extended_address64	include/acpi/acrestyp.h	/^struct acpi_resource_extended_address64 {$/;"	s
acpi_resource_extended_irq	include/acpi/acrestyp.h	/^struct acpi_resource_extended_irq {$/;"	s
acpi_resource_fixed_io	include/acpi/acrestyp.h	/^struct acpi_resource_fixed_io {$/;"	s
acpi_resource_fixed_memory32	include/acpi/acrestyp.h	/^struct acpi_resource_fixed_memory32 {$/;"	s
acpi_resource_generic_register	include/acpi/acrestyp.h	/^struct acpi_resource_generic_register {$/;"	s
acpi_resource_io	include/acpi/acrestyp.h	/^struct acpi_resource_io {$/;"	s
acpi_resource_irq	include/acpi/acrestyp.h	/^struct acpi_resource_irq {$/;"	s
acpi_resource_memory24	include/acpi/acrestyp.h	/^struct acpi_resource_memory24 {$/;"	s
acpi_resource_memory32	include/acpi/acrestyp.h	/^struct acpi_resource_memory32 {$/;"	s
acpi_resource_source	include/acpi/acrestyp.h	/^struct acpi_resource_source {$/;"	s
acpi_resource_start_dependent	include/acpi/acrestyp.h	/^struct acpi_resource_start_dependent {$/;"	s
acpi_resource_vendor	include/acpi/acrestyp.h	/^struct acpi_resource_vendor {$/;"	s
acpi_resource_vendor_typed	include/acpi/acrestyp.h	/^struct acpi_resource_vendor_typed {$/;"	s
acpi_result_values	src/acpi/acpica/aclocal.h	/^struct acpi_result_values {$/;"	s
acpi_rs_length	include/acpi/acrestyp.h	/^typedef uint16_t acpi_rs_length;	\/* Resource Length field is fixed at 16 bits *\/$/;"	t
acpi_rsdesc_size	include/acpi/acrestyp.h	/^typedef uint32_t acpi_rsdesc_size;	\/* Max Resource Descriptor size is (Length+3) = (64_k-1)+3 *\/$/;"	t
acpi_rsdt_forced	src/nautilus/acpi.c	/^uint32_t acpi_rsdt_forced;$/;"	v
acpi_rw_lock	src/acpi/acpica/aclocal.h	/^struct acpi_rw_lock {$/;"	s
acpi_sci_flags	src/nautilus/acpi.c	/^uint8_t acpi_sci_flags ;$/;"	v
acpi_sci_override_gsi	src/nautilus/acpi.c	/^int acpi_sci_override_gsi ;$/;"	v
acpi_scope_state	src/acpi/acpica/aclocal.h	/^struct acpi_scope_state {$/;"	s
acpi_semaphore	include/acpi/actypes.h	261;"	d
acpi_shutdown	src/arch/hrt/shutdown.c	/^acpi_shutdown (void)$/;"	f
acpi_shutdown	src/arch/x64/shutdown.c	/^acpi_shutdown (void)$/;"	f
acpi_signal_fatal_info	include/acpi/acpiosxf.h	/^struct acpi_signal_fatal_info {$/;"	s
acpi_size	include/acpi/actypes.h	/^typedef uint32_t acpi_size;$/;"	t
acpi_size	include/acpi/actypes.h	/^typedef uint64_t acpi_size;$/;"	t
acpi_skip_timer_override	src/nautilus/acpi.c	/^int acpi_skip_timer_override ;$/;"	v
acpi_slic_header	include/acpi/actbl2.h	/^struct acpi_slic_header {$/;"	s
acpi_slic_key	include/acpi/actbl2.h	/^struct acpi_slic_key {$/;"	s
acpi_slic_marker	include/acpi/actbl2.h	/^struct acpi_slic_marker {$/;"	s
acpi_slic_type	include/acpi/actbl2.h	/^enum acpi_slic_type {$/;"	g
acpi_spinlock	include/acpi/actypes.h	257;"	d
acpi_spinlock	include/acpi/platform/acnautilus.h	71;"	d
acpi_spmi_interface_types	include/acpi/actbl2.h	/^enum acpi_spmi_interface_types {$/;"	g
acpi_srat_cpu_affinity	include/acpi/actbl1.h	/^struct acpi_srat_cpu_affinity {$/;"	s
acpi_srat_entry_id	include/nautilus/acpi.h	/^enum acpi_srat_entry_id {$/;"	g
acpi_srat_mem_affinity	include/acpi/actbl1.h	/^struct acpi_srat_mem_affinity {$/;"	s
acpi_srat_type	include/acpi/actbl1.h	/^enum acpi_srat_type {$/;"	g
acpi_srat_x2apic_cpu_affinity	include/acpi/actbl1.h	/^struct acpi_srat_x2apic_cpu_affinity {$/;"	s
acpi_status	include/acpi/actypes.h	/^typedef uint32_t acpi_status;	\/* All ACPI Exceptions *\/$/;"	t
acpi_strict	src/nautilus/acpi.c	/^int acpi_strict;$/;"	v
acpi_string	include/acpi/actypes.h	/^typedef char *acpi_string;	\/* Null terminated ASCII string *\/$/;"	t
acpi_subtable_header	include/acpi/actbl1.h	/^struct acpi_subtable_header {$/;"	s
acpi_system_info	include/acpi/actypes.h	/^struct acpi_system_info {$/;"	s
acpi_table_asf	include/acpi/actbl2.h	/^struct acpi_table_asf {$/;"	s
acpi_table_bert	include/acpi/actbl1.h	/^struct acpi_table_bert {$/;"	s
acpi_table_boot	include/acpi/actbl2.h	/^struct acpi_table_boot {$/;"	s
acpi_table_cpep	include/acpi/actbl1.h	/^struct acpi_table_cpep {$/;"	s
acpi_table_dbgp	include/acpi/actbl2.h	/^struct acpi_table_dbgp {$/;"	s
acpi_table_desc	include/acpi/actbl.h	/^struct acpi_table_desc {$/;"	s
acpi_table_dmar	include/acpi/actbl2.h	/^struct acpi_table_dmar {$/;"	s
acpi_table_ecdt	include/acpi/actbl1.h	/^struct acpi_table_ecdt {$/;"	s
acpi_table_einj	include/acpi/actbl1.h	/^struct acpi_table_einj {$/;"	s
acpi_table_entry_handler	include/nautilus/acpi.h	/^typedef int (*acpi_table_entry_handler) (struct acpi_subtable_header *header, const unsigned long end);$/;"	t
acpi_table_erst	include/acpi/actbl1.h	/^struct acpi_table_erst {$/;"	s
acpi_table_facs	include/acpi/actbl.h	/^struct acpi_table_facs {$/;"	s
acpi_table_fadt	include/acpi/actbl.h	/^struct acpi_table_fadt {$/;"	s
acpi_table_handler	include/nautilus/acpi.h	/^typedef int (*acpi_table_handler) (struct acpi_table_header *table, void * arg);$/;"	t
acpi_table_header	include/acpi/actbl.h	/^struct acpi_table_header {$/;"	s
acpi_table_hest	include/acpi/actbl1.h	/^struct acpi_table_hest {$/;"	s
acpi_table_hpet	include/acpi/actbl2.h	/^struct acpi_table_hpet {$/;"	s
acpi_table_ibft	include/acpi/actbl2.h	/^struct acpi_table_ibft {$/;"	s
acpi_table_init	src/acpi/tables.c	/^int acpi_table_init(void)$/;"	f
acpi_table_ivrs	include/acpi/actbl2.h	/^struct acpi_table_ivrs {$/;"	s
acpi_table_list	src/acpi/acpica/aclocal.h	/^struct acpi_table_list {$/;"	s
acpi_table_madt	include/acpi/actbl1.h	/^struct acpi_table_madt {$/;"	s
acpi_table_mcfg	include/acpi/actbl2.h	/^struct acpi_table_mcfg {$/;"	s
acpi_table_mchi	include/acpi/actbl2.h	/^struct acpi_table_mchi {$/;"	s
acpi_table_msct	include/acpi/actbl1.h	/^struct acpi_table_msct {$/;"	s
acpi_table_parse	src/acpi/tables.c	/^acpi_table_parse (char *id, acpi_table_handler handler, void * arg)$/;"	f
acpi_table_parse_entries	src/acpi/tables.c	/^acpi_table_parse_entries(char *id,$/;"	f
acpi_table_parse_fadt	src/arch/x64/smp.c	/^static int acpi_table_parse_fadt (enum acpi_madt_type id, $/;"	f	file:
acpi_table_parse_madt	src/arch/x64/smp.c	/^acpi_table_parse_madt (enum acpi_madt_type id, $/;"	f	file:
acpi_table_parse_srat	src/arch/x64/numa.c	/^acpi_table_parse_srat(enum acpi_srat_entry_id id,$/;"	f	file:
acpi_table_print_madt_entry	src/acpi/tables.c	/^void acpi_table_print_madt_entry(struct acpi_subtable_header *header)$/;"	f
acpi_table_print_srat_entry	src/arch/x64/numa.c	/^acpi_table_print_srat_entry (struct acpi_subtable_header * header)$/;"	f	file:
acpi_table_rsdp	include/acpi/actbl.h	/^struct acpi_table_rsdp {$/;"	s
acpi_table_rsdt	include/acpi/actbl.h	/^struct acpi_table_rsdt {$/;"	s
acpi_table_sbst	include/acpi/actbl1.h	/^struct acpi_table_sbst {$/;"	s
acpi_table_slic	include/acpi/actbl2.h	/^struct acpi_table_slic {$/;"	s
acpi_table_slit	include/acpi/actbl1.h	/^struct acpi_table_slit {$/;"	s
acpi_table_spcr	include/acpi/actbl2.h	/^struct acpi_table_spcr {$/;"	s
acpi_table_spmi	include/acpi/actbl2.h	/^struct acpi_table_spmi {$/;"	s
acpi_table_srat	include/acpi/actbl1.h	/^struct acpi_table_srat {$/;"	s
acpi_table_tcpa	include/acpi/actbl2.h	/^struct acpi_table_tcpa {$/;"	s
acpi_table_uefi	include/acpi/actbl2.h	/^struct acpi_table_uefi {$/;"	s
acpi_table_waet	include/acpi/actbl2.h	/^struct acpi_table_waet {$/;"	s
acpi_table_wdat	include/acpi/actbl2.h	/^struct acpi_table_wdat {$/;"	s
acpi_table_wddt	include/acpi/actbl2.h	/^struct acpi_table_wddt {$/;"	s
acpi_table_wdrt	include/acpi/actbl2.h	/^struct acpi_table_wdrt {$/;"	s
acpi_table_xsdt	include/acpi/actbl.h	/^struct acpi_table_xsdt {$/;"	s
acpi_tb_check_xsdt	src/acpi/acpica/tbutils.c	/^acpi_tb_check_xsdt(acpi_physical_address address)$/;"	f	file:
acpi_tb_checksum	src/acpi/acpica/tbutils.c	/^u8 acpi_tb_checksum(u8 *buffer, u32 length)$/;"	f
acpi_tb_cleanup_table_header	src/acpi/acpica/tbutils.c	/^acpi_tb_cleanup_table_header(struct acpi_table_header *out_header,$/;"	f	file:
acpi_tb_fix_string	src/acpi/acpica/tbutils.c	/^static void acpi_tb_fix_string(char *string, acpi_size length)$/;"	f	file:
acpi_tb_get_root_table_entry	src/acpi/acpica/tbutils.c	/^acpi_tb_get_root_table_entry(u8 *table_entry, u32 table_entry_size)$/;"	f	file:
acpi_tb_install_table	src/acpi/acpica/tbutils.c	/^acpi_tb_install_table(acpi_physical_address address,$/;"	f
acpi_tb_parse_root_table	src/acpi/acpica/tbutils.c	/^acpi_tb_parse_root_table(acpi_physical_address rsdp_address)$/;"	f
acpi_tb_print_table_header	src/acpi/acpica/tbutils.c	/^acpi_tb_print_table_header(acpi_physical_address address,$/;"	f
acpi_tb_resize_root_table_list	src/acpi/acpica/tbinstal.c	/^acpi_status acpi_tb_resize_root_table_list(void)$/;"	f
acpi_tb_scan_memory_for_rsdp	src/acpi/acpica/tbxfroot.c	/^static u8 *acpi_tb_scan_memory_for_rsdp(u8 * start_address, u32 length)$/;"	f	file:
acpi_tb_validate_rsdp	src/acpi/acpica/tbxfroot.c	/^static acpi_status acpi_tb_validate_rsdp(struct acpi_table_rsdp *rsdp)$/;"	f	file:
acpi_tb_verify_checksum	src/acpi/acpica/tbutils.c	/^acpi_status acpi_tb_verify_checksum(struct acpi_table_header *table, u32 length)$/;"	f
acpi_tb_verify_table	src/acpi/acpica/tbinstal.c	/^acpi_status acpi_tb_verify_table(struct acpi_table_desc *table_desc)$/;"	f
acpi_tbl_handler	include/acpi/actypes.h	/^acpi_status(*acpi_tbl_handler) (uint32_t event, void *table, void *context);$/;"	t
acpi_thread_id	include/acpi/actypes.h	142;"	d
acpi_thread_state	src/acpi/acpica/aclocal.h	/^struct acpi_thread_state {$/;"	s
acpi_uintptr_t	include/acpi/actypes.h	280;"	d
acpi_update_state	src/acpi/acpica/aclocal.h	/^struct acpi_update_state {$/;"	s
acpi_use_timer_override	src/nautilus/acpi.c	/^int acpi_use_timer_override ;$/;"	v
acpi_ut_allocate	src/acpi/acpica/utalloc.c	/^void *acpi_ut_allocate(acpi_size size,$/;"	f
acpi_ut_allocate_zeroed	src/acpi/acpica/utalloc.c	/^void *acpi_ut_allocate_zeroed(acpi_size size,$/;"	f
acpi_ut_set_integer_width	src/acpi/acpica/utmisc.c	/^void acpi_ut_set_integer_width(u8 revision)$/;"	f
acpi_uuid	include/acpi/acrestyp.h	/^struct acpi_uuid {$/;"	s
acpi_vendor_uuid	include/acpi/acrestyp.h	/^struct acpi_vendor_uuid {$/;"	s
acpi_walk_callback	include/acpi/actypes.h	/^acpi_status(*acpi_walk_callback) (acpi_handle object,$/;"	t
acpi_walk_resource_callback	include/acpi/acpixf.h	/^acpi_status(*acpi_walk_resource_callback) (struct acpi_resource * resource,$/;"	t
acpi_wdat_actions	include/acpi/actbl2.h	/^enum acpi_wdat_actions {$/;"	g
acpi_wdat_entry	include/acpi/actbl2.h	/^struct acpi_wdat_entry {$/;"	s
acpi_wdat_instructions	include/acpi/actbl2.h	/^enum acpi_wdat_instructions {$/;"	g
acpi_whea_header	include/acpi/actbl1.h	/^struct acpi_whea_header {$/;"	s
acpica_device_id	include/acpi/actypes.h	/^struct acpica_device_id {$/;"	s
acpica_device_id_list	include/acpi/actypes.h	/^struct acpica_device_id_list {$/;"	s
acquire	src/legion_runtime/legion.cc	/^    void Lock::acquire(unsigned mode \/*=0*\/, bool exclusive \/*=true*\/)$/;"	f	class:LegionRuntime::HighLevel::Lock
acquire	src/legion_runtime/lowlevel.cc	/^    Event Reservation::Impl::acquire(unsigned new_mode, bool exclusive,$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
acquire	src/legion_runtime/lowlevel.cc	/^    Event Reservation::acquire(unsigned mode \/* = 0 *\/, bool exclusive \/* = true *\/,$/;"	f	class:LegionRuntime::LowLevel::Reservation
acquire	src/legion_runtime/shared_lowlevel.cc	/^    Event Reservation::acquire(unsigned mode, bool exclusive, Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
acquire	src/legion_runtime/shared_lowlevel.cc	/^    Event ReservationImpl::acquire(unsigned m, bool exc, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
acquire_grant	src/legion_runtime/legion.cc	/^    Grant HighLevelRuntime::acquire_grant(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
acquire_grant	src/legion_runtime/runtime.cc	/^    Event Grant::Impl::acquire_grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
acquire_grant	src/legion_runtime/runtime.cc	/^    Grant Runtime::acquire_grant(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
acquire_op_lock	src/legion_runtime/runtime.h	/^      Reservation acquire_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
acquire_physical_state	src/legion_runtime/region_tree.cc	/^    PhysicalState& RegionTreeNode::acquire_physical_state(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
acquire_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::acquire_physical_state(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
acquire_user_coherence	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::acquire_user_coherence(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
acquire_user_coherence	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::acquire_user_coherence(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
acquired	src/legion_runtime/runtime.h	/^      bool acquired;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
acquired_count	src/legion_runtime/region_tree.h	/^      unsigned acquired_count;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
acquired_mutex_list	src/acpi/acpica/aclocal.h	/^	union acpi_operand_object *acquired_mutex_list;	\/* List of all currently acquired mutexes *\/$/;"	m	struct:acpi_thread_state	typeref:union:acpi_thread_state::acpi_operand_object
action	include/acpi/actbl1.h	/^	uint8_t action;$/;"	m	struct:acpi_whea_header
action	include/acpi/actbl2.h	/^	uint8_t action;$/;"	m	struct:acpi_wdat_entry
action	include/nautilus/nemo.h	/^	nemo_action_t   action;$/;"	m	struct:nemo_event
action	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
action	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
activate	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
activate	src/legion_runtime/legion_ops.cc	/^    void AndPredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
activate	src/legion_runtime/legion_ops.cc	/^    void CloseOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
activate	src/legion_runtime/legion_ops.cc	/^    void CopyOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
activate	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
activate	src/legion_runtime/legion_ops.cc	/^    void FenceOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
activate	src/legion_runtime/legion_ops.cc	/^    void FuturePredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
activate	src/legion_runtime/legion_ops.cc	/^    void MapOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
activate	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
activate	src/legion_runtime/legion_ops.cc	/^    void NotPredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
activate	src/legion_runtime/legion_ops.cc	/^    void OrPredOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
activate	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
activate	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
activate	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
activate	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
activate	src/legion_runtime/legion_tasks.cc	/^    void PointTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
activate	src/legion_runtime/legion_tasks.cc	/^    void RemoteTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
activate	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::activate(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
activate	src/legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
activate	src/legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::activate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
activate	src/legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::activate(void)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
activate	src/legion_runtime/shared_lowlevel.cc	/^    bool IndexSpace::Impl::activate(IndexSpace::Impl *par, const ElementMask &m)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
activate	src/legion_runtime/shared_lowlevel.cc	/^    bool IndexSpace::Impl::activate(const ElementMask &m)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
activate	src/legion_runtime/shared_lowlevel.cc	/^    bool IndexSpace::Impl::activate(size_t num)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
activate	src/legion_runtime/shared_lowlevel.cc	/^    bool RegionInstance::Impl::activate(IndexSpace r, Memory m, size_t num, size_t alloc, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
activate	src/legion_runtime/shared_lowlevel.cc	/^    bool ReservationImpl::activate(size_t dsize)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
activate_context	src/legion_runtime/runtime.cc	/^    void ProcessorManager::activate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
activate_context	src/legion_runtime/runtime.cc	/^    void Runtime::activate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::Runtime
activate_multi	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::activate_multi(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
activate_operation	src/legion_runtime/legion_ops.cc	/^    void Operation::activate_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
activate_outstanding_task	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::activate_outstanding_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
activate_predicate	src/legion_runtime/legion_ops.cc	/^    void Predicate::Impl::activate_predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
activate_single	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::activate_single(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
activate_speculative	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::activate_speculative(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
activate_task	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::activate_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
activate_wrapper	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::activate_wrapper(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
active	include/nautilus/barrier.h	/^    uint8_t  active; \/* used for core barriers *\/$/;"	m	struct:nk_barrier
active	src/legion_runtime/runtime.h	/^        bool active;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::ContextState
active	src/legion_runtime/shared_lowlevel.cc	/^	bool active;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
active	src/legion_runtime/shared_lowlevel.cc	/^	bool active;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
active	src/legion_runtime/shared_lowlevel.cc	/^	bool active;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
active_thread_count	src/legion_runtime/lowlevel.cc	/^      int total_threads, active_thread_count, max_active_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
actual_irq	include/dev/ioapic.h	/^    uint8_t actual_irq; $/;"	m	struct:iored_entry
actual_type	include/acpi/actypes.h	/^		acpi_object_type actual_type;	\/* Type associated with the Handle *\/$/;"	m	struct:acpi_object::__anon24
actvar	include/lua/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon18
adapter_info	src/dev/vesa.c	/^static struct vesa_adapter_info adapter_info;$/;"	v	typeref:struct:vesa_adapter_info	file:
add	include/nautilus/acpi.h	/^	int (*add)(acpi_handle handle);$/;"	m	struct:acpi_pci_driver
add	src/legion_runtime/legion_utilities.h	/^    void Fraction<T>::add(const Fraction<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Fraction
addColumn	scripts/kconfig/qconf.h	/^	void addColumn(colIdx idx, const QString& label)$/;"	f	class:ConfigList
add_adjacent	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::add_adjacent(Segment<T> *seg)$/;"	f	class:LegionRuntime::HighLevel::Segment
add_alias_did	src/legion_runtime/region_tree.cc	/^    void InstanceView::add_alias_did(DistributedID alias)$/;"	f	class:LegionRuntime::HighLevel::InstanceView
add_arg	src/legion_runtime/runtime.cc	/^    TaskArgument ArgumentMapStore::add_arg(const TaskArgument &arg)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
add_arrival_barrier	src/legion_runtime/legion.h	/^    inline void AcquireLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_arrival_barrier	src/legion_runtime/legion.h	/^    inline void CopyLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_arrival_barrier	src/legion_runtime/legion.h	/^    inline void IndexLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_arrival_barrier	src/legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_arrival_barrier	src/legion_runtime/legion.h	/^    inline void TaskLauncher::add_arrival_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_category	src/legion_runtime/utilities.h	/^    static int add_category(const std::string& name)$/;"	f	class:LegionRuntime::Logger
add_child	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::add_child(FieldTree<UT> *child)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
add_child	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::add_child(IndexSpaceNode *child)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_child	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_child(IndexPartNode *child)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_child	src/legion_runtime/region_tree.cc	/^    void PartitionNode::add_child(RegionNode *child)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
add_child	src/legion_runtime/region_tree.cc	/^    void RegionNode::add_child(PartitionNode *child)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
add_child_space	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::DynamicPartTest::add_child_space(bool l, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
add_close	src/legion_runtime/legion_profiling.h	/^        inline void add_close(const OpInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_close_op	src/legion_runtime/region_tree.cc	/^    void TreeClose::add_close_op(const FieldMask &close_mask,$/;"	f	class:LegionRuntime::HighLevel::TreeClose
add_close_op	src/legion_runtime/region_tree.cc	/^    void TreeCloseImpl::add_close_op(const FieldMask &close_mask,$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
add_collection	src/legion_runtime/runtime.cc	/^    void GarbageCollectionEpoch::add_collection(LogicalView *view, Event term)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
add_copy	src/legion_runtime/legion_profiling.h	/^        inline void add_copy(const OpInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_copy_requirements	src/legion_runtime/legion.h	/^    inline void CopyLauncher::add_copy_requirements($/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_copy_user	src/legion_runtime/region_tree.cc	/^    void CompositeView::add_copy_user(ReductionOpID redop, Event copy_term,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_copy_user	src/legion_runtime/region_tree.cc	/^    void MaterializedView::add_copy_user(ReductionOpID redop, Event copy_term,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_copy_user	src/legion_runtime/region_tree.cc	/^    void ReductionView::add_copy_user(ReductionOpID redop, Event copy_term,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
add_copy_user_above	src/legion_runtime/region_tree.cc	/^    void MaterializedView::add_copy_user_above(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_created_field	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::add_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
add_created_field	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::add_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_created_index	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::add_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
add_created_index	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::add_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_created_region	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::add_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
add_created_region	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::add_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_creation_source	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
add_creation_source	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_creation_source	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_creation_source	src/legion_runtime/region_tree.cc	/^    void PartitionNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
add_creation_source	src/legion_runtime/region_tree.cc	/^    void RegionNode::add_creation_source(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
add_device_device_copy	src/legion_runtime/lowlevel_gpu.cc	/^      void add_device_device_copy(GPUJob *copy)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
add_device_host_copy	src/legion_runtime/lowlevel_gpu.cc	/^      void add_device_host_copy(GPUJob *copy)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
add_disjoint	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::add_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_disjoint	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_disjointness_test	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::add_disjointness_test(const DynamicPartTest &test)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
add_disjointness_tests	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::add_disjointness_tests(IndexPartNode *child,$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_disjointness_tests	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_disjointness_tests(IndexPartNode *child,$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_dst_field	src/legion_runtime/legion.h	/^    inline void CopyLauncher::add_dst_field(unsigned idx,FieldID fid,bool inst)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_event	src/legion_runtime/legion_profiling.h	/^        inline void add_event(const MemoryEvent &event) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_event	src/legion_runtime/legion_profiling.h	/^        inline void add_event(const ProfilingEvent &event) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_event	src/legion_runtime/lowlevel.cc	/^      void add_event(Event wait_for)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
add_field	src/legion_runtime/legion.h	/^    inline RegionRequirement& RegionRequirement::add_field(FieldID fid, $/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
add_field	src/legion_runtime/legion.h	/^    inline void AcquireLauncher::add_field(FieldID f)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_field	src/legion_runtime/legion.h	/^    inline void IndexLauncher::add_field(unsigned idx, FieldID fid, bool inst)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_field	src/legion_runtime/legion.h	/^    inline void InlineLauncher::add_field(FieldID fid, bool inst)$/;"	f	class:LegionRuntime::HighLevel::InlineLauncher
add_field	src/legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_field(FieldID f)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_field	src/legion_runtime/legion.h	/^    inline void TaskLauncher::add_field(unsigned idx, FieldID fid, bool inst)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_field_info	src/legion_runtime/region_tree.cc	/^    void LayoutDescription::add_field_info(FieldID fid, unsigned index,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
add_fields	src/legion_runtime/legion.h	/^    inline RegionRequirement& RegionRequirement::add_fields($/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
add_free_pages	src/nautilus/mm/boot_mm.c	/^add_free_pages (struct mem_region * region) $/;"	f	file:
add_future	src/legion_runtime/legion.h	/^    inline void IndexLauncher::add_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_future	src/legion_runtime/legion.h	/^    inline void TaskLauncher::add_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_gc_reference	src/legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_gc_reference	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_gc_references	src/legion_runtime/region_tree.cc	/^    void CompositeNode::add_gc_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
add_grant	src/legion_runtime/legion.h	/^    inline void AcquireLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_grant	src/legion_runtime/legion.h	/^    inline void CopyLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_grant	src/legion_runtime/legion.h	/^    inline void IndexLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_grant	src/legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_grant	src/legion_runtime/legion.h	/^    inline void TaskLauncher::add_grant(Grant g)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_handler_entries	src/legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageMediumNoReply
add_handler_entries	src/legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageMediumReply
add_handler_entries	src/legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageShortNoReply
add_handler_entries	src/legion_runtime/activemsg.h	/^  static int add_handler_entries(gasnet_handlerentry_t *entries)$/;"	f	class:ActiveMessageShortReply
add_held_remote_reference	src/legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_held_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_held_remote_reference	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_held_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_host_device_copy	src/legion_runtime/lowlevel_gpu.cc	/^      void add_host_device_copy(GPUJob *copy)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
add_index_requirement	src/legion_runtime/legion.h	/^    inline void IndexLauncher::add_index_requirement($/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_index_requirement	src/legion_runtime/legion.h	/^    inline void TaskLauncher::add_index_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_index_task	src/legion_runtime/legion.h	/^    inline void MustEpochLauncher::add_index_task(const IndexLauncher &launcher)$/;"	f	class:LegionRuntime::HighLevel::MustEpochLauncher
add_inline_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::add_inline_task(InlineTask *inline_task)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_instance	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::add_instance(RegionNode *inst)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
add_instance	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::add_instance(PartitionNode *inst)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
add_instance	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::add_instance(RegionNode *inst)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
add_local_copy_user	src/legion_runtime/region_tree.cc	/^    void MaterializedView::add_local_copy_user(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_local_field	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::add_local_field(FieldSpace handle, FieldID fid, $/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_local_fields	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::add_local_fields(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
add_local_reference	src/legion_runtime/lowlevel.h	/^      void add_local_reference(void)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
add_local_user	src/legion_runtime/region_tree.cc	/^    void MaterializedView::add_local_user(std::set<Event> &wait_on,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_map	src/legion_runtime/legion_profiling.h	/^        inline void add_map(const OpInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_mapper	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::add_mapper(MapperID map_id, Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
add_mapper	src/legion_runtime/runtime.cc	/^    void ProcessorManager::add_mapper(MapperID mid, Mapper *m, bool check)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_mapper	src/legion_runtime/runtime.cc	/^    void Runtime::add_mapper(MapperID map_id, Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::Runtime
add_mapping_reference	src/legion_runtime/legion_ops.cc	/^    void Operation::add_mapping_reference(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
add_member	src/legion_runtime/shared_lowlevel.cc	/^      void add_member(ProcessorImpl *new_member) {$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgEventDependency &msg) { msgs_event_dependency.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgEventTiming &msg) { msgs_event_timing.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgFieldCreation &msg) { msgs_field_creation.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgFieldSpace &msg) { msgs_field_space.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgFutureWait &msg) { msgs_future_wait.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgIndexPartition &msg) { msgs_index_partition.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgIndexSlice &msg) { msgs_index_slice.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgIndexSubspace &msg) { msgs_index_subspace.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgInlineWait &msg) { msgs_inline_wait.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLogicalRequirement &msg) { msgs_logical_requirement.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLowlevelCopy &msg) { msgs_lowlevel_copy.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLowlevelCopyAssoc &msg) { msgs_lowlevel_copy_assoc.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgLowlevelCopyChannel &msg) { msgs_lowlevel_copy_channel.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgMappingDependence &msg) { msgs_mapping_dependence.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgOperation &msg) { msgs_operation.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgOperationEvents &msg) { msgs_operation_events.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgOperationTiming &msg) { msgs_operation_timing.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgPhysicalInstance &msg) { msgs_physical_instance.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgPhysicalUser &msg) { msgs_phyiscal_user.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgPointPoint &msg) { msgs_point_point.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgRequirementFields &msg) { msgs_requirement_fields.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgSlicePoint &msg) { msgs_slice_point.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgSliceSlice &msg) { msgs_slice_slice.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTaskInstanceRequirement &msg) { msgs_task_instance_requirement.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTaskInstanceVariant &msg) { msgs_task_instance_variant.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTaskOperation &msg) { msgs_task_operation.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTopIndexSpace &msg) { msgs_top_index_space.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_msg	src/legion_runtime/legion_logging.h	/^        void add_msg(const LogMsgTopRegion &msg) { msgs_top_region.push_back(msg); }$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
add_new_file	scripts/basic/docproc.c	/^struct symfile * add_new_file(char * filename)$/;"	f
add_new_symbol	scripts/basic/docproc.c	/^void add_new_symbol(struct symfile *sym, char * symname)$/;"	f
add_pending	src/legion_runtime/activemsg.cc	/^void SrcDataPool::add_pending(OutgoingMessage *msg, Lock& held_lock)$/;"	f	class:SrcDataPool
add_predicate_reference	src/legion_runtime/legion_ops.cc	/^    void Predicate::Impl::add_predicate_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
add_rectangle	src/legion_runtime/rectangle_set.h	/^    inline void RectangleSet<T,DISCRETE>::add_rectangle(T lower_x, T lower_y, $/;"	f	class:LegionRuntime::HighLevel::RectangleSet
add_reference	src/legion_runtime/arrays.h	/^      inline void add_reference(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
add_reference	src/legion_runtime/garbage_collection.h	/^    inline void Collectable::add_reference(unsigned cnt \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::Collectable
add_reference	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::add_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
add_region_requirement	src/legion_runtime/legion.h	/^    inline void IndexLauncher::add_region_requirement($/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_region_requirement	src/legion_runtime/legion.h	/^    inline void TaskLauncher::add_region_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_remote_reference	src/legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::add_remote_reference(AddressSpaceID sid,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_remote_reference	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_resource_reference	src/legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_resource_reference	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_root	src/legion_runtime/region_tree.cc	/^    void CompositeView::add_root(CompositeNode *root, const FieldMask &valid)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_s	src/lua_src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_single_task	src/legion_runtime/legion.h	/^    inline void MustEpochLauncher::add_single_task(const DomainPoint &point,$/;"	f	class:LegionRuntime::HighLevel::MustEpochLauncher
add_single_user	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::add_single_user(unsigned index, const UT &user)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
add_src_field	src/legion_runtime/legion.h	/^    inline void CopyLauncher::add_src_field(unsigned idx,FieldID fid,bool inst)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_subscriber	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_subscriber(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_subview	src/legion_runtime/region_tree.cc	/^    bool CompositeView::add_subview(CompositeView *view, Color c)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_subview	src/legion_runtime/region_tree.cc	/^    bool MaterializedView::add_subview(MaterializedView *view, Color c)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_target	src/legion_runtime/region_tree.cc	/^    void PhysicalCloser::add_target(MaterializedView *target)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
add_task	src/legion_runtime/legion_profiling.h	/^        inline void add_task(const TaskInstance &inst)$/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
add_task	src/legion_runtime/lowlevel.cc	/^      void add_task(Task::FuncPtr func, const void *args, size_t arglen)$/;"	f	class:LegionRuntime::LowLevel::ProcessorThread
add_thread	src/legion_runtime/lowlevel.cc	/^    void Runtime::add_thread(const pthread_t *thread)$/;"	f	class:LegionRuntime::LowLevel::Runtime
add_to_dependence_queue	src/legion_runtime/runtime.cc	/^    void ProcessorManager::add_to_dependence_queue(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_to_dependence_queue	src/legion_runtime/runtime.cc	/^    void Runtime::add_to_dependence_queue(Processor p, Operation *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
add_to_group	src/legion_runtime/shared_lowlevel.cc	/^        void add_to_group(ProcessorGroup *grp) { groups.push_back(grp); }$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
add_to_local_queue	src/legion_runtime/runtime.cc	/^    void Runtime::add_to_local_queue(Processor p, $/;"	f	class:LegionRuntime::HighLevel::Runtime
add_to_local_ready_queue	src/legion_runtime/runtime.cc	/^    void ProcessorManager::add_to_local_ready_queue(Operation *op, $/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_to_pointer	src/legion_runtime/accessor.h	/^      T *add_to_pointer(T *ptr) const$/;"	f	class:LegionRuntime::Accessor::ByteOffset
add_to_ready_queue	src/legion_runtime/runtime.cc	/^    void ProcessorManager::add_to_ready_queue(TaskOp *task, bool prev_failure)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
add_to_ready_queue	src/legion_runtime/runtime.cc	/^    void Runtime::add_to_ready_queue(Processor p, $/;"	f	class:LegionRuntime::HighLevel::Runtime
add_to_ready_queue	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::add_to_ready_queue(TaskDesc *task)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
add_top_region	src/legion_runtime/legion_tasks.cc	/^    void RemoteTask::add_top_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
add_user	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::add_user(const UT &user, bool precise)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
add_user	src/legion_runtime/region_tree.cc	/^    InstanceRef CompositeView::add_user(PhysicalUser &user,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
add_user	src/legion_runtime/region_tree.cc	/^    InstanceRef MaterializedView::add_user(PhysicalUser &user, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_user	src/legion_runtime/region_tree.cc	/^    InstanceRef ReductionView::add_user(PhysicalUser &user, Processor exec_proc)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
add_user_above	src/legion_runtime/region_tree.cc	/^    void MaterializedView::add_user_above(std::set<Event> &wait_on,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
add_utility_user	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::add_utility_user(Processor p, ProcessorImpl *impl)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
add_valid_domain	src/legion_runtime/runtime.cc	/^    void FutureMap::Impl::add_valid_domain(const Domain &d)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
add_valid_point	src/legion_runtime/runtime.cc	/^    void FutureMap::Impl::add_valid_point(const DomainPoint &dp)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
add_valid_reference	src/legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::add_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
add_valid_reference	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::add_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
add_valid_reference	src/legion_runtime/region_tree.cc	/^    void InstanceRef::add_valid_reference(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
add_valid_references	src/legion_runtime/region_tree.cc	/^    void CompositeNode::add_valid_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
add_valid_view	src/legion_runtime/region_tree.cc	/^    void InstanceManager::add_valid_view(MaterializedView *view)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
add_value	src/lua_src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_variant	src/legion_runtime/legion.cc	/^    void TaskVariantCollection::add_variant(Processor::TaskFuncID low_id, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
add_vectors_all_task	src/test/saxpy_array.cc	/^void add_vectors_all_task(const void *args, size_t arglen,$/;"	f
add_vectors_task	src/test/saxpy_array.cc	/^void add_vectors_task(const void *global_args, size_t global_arglen,$/;"	f
add_vectors_task_aos	src/test/saxpy_array.cc	/^void add_vectors_task_aos(const void *global_args, size_t global_arglen,$/;"	f
add_vectors_task_gen	src/test/saxpy_array.cc	/^void add_vectors_task_gen(const void *global_args, size_t global_arglen,$/;"	f
add_wait_barrier	src/legion_runtime/legion.h	/^    inline void AcquireLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::AcquireLauncher
add_wait_barrier	src/legion_runtime/legion.h	/^    inline void CopyLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::CopyLauncher
add_wait_barrier	src/legion_runtime/legion.h	/^    inline void IndexLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
add_wait_barrier	src/legion_runtime/legion.h	/^    inline void ReleaseLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::ReleaseLauncher
add_wait_barrier	src/legion_runtime/legion.h	/^    inline void TaskLauncher::add_wait_barrier(PhaseBarrier bar)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
add_waiter	src/legion_runtime/lowlevel.cc	/^	  void add_waiter(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
add_waiter	src/legion_runtime/lowlevel.cc	/^    void Event::Impl::add_waiter(Event event, EventWaiter *waiter, bool pre_subscribed \/*= false*\/)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
addbuff	src/lua_src/lstate.c	85;"	d	file:
adddep	scripts/basic/docproc.c	/^void adddep(char * file)		   { printf("\\t%s", file); }$/;"	f
adddep2	scripts/basic/docproc.c	/^void adddep2(char * file, char * line)     { line = line; adddep(file); }$/;"	f
addfield	src/lua_src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	src/lua_src/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
additional_fields	src/legion_runtime/legion.h	/^      std::set<FieldID> additional_fields;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
additional_procs	src/legion_runtime/legion.h	/^      std::set<Processor>                 additional_procs;$/;"	m	class:LegionRuntime::HighLevel::Task
addk	src/lua_src/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	src/lua_src/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addprototype	src/lua_src/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	src/lua_src/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addr	include/nautilus/acpi.h	/^    uint32_t addr;$/;"	m	struct:mp_table_entry_ioapic
addr	include/nautilus/mm.h	/^    uint64_t addr;$/;"	m	struct:mem_map_entry
addr	include/nautilus/multiboot2.h	/^  multiboot_uint64_t addr;$/;"	m	struct:multiboot_mmap_entry
addr	scripts/kallsyms.c	/^	unsigned long long addr;$/;"	m	struct:sym_entry	file:
addr	src/nautilus/mm/kmem.c	/^    void *   addr;   \/* address of block *\/$/;"	m	struct:kmem_block_hdr	file:
addr_space_size	include/nautilus/numa.h	/^    uint64_t addr_space_size;$/;"	m	struct:numa_domain
addr_t	include/nautilus/naut_types.h	/^typedef ulong_t addr_t;$/;"	t
addr_t	src/lua_src/lnautlib.c	/^typedef long unsigned int addr_t;$/;"	t	file:
address	include/acpi/acrestyp.h	/^	struct acpi_resource_address address;	\/* Common 16\/32\/64 address fields *\/$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_address
address	include/acpi/acrestyp.h	/^	uint16_t address;$/;"	m	struct:acpi_resource_fixed_io
address	include/acpi/acrestyp.h	/^	uint32_t address;$/;"	m	struct:acpi_resource_fixed_memory32
address	include/acpi/acrestyp.h	/^	uint64_t address;		\/* here for 64-bit alignment *\/$/;"	m	struct:acpi_pci_routing_table
address	include/acpi/acrestyp.h	/^	uint64_t address;$/;"	m	struct:acpi_resource_generic_register
address	include/acpi/actbl.h	/^	acpi_physical_address address;$/;"	m	struct:acpi_table_desc
address	include/acpi/actbl.h	/^	uint64_t address;		\/* 64-bit address of struct or register *\/$/;"	m	struct:acpi_generic_address
address	include/acpi/actbl1.h	/^	uint32_t address;		\/* APIC physical address *\/$/;"	m	struct:acpi_madt_io_apic
address	include/acpi/actbl1.h	/^	uint32_t address;		\/* Physical address of local APIC *\/$/;"	m	struct:acpi_table_madt
address	include/acpi/actbl1.h	/^	uint64_t address;		\/* APIC physical address *\/$/;"	m	struct:acpi_madt_local_apic_override
address	include/acpi/actbl1.h	/^	uint64_t address;		\/* Physical address of the error region *\/$/;"	m	struct:acpi_table_bert
address	include/acpi/actbl1.h	/^	uint64_t address;		\/* SAPIC physical address *\/$/;"	m	struct:acpi_madt_io_sapic
address	include/acpi/actbl2.h	/^	struct acpi_generic_address address;	\/* Address of event timer block *\/$/;"	m	struct:acpi_table_hpet	typeref:struct:acpi_table_hpet::acpi_generic_address
address	include/acpi/actbl2.h	/^	struct acpi_generic_address address;$/;"	m	struct:acpi_table_wddt	typeref:struct:acpi_table_wddt::acpi_generic_address
address	include/acpi/actbl2.h	/^	uint64_t address;		\/* Base address, processor-relative *\/$/;"	m	struct:acpi_mcfg_allocation
address	include/acpi/actbl2.h	/^	uint64_t address;		\/* Register Base Address *\/$/;"	m	struct:acpi_dmar_hardware_unit
address	include/acpi/actbl2.h	/^	uint8_t address;$/;"	m	struct:acpi_asf_alert_data
address	include/acpi/actbl2.h	/^	uint8_t address;$/;"	m	struct:acpi_asf_control_data
address	include/acpi/actypes.h	/^	acpi_physical_address address;$/;"	m	struct:acpi_mem_space_context
address	include/acpi/actypes.h	/^	uint64_t address;	\/* _ADR value *\/$/;"	m	struct:acpi_device_info
address	src/acpi/acpica/aclocal.h	/^	acpi_gpe_handler address;	\/* Address of handler, if any *\/$/;"	m	struct:acpi_gpe_handler_info
address	src/legion_runtime/legion_allocation.h	/^      inline const_pointer address(const_reference r) { return &r; }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
address	src/legion_runtime/legion_allocation.h	/^      inline pointer address(reference r) { return &r; }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
address16	include/acpi/acrestyp.h	/^	struct acpi_resource_address16 address16;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_address16
address32	include/acpi/acrestyp.h	/^	struct acpi_resource_address32 address32;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_address32
address64	include/acpi/acrestyp.h	/^	struct acpi_resource_address64 address64;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_address64
address_length	include/acpi/acrestyp.h	/^	uint16_t address_length;$/;"	m	struct:acpi_resource_address16
address_length	include/acpi/acrestyp.h	/^	uint16_t address_length;$/;"	m	struct:acpi_resource_memory24
address_length	include/acpi/acrestyp.h	/^	uint32_t address_length;$/;"	m	struct:acpi_resource_address32
address_length	include/acpi/acrestyp.h	/^	uint32_t address_length;$/;"	m	struct:acpi_resource_fixed_memory32
address_length	include/acpi/acrestyp.h	/^	uint32_t address_length;$/;"	m	struct:acpi_resource_memory32
address_length	include/acpi/acrestyp.h	/^	uint64_t address_length;$/;"	m	struct:acpi_resource_address64
address_length	include/acpi/acrestyp.h	/^	uint64_t address_length;$/;"	m	struct:acpi_resource_extended_address64
address_length	include/acpi/acrestyp.h	/^	uint8_t address_length;$/;"	m	struct:acpi_resource_fixed_io
address_length	include/acpi/acrestyp.h	/^	uint8_t address_length;$/;"	m	struct:acpi_resource_io
address_register	include/acpi/actbl1.h	/^	uint32_t address_register;$/;"	m	struct:acpi_hest_ia_error_bank
address_space	src/legion_runtime/legion.cc	/^      AddressSpaceID address_space;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
address_space	src/legion_runtime/legion_logging.h	/^        AddressSpaceID address_space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcessor
address_space	src/legion_runtime/lowlevel.cc	/^    AddressSpace Memory::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
address_space	src/legion_runtime/lowlevel.cc	/^    AddressSpace Processor::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
address_space	src/legion_runtime/lowlevel.cc	/^    AddressSpace RegionInstance::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
address_space	src/legion_runtime/runtime.h	/^      const AddressSpaceID address_space; $/;"	m	class:LegionRuntime::HighLevel::Runtime
address_space	src/legion_runtime/shared_lowlevel.cc	/^    AddressSpace Memory::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
address_space	src/legion_runtime/shared_lowlevel.cc	/^    AddressSpace Processor::address_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
address_space	src/legion_runtime/shared_lowlevel.cc	/^    AddressSpace RegionInstance::address_space(void) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstance
addstr	src/lua_src/lobject.c	253;"	d	file:
adj_list	include/nautilus/numa.h	/^    struct list_head adj_list;$/;"	m	struct:numa_domain	typeref:struct:numa_domain::list_head
adjacent_deg	src/legion_runtime/rectangle_set.h	/^      std::list<Segment<T>*> adjacent_deg;$/;"	m	class:LegionRuntime::HighLevel::Segment
adjacent_high	src/legion_runtime/rectangle_set.h	/^      Segment<T> *adjacent_high[2];$/;"	m	class:LegionRuntime::HighLevel::Segment
adjacent_low	src/legion_runtime/rectangle_set.h	/^      Segment<T> *adjacent_low[2];$/;"	m	class:LegionRuntime::HighLevel::Segment
adjust_arrival	src/legion_runtime/lowlevel.cc	/^    void Event::Impl::adjust_arrival(Event::gen_t barrier_gen, int delta, $/;"	f	class:LegionRuntime::LowLevel::Event::Impl
adjust_assign	src/lua_src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_long_msgsize	src/legion_runtime/activemsg.cc	/^  bool adjust_long_msgsize(gasnet_node_t source, void *&ptr, size_t &buffer_size,$/;"	f	class:EndpointManager
adjust_long_msgsize	src/legion_runtime/activemsg.cc	/^  bool adjust_long_msgsize(void *&ptr, size_t &buffer_size, $/;"	f	class:ActiveMessageEndpoint
adjust_long_msgsize	src/legion_runtime/activemsg.cc	/^extern bool adjust_long_msgsize(gasnet_node_t source, void *&ptr, size_t &buffer_size,$/;"	f
adjust_varargs	src/lua_src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	src/lua_src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	include/lua/lapi.h	17;"	d
advance_barrier	src/legion_runtime/lowlevel.cc	/^    Barrier Barrier::advance_barrier(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
advance_barrier	src/legion_runtime/shared_lowlevel.cc	/^    Barrier Barrier::advance_barrier(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
advance_field_versions	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::advance_field_versions(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
advance_phase_barrier	src/legion_runtime/legion.cc	/^    PhaseBarrier HighLevelRuntime::advance_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
advance_phase_barrier	src/legion_runtime/runtime.cc	/^    PhaseBarrier Runtime::advance_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
advance_pointer	src/legion_runtime/legion_utilities.h	/^    inline void Deserializer::advance_pointer(size_t bytes)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
advanced_capabilities	include/acpi/actbl1.h	/^	uint32_t advanced_capabilities;$/;"	m	struct:acpi_hest_aer_common
advanced_capabilities2	include/acpi/actbl1.h	/^	uint32_t advanced_capabilities2;$/;"	m	struct:acpi_hest_aer_bridge
aer	include/acpi/actbl1.h	/^	struct acpi_hest_aer_common aer;$/;"	m	struct:acpi_hest_aer	typeref:struct:acpi_hest_aer::acpi_hest_aer_common
aer	include/acpi/actbl1.h	/^	struct acpi_hest_aer_common aer;$/;"	m	struct:acpi_hest_aer_bridge	typeref:struct:acpi_hest_aer_bridge::acpi_hest_aer_common
aer	include/acpi/actbl1.h	/^	struct acpi_hest_aer_common aer;$/;"	m	struct:acpi_hest_aer_root	typeref:struct:acpi_hest_aer_root::acpi_hest_aer_common
aesni	include/nautilus/cpuid.h	/^            uint8_t aesni    : 1; \/\/ AESNI instruction extensions$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
after_copy	src/legion_runtime/lowlevel_dma.cc	/^      Event after_copy;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest	file:
after_copy	src/legion_runtime/lowlevel_dma.h	/^      Event before_copy, after_copy;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
after_event	src/legion_runtime/lowlevel.cc	/^      Event after_event;$/;"	m	class:LegionRuntime::LowLevel::DeferredEventTrigger	file:
after_lock	src/legion_runtime/lowlevel.cc	/^      Event after_lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
alerts	include/acpi/actbl2.h	/^	uint8_t alerts;$/;"	m	struct:acpi_asf_alert
algorithm	include/acpi/actbl2.h	/^	uint32_t algorithm;$/;"	m	struct:acpi_slic_key
aliases	src/legion_runtime/region_tree.h	/^      std::set<DistributedID> aliases;$/;"	m	class:LegionRuntime::HighLevel::InstanceView
align_addr	src/nautilus/paging.c	/^align_addr (ulong_t addr, ulong_t align) $/;"	f	file:
alignment	include/acpi/acrestyp.h	/^	uint16_t alignment;$/;"	m	struct:acpi_resource_memory24
alignment	include/acpi/acrestyp.h	/^	uint32_t alignment;$/;"	m	struct:acpi_resource_memory32
alignment	include/acpi/acrestyp.h	/^	uint8_t alignment;$/;"	m	struct:acpi_resource_io
alignment	src/legion_runtime/lowlevel_impl.h	/^      size_t alignment;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
all-sources	Makefile	/^define all-sources$/;"	m
all_children_mapped	src/legion_runtime/legion_tasks.h	/^      UserEvent all_children_mapped;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
all_cpus	src/test/circuit_mapper.h	/^  std::vector<Processor> all_cpus;$/;"	m	class:CircuitMapper
all_gpus	src/test/circuit_mapper.h	/^  std::vector<Processor> all_gpus;$/;"	m	class:CircuitMapper
all_nodes	src/test/circuit.h	/^  LogicalRegion all_nodes;$/;"	m	struct:Circuit
all_symbols	scripts/kallsyms.c	/^static int all_symbols = 0;$/;"	v	file:
all_threads	src/legion_runtime/lowlevel.cc	/^      std::set<Thread *> all_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
all_threads	src/legion_runtime/lowlevel_impl.h	/^      pthread_t all_threads[MAX_NUM_THREADS];$/;"	m	class:Runtime
all_wires	src/test/circuit.h	/^  LogicalRegion all_wires;$/;"	m	struct:Circuit
allgc	include/lua/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
alloc	src/legion_runtime/legion.h	/^    inline ptr_t IndexAllocator::alloc(unsigned num_elements \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
alloc	src/legion_runtime/lowlevel.cc	/^    unsigned IndexSpaceAllocator::alloc(unsigned count \/*= 1*\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
alloc	src/legion_runtime/shared_lowlevel.cc	/^    unsigned IndexSpaceAllocator::alloc(unsigned count \/*= 1*\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
alloc_block	src/fs/ext2/ext2_access.c	581;"	d	file:
alloc_bytes	src/legion_runtime/lowlevel.cc	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
alloc_bytes	src/legion_runtime/lowlevel.cc	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
alloc_bytes	src/legion_runtime/lowlevel.cc	/^    off_t GASNetMemory::alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
alloc_bytes	src/legion_runtime/lowlevel_gpu.h	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
alloc_bytes	src/legion_runtime/lowlevel_gpu.h	/^      virtual off_t alloc_bytes(size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
alloc_bytes_local	src/legion_runtime/lowlevel.cc	/^    off_t Memory::Impl::alloc_bytes_local(size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
alloc_bytes_remote	src/legion_runtime/lowlevel.cc	/^    off_t Memory::Impl::alloc_bytes_remote(size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
alloc_counts	src/legion_runtime/activemsg.cc	/^  std::map<void *, off_t> alloc_counts;$/;"	m	class:SrcDataPool	file:
alloc_elements	src/legion_runtime/lowlevel.cc	/^    unsigned IndexSpaceAllocator::Impl::alloc_elements(unsigned count \/*= 1 *\/)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
alloc_elmt	src/legion_runtime/shared_lowlevel.cc	/^    unsigned IndexSpaceAllocator::Impl::alloc_elmt(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
alloc_entry	src/legion_runtime/lowlevel_impl.h	/^    typename DynamicTableFreeList<ALLOCATOR>::ET *DynamicTableFreeList<ALLOCATOR>::alloc_entry(void)$/;"	f	class:LegionRuntime::LowLevel::DynamicTableFreeList
alloc_free_block	src/fs/ext2/ext2_access.c	/^static int alloc_free_block(struct ext2_state *fs, uint32_t *num, int free)$/;"	f	file:
alloc_free_inode	src/fs/ext2/ext2_access.c	/^static int alloc_free_inode(struct ext2_state *fs, uint32_t *num, int free)$/;"	f	file:
alloc_inode	src/fs/ext2/ext2_access.c	508;"	d	file:
alloc_offset	src/legion_runtime/lowlevel_impl.h	/^	off_t alloc_offset; \/\/, access_offset;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
alloc_srcptr	src/legion_runtime/activemsg.cc	/^void *SrcDataPool::alloc_srcptr(size_t size_needed, Lock& held_lock)$/;"	f	class:SrcDataPool
alloc_string	scripts/kconfig/lex.zconf.c	/^void alloc_string(const char *str, int size)$/;"	f
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = ACQUIRE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = AND_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = CLOSE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = COPY_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = DELETION_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = FENCE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FenceOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = FUTURE_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FuturePredOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = MAP_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MapOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = MUST_EPOCH_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = NOT_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::NotPredOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = OR_PRED_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
alloc_type	src/legion_runtime/legion_ops.h	/^      static const AllocationType alloc_type = RELEASE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
alloc_type	src/legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = INDEX_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
alloc_type	src/legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = INDIVIDUAL_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
alloc_type	src/legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = INLINE_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::InlineTask
alloc_type	src/legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = POINT_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::PointTask
alloc_type	src/legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = REMOTE_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::RemoteTask
alloc_type	src/legion_runtime/legion_tasks.h	/^      static const AllocationType alloc_type = SLICE_TASK_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
alloc_type	src/legion_runtime/legion_trace.h	/^      static const AllocationType alloc_type = TRACE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
alloc_type	src/legion_runtime/legion_trace.h	/^      static const AllocationType alloc_type = TRACE_CAPTURE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::TraceCaptureOp
alloc_type	src/legion_runtime/legion_trace.h	/^      static const AllocationType alloc_type = TRACE_COMPLETE_OP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::TraceCompleteOp
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = COMPOSITE_NODE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = COMPOSITE_VIEW_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = FOLD_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FoldReductionManager
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = INSTANCE_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = LIST_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ListReductionManager
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = MATERIALIZED_VIEW_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = REDUCTION_VIEW_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
alloc_type	src/legion_runtime/region_tree.h	/^      static const AllocationType alloc_type = TREE_CLOSE_IMPL_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = ALLOC_MANAGER_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::AllocManager
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = ARGUMENT_MAP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = ARGUMENT_MAP_STORE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMapStore
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = FUTURE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = FUTURE_MAP_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = GRANT_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = MPI_HANDSHAKE_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
alloc_type	src/legion_runtime/runtime.h	/^      static const AllocationType alloc_type = PHYSICAL_REGION_ALLOC;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
alloca	scripts/kconfig/zconf.tab.c	334;"	d	file:
allocate	src/legion_runtime/legion_allocation.h	/^      inline pointer allocate(size_type cnt,$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
allocate_context	src/legion_runtime/runtime.cc	/^    void Runtime::allocate_context(SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_event_id	src/nautilus/nemo.c	/^allocate_event_id (void) $/;"	f	file:
allocate_field	src/legion_runtime/legion.cc	/^    FieldID HighLevelRuntime::allocate_field(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
allocate_field	src/legion_runtime/legion.h	/^    inline FieldID FieldAllocator::allocate_field(size_t field_size, $/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_field	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::allocate_field(FieldSpace handle, size_t field_size,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_field	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::allocate_field(FieldID fid, size_t size, bool local)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
allocate_field	src/legion_runtime/runtime.cc	/^    FieldID Runtime::allocate_field(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_field_index	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::allocate_field_index(FieldID fid, size_t size,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
allocate_field_index	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::allocate_field_index(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_field_indexes	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::allocate_field_indexes(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_fields	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::allocate_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
allocate_fields	src/legion_runtime/legion.h	/^    inline void FieldAllocator::allocate_fields($/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_fields	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::allocate_fields(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
allocate_fields	src/legion_runtime/runtime.cc	/^    void Runtime::allocate_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_index	src/legion_runtime/region_tree.cc	/^    unsigned FieldSpaceNode::allocate_index(bool local, int goal \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
allocate_local_field	src/legion_runtime/legion.h	/^    inline FieldID FieldAllocator::allocate_local_field(size_t field_size,$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_local_field	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::allocate_local_field(const LocalFieldInfo &info)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
allocate_local_fields	src/legion_runtime/legion.h	/^    inline void FieldAllocator::allocate_local_fields($/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
allocate_locator_fields	src/test/circuit.cc	/^void allocate_locator_fields(Context ctx, HighLevelRuntime *runtime, FieldSpace locator_space)$/;"	f
allocate_node_fields	src/test/circuit.cc	/^void allocate_node_fields(Context ctx, HighLevelRuntime *runtime, FieldSpace node_space)$/;"	f
allocate_physical_instance	src/legion_runtime/runtime.cc	/^    void MemoryManager::allocate_physical_instance(PhysicalManager *manager)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
allocate_physical_instance	src/legion_runtime/runtime.cc	/^    void Runtime::allocate_physical_instance(PhysicalManager *instance)$/;"	f	class:LegionRuntime::HighLevel::Runtime
allocate_space	src/legion_runtime/shared_lowlevel.cc	/^    unsigned IndexSpace::Impl::allocate_space(unsigned count)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
allocate_space	src/legion_runtime/shared_lowlevel.cc	/^    void* MemoryImpl::allocate_space(size_t size)$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
allocate_wire_fields	src/test/circuit.cc	/^void allocate_wire_fields(Context ctx, HighLevelRuntime *runtime, FieldSpace wire_space)$/;"	f
allocated_fields	src/legion_runtime/region_tree.h	/^      const FieldMask allocated_fields;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
allocated_indexes	src/legion_runtime/region_tree.h	/^      FieldMask allocated_indexes;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
allocation	src/legion_runtime/runtime.h	/^      void *const allocation;$/;"	m	class:LegionRuntime::HighLevel::AllocManager
allocation_lock	src/legion_runtime/runtime.h	/^      Reservation allocation_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
allocation_manager	src/legion_runtime/runtime.h	/^      std::map<AllocationType,AllocationTracker> allocation_manager;$/;"	m	class:LegionRuntime::HighLevel::Runtime
allocation_size	src/legion_runtime/runtime.h	/^      size_t allocation_size;$/;"	m	class:LegionRuntime::HighLevel::AllocManager
allocation_size	src/legion_runtime/shared_lowlevel.cc	/^        size_t allocation_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
allocation_tracing_count	src/legion_runtime/runtime.h	/^      unsigned long long allocation_tracing_count;$/;"	m	class:LegionRuntime::HighLevel::Runtime
allocator	src/legion_runtime/legion.h	/^      IndexSpaceAllocator *allocator;$/;"	m	class:LegionRuntime::HighLevel::IndexAllocator
allocator	src/legion_runtime/region_tree.h	/^      IndexSpaceAllocator *allocator;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
allocator_lock	src/legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         allocator_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
allowhook	include/lua/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
allweak	include/lua/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State
alpha	src/test/hpcg/comp-waxpby.h	/^    double alpha;$/;"	m	struct:__anon116::waxpbyTaskArgs
alpha	src/test/saxpy_array.cc	/^  float alpha;$/;"	m	struct:Block	file:
alpha	src/test/saxpy_array.cc	/^  float alpha;$/;"	m	struct:MainArgs	file:
already_traced	src/legion_runtime/legion_ops.h	/^      inline bool already_traced(void) const $/;"	f	class:LegionRuntime::HighLevel::Operation
alter_arrival_count	src/legion_runtime/lowlevel.cc	/^    Barrier Barrier::alter_arrival_count(int delta) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
alter_arrival_count	src/legion_runtime/shared_lowlevel.cc	/^    Barrier Barrier::alter_arrival_count(int delta) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
alter_arrival_count	src/legion_runtime/shared_lowlevel.cc	/^    Barrier EventImpl::alter_arrival_count(int delta)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
altmovcr8	include/nautilus/cpuid.h	/^            uint8_t altmovcr8   : 1; \/\/ LOCK MOV CR0 means MOV CR8$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
always	scripts/Makefile	/^always		:= $(hostprogs-y)$/;"	m
always	scripts/basic/Makefile	/^always		:= $(hostprogs-y)$/;"	m
always	scripts/kconfig/lxdialog/Makefile	/^always		:= $(hostprogs-y) dochecklxdialog$/;"	m
amd3dnow	include/nautilus/cpuid.h	/^            uint8_t amd3dnow    : 1; \/\/ 3DNow instructions $/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
amd3dnowext	include/nautilus/cpuid.h	/^            uint8_t amd3dnowext : 1; \/\/ 3DNow AMD extensions $/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
amd_fpu_init	src/nautilus/fpu.c	/^amd_fpu_init (struct naut_info * naut)$/;"	f	file:
amd_get_cmplegacy	src/nautilus/numa.c	/^amd_get_cmplegacy (void)$/;"	f	file:
amd_get_topo_secondary	src/nautilus/numa.c	/^amd_get_topo_secondary (struct nk_topo_params * tp)$/;"	f	file:
amd_has_3dnow	src/nautilus/fpu.c	/^amd_has_3dnow (void)$/;"	f	file:
amd_has_3dnow_ext	src/nautilus/fpu.c	/^amd_has_3dnow_ext (void)$/;"	f	file:
amd_has_ext_lvt	src/dev/apic.c	/^amd_has_ext_lvt (struct apic_dev * apic)$/;"	f	file:
amd_has_fma4	src/nautilus/fpu.c	/^amd_has_fma4 (void)$/;"	f	file:
amd_has_misal_sse	src/nautilus/fpu.c	/^amd_has_misal_sse (void)$/;"	f	file:
amd_has_mmx_ext	src/nautilus/fpu.c	/^amd_has_mmx_ext (void)$/;"	f	file:
amd_has_prefetch	src/nautilus/fpu.c	/^amd_has_prefetch (void)$/;"	f	file:
amd_has_sse4a	src/nautilus/fpu.c	/^amd_has_sse4a (void)$/;"	f	file:
amd_setup_ext_lvt	src/dev/apic.c	/^amd_setup_ext_lvt (struct apic_dev * apic)$/;"	f	file:
aml	src/acpi/acpica/aclocal.h	/^	u8 *aml;		\/* Next AML byte *\/$/;"	m	struct:acpi_parse_state
aml_end	src/acpi/acpica/aclocal.h	/^	u8 *aml_end;		\/* (last + 1) AML byte *\/$/;"	m	struct:acpi_parse_state
aml_length	src/acpi/acpica/aclocal.h	/^	u32 aml_length;$/;"	m	struct:acpi_parse_obj_asl
aml_opcode_length	src/acpi/acpica/aclocal.h	/^	u8 aml_opcode_length;$/;"	m	struct:acpi_parse_obj_asl
aml_pkg_len_bytes	src/acpi/acpica/aclocal.h	/^	u8 aml_pkg_len_bytes;$/;"	m	struct:acpi_parse_obj_asl
aml_predicate_start	src/acpi/acpica/aclocal.h	/^	u8 *aml_predicate_start;	\/* Start of if\/while predicate *\/$/;"	m	struct:acpi_control_state
aml_size	src/acpi/acpica/aclocal.h	/^	u32 aml_size;$/;"	m	struct:acpi_parse_state
aml_start	src/acpi/acpica/aclocal.h	/^	u8 *aml_start;		\/* First AML byte *\/$/;"	m	struct:acpi_parse_state
aml_subtree_length	src/acpi/acpica/aclocal.h	/^	u32 aml_subtree_length;$/;"	m	struct:acpi_parse_obj_asl
analyze	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze(const FieldMask &mask, AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze	src/legion_runtime/region_tree.cc	/^    bool LogicalCloser::analyze(LogicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
analyze	src/legion_runtime/region_tree.cc	/^    bool LogicalDepAnalyzer::analyze(LogicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
analyze	src/legion_runtime/region_tree.cc	/^    bool LogicalFieldInvalidator::analyze(const LogicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
analyze	src/legion_runtime/region_tree.cc	/^    bool LogicalFilter::analyze(LogicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
analyze	src/legion_runtime/region_tree.cc	/^    bool LogicalOpAnalyzer<DOMINATE>::analyze(LogicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
analyze	src/legion_runtime/region_tree.cc	/^    bool PhysicalCopyAnalyzer<READING,REDUCE,TRACK,ABOVE>::analyze($/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
analyze	src/legion_runtime/region_tree.cc	/^    bool PhysicalDepAnalyzer<FILTER>::analyze(PhysicalUser &prev_user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
analyze	src/legion_runtime/region_tree.cc	/^    bool PhysicalFilter::analyze(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
analyze	src/legion_runtime/region_tree.cc	/^    bool PhysicalUnpacker::analyze(PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
analyze	src/legion_runtime/region_tree.cc	/^    bool WARAnalyzer<ABOVE>::analyze(const PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
analyze	src/legion_runtime/region_tree.h	/^      inline bool analyze(const PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
analyze_destroy_field_space	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_field_space(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_field_space	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_field_space(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_fields	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_fields(FieldSpace handle, Operation *op,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_fields	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_fields(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_index_partition	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_index_partition(IndexPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_index_partition	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_index_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_index_space	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_index_space(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_index_space	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_index_space(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_logical_partition	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_logical_partition(LogicalPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_logical_partition	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_logical_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_destroy_logical_region	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::analyze_destroy_logical_region(LogicalRegion handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
analyze_destroy_logical_region	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::analyze_destroy_logical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
analyze_imprecise	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_imprecise(const FieldMask &mask, $/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_no_checks	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze_no_checks(AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_precise	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_precise(AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_recurse	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze_recurse(const FieldMask &mask, AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single(const FieldMask &mask, $/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::analyze_single(unsigned index, AT &analyzer)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single_imprecise	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single_imprecise(unsigned index,$/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single_precise	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single_precise(unsigned index, $/;"	f	class:LegionRuntime::HighLevel::FieldTree
analyze_single_single	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::analyze_single_single(unsigned index,$/;"	f	class:LegionRuntime::HighLevel::FieldTree
anchor_token	src/lua_src/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
and_pred_op_lock	src/legion_runtime/runtime.h	/^      Reservation and_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
andaux	src/lua_src/lbitlib.c	/^static b_uint andaux (lua_State *L) {$/;"	f	file:
annotate_early_mapped_regions	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::annotate_early_mapped_regions(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
announcement_mutex	src/legion_runtime/lowlevel.cc	/^    static gasnet_hsl_t announcement_mutex = GASNET_HSL_INITIALIZER;$/;"	m	namespace:LegionRuntime::LowLevel	file:
announcements_received	src/legion_runtime/lowlevel.cc	/^    static int announcements_received = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
any_left	src/legion_runtime/arrays.h	/^      bool any_left;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
any_left	src/legion_runtime/arrays.h	/^      bool any_left;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
any_left	src/legion_runtime/arrays.h	/^      bool any_left;$/;"	m	class:LegionRuntime::Arrays::GenericPointInRectIterator
any_left	src/legion_runtime/lowlevel.h	/^	bool any_left;$/;"	m	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
ap_init_area	include/nautilus/smp.h	/^struct ap_init_area {$/;"	s
aperiodic	include/nautilus/scheduler.h	/^	struct nk_sched_aperiodic_constraints    aperiodic;$/;"	m	union:nk_sched_constraints::__anon53	typeref:struct:nk_sched_constraints::__anon53::nk_sched_aperiodic_constraints
aperiodic	src/nautilus/scheduler.c	/^    rt_priority_queue aperiodic;   \/\/ Aperiodic threads that are runnable$/;"	m	struct:nk_sched_percpu_state	file:
aperiodic	src/nautilus/scheduler.c	/^    rt_queue          aperiodic;   \/\/ Aperiodic threads that are runnable$/;"	m	struct:nk_sched_percpu_state	file:
aperiodic_default_priority	include/nautilus/scheduler.h	/^    uint64_t aperiodic_default_priority; $/;"	m	struct:nk_sched_config
aperiodic_priority	include/nautilus/scheduler.h	/^    uint64_t aperiodic_priority; \/\/ what priority once it it is complete$/;"	m	struct:nk_sched_sporadic_constraints
aperiodic_quantum	include/nautilus/scheduler.h	/^    uint64_t aperiodic_quantum;          \/\/ in nanoseconds $/;"	m	struct:nk_sched_config
aperiodic_reservation	include/nautilus/scheduler.h	/^    uint64_t aperiodic_reservation;      \/\/ utilization in 10^-6 units$/;"	m	struct:nk_sched_config
api_check	include/lua/llimits.h	85;"	d
api_checknelems	include/lua/lapi.h	20;"	d
api_checkstackindex	src/lua_src/lapi.c	51;"	d	file:
api_checkvalidindex	src/lua_src/lapi.c	49;"	d	file:
api_incr_top	include/lua/lapi.h	14;"	d
apic	include/nautilus/cpuid.h	/^            uint8_t apic        : 1; \/\/ APIC support$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
apic	include/nautilus/cpuid.h	/^            uint8_t apic     : 1; \/\/ apic on-chip$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
apic	include/nautilus/smp.h	/^    struct apic_dev * apic;$/;"	m	struct:cpu	typeref:struct:cpu::apic_dev
apic_assign_spiv	src/dev/apic.c	/^apic_assign_spiv (struct apic_dev * apic, uint8_t spiv_vec)$/;"	f	file:
apic_bcast_deinit_iipi	src/dev/apic.c	/^apic_bcast_deinit_iipi (struct apic_dev * apic)$/;"	f
apic_bcast_iipi	src/dev/apic.c	/^apic_bcast_iipi (struct apic_dev * apic) $/;"	f
apic_bcast_ipi	include/dev/apic.h	/^apic_bcast_ipi (struct apic_dev * apic, uint_t vector)$/;"	f
apic_bcast_sipi	src/dev/apic.c	/^apic_bcast_sipi (struct apic_dev * apic, uint8_t target)$/;"	f
apic_cycles_to_realtime	src/dev/apic.c	/^uint64_t apic_cycles_to_realtime(struct apic_dev *apic, uint64_t cycles)$/;"	f
apic_cycles_to_ticks	src/dev/apic.c	/^uint32_t apic_cycles_to_ticks(struct apic_dev *apic, uint64_t cycles)$/;"	f
apic_deinit_iipi	src/dev/apic.c	/^apic_deinit_iipi (struct apic_dev * apic, uint32_t remote_id)$/;"	f
apic_dev	include/dev/apic.h	/^struct apic_dev {$/;"	s
apic_do_eoi	src/dev/apic.c	/^apic_do_eoi (void)$/;"	f
apic_dump	src/dev/apic.c	/^apic_dump (struct apic_dev * apic)$/;"	f	file:
apic_err_codes	src/dev/apic.c	/^static const char * apic_err_codes[8] = {$/;"	v	file:
apic_get_base_addr	src/dev/apic.c	/^apic_get_base_addr (void) $/;"	f	file:
apic_get_id	src/dev/apic.c	/^apic_get_id (struct apic_dev * apic)$/;"	f
apic_get_maxlvt	src/dev/apic.c	/^apic_get_maxlvt (struct apic_dev * apic)$/;"	f
apic_get_version	src/dev/apic.c	/^apic_get_version (struct apic_dev * apic)$/;"	f	file:
apic_global_enable	src/dev/apic.c	/^apic_global_enable (void)$/;"	f	file:
apic_id	include/acpi/actbl1.h	/^	uint32_t apic_id;$/;"	m	struct:acpi_srat_x2apic_cpu_affinity
apic_id	include/acpi/actbl1.h	/^	uint8_t apic_id;$/;"	m	struct:acpi_srat_cpu_affinity
apic_init	src/dev/apic.c	/^apic_init (struct cpu * core)$/;"	f
apic_ipi	include/dev/apic.h	/^apic_ipi (struct apic_dev * apic, $/;"	f
apic_is_bsp	src/dev/apic.c	/^apic_is_bsp (struct apic_dev * apic)$/;"	f	file:
apic_mode_t	include/dev/apic.h	/^typedef enum { APIC_INVALID=0, APIC_DISABLED, APIC_XAPIC, APIC_X2APIC } apic_mode_t;$/;"	t	typeref:enum:__anon70
apic_modes	src/dev/apic.c	/^static const char * apic_modes[4] = {$/;"	v	file:
apic_read	include/dev/apic.h	/^apic_read (struct apic_dev * apic, uint_t reg)$/;"	f
apic_read64	include/dev/apic.h	/^apic_read64 (struct apic_dev * apic, uint_t reg)$/;"	f
apic_read_timer	src/dev/apic.c	/^apic_read_timer (struct apic_dev * apic)$/;"	f
apic_realtime_to_cycles	src/dev/apic.c	/^uint64_t apic_realtime_to_cycles(struct apic_dev *apic, uint64_t ns)$/;"	f
apic_realtime_to_ticks	src/dev/apic.c	/^uint32_t apic_realtime_to_ticks(struct apic_dev *apic, uint64_t ns)$/;"	f
apic_self_ipi	src/dev/apic.c	/^apic_self_ipi (struct apic_dev * apic, uint_t vector)$/;"	f
apic_send_iipi	src/dev/apic.c	/^apic_send_iipi (struct apic_dev * apic, uint32_t remote_id) $/;"	f
apic_send_sipi	src/dev/apic.c	/^apic_send_sipi (struct apic_dev * apic, uint32_t remote_id, uint8_t target)$/;"	f
apic_set_base_addr	src/dev/apic.c	/^apic_set_base_addr (struct apic_dev * apic, addr_t addr)$/;"	f	file:
apic_set_oneshot_timer	src/dev/apic.c	/^void apic_set_oneshot_timer(struct apic_dev *apic, uint32_t ticks) $/;"	f
apic_sw_disable	src/dev/apic.c	/^apic_sw_disable (struct apic_dev * apic)$/;"	f	file:
apic_sw_enable	src/dev/apic.c	/^apic_sw_enable (struct apic_dev * apic)$/;"	f	file:
apic_timer_handler	src/dev/apic.c	/^static int apic_timer_handler(excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
apic_timer_setup	src/dev/apic.c	/^apic_timer_setup (struct apic_dev * apic, uint32_t quantum)$/;"	f	file:
apic_update_oneshot_timer	src/dev/apic.c	/^void apic_update_oneshot_timer(struct apic_dev *apic, uint32_t ticks,$/;"	f
apic_wait_for_send	src/dev/apic.c	/^apic_wait_for_send(struct apic_dev * apic)$/;"	f
apic_write	include/dev/apic.h	/^apic_write (struct apic_dev * apic, uint_t reg, uint32_t val)$/;"	f
apic_write64	include/dev/apic.h	/^apic_write64 (struct apic_dev * apic, uint_t reg, uint64_t val)$/;"	f
apic_write_icr	include/dev/apic.h	/^static inline void apic_write_icr(struct apic_dev *apic, uint32_t dest, uint32_t lo)$/;"	f
append	src/legion_runtime/region_tree.cc	/^    void LegionStack<T,MAX_SIZE,INC_SIZE>::append(unsigned int append_count)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
append_list	src/legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::append_list(RegionInstance::Impl *target)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
append_string	scripts/kconfig/lex.zconf.c	/^void append_string(const char *str, int size)$/;"	f
apply	src/legion_runtime/lowlevel.h	/^      virtual void apply(void *lhs_ptr, const void *rhs_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
apply	src/test/circuit_cpu.cc	/^void AccumulateCharge::apply<false>(LHS &lhs, RHS rhs)$/;"	f	class:AccumulateCharge
apply	src/test/circuit_cpu.cc	/^void AccumulateCharge::apply<true>(LHS &lhs, RHS rhs) $/;"	f	class:AccumulateCharge
apply	src/test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::apply<false>(LHS &lhs, RHS rhs) {$/;"	f	class:lgncg::DotProdAccumulate
apply	src/test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::apply<true>(LHS &lhs, RHS rhs) {$/;"	f	class:lgncg::DotProdAccumulate
apply	src/test/saxpy_array.cc	/^  template <bool EXCL> static void apply(float& lhs, float rhs) { lhs += rhs; }$/;"	f	struct:Add
apply_list	src/legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::apply_list(RegionInstance::Impl *target)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
apply_list_entry	src/legion_runtime/lowlevel.h	/^      virtual void apply_list_entry(void *lhs_ptr, const void *entry_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
apply_reduction_list	src/legion_runtime/lowlevel.cc	/^    void GASNetMemory::apply_reduction_list(off_t offset, const ReductionOpUntyped *redop,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
apply_reduction_list	src/legion_runtime/lowlevel_impl.h	/^      virtual void apply_reduction_list(off_t offset, const ReductionOpUntyped *redop,$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
apply_strided	src/legion_runtime/lowlevel.h	/^      virtual void apply_strided(void *lhs_ptr, const void *rhs_ptr,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
arch_detect_mem_map	src/arch/hrt/early_mem.c	/^arch_detect_mem_map (mmap_info_t * mm_info, $/;"	f
arch_detect_mem_map	src/arch/k1om/early_mem.c	/^arch_detect_mem_map (mmap_info_t * mm_info, $/;"	f
arch_detect_mem_map	src/arch/x64/early_mem.c	/^arch_detect_mem_map (mmap_info_t * mm_info, $/;"	f
arch_early_init	src/arch/hrt/smp.c	/^arch_early_init (struct naut_info * naut)$/;"	f
arch_early_init	src/arch/k1om/smp.c	/^arch_early_init (struct naut_info * naut)$/;"	f
arch_early_init	src/arch/x64/smp.c	/^arch_early_init (struct naut_info * naut)$/;"	f
arch_numa_init	src/arch/hrt/numa.c	/^arch_numa_init (struct sys_info * sys)$/;"	f
arch_numa_init	src/arch/k1om/numa.c	/^arch_numa_init (struct sys_info * sys)$/;"	f
arch_numa_init	src/arch/x64/numa.c	/^arch_numa_init (struct sys_info * sys)$/;"	f
arch_reserve_boot_regions	src/arch/hrt/early_mem.c	/^arch_reserve_boot_regions (unsigned long mbd)$/;"	f
arch_reserve_boot_regions	src/arch/k1om/early_mem.c	/^arch_reserve_boot_regions (unsigned long mbd)$/;"	f
arch_reserve_boot_regions	src/arch/x64/early_mem.c	/^arch_reserve_boot_regions (unsigned long mbd)$/;"	f
architecture	include/nautilus/multiboot2.h	/^  multiboot_uint32_t architecture;$/;"	m	struct:multiboot_header
are_all_children_disjoint	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::are_all_children_disjoint(void)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
are_all_children_disjoint	src/legion_runtime/region_tree.cc	/^    bool RegionNode::are_all_children_disjoint(void)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
are_children_disjoint	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::are_children_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
are_children_disjoint	src/legion_runtime/region_tree.cc	/^    bool RegionNode::are_children_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
are_compatible	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::are_compatible(IndexSpace left, IndexSpace right)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	src/legion_runtime/region_tree.cc	/^    \/*static*\/ bool RegionTreeForest::are_disjoint(IndexSpaceNode *left,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	src/legion_runtime/region_tree.cc	/^    \/*static*\/ bool RegionTreeForest::are_disjoint(const Domain &left,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::are_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
are_disjoint	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::are_disjoint(Color c1, Color c2)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
are_disjoint	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::are_disjoint(IndexSpace parent, IndexPartition child)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
are_disjoint	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::are_disjoint(IndexSpace parent, IndexSpace child)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
arg	src/acpi/acpica/aclocal.h	/^	union acpi_parse_object *arg;	\/* arguments and contained ops *\/$/;"	m	union:acpi_parse_value	typeref:union:acpi_parse_value::acpi_parse_object
arg0	src/legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg1	src/legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg2	src/legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg3	src/legion_runtime/lowlevel.cc	/^	gasnet_handlerarg_t arg0, arg1, arg2, arg3;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
arg_count	src/acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u32 arg_count;	\/* Number of fixed arguments *\/$/;"	m	struct:acpi_pscope_state
arg_end	src/acpi/acpica/aclocal.h	/^	u8 *arg_end;		\/* Current argument end *\/$/;"	m	struct:acpi_pscope_state
arg_list	src/acpi/acpica/aclocal.h	/^	u32 arg_list;		\/* Next argument to parse *\/$/;"	m	struct:acpi_pscope_state
arg_manager	src/legion_runtime/legion_tasks.h	/^      AllocManager *arg_manager;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
argc	src/legion_runtime/legion.h	/^      int argc;$/;"	m	struct:LegionRuntime::HighLevel::InputArgs
arglen	src/legion_runtime/legion.h	/^      size_t                              arglen;$/;"	m	class:LegionRuntime::HighLevel::Task
arglen	src/legion_runtime/legion.h	/^      size_t arglen;$/;"	m	class:LegionRuntime::HighLevel::TaskArgument
arglen	src/legion_runtime/lowlevel.cc	/^      size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
arglen	src/legion_runtime/lowlevel.cc	/^      size_t arglen;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
arglen	src/legion_runtime/lowlevel_gpu.cc	/^      size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
arglen	src/legion_runtime/lowlevel_impl.h	/^      size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::Task
arglen	src/legion_runtime/shared_lowlevel.cc	/^		size_t arglen;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
arglen	src/legion_runtime/shared_lowlevel.cc	/^      size_t arglen;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
argmax	scripts/kconfig/lxdialog/lxdialog.c	/^	int argmin, argmax, argmod;$/;"	m	struct:Mode	file:
argmin	scripts/kconfig/lxdialog/lxdialog.c	/^	int argmin, argmax, argmod;$/;"	m	struct:Mode	file:
argmod	scripts/kconfig/lxdialog/lxdialog.c	/^	int argmin, argmax, argmod;$/;"	m	struct:Mode	file:
argptr	scripts/kconfig/mconf.c	/^static char *args[1024], **argptr = args;$/;"	v	file:
args	scripts/kconfig/mconf.c	/^static char *args[1024], **argptr = args;$/;"	v	file:
args	src/acpi/acpica/aclocal.h	/^	char **args;$/;"	m	struct:acpi_db_method_info
args	src/legion_runtime/activemsg.cc	/^  int args[16];$/;"	m	struct:OutgoingMessage	file:
args	src/legion_runtime/activemsg.h	/^  ARGTYPE                      args;$/;"	m	struct:ArgsWithReplyInfo
args	src/legion_runtime/legion.h	/^      void                               *args;                         $/;"	m	class:LegionRuntime::HighLevel::Task
args	src/legion_runtime/legion.h	/^      void *args;$/;"	m	class:LegionRuntime::HighLevel::TaskArgument
args	src/legion_runtime/lowlevel.cc	/^      const void *args;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
args	src/legion_runtime/lowlevel.cc	/^      void *args;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
args	src/legion_runtime/lowlevel_gpu.cc	/^      void *args;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
args	src/legion_runtime/lowlevel_impl.h	/^      void *args;$/;"	m	class:LegionRuntime::LowLevel::Task
args	src/legion_runtime/shared_lowlevel.cc	/^		void * args;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
args	src/legion_runtime/shared_lowlevel.cc	/^      const void *args;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
argument	include/acpi/acpiosxf.h	/^	uint32_t argument;$/;"	m	struct:acpi_signal_fatal_info
argument	src/legion_runtime/legion.h	/^      TaskArgument                       argument;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
argument_map	src/legion_runtime/legion.h	/^      ArgumentMap                        argument_map;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
argument_map	src/legion_runtime/legion_tasks.h	/^      ArgumentMap argument_map;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
arguments	src/acpi/acpica/aclocal.h	/^	char *arguments[4];$/;"	m	struct:acpi_db_method_info
arguments	src/legion_runtime/runtime.h	/^      std::map<DomainPoint,TaskArgument,DomainPoint::STLComparator> arguments;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
argv	src/legion_runtime/legion.h	/^      char **argv;$/;"	m	struct:LegionRuntime::HighLevel::InputArgs
arith_op	src/lua_src/lvm.c	525;"	d	file:
arm	src/legion_runtime/lowlevel.cc	/^      bool arm(void)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
arr	include/lua/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon18
arr	include/lua/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist
array	include/lua/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
array_base	src/legion_runtime/lowlevel.h	/^      void *array_base;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
arrayindex	src/lua_src/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
arrival_count	src/nautilus/scheduler.c	/^    uint64_t arrival_count;   \/\/ how many times it has arrived (1 for aperiodic\/sporadic)$/;"	m	struct:nk_sched_thread_state	file:
arrivals	src/legion_runtime/shared_lowlevel.cc	/^        unsigned arrivals; \/\/ for use with barriers$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
arrive	src/legion_runtime/legion.cc	/^    void PhaseBarrier::arrive(unsigned count \/*=0*\/)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
arrive	src/legion_runtime/lowlevel.cc	/^    void Barrier::arrive(unsigned count \/*= 1*\/, Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
arrive	src/legion_runtime/shared_lowlevel.cc	/^    void Barrier::arrive(unsigned count \/*=1*\/, Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
arrive	src/legion_runtime/utilities.h	/^      bool arrive(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityBarrier
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>           arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Task
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Acquire
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Copy
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         arrive_barriers;$/;"	m	class:LegionRuntime::HighLevel::Release
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
arrive_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       arrive_barriers;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
as_composite_view	src/legion_runtime/region_tree.cc	/^    CompositeView* CompositeView::as_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
as_composite_view	src/legion_runtime/region_tree.cc	/^    CompositeView* MaterializedView::as_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
as_fold_manager	src/legion_runtime/region_tree.cc	/^    FoldReductionManager* FoldReductionManager::as_fold_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
as_fold_manager	src/legion_runtime/region_tree.cc	/^    FoldReductionManager* ListReductionManager::as_fold_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
as_instance_manager	src/legion_runtime/region_tree.cc	/^    InstanceManager* InstanceManager::as_instance_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
as_instance_manager	src/legion_runtime/region_tree.cc	/^    InstanceManager* ReductionManager::as_instance_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
as_instance_view	src/legion_runtime/region_tree.cc	/^    InstanceView* InstanceView::as_instance_view(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceView
as_instance_view	src/legion_runtime/region_tree.cc	/^    InstanceView* ReductionView::as_instance_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
as_list_manager	src/legion_runtime/region_tree.cc	/^    ListReductionManager* FoldReductionManager::as_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
as_list_manager	src/legion_runtime/region_tree.cc	/^    ListReductionManager* ListReductionManager::as_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
as_mappable_acquire	src/legion_runtime/legion_ops.cc	/^    Acquire* AcquireOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_acquire	src/legion_runtime/legion_ops.cc	/^    Acquire* CopyOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_acquire	src/legion_runtime/legion_ops.cc	/^    Acquire* MapOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_acquire	src/legion_runtime/legion_ops.cc	/^    Acquire* ReleaseOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_acquire	src/legion_runtime/legion_tasks.cc	/^    Acquire* TaskOp::as_mappable_acquire(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_copy	src/legion_runtime/legion_ops.cc	/^    Copy* AcquireOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_copy	src/legion_runtime/legion_ops.cc	/^    Copy* CopyOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_copy	src/legion_runtime/legion_ops.cc	/^    Copy* MapOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_copy	src/legion_runtime/legion_ops.cc	/^    Copy* ReleaseOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_copy	src/legion_runtime/legion_tasks.cc	/^    Copy* TaskOp::as_mappable_copy(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_inline	src/legion_runtime/legion_ops.cc	/^    Inline* AcquireOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_inline	src/legion_runtime/legion_ops.cc	/^    Inline* CopyOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_inline	src/legion_runtime/legion_ops.cc	/^    Inline* MapOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_inline	src/legion_runtime/legion_ops.cc	/^    Inline* ReleaseOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_inline	src/legion_runtime/legion_tasks.cc	/^    Inline* TaskOp::as_mappable_inline(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_release	src/legion_runtime/legion_ops.cc	/^    Release* AcquireOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_release	src/legion_runtime/legion_ops.cc	/^    Release* CopyOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_release	src/legion_runtime/legion_ops.cc	/^    Release* MapOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_release	src/legion_runtime/legion_ops.cc	/^    Release* ReleaseOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_release	src/legion_runtime/legion_tasks.cc	/^    Release* TaskOp::as_mappable_release(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_mappable_task	src/legion_runtime/legion_ops.cc	/^    Task* AcquireOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
as_mappable_task	src/legion_runtime/legion_ops.cc	/^    Task* CopyOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
as_mappable_task	src/legion_runtime/legion_ops.cc	/^    Task* MapOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
as_mappable_task	src/legion_runtime/legion_ops.cc	/^    Task* ReleaseOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
as_mappable_task	src/legion_runtime/legion_tasks.cc	/^    Task* TaskOp::as_mappable_task(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
as_materialized_view	src/legion_runtime/region_tree.cc	/^    MaterializedView* CompositeView::as_materialized_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
as_materialized_view	src/legion_runtime/region_tree.cc	/^    MaterializedView* MaterializedView::as_materialized_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
as_partition_node	src/legion_runtime/region_tree.cc	/^    PartitionNode* PartitionNode::as_partition_node(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
as_partition_node	src/legion_runtime/region_tree.cc	/^    PartitionNode* RegionNode::as_partition_node(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
as_reduction_manager	src/legion_runtime/region_tree.cc	/^    ReductionManager* InstanceManager::as_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
as_reduction_manager	src/legion_runtime/region_tree.cc	/^    ReductionManager* ReductionManager::as_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
as_reduction_view	src/legion_runtime/region_tree.cc	/^    ReductionView* InstanceView::as_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceView
as_reduction_view	src/legion_runtime/region_tree.cc	/^    ReductionView* ReductionView::as_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
as_region_node	src/legion_runtime/region_tree.cc	/^    RegionNode* PartitionNode::as_region_node(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
as_region_node	src/legion_runtime/region_tree.cc	/^    RegionNode* RegionNode::as_region_node(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
ascii	include/acpi/actbl.h	/^	char ascii[4];$/;"	m	union:acpi_name_union
asin	src/nautilus/libccompat.c	/^double asin(double x)$/;"	f
ask_all	scripts/kconfig/conf.c	/^	ask_all,$/;"	e	enum:__anon2	file:
ask_new	scripts/kconfig/conf.c	/^	ask_new,$/;"	e	enum:__anon2	file:
ask_silent	scripts/kconfig/conf.c	/^	ask_silent,$/;"	e	enum:__anon2	file:
asl	src/acpi/acpica/aclocal.h	/^	struct acpi_parse_obj_asl asl;$/;"	m	union:acpi_parse_object	typeref:struct:acpi_parse_object::acpi_parse_obj_asl
asl_compiler_id	include/acpi/actbl.h	/^	char asl_compiler_id[ACPI_NAME_SIZE];	\/* ASCII ASL compiler vendor ID *\/$/;"	m	struct:acpi_table_header
asl_compiler_revision	include/acpi/actbl.h	/^	uint32_t asl_compiler_revision;	\/* ASL compiler version *\/$/;"	m	struct:acpi_table_header
asmlinkage	include/acpi/acpixf.h	387;"	d
asmlinkage	include/acpi/acpixf.h	389;"	d
assert_mask	include/acpi/actbl2.h	/^	uint8_t assert_mask;$/;"	m	struct:acpi_asf_alert
assign_bit	src/legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
assign_bit	src/legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
assign_bit	src/legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::BitMask
assign_bit	src/legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
assign_bit	src/legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::assign_bit(unsigned bit, bool val)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
assign_bit	src/legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::assign_bit(unsigned b, bool v)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
assign_context	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::assign_context(RegionTreeContext ctx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
assign_core_coords	src/nautilus/numa.c	/^assign_core_coords (struct cpu * me, struct nk_cpu_coords * coord, struct nk_topo_params *tp)$/;"	f	file:
assign_perf_event	src/nautilus/pmc.c	/^assign_perf_event (uint8_t event_id, uint8_t unit_mask)$/;"	f
assign_srcdata_pointer	src/legion_runtime/activemsg.cc	/^void OutgoingMessage::assign_srcdata_pointer(void *ptr)$/;"	f	class:OutgoingMessage
assigned	include/nautilus/nautilus.h	/^    uint8_t assigned;$/;"	m	struct:irq_mapping
assigned_idx	include/nautilus/pmc.h	/^    uint8_t assigned_idx;$/;"	m	struct:pmc_event
assignment	src/lua_src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
associate_domains	src/nautilus/numa.c	/^associate_domains (struct nk_locality_info * loc)$/;"	f	file:
ata_blkdev_state	src/dev/ata.c	/^struct ata_blkdev_state {$/;"	s	file:
ata_cmd_reg	src/dev/ata.c	/^typedef union ata_cmd_reg {$/;"	u	file:
ata_cmd_reg_t	src/dev/ata.c	/^} __packed ata_cmd_reg_t;$/;"	t	typeref:union:ata_cmd_reg	file:
ata_controller_state	src/dev/ata.c	/^struct ata_controller_state {$/;"	s	file:
ata_drive_detect	src/dev/ata.c	/^static int ata_drive_detect(struct ata_blkdev_state *s)$/;"	f	file:
ata_drive_identify	src/dev/ata.c	/^static int ata_drive_identify(struct ata_blkdev_state *s)$/;"	f	file:
ata_drive_select	src/dev/ata.c	/^static int ata_drive_select(struct ata_blkdev_state *s)$/;"	f	file:
ata_error_t	src/dev/ata.c	/^typedef enum {OK=0, ERR, DF} ata_error_t;$/;"	t	typeref:enum:__anon137	file:
ata_lba48_read_write	src/dev/ata.c	/^static int ata_lba48_read_write(struct ata_blkdev_state *s,$/;"	f	file:
ata_reset	src/dev/ata.c	/^static int ata_reset(struct ata_blkdev_state *s)$/;"	f	file:
ata_status_reg	src/dev/ata.c	/^typedef union ata_status_reg {$/;"	u	file:
ata_status_reg_t	src/dev/ata.c	/^} __packed ata_status_reg_t;$/;"	t	typeref:union:ata_status_reg	file:
ata_wait	src/dev/ata.c	/^static ata_error_t ata_wait(struct ata_blkdev_state *s, int data)$/;"	f	file:
atan	src/nautilus/libccompat.c	/^double atan(double __x){$/;"	f
atan2	src/nautilus/libccompat.c	/^double atan2(double y, double x){$/;"	f
atexit_func_entry_t	include/nautilus/cxxglue.h	/^struct atexit_func_entry_t$/;"	s
atoi	src/nautilus/naut_string.c	/^atoi (const char * buf) $/;"	f
atomic	src/lua_src/lgc.c	/^static l_mem atomic (lua_State *L) {$/;"	f	file:
atomic_add	include/nautilus/atomic.h	26;"	d
atomic_and	include/nautilus/atomic.h	30;"	d
atomic_cmpswap	include/nautilus/atomic.h	40;"	d
atomic_dec	include/nautilus/atomic.h	34;"	d
atomic_dec_val	include/nautilus/atomic.h	38;"	d
atomic_inc	include/nautilus/atomic.h	33;"	d
atomic_inc_val	include/nautilus/atomic.h	37;"	d
atomic_nand	include/nautilus/atomic.h	31;"	d
atomic_or	include/nautilus/atomic.h	28;"	d
atomic_sub	include/nautilus/atomic.h	27;"	d
atomic_xor	include/nautilus/atomic.h	29;"	d
atox	src/nautilus/naut_string.c	/^atox (const char * buf) {$/;"	f
attr	include/nautilus/sfi.h	/^    uint64_t attr;$/;"	m	struct:efi_mem_desc
attr_clear	scripts/kconfig/lxdialog/util.c	/^void attr_clear(WINDOW * win, int height, int width, chtype attr)$/;"	f
attribute	src/acpi/acpica/aclocal.h	/^	u8 attribute;$/;"	m	struct:acpi_create_field_info
attributes	include/dev/vesa.h	/^    uint16_t attributes;        \/\/ deprecated, only bit 7 should be of interest to you, and it indicates the mode supports a linear frame buffer.$/;"	m	struct:vesa_mode_info
attributes	scripts/kconfig/lxdialog/util.c	/^chtype attributes[] = {$/;"	v
attrs	include/nautilus/paging.h	/^    uint64_t attrs;$/;"	m	struct:nk_mem_zone
aux_close	src/lua_src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_data	include/acpi/actbl2.h	/^	uint16_t aux_data;$/;"	m	struct:acpi_ivrs_memory
aux_getn	src/lua_src/ltablib.c	20;"	d	file:
aux_lines	src/lua_src/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_upvalue	src/lua_src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val,$/;"	f	file:
auxgetinfo	src/lua_src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxresume	src/lua_src/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	src/lua_src/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	src/lua_src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
avail	include/nautilus/buddy.h	/^    struct list_head *avail;       \/** one free list for each block size,$/;"	m	struct:buddy_mempool	typeref:struct:buddy_mempool::list_head
avail_mask	src/legion_runtime/lowlevel_impl.h	/^      ElementMask *avail_mask;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
avail_mask_owner	src/legion_runtime/lowlevel_impl.h	/^	int avail_mask_owner;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::CoherentData
avail_threads	src/legion_runtime/lowlevel.cc	/^      std::list<Thread *> avail_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
available	src/arch/hrt/mwait.c	/^    uint8_t available;$/;"	m	struct:mwait_info	file:
available	src/arch/x64/mwait.c	/^    uint8_t available;$/;"	m	struct:mwait_info	file:
available_acquire_ops	src/legion_runtime/runtime.h	/^      std::deque<AcquireOp*>       available_acquire_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_and_pred_ops	src/legion_runtime/runtime.h	/^      std::deque<AndPredOp*>       available_and_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_capture_ops	src/legion_runtime/runtime.h	/^      std::deque<TraceCaptureOp*>  available_capture_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_close_ops	src/legion_runtime/runtime.h	/^      std::deque<CloseOp*>         available_close_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_contexts	src/legion_runtime/runtime.h	/^      std::deque<RegionTreeContext> available_contexts;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_copy_ops	src/legion_runtime/runtime.h	/^      std::deque<CopyOp*>          available_copy_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_deletion_ops	src/legion_runtime/runtime.h	/^      std::deque<DeletionOp*>      available_deletion_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_distributed_ids	src/legion_runtime/runtime.h	/^                                              available_distributed_ids;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_epoch_ops	src/legion_runtime/runtime.h	/^      std::deque<MustEpochOp*>     available_epoch_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_fence_ops	src/legion_runtime/runtime.h	/^      std::deque<FenceOp*>         available_fence_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_future_pred_ops	src/legion_runtime/runtime.h	/^      std::deque<FuturePredOp*>    available_future_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_index_tasks	src/legion_runtime/runtime.h	/^      std::deque<IndexTask*>       available_index_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_individual_tasks	src/legion_runtime/runtime.h	/^      std::deque<IndividualTask*>  available_individual_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_inline_tasks	src/legion_runtime/runtime.h	/^      std::deque<InlineTask*>      available_inline_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_instances	src/legion_runtime/runtime.h	/^                      MEMORY_AVAILABLE_ALLOC>::set available_instances;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
available_lock	src/legion_runtime/runtime.h	/^      Reservation available_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_map_ops	src/legion_runtime/runtime.h	/^      std::deque<MapOp*>           available_map_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_not_pred_ops	src/legion_runtime/runtime.h	/^      std::deque<NotPredOp*>       available_not_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_or_pred_ops	src/legion_runtime/runtime.h	/^      std::deque<OrPredOp*>        available_or_pred_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_point_tasks	src/legion_runtime/runtime.h	/^      std::deque<PointTask*>       available_point_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_release_ops	src/legion_runtime/runtime.h	/^      std::deque<ReleaseOp*>       available_release_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_remote_tasks	src/legion_runtime/runtime.h	/^      std::deque<RemoteTask*>      available_remote_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_slice_tasks	src/legion_runtime/runtime.h	/^      std::deque<SliceTask*>       available_slice_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
available_trace_ops	src/legion_runtime/runtime.h	/^      std::deque<TraceCompleteOp*> available_trace_ops;$/;"	m	class:LegionRuntime::HighLevel::Runtime
avg_latency	include/nautilus/instrument.h	/^    uint64_t avg_latency;$/;"	m	struct:irq_data
avg_latency	include/nautilus/instrument.h	/^    uint64_t avg_latency;$/;"	m	struct:malloc_data
avg_latency	include/nautilus/instrument.h	/^    uint64_t avg_latency;$/;"	m	struct:thread_switch_data
avg_nsec	src/nautilus/instrument.c	/^    uint64_t avg_nsec;$/;"	m	struct:func_data	file:
avx	include/nautilus/cpuid.h	/^            uint8_t avx      : 1; \/\/ AVX instruction extensions$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
avx2	include/nautilus/cpuid.h	/^            uint8_t avx2                : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
avx_double	src/legion_runtime/legion_utilities.h	/^        __m256d *avx_double;$/;"	m	union:LegionRuntime::HighLevel::AVXBitMask::__anon96
avx_double	src/legion_runtime/legion_utilities.h	/^        __m256d *avx_double;$/;"	m	union:LegionRuntime::HighLevel::AVXTLBitMask::__anon97
avx_vector	src/legion_runtime/legion_utilities.h	/^        __m256i *avx_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXBitMask::__anon96
avx_vector	src/legion_runtime/legion_utilities.h	/^        __m256i *avx_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXTLBitMask::__anon97
ax	include/nautilus/realmode.h	/^    uint16_t ax;$/;"	m	struct:nk_real_mode_int_args
b	include/lua/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer
b	include/lua/lobject.h	/^  int b;           \/* booleans *\/$/;"	m	union:Value
b	include/nautilus/cpuid.h	/^    uint32_t b;$/;"	m	struct:cpuid_ret
b	src/legion_runtime/rectangle_set.h	/^      T a1, a2, b;$/;"	m	class:LegionRuntime::HighLevel::Segment
b	src/lua_src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	src/lua_src/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon142	file:
b	src/lua_src/test.c	/^int b;$/;"	m	struct:test	file:
b	src/test/benchmark.c	/^	BARRIER_T * b;$/;"	m	struct:switch_cont	file:
b	src/test/hpcg/hpcg-problem-generator.h	/^    double *b;$/;"	m	struct:ProblemGenerator
b	src/test/hpcg/hpcg-problem.h	/^    lgncg::Vector b;$/;"	m	struct:Problem
b	src/test/hpcg/sparsemat.h	/^    int64_t b;$/;"	m	struct:lgncg::I64Tuple
b_and	src/lua_src/lbitlib.c	/^static int b_and (lua_State *L) {$/;"	f	file:
b_arshift	src/lua_src/lbitlib.c	/^static int b_arshift (lua_State *L) {$/;"	f	file:
b_extract	src/lua_src/lbitlib.c	/^static int b_extract (lua_State *L) {$/;"	f	file:
b_lrot	src/lua_src/lbitlib.c	/^static int b_lrot (lua_State *L) {$/;"	f	file:
b_lshift	src/lua_src/lbitlib.c	/^static int b_lshift (lua_State *L) {$/;"	f	file:
b_not	src/lua_src/lbitlib.c	/^static int b_not (lua_State *L) {$/;"	f	file:
b_or	src/lua_src/lbitlib.c	/^static int b_or (lua_State *L) {$/;"	f	file:
b_replace	src/lua_src/lbitlib.c	/^static int b_replace (lua_State *L) {$/;"	f	file:
b_rot	src/lua_src/lbitlib.c	/^static int b_rot (lua_State *L, int i) {$/;"	f	file:
b_rrot	src/lua_src/lbitlib.c	/^static int b_rrot (lua_State *L) {$/;"	f	file:
b_rshift	src/lua_src/lbitlib.c	/^static int b_rshift (lua_State *L) {$/;"	f	file:
b_shift	src/lua_src/lbitlib.c	/^static int b_shift (lua_State *L, b_uint r, int i) {$/;"	f	file:
b_test	src/lua_src/lbitlib.c	/^static int b_test (lua_State *L) {$/;"	f	file:
b_uint	src/lua_src/lbitlib.c	/^typedef lua_Unsigned b_uint;$/;"	t	file:
b_xor	src/lua_src/lbitlib.c	/^static int b_xor (lua_State *L) {$/;"	f	file:
backAction	scripts/kconfig/qconf.h	/^	QAction *backAction;$/;"	m	class:ConfigMainWindow
back_btn	scripts/kconfig/gconf.c	/^GtkWidget *back_btn = NULL;$/;"	v
back_lines	scripts/kconfig/lxdialog/textbox.c	/^static void back_lines(int n)$/;"	f	file:
background_kthread	src/legion_runtime/lowlevel.h	/^      void *background_kthread;$/;"	m	class:LegionRuntime::LowLevel::Machine
background_run_thread	src/legion_runtime/lowlevel.cc	/^    static void *background_run_thread(void *data)$/;"	f	namespace:LegionRuntime::LowLevel
background_run_thread	src/legion_runtime/shared_lowlevel.cc	/^    static void *background_run_thread(void *data)$/;"	f	namespace:LegionRuntime::LowLevel
backtitle	scripts/kconfig/lxdialog/util.c	/^const char *backtitle = NULL;$/;"	v
backtrace	include/nautilus/backtrace.h	35;"	d
backtrace_here	include/nautilus/backtrace.h	32;"	d
bad	src/asm/thread_lowlevel.S	/^bad:$/;"	l
bandwidth	src/legion_runtime/legion_logging.h	/^        size_t bandwidth;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
bandwidth	src/legion_runtime/legion_logging.h	/^        size_t bandwidth;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
bandwidth	src/legion_runtime/lowlevel.h	/^	unsigned bandwidth; \/\/ TODO: consider splitting read vs. write?$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
bandwidth	src/legion_runtime/lowlevel.h	/^	unsigned bandwidth;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
bank_number	include/acpi/actbl1.h	/^	uint8_t bank_number;$/;"	m	struct:acpi_hest_ia_error_bank
bank_size	include/dev/vesa.h	/^    uint8_t bank_size;        \/\/ deprecated; size of a bank, almost always 64 KB but may be 16 KB...$/;"	m	struct:vesa_mode_info
bank_value	src/acpi/acpica/aclocal.h	/^	u32 bank_value;$/;"	m	struct:acpi_create_field_info
banks	include/dev/vesa.h	/^    uint8_t banks;             \/\/ deprecated; total number of banks in this mode$/;"	m	struct:vesa_mode_info
barrier	src/legion_runtime/lowlevel.cc	/^      Barrier barrier;$/;"	m	class:LegionRuntime::LowLevel::DeferredBarrierArrival	file:
barrier	src/test/benchmark.c	/^	BARRIER_T * barrier;$/;"	m	struct:container	file:
barrier_adjustment_timestamp	src/legion_runtime/lowlevel.cc	/^    static Barrier::timestamp_t barrier_adjustment_timestamp;$/;"	m	namespace:LegionRuntime::LowLevel	file:
barrier_func1	src/nautilus/barrier.c	/^barrier_func1 (void * in, void ** out)$/;"	f	file:
barrier_func2	src/nautilus/barrier.c	/^barrier_func2 (void * in, void ** out)$/;"	f	file:
barrier_xcall_handler	src/nautilus/barrier.c	/^barrier_xcall_handler (void * arg) $/;"	f	file:
bars	include/dev/pci.h	/^            uint32_t bars[2];$/;"	m	struct:pci_cfg_space::__anon66::__anon68
bars	include/dev/pci.h	/^            uint32_t bars[6];$/;"	m	struct:pci_cfg_space::__anon66::__anon67
base	include/dev/ioapic.h	/^    addr_t  base;$/;"	m	struct:ioapic
base	include/lua/lstate.h	/^      StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo::__anon11::__anon12
base	include/nautilus/gdt.h	/^    uint32_t base;$/;"	m	struct:gdt_desc32
base	include/nautilus/gdt.h	/^    uint64_t base;$/;"	m	struct:gdt_desc64
base	src/legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
base	src/legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
base	src/legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
base	src/legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
base	src/legion_runtime/accessor.h	/^	  char *base;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
base	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t* AVXBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
base	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t* AVXTLBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
base	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t* SSEBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
base	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t* SSETLBitMask<MAX>::base(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
base	src/legion_runtime/lowlevel.cc	/^      char *base, *base_orig;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
base	src/legion_runtime/lowlevel_gpu.h	/^      char *base;$/;"	m	class:LegionRuntime::LowLevel::GPUFBMemory
base	src/nautilus/printk.c	/^	int			base;$/;"	m	struct:printf_spec	file:
base_addr	include/dev/apic.h	/^    ulong_t  base_addr;$/;"	m	struct:apic_dev
base_addr	include/dev/hpet.h	/^    ulong_t base_addr;$/;"	m	struct:hpet_dev
base_addr	include/nautilus/buddy.h	/^    ulong_t    base_addr;    \/** base address of the memory pool *\/$/;"	m	struct:buddy_mempool
base_addr	include/nautilus/idt.h	/^    uint64_t base_addr;$/;"	m	struct:idt_desc
base_addr	include/nautilus/numa.h	/^    uint64_t base_addr;$/;"	m	struct:mem_region
base_address	include/acpi/actbl1.h	/^	uint64_t base_address;$/;"	m	struct:acpi_srat_mem_affinity
base_address	include/acpi/actbl2.h	/^	uint64_t base_address;	\/* 4_k aligned base address *\/$/;"	m	struct:acpi_dmar_reserved_memory
base_address	include/acpi/actbl2.h	/^	uint64_t base_address;	\/* IOMMU control registers *\/$/;"	m	struct:acpi_ivrs_hardware
base_address	include/acpi/actbl2.h	/^	uint64_t base_address;$/;"	m	struct:acpi_dmar_rhsa
base_arrival_count	src/legion_runtime/lowlevel_impl.h	/^      unsigned base_arrival_count, current_arrival_count;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
base_ci	include/lua/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State
base_cpu_wrapper	src/test/circuit.h	/^  void base_cpu_wrapper(const Task *task,$/;"	f	namespace:TaskHelper
base_funcs	src/lua_src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
base_gpe_number	src/acpi/acpica/aclocal.h	/^	u8 base_gpe_number;	\/* Base GPE number for this register *\/$/;"	m	struct:acpi_gpe_register_info
base_gpu_wrapper	src/test/circuit.h	/^  void base_gpu_wrapper(const Task *task,$/;"	f	namespace:TaskHelper
base_orig	src/legion_runtime/lowlevel.cc	/^      char *base, *base_orig;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
base_ptr	src/legion_runtime/activemsg.cc	/^    void *base_ptr;$/;"	m	struct:ActiveMessageEndpoint::ChunkInfo	file:
base_ptr	src/legion_runtime/shared_lowlevel.cc	/^	char *base_ptr;	$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
basehookcount	include/lua/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
baud_rate	include/acpi/actbl2.h	/^	uint8_t baud_rate;$/;"	m	struct:acpi_table_spcr
bcast_cleanup	src/test/ipi.c	/^bcast_cleanup (ipi_exp_data_t * data)$/;"	f	file:
bcast_cntrs	include/test/ipi.h	/^    volatile uint64_t * bcast_cntrs; \/\/ for bcast, the cycle count for the remote receiving cores$/;"	m	struct:ipi_exp_data
bcast_seq	include/nautilus/condvar.h	/^    unsigned bcast_seq;$/;"	m	struct:nk_condvar
bcast_setup	src/test/ipi.c	/^bcast_setup (ipi_exp_data_t * data)$/;"	f	file:
before_copy	src/legion_runtime/lowlevel_dma.cc	/^      Event before_copy;$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
before_copy	src/legion_runtime/lowlevel_dma.cc	/^      Event before_copy;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
before_copy	src/legion_runtime/lowlevel_dma.h	/^      Event before_copy, after_copy;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
begin_context	src/legion_runtime/legion_utilities.h	/^    inline void Deserializer::begin_context(void)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
begin_context	src/legion_runtime/legion_utilities.h	/^    inline void Serializer::begin_context(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
begin_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void Operation::begin_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
begin_node	src/legion_runtime/region_tree.cc	/^    void LogicalCloser::begin_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
begin_node	src/legion_runtime/region_tree.cc	/^    void LogicalFilter::begin_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
begin_node	src/legion_runtime/region_tree.cc	/^    void PhysicalDepAnalyzer<FILTER>::begin_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
begin_node	src/legion_runtime/region_tree.cc	/^    void PhysicalFilter::begin_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
begin_node	src/legion_runtime/region_tree.cc	/^    void PhysicalUnpacker::begin_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
begin_node	src/legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
begin_node	src/legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
begin_node	src/legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
begin_node	src/legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
begin_node	src/legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
begin_node	src/legion_runtime/region_tree.h	/^      inline void begin_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
begin_perf_trace	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::begin_perf_trace(int kind)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
begin_premapping	src/legion_runtime/legion_tasks.cc	/^    UserEvent SingleTask::begin_premapping(RegionTreeID tid, $/;"	f	class:LegionRuntime::HighLevel::SingleTask
begin_reached	scripts/kconfig/lxdialog/textbox.c	/^static int begin_reached = 1, end_reached, page_length;$/;"	v	file:
begin_task	src/legion_runtime/legion.cc	/^    const std::vector<PhysicalRegion>& HighLevelRuntime::begin_task(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
begin_task	src/legion_runtime/legion_tasks.cc	/^    const std::vector<PhysicalRegion>& SingleTask::begin_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
begin_task	src/legion_runtime/runtime.cc	/^    const std::vector<PhysicalRegion>& Runtime::begin_task(SingleTask *ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
begin_trace	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::begin_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
begin_trace	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::begin_trace(TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
begin_trace	src/legion_runtime/runtime.cc	/^    void Runtime::begin_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
best_processor_kind	src/legion_runtime/mapping_utilities.cc	/^      Processor::Kind MappingProfiler::best_processor_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
best_table	scripts/kallsyms.c	/^unsigned char best_table[256][2];$/;"	v
best_table_len	scripts/kallsyms.c	/^unsigned char best_table_len[256];$/;"	v
beta	src/test/hpcg/comp-waxpby.h	/^    double beta;$/;"	m	struct:__anon116::waxpbyTaskArgs
bg_block_bitmap	src/fs/ext2/ext2fs.h	/^	__u32	bg_block_bitmap;	\/* Blocks bitmap block *\/$/;"	m	struct:ext2_group_desc
bg_block_bitmap_csum_lo	src/fs/ext2/ext2fs.h	/^	__u16	bg_block_bitmap_csum_lo;\/* crc32c(s_uuid+grp_num+bitmap) LSB *\/$/;"	m	struct:ext2_group_desc
bg_checksum	src/fs/ext2/ext2fs.h	/^	__u16	bg_checksum;		\/* crc16(s_uuid+grouo_num+group_desc)*\/$/;"	m	struct:ext2_group_desc
bg_exclude_bitmap_lo	src/fs/ext2/ext2fs.h	/^	__u32	bg_exclude_bitmap_lo;	\/* Exclude bitmap for snapshots *\/$/;"	m	struct:ext2_group_desc
bg_flags	src/fs/ext2/ext2fs.h	/^	__u16	bg_flags;$/;"	m	struct:ext2_group_desc
bg_free_blocks_count	src/fs/ext2/ext2fs.h	/^	__u16	bg_free_blocks_count;	\/* Free blocks count *\/$/;"	m	struct:ext2_group_desc
bg_free_inodes_count	src/fs/ext2/ext2fs.h	/^	__u16	bg_free_inodes_count;	\/* Free inodes count *\/$/;"	m	struct:ext2_group_desc
bg_inode_bitmap	src/fs/ext2/ext2fs.h	/^	__u32	bg_inode_bitmap;	\/* Inodes bitmap block *\/$/;"	m	struct:ext2_group_desc
bg_inode_bitmap_csum_lo	src/fs/ext2/ext2fs.h	/^	__u16	bg_inode_bitmap_csum_lo;\/* crc32c(s_uuid+grp_num+bitmap) LSB *\/$/;"	m	struct:ext2_group_desc
bg_inode_table	src/fs/ext2/ext2fs.h	/^	__u32	bg_inode_table;		\/* Inodes table block *\/$/;"	m	struct:ext2_group_desc
bg_itable_unused	src/fs/ext2/ext2fs.h	/^	__u16	bg_itable_unused;	\/* Unused inodes count *\/$/;"	m	struct:ext2_group_desc
bg_used_dirs_count	src/fs/ext2/ext2fs.h	/^	__u16	bg_used_dirs_count;	\/* Directories count *\/$/;"	m	struct:ext2_group_desc
bind_thread	src/legion_runtime/lowlevel.cc	/^    void ProcessorAssignment::bind_thread(int core_id, pthread_attr_t *attr, const char *debug_name \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::ProcessorAssignment
bindtextdomain	scripts/kconfig/lkc.h	16;"	d
bindtextdomain	src/nautilus/libccompat.c	/^char *bindtextdomain (const char * domainname, const char * dirname)$/;"	f
biosdev	include/nautilus/multiboot2.h	/^  multiboot_uint32_t biosdev;$/;"	m	struct:multiboot_tag_bootdev
bist	include/dev/pci.h	/^    uint8_t  bist;$/;"	m	struct:pci_cfg_space
bit2mask	include/lua/lgc.h	80;"	d
bit_length	include/acpi/actbl2.h	/^	uint32_t bit_length;$/;"	m	struct:acpi_slic_key
bit_mask_logging	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::bit_mask_logging = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
bit_mask_logging	src/legion_runtime/runtime.h	/^      static bool bit_mask_logging;$/;"	m	class:LegionRuntime::HighLevel::Runtime
bit_offset	include/acpi/acrestyp.h	/^	uint8_t bit_offset;$/;"	m	struct:acpi_resource_generic_register
bit_offset	include/acpi/actbl.h	/^	uint8_t bit_offset;		\/* Bit offset within the register *\/$/;"	m	struct:acpi_generic_address
bit_offset	include/dev/hpet.h	/^    uint8_t bit_offset;$/;"	m	struct:hpet_dev
bit_position	src/acpi/acpica/aclocal.h	/^	u8 bit_position;$/;"	m	struct:acpi_bit_register_info
bit_vector	src/legion_runtime/legion_utilities.h	/^        uint64_t *bit_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXBitMask::__anon96
bit_vector	src/legion_runtime/legion_utilities.h	/^        uint64_t *bit_vector;$/;"	m	union:LegionRuntime::HighLevel::AVXTLBitMask::__anon97
bit_vector	src/legion_runtime/legion_utilities.h	/^        uint64_t bit_vector[MAX\/64];$/;"	m	union:LegionRuntime::HighLevel::SSEBitMask::__anon94
bit_vector	src/legion_runtime/legion_utilities.h	/^        uint64_t bit_vector[MAX\/64];$/;"	m	union:LegionRuntime::HighLevel::SSETLBitMask::__anon95
bit_vector	src/legion_runtime/legion_utilities.h	/^      T bit_vector[MAX\/(8*sizeof(T))];$/;"	m	class:LegionRuntime::HighLevel::BitMask
bit_vector	src/legion_runtime/legion_utilities.h	/^      T bit_vector[MAX\/(8*sizeof(T))];$/;"	m	class:LegionRuntime::HighLevel::TLBitMask
bit_width	include/acpi/acrestyp.h	/^	uint8_t bit_width;$/;"	m	struct:acpi_resource_generic_register
bit_width	include/acpi/actbl.h	/^	uint8_t bit_width;		\/* Size in bits of given register *\/$/;"	m	struct:acpi_generic_address
bit_width	include/dev/hpet.h	/^    uint8_t bit_width;$/;"	m	struct:hpet_dev
bitlib	src/lua_src/lbitlib.c	/^static const luaL_Reg bitlib[] = {$/;"	v	file:
bitmap_allocate_region	lib/bitmap.c	/^int bitmap_allocate_region(unsigned long *bitmap, int pos, int order)$/;"	f
bitmap_clear	lib/bitmap.c	/^void bitmap_clear(unsigned long *map, int start, int nr)$/;"	f
bitmap_copy	include/lib/bitmap.h	/^static inline void bitmap_copy(unsigned long *dst, const unsigned long *src,$/;"	f
bitmap_empty	include/lib/bitmap.h	/^static inline int bitmap_empty(const unsigned long *src, int nbits)$/;"	f
bitmap_fill	include/lib/bitmap.h	/^static inline void bitmap_fill(unsigned long *dst, int nbits)$/;"	f
bitmap_find_free_region	lib/bitmap.c	/^int bitmap_find_free_region(unsigned long *bitmap, int bits, int order)$/;"	f
bitmap_find_next_zero_area	lib/bitmap.c	/^unsigned long bitmap_find_next_zero_area(unsigned long *map,$/;"	f
bitmap_full	include/lib/bitmap.h	/^static inline int bitmap_full(const unsigned long *src, int nbits)$/;"	f
bitmap_len	include/test/ipi.h	/^    unsigned bitmap_len;                \/\/ how many longs$/;"	m	struct:ipi_exp_data
bitmap_release_region	lib/bitmap.c	/^void bitmap_release_region(unsigned long *bitmap, int pos, int order)$/;"	f
bitmap_set	lib/bitmap.c	/^void bitmap_set(unsigned long *map, int start, int nr)$/;"	f
bitmap_shift_left	include/lib/bitmap.h	/^static inline void bitmap_shift_left(unsigned long *dst,$/;"	f
bitmap_shift_right	include/lib/bitmap.h	/^static inline void bitmap_shift_right(unsigned long *dst,$/;"	f
bitmap_zero	include/lib/bitmap.h	/^static inline void bitmap_zero(unsigned long *dst, int nbits)$/;"	f
bitmask	include/lua/lgc.h	79;"	d
bits	src/legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::AVXBitMask	typeref:union:LegionRuntime::HighLevel::AVXBitMask::__anon96
bits	src/legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::AVXTLBitMask	typeref:union:LegionRuntime::HighLevel::AVXTLBitMask::__anon97
bits	src/legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::SSEBitMask	typeref:union:LegionRuntime::HighLevel::SSEBitMask::__anon94
bits	src/legion_runtime/legion_utilities.h	/^      } bits;$/;"	m	class:LegionRuntime::HighLevel::SSETLBitMask	typeref:union:LegionRuntime::HighLevel::SSETLBitMask::__anon95
bits	src/legion_runtime/lowlevel_impl.h	/^      uint64_t bits[0];$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl
bits	src/legion_runtime/shared_lowlevel.cc	/^      unsigned bits[0];$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl	file:
bl	include/lua/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
black2gray	src/lua_src/lgc.c	63;"	d	file:
blank	include/nautilus/realmode.h	/^    uint8_t  blank;$/;"	m	struct:nk_real_mode_int_args
blk64_t	src/fs/ext2/ext2fs.h	/^typedef __u64		blk64_t;$/;"	t
blk_cksum_ok	src/arch/k1om/early_mem.c	/^blk_cksum_ok (const uint8_t * cursor, unsigned len)$/;"	f	file:
blk_cksum_ok	src/arch/x64/smp.c	/^blk_cksum_ok (uint8_t * mp, unsigned len)$/;"	f	file:
blk_cksum_ok	src/nautilus/sfi.c	/^blk_cksum_ok (const uint8_t * cursor, unsigned len)$/;"	f	file:
blk_t	src/fs/ext2/ext2fs.h	/^typedef __u32		blk_t;$/;"	t
blkdev	src/dev/ata.c	/^    struct nk_block_dev *blkdev;$/;"	m	struct:ata_blkdev_state	typeref:struct:ata_blkdev_state::nk_block_dev	file:
blkdev	src/dev/ramdisk.c	/^    struct nk_block_dev *blkdev;$/;"	m	struct:ramdisk_state	typeref:struct:ramdisk_state::nk_block_dev	file:
blkify	src/test/saxpy_array.cc	/^  Blockify<1> blkify;$/;"	m	struct:MainArgs	file:
block	src/lua_src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block	src/nautilus/mm/buddy.c	/^struct block {$/;"	s	file:
block_address	src/acpi/acpica/aclocal.h	/^	struct acpi_generic_address block_address;	\/* Base address of the block *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_generic_address
block_base_number	src/acpi/acpica/aclocal.h	/^	u8 block_base_number;	\/* Base GPE number for this block *\/$/;"	m	struct:acpi_gpe_block_info
block_buffer	src/legion_runtime/legion_spy.h	/^      char block_buffer[128];$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
block_follow	src/lua_src/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
block_hash_alloc	src/nautilus/mm/kmem.c	/^static inline struct kmem_block_hdr * block_hash_alloc(void *ptr)$/;"	f	file:
block_hash_entries	src/nautilus/mm/kmem.c	/^static struct kmem_block_hdr *block_hash_entries=0;$/;"	v	typeref:struct:kmem_block_hdr	file:
block_hash_find_entry	src/nautilus/mm/kmem.c	/^static inline struct kmem_block_hdr * block_hash_find_entry(const void *ptr)$/;"	f	file:
block_hash_free	src/nautilus/mm/kmem.c	/^static inline int block_hash_free(void *ptr)$/;"	f	file:
block_hash_free_entry	src/nautilus/mm/kmem.c	/^static inline void block_hash_free_entry(struct kmem_block_hdr *b)$/;"	f	file:
block_hash_hash	src/nautilus/mm/kmem.c	/^static inline uint64_t block_hash_hash(const void *ptr)$/;"	f	file:
block_hash_init	src/nautilus/mm/kmem.c	/^static int block_hash_init(uint64_t bytes)$/;"	f	file:
block_hash_num_entries	src/nautilus/mm/kmem.c	/^static uint64_t               block_hash_num_entries=0;$/;"	v	file:
block_id	src/legion_runtime/lowlevel.cc	/^      unsigned block_id;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskDataArgs	file:
block_size	include/nautilus/blkdev.h	/^    uint64_t block_size;$/;"	m	struct:nk_block_dev_characteristics
block_size	src/dev/ata.c	/^    uint64_t            block_size;$/;"	m	struct:ata_blkdev_state	file:
block_size	src/dev/ramdisk.c	/^    uint64_t block_size;$/;"	m	struct:ramdisk_state	file:
block_size	src/legion_runtime/arrays.h	/^      Point<DIM> block_size;$/;"	m	class:LegionRuntime::Arrays::Blockify
block_size	src/legion_runtime/lowlevel.cc	/^      size_t block_size;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
block_size	src/legion_runtime/lowlevel_impl.h	/^	size_t block_size, elmt_size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
block_size	src/legion_runtime/shared_lowlevel.cc	/^        size_t block_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
block_status	include/acpi/actbl1.h	/^	uint32_t block_status;	\/* Type of error information *\/$/;"	m	struct:acpi_bert_region
block_status	include/acpi/actbl1.h	/^	uint32_t block_status;$/;"	m	struct:acpi_hest_generic_status
block_to_id	src/nautilus/mm/buddy.c	/^block_to_id (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
blocking_factor	src/legion_runtime/legion.h	/^      size_t blocking_factor;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
blocking_factor	src/legion_runtime/legion_profiling.h	/^        size_t blocking_factor;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
blocking_factor	src/legion_runtime/region_tree.h	/^      const size_t blocking_factor;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
blocks_per_group	src/fs/ext2/ext2_access.c	137;"	d	file:
blue	include/nautilus/multiboot2.h	/^  multiboot_uint8_t blue;$/;"	m	struct:multiboot_color
blue_mask	include/dev/vesa.h	/^    uint8_t blue_mask;$/;"	m	struct:vesa_mode_info
blue_position	include/dev/vesa.h	/^    uint8_t blue_position;$/;"	m	struct:vesa_mode_info
bmi1	include/nautilus/cpuid.h	/^            uint8_t bmi1                : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
bmi2	include/nautilus/cpuid.h	/^            uint8_t bmi2                : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
body	src/lua_src/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
boolK	src/lua_src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
bool_t	include/nautilus/naut_types.h	/^typedef uchar_t bool_t;$/;"	t
boot_cmd_line	include/nautilus/mb_utils.h	/^    char * boot_cmd_line;$/;"	m	struct:multiboot_info
boot_flags	include/acpi/actbl.h	/^	uint16_t boot_flags;		\/* IA-PC Boot Architecture Flags (see below for individual flags) *\/$/;"	m	struct:acpi_table_fadt
boot_info	include/dev/ioapic.h	/^    struct nk_int_entry * boot_info;$/;"	m	struct:iored_entry	typeref:struct:iored_entry::nk_int_entry
boot_loader	include/nautilus/mb_utils.h	/^    char * boot_loader;$/;"	m	struct:multiboot_info
boot_mem_info	include/nautilus/mm.h	/^typedef struct boot_mem_info {$/;"	s
boot_mem_info_t	include/nautilus/mm.h	/^} boot_mem_info_t;$/;"	t	typeref:struct:boot_mem_info
boot_mm_inactive	src/nautilus/mm/boot_mm.c	/^uint8_t boot_mm_inactive = 0;$/;"	v
boot_options	include/acpi/actbl2.h	/^	uint16_t boot_options;$/;"	m	struct:acpi_asf_rmcp
boot_phi	xeon_phi/linux_usr/phi_console.c	/^boot_phi (const char * bpath, const char * kpath)$/;"	f	file:
boot_state_gpa	include/nautilus/multiboot2.h	/^  multiboot_uint64_t boot_state_gpa;$/;"	m	struct:multiboot_tag_hrt
booted	include/nautilus/smp.h	/^    volatile uint8_t booted;$/;"	m	struct:cpu
bootmem	src/nautilus/mm/boot_mm.c	/^static boot_mem_info_t bootmem;$/;"	v	file:
border_attr	scripts/kconfig/lxdialog/dialog.h	96;"	d
bound_cpu	include/nautilus/thread.h	/^    int bound_cpu;$/;"	m	struct:nk_thread
boundary	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ bool RectangleSet<T,DISCRETE>::boundary($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
boundary_edges	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ void RectangleSet<T,DISCRETE>::boundary_edges($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
bounds	src/legion_runtime/runtime.h	/^      Domain bounds;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
bounds	src/test/hpcg/vector.h	/^    LegionRuntime::Arrays::Rect<1> bounds;$/;"	m	struct:lgncg::Vector
bounds_check	src/legion_runtime/lowlevel.h	/^      void bounds_check(ptr_t ptr) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
bp	include/nautilus/realmode.h	/^    uint16_t bp;    \/\/ unless you know what you are doing$/;"	m	struct:nk_real_mode_int_args
bpp	include/dev/vesa.h	/^    uint8_t  bpp;$/;"	m	struct:vesa_mode_request
bpp	include/dev/vesa.h	/^    uint8_t bpp;               \/\/ bits per pixel in this mode$/;"	m	struct:vesa_mode_info
breadth_first_traversal	src/legion_runtime/default_mapper.h	/^      bool breadth_first_traversal;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
breaklabel	src/lua_src/lparser.c	/^static void breaklabel (LexState *ls) {$/;"	f	file:
bridge_ctrl	include/dev/pci.h	/^            uint16_t bridge_ctrl;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
bridge_ctrl	include/dev/pci.h	/^            uint16_t bridge_ctrl;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
broadcast_result	src/legion_runtime/runtime.cc	/^    void Future::Impl::broadcast_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
browsed	scripts/kconfig/gconf.c	/^static struct menu *browsed; \/\/ browsed node for SPLIT view$/;"	v	typeref:struct:menu	file:
bset	src/test/benchmark.h	/^bset (unsigned int nr, unsigned long * addr)$/;"	f
bset	src/test/ipi.c	/^bset(unsigned int nr, unsigned long * addr)$/;"	f	file:
bsp_id	include/nautilus/nautilus.h	/^    uint32_t bsp_id;$/;"	m	struct:sys_info
bspin_lock	src/nautilus/barrier.c	/^bspin_lock (volatile int * lock)$/;"	f	file:
bspin_unlock	src/nautilus/barrier.c	/^bspin_unlock (volatile int * lock)$/;"	f	file:
bss_end_addr	include/nautilus/multiboot2.h	/^  multiboot_uint32_t bss_end_addr;$/;"	m	struct:multiboot_header_tag_address
bsy	src/dev/ata.c	/^	uint8_t bsy:1;  \/\/ drive busy$/;"	m	struct:ata_status_reg::__anon135	file:
buddy_alloc	src/nautilus/mm/buddy.c	/^buddy_alloc (struct buddy_mempool *mp, ulong_t order)$/;"	f
buddy_dump_mempool	src/nautilus/mm/buddy.c	/^buddy_dump_mempool(struct buddy_mempool *mp)$/;"	f
buddy_free	src/nautilus/mm/buddy.c	/^buddy_free($/;"	f
buddy_init	src/nautilus/mm/buddy.c	/^buddy_init (ulong_t base_addr,$/;"	f
buddy_mempool	include/nautilus/buddy.h	/^struct buddy_mempool {$/;"	s
buf	include/nautilus/fprintk.h	/^    char buf[FPRINTK_BUFMAX];$/;"	m	struct:fprintk_state
buf	scripts/kconfig/lxdialog/textbox.c	/^static char *buf, *page;$/;"	v	file:
buf	scripts/kconfig/mconf.c	/^static char buf[4096], *bufptr = buf;$/;"	v	file:
buf	src/nautilus/printk.c	/^	char buf[PRINTK_BUFMAX];$/;"	m	struct:printk_state	file:
buf_lock	src/nautilus/vc.c	/^  spinlock_t       buf_lock;$/;"	m	struct:nk_virtual_console	file:
buff	include/lua/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buff	include/lua/lstate.h	/^  Mbuffer buff;  \/* temporary buffer for string concatenation *\/$/;"	m	struct:global_State
buff	src/lua_src/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	src/lua_src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	src/lua_src/lstate.c	/^  char buff[LUAI_EXTRASPACE];$/;"	m	struct:LX	file:
buff2d	src/lua_src/llex.c	213;"	d	file:
buffer	include/acpi/actypes.h	/^	} buffer;$/;"	m	union:acpi_object	typeref:struct:acpi_object::__anon22
buffer	include/lua/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffer	scripts/kconfig/lex.zconf.c	/^struct buffer {$/;"	s	file:
buffer	src/acpi/acpica/aclocal.h	/^	u8 *buffer;		\/* buffer or string *\/$/;"	m	union:acpi_parse_value
buffer	src/legion_runtime/legion_utilities.h	/^      char *buffer;$/;"	m	class:LegionRuntime::HighLevel::Serializer
buffer	src/legion_runtime/legion_utilities.h	/^      const char *buffer;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
buffer	src/legion_runtime/lowlevel.cc	/^      AMQueueEntry *buffer;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
buffer	src/legion_runtime/lowlevel_dma.cc	/^      char *buffer;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
buffer	src/legion_runtime/shared_lowlevel.cc	/^	char *buffer;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
buffer_messages	src/legion_runtime/runtime.cc	/^    void MessageManager::buffer_messages(unsigned num_messages,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
buffer_size	src/legion_runtime/lowlevel_dma.cc	/^      size_t buffer_size;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
buffer_size	src/legion_runtime/lowlevel_dma.cc	/^      size_t buffer_size;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
buffer_size	src/legion_runtime/region_tree.h	/^      size_t buffer_size;$/;"	m	class:LegionRuntime::HighLevel::LegionStack
buffonstack	src/lua_src/lauxlib.c	437;"	d	file:
buffreplace	src/lua_src/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
buffsize	include/lua/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
bufptr	scripts/kconfig/mconf.c	/^static char buf[4096], *bufptr = buf;$/;"	v	file:
build-dir	Makefile	/^build-dir  = $(patsubst %\/,%,$(dir $@))$/;"	m
build_conf	scripts/kconfig/mconf.c	/^static void build_conf(struct menu *menu)$/;"	f	file:
build_initial_tok_table	scripts/kallsyms.c	/^static void build_initial_tok_table(void)$/;"	f	file:
bus	include/acpi/actbl1.h	/^	uint32_t bus;$/;"	m	struct:acpi_hest_aer_common
bus	include/acpi/actbl1.h	/^	uint8_t bus;			\/* 0 - ISA *\/$/;"	m	struct:acpi_madt_interrupt_override
bus	include/acpi/actbl2.h	/^	uint8_t bus;$/;"	m	struct:acpi_dmar_device_scope
bus	include/acpi/actypes.h	/^	uint16_t bus;$/;"	m	struct:acpi_pci_id
bus	include/dev/pci.h	/^    struct pci_bus * bus;$/;"	m	struct:pci_dev	typeref:struct:pci_dev::pci_bus
bus_freq_hz	include/dev/apic.h	/^    uint64_t bus_freq_hz;$/;"	m	struct:apic_dev
bus_id	include/nautilus/acpi.h	/^    uint8_t bus_id; $/;"	m	struct:mp_table_entry_bus
bus_id	include/nautilus/irq.h	/^    uint8_t bus_id;$/;"	m	struct:nk_bus_entry
bus_list	include/dev/pci.h	/^    struct list_head bus_list;$/;"	m	struct:pci_info	typeref:struct:pci_info::list_head
bus_list	include/nautilus/nautilus.h	/^    struct list_head bus_list; \/* list of buses from MP spec *\/$/;"	m	struct:nk_int_info	typeref:struct:nk_int_info::list_head
bus_master	include/acpi/acrestyp.h	/^	uint8_t bus_master;$/;"	m	struct:acpi_resource_dma
bus_node	include/dev/pci.h	/^    struct list_head bus_node;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::list_head
bus_type	include/nautilus/irq.h	/^    char    bus_type[6];$/;"	m	struct:nk_bus_entry
bus_type_string	include/nautilus/acpi.h	/^    char    bus_type_string[6];$/;"	m	struct:mp_table_entry_bus
button_active_attr	scripts/kconfig/lxdialog/dialog.h	97;"	d
button_inactive_attr	scripts/kconfig/lxdialog/dialog.h	98;"	d
button_key_active_attr	scripts/kconfig/lxdialog/dialog.h	99;"	d
button_key_inactive_attr	scripts/kconfig/lxdialog/dialog.h	100;"	d
button_label_active_attr	scripts/kconfig/lxdialog/dialog.h	101;"	d
button_label_inactive_attr	scripts/kconfig/lxdialog/dialog.h	102;"	d
bvalue	include/lua/lobject.h	165;"	d
bx	include/nautilus/realmode.h	/^    uint16_t bx;$/;"	m	struct:nk_real_mode_int_args
byte_data	include/acpi/acrestyp.h	/^	uint8_t byte_data[1];$/;"	m	struct:acpi_resource_vendor
byte_data	include/acpi/acrestyp.h	/^	uint8_t byte_data[1];$/;"	m	struct:acpi_resource_vendor_typed
byte_length	include/acpi/acrestyp.h	/^	uint16_t byte_length;$/;"	m	struct:acpi_resource_vendor
byte_length	include/acpi/acrestyp.h	/^	uint16_t byte_length;$/;"	m	struct:acpi_resource_vendor_typed
bytes	src/legion_runtime/lowlevel_gpu.cc	/^      size_t bytes, lines;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
bytes_needed	src/legion_runtime/lowlevel.cc	/^      size_t bytes_needed;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
bytes_needed	src/legion_runtime/lowlevel_impl.h	/^      static size_t bytes_needed(off_t offset, off_t count)$/;"	f	struct:LegionRuntime::LowLevel::ElementMaskImpl
bytes_needed	src/legion_runtime/shared_lowlevel.cc	/^      static size_t bytes_needed(int offset, int count)$/;"	f	struct:LegionRuntime::LowLevel::ElementMaskImpl
bytes_read	scripts/kconfig/lxdialog/textbox.c	/^static int hscroll, fd, file_size, bytes_read;$/;"	v	file:
c	include/lua/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c	include/lua/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon11	typeref:struct:CallInfo::__anon11::__anon13
c	include/nautilus/cpuid.h	/^    uint32_t c;$/;"	m	struct:cpuid_ret
c0_substates	src/arch/hrt/mwait.c	/^    uint8_t c0_substates;$/;"	m	struct:mwait_info	file:
c0_substates	src/arch/x64/mwait.c	/^    uint8_t c0_substates;$/;"	m	struct:mwait_info	file:
c1_substates	src/arch/hrt/mwait.c	/^    uint8_t c1_substates;$/;"	m	struct:mwait_info	file:
c1_substates	src/arch/x64/mwait.c	/^    uint8_t c1_substates;$/;"	m	struct:mwait_info	file:
c2_substates	src/arch/hrt/mwait.c	/^    uint8_t c2_substates;$/;"	m	struct:mwait_info	file:
c2_substates	src/arch/x64/mwait.c	/^    uint8_t c2_substates;$/;"	m	struct:mwait_info	file:
c3_substates	src/arch/hrt/mwait.c	/^    uint8_t c3_substates;$/;"	m	struct:mwait_info	file:
c3_substates	src/arch/x64/mwait.c	/^    uint8_t c3_substates;$/;"	m	struct:mwait_info	file:
c4_substates	src/arch/hrt/mwait.c	/^    uint8_t c4_substates;$/;"	m	struct:mwait_info	file:
c4_substates	src/arch/x64/mwait.c	/^    uint8_t c4_substates;$/;"	m	struct:mwait_info	file:
cGeom	src/test/hpcg/hpcg-problem.cc	/^    lgncg::Geometry cGeom;$/;"	m	struct:__anon113::PF2CTaskArgs	file:
cache	include/lua/lobject.h	/^  union Closure *cache;  \/* last created closure with this prototype *\/$/;"	m	struct:Proto	typeref:union:Proto::Closure
caching	include/acpi/acrestyp.h	/^	uint8_t caching;$/;"	m	struct:acpi_memory_attribute
calc_mem_loc	src/legion_runtime/lowlevel_dma.cc	/^    static inline off_t calc_mem_loc(off_t alloc_offset, off_t field_start, int field_size, int elmt_size,$/;"	f	namespace:LegionRuntime::LowLevel
calibrate_apic_timer	src/dev/apic.c	/^static void calibrate_apic_timer(struct apic_dev *apic) $/;"	f	file:
callTM	src/lua_src/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
call_binTM	src/lua_src/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_count	src/nautilus/instrument.c	/^    uint64_t call_count;$/;"	m	struct:func_data	file:
call_orderTM	src/lua_src/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callallpendingfinalizers	src/lua_src/lgc.c	/^static void callallpendingfinalizers (lua_State *L, int propagateerrors) {$/;"	f	file:
callback	src/nautilus/timer.c	/^    void              (*callback)(void *priv);$/;"	m	struct:nk_timer	file:
callhook	src/lua_src/ldo.c	/^static void callhook (lua_State *L, CallInfo *ci) {$/;"	f	file:
callstatus	include/lua/lstate.h	/^  lu_byte callstatus;$/;"	m	struct:CallInfo
can_access_peer	src/legion_runtime/lowlevel_gpu.cc	/^    bool GPUProcessor::can_access_peer(GPUProcessor *peer) const$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
can_convert	src/legion_runtime/accessor.h	/^	  bool can_convert(void) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert	src/legion_runtime/lowlevel.cc	/^    bool RegionAccessor<AccessorGeneric>::can_convert<AccessorArrayReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
can_convert	src/legion_runtime/lowlevel.cc	/^    bool RegionAccessor<AccessorGeneric>::can_convert<AccessorReductionList>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
can_convert	src/legion_runtime/lowlevel.h	/^      bool can_convert(void) const { return ria.can_convert<AT2>(); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
can_convert	src/legion_runtime/lowlevel_gpu.cc	/^    bool RegionAccessor<AccessorGeneric>::can_convert<AccessorGPUReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
can_convert_helper	src/legion_runtime/accessor.h	/^	  bool can_convert_helper(AOS<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	src/legion_runtime/accessor.h	/^	  bool can_convert_helper(HybridSOA<STRIDE, BLOCK_SIZE, BLOCK_STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	src/legion_runtime/accessor.h	/^	  bool can_convert_helper(ReductionFold<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	src/legion_runtime/accessor.h	/^	  bool can_convert_helper(ReductionList<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_convert_helper	src/legion_runtime/accessor.h	/^	  bool can_convert_helper(SOA<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
can_delete	src/legion_runtime/garbage_collection.cc	/^    bool CollectableState::can_delete(bool has_gc_refs,$/;"	f	class:LegionRuntime::HighLevel::CollectableState
can_early_complete	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::can_early_complete(UserEvent &chain_event)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
can_early_complete	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::can_early_complete(UserEvent &chain_event)$/;"	f	class:LegionRuntime::HighLevel::PointTask
can_early_complete	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::can_early_complete(UserEvent &chain_event)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
cap	include/nautilus/acpi.h	/^	struct acpi_buffer cap; \/* arg2\/arg3 *\/$/;"	m	struct:acpi_osc_context	typeref:struct:acpi_osc_context::acpi_buffer
cap_list_offset	include/dev/pci.h	/^            uint8_t  cap_list_offset;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
cap_ptr	include/dev/pci.h	/^            uint8_t  cap_ptr;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
cap_ptr	include/dev/pci.h	/^            uint8_t  cap_ptr;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
capabilities	include/acpi/actbl2.h	/^	uint8_t capabilities[7];$/;"	m	struct:acpi_asf_rmcp
capabilities	include/dev/vesa.h	/^    uint32_t capabilities;  \/\/ bitfield that describes card capabilities$/;"	m	struct:vesa_adapter_info
capability	include/acpi/actbl2.h	/^	uint16_t capability;$/;"	m	struct:acpi_table_wddt
capability_offset	include/acpi/actbl2.h	/^	uint16_t capability_offset;	\/* Offset for IOMMU control fields *\/$/;"	m	struct:acpi_ivrs_hardware
capacity	src/legion_runtime/legion_logging.h	/^        size_t capacity;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
capacity	src/legion_runtime/runtime.h	/^      const size_t capacity;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
capture	src/lua_src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon141	file:
capture_op_lock	src/legion_runtime/runtime.h	/^      Reservation capture_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
capture_physical_state	src/legion_runtime/region_tree.cc	/^    void CompositeNode::capture_physical_state(RegionTreeNode *tree_node,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
capture_state	src/legion_runtime/legion_logging.cc	/^    \/*static*\/ void TreeStateLogger::capture_state(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_state	src/legion_runtime/legion_logging.cc	/^    \/*static*\/ void TreeStateLogger::capture_state(Runtime *rt, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_state	src/legion_runtime/legion_logging.cc	/^    void TreeStateLogger::capture_state(Runtime *rt, LogicalRegion handle, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_state	src/legion_runtime/legion_spy.cc	/^    \/*static*\/ void TreeStateLogger::capture_state(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
capture_to_close	src/lua_src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
cardbus_bridge_cfg	include/dev/pci.h	/^        } __packed cardbus_bridge_cfg;$/;"	m	union:pci_cfg_space::__anon66	typeref:struct:pci_cfg_space::__anon66::__anon69
cardbus_bus_num	include/dev/pci.h	/^            uint8_t  cardbus_bus_num;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
cardbus_cis_ptr	include/dev/pci.h	/^            uint32_t cardbus_cis_ptr;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
cardbus_lat_timer	include/dev/pci.h	/^            uint8_t  cardbus_lat_timer;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
cardbus_socket_bar	include/dev/pci.h	/^            uint32_t cardbus_socket_bar;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
cast	include/lua/llimits.h	93;"	d
cast_byte	include/lua/llimits.h	95;"	d
cast_int	include/lua/llimits.h	97;"	d
cast_num	include/lua/llimits.h	96;"	d
cast_uchar	include/lua/llimits.h	98;"	d
catch_hang	src/legion_runtime/runtime.cc	/^    static void catch_hang(int signal)$/;"	f	namespace:LegionRuntime::HighLevel
ccflags	scripts/kconfig/lxdialog/check-lxdialog.sh	/^ccflags()$/;"	f
cdebug	scripts/kconfig/zconf.tab.c	/^int cdebug = PRINTD;$/;"	v
ceil	src/nautilus/libccompat.c	/^double ceil(double x)$/;"	f
century	include/acpi/actbl.h	/^	uint8_t century;		\/* Index to century in RTC CMOS RAM *\/$/;"	m	struct:acpi_table_fadt
cfg	include/dev/pci.h	/^    struct pci_cfg_space cfg;$/;"	m	struct:pci_dev	typeref:struct:pci_dev::pci_cfg_space
cfg	src/nautilus/scheduler.c	/^    struct nk_sched_config cfg; $/;"	m	struct:nk_sched_percpu_state	typeref:struct:nk_sched_percpu_state::nk_sched_config	file:
cg	src/test/hpcg/cg.h	/^namespace cg {$/;"	n	namespace:lgncg
cgSolv	src/test/hpcg/lgncg.cc	/^cgSolv(SparseMatrix &A,$/;"	f	namespace:lgncg
changeMenu	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::changeMenu(struct menu *menu)$/;"	f	class:ConfigMainWindow
changeValue	scripts/kconfig/qconf.cc	/^void ConfigList::changeValue(ConfigItem* item)$/;"	f	class:ConfigList
change_bit	include/asm/bitops.h	/^static inline void change_bit(int nr, volatile unsigned long *addr)$/;"	f
change_sym_value	scripts/kconfig/gconf.c	/^static void change_sym_value(struct menu *menu, gint col)$/;"	f	file:
changewhite	include/lua/lgc.h	114;"	d
channel	src/dev/ata.c	/^    uint8_t             channel; \/\/ 0\/1 on controller (primary\/secondary)$/;"	m	struct:ata_blkdev_state	file:
channel_count	include/acpi/acrestyp.h	/^	uint8_t channel_count;$/;"	m	struct:acpi_resource_dma
channel_id	src/legion_runtime/legion_logging.h	/^        unsigned channel_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
channels	include/acpi/acrestyp.h	/^	uint8_t channels[1];$/;"	m	struct:acpi_resource_dma
chap_name_length	include/acpi/actbl2.h	/^	uint16_t chap_name_length;$/;"	m	struct:acpi_ibft_target
chap_name_offset	include/acpi/actbl2.h	/^	uint16_t chap_name_offset;$/;"	m	struct:acpi_ibft_target
chap_secret_length	include/acpi/actbl2.h	/^	uint16_t chap_secret_length;$/;"	m	struct:acpi_ibft_target
chap_secret_offset	include/acpi/actbl2.h	/^	uint16_t chap_secret_offset;$/;"	m	struct:acpi_ibft_target
chap_type	include/acpi/actbl2.h	/^	uint8_t chap_type;$/;"	m	struct:acpi_ibft_target
chars	src/fs/ext2/ext2.c	/^    struct nk_block_dev_characteristics chars; $/;"	m	struct:ext2_state	typeref:struct:ext2_state::nk_block_dev_characteristics	file:
check	scripts/kconfig/lxdialog/check-lxdialog.sh	/^check() {$/;"	f
check	src/lua_src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
check-lxdialog	scripts/kconfig/lxdialog/Makefile	/^check-lxdialog  := $(srctree)\/$(src)\/check-lxdialog.sh$/;"	m
checkCGTask	src/test/hpcg/hpcg-main.cc	/^checkCGTask(const lrthl::Task *task,$/;"	f	namespace:__anon117
checkGC	src/lua_src/lvm.c	518;"	d	file:
checkSizes	src/lua_src/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
check_acquire_privilege	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::check_acquire_privilege(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
check_apic_avail	src/dev/apic.c	/^check_apic_avail (void)$/;"	f	file:
check_attr	scripts/kconfig/lxdialog/dialog.h	117;"	d
check_bounds	src/legion_runtime/runtime.cc	/^      void check_bounds(void *impl, const LowLevel::DomainPoint &dp)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
check_bounds	src/legion_runtime/runtime.cc	/^      void check_bounds(void *impl, ptr_t ptr)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
check_bounds	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::check_bounds(void *impl, const DomainPoint &dp)$/;"	f	class:LegionRuntime::HighLevel::Runtime
check_bounds	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::check_bounds(void *impl, ptr_t ptr)$/;"	f	class:LegionRuntime::HighLevel::Runtime
check_capture	src/lua_src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	src/lua_src/lparser.c	125;"	d	file:
check_conf	scripts/kconfig/conf.c	/^static void check_conf(struct menu *menu)$/;"	f	file:
check_conflict	src/lua_src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_context_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::check_context_state(RegionTreeContext ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
check_copy_privilege	src/legion_runtime/legion_ops.cc	/^    void CopyOp::check_copy_privilege(const RegionRequirement &requirement, $/;"	f	class:LegionRuntime::HighLevel::CopyOp
check_dependence_type	src/legion_runtime/legion_utilities.h	/^    static inline DependenceType check_dependence_type(const RegionUsage &u1,$/;"	f	namespace:LegionRuntime::HighLevel
check_empty_field_requirements	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::check_empty_field_requirements(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
check_error	scripts/toolchain/build-x86_64.sh	/^check_error() {$/;"	f
check_exp	include/lua/llimits.h	62;"	d
check_exp	include/lua/llimits.h	67;"	d
check_field_space	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::check_field_space(FieldSpace handle, const char *caller)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_for_anti_dependence	src/legion_runtime/legion_utilities.h	/^    static inline DependenceType check_for_anti_dependence($/;"	f	namespace:LegionRuntime::HighLevel
check_for_complete_copies	src/legion_runtime/lowlevel_gpu.cc	/^      void check_for_complete_copies(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
check_for_promotion	src/legion_runtime/legion_utilities.h	/^    static inline DependenceType check_for_promotion(const RegionUsage &u1, $/;"	f	namespace:LegionRuntime::HighLevel
check_future_size	src/legion_runtime/legion_tasks.cc	/^    size_t TaskOp::check_future_size(Future::Impl *impl)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
check_index_subpartition	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::check_index_subpartition(IndexPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_index_subspace	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::check_index_subspace(IndexSpace handle, const char *caller)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_logical_subpartition	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::check_logical_subpartition(LogicalPartition handle,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_logical_subregion	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::check_logical_subregion(LogicalRegion handle, $/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_match	src/lua_src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next	src/lua_src/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
check_privilege	src/legion_runtime/legion_ops.cc	/^    void MapOp::check_privilege(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
check_privilege	src/legion_runtime/legion_tasks.cc	/^    LegionErrorType SingleTask::check_privilege($/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_privilege	src/legion_runtime/legion_tasks.cc	/^    LegionErrorType SingleTask::check_privilege(const RegionRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_privileges	src/legion_runtime/accessor.h	/^      static inline void check_privileges(AccessorPrivilege held, void *region)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
check_privileges	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::check_privileges = true;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
check_privileges	src/legion_runtime/runtime.h	/^      static bool check_privileges;$/;"	m	class:LegionRuntime::HighLevel::Runtime
check_readiness	src/legion_runtime/lowlevel_dma.cc	/^    bool CopyRequest::check_readiness(bool just_check, DmaRequestQueue *rq)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
check_readiness	src/legion_runtime/lowlevel_dma.cc	/^    bool ReduceRequest::check_readiness(bool just_check, DmaRequestQueue *rq)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
check_region_dependence	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::check_region_dependence(RegionTreeID our_tid,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_release_privilege	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::check_release_privilege(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
check_selected_attr	scripts/kconfig/lxdialog/dialog.h	118;"	d
check_simultaneous_restricted	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::check_simultaneous_restricted($/;"	f	class:LegionRuntime::HighLevel::SingleTask
check_state	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::check_state(void)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
check_stdin	scripts/kconfig/conf.c	/^static void check_stdin(void)$/;"	f	file:
check_task	src/test/custom_mapper.cc	/^void check_task(const Task *task,$/;"	f
check_task	src/test/multiple_partitions.cc	/^void check_task(const Task *task,$/;"	f
check_task	src/test/partitioning.cc	/^void check_task(const Task *task,$/;"	f
check_task	src/test/privileges.cc	/^void check_task(const Task *task,$/;"	f
check_terminal_size	xeon_phi/linux_usr/phi_console.c	/^check_terminal_size (void)$/;"	f	file:
check_x	scripts/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	file:
checkcg	src/test/hpcg/hpcg-main.cc	/^checkcg(lgncg::Vector &x,$/;"	f	namespace:__anon117
checkconsistency	src/lua_src/lgc.c	71;"	d	file:
checkdeadkey	src/lua_src/lgc.c	68;"	d	file:
checklimit	src/lua_src/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checkliveness	include/lua/lobject.h	179;"	d
checkload	src/lua_src/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkmode	src/lua_src/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checkname	src/lua_src/lparser.c	/^static void checkname (LexState *ls, expdesc *e) {$/;"	f	file:
checknext	src/lua_src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkoption	src/lua_src/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv, char *buff) {$/;"	f	file:
checkrepeated	src/lua_src/lparser.c	/^static void checkrepeated (FuncState *fs, Labellist *ll, TString *label) {$/;"	f	file:
checkresults	src/lua_src/lapi.c	889;"	d	file:
checkstack	src/lua_src/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:
checksum	include/acpi/acrestyp.h	/^	uint8_t checksum;$/;"	m	struct:acpi_resource_end_tag
checksum	include/acpi/actbl.h	/^	uint8_t checksum;		\/* ACPI 1.0 checksum *\/$/;"	m	struct:acpi_table_rsdp
checksum	include/acpi/actbl.h	/^	uint8_t checksum;		\/* To make sum of entire table == 0 *\/$/;"	m	struct:acpi_table_header
checksum	include/nautilus/acpi.h	/^    uint8_t  checksum;$/;"	m	struct:mp_float_ptr_struct
checksum	include/nautilus/multiboot2.h	/^  multiboot_uint32_t checksum;$/;"	m	struct:multiboot_header
checktag	include/lua/lobject.h	131;"	d
checktag	include/lua/lobject.h	362;"	d
checktag	include/lua/lobject.h	364;"	d
checktype	include/lua/lobject.h	132;"	d
checktype	include/lua/lobject.h	363;"	d
checktype	include/lua/lobject.h	365;"	d
checkupval	src/lua_src/ldblib.c	/^static int checkupval (lua_State *L, int argf, int argnup) {$/;"	f	file:
child	src/acpi/acpica/aclocal.h	/^	ACPI_PARSE_COMMON union acpi_parse_object *child;$/;"	m	struct:acpi_parse_obj_asl	typeref:union:acpi_parse_obj_asl::acpi_parse_object
child	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *child;	\/* First child *\/$/;"	m	struct:acpi_namespace_node	typeref:struct:acpi_namespace_node::acpi_namespace_node
child	src/legion_runtime/region_tree.h	/^      int child;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalUser
child_count	scripts/kconfig/mconf.c	/^static int child_count;$/;"	v	file:
child_node	include/nautilus/thread.h	/^    struct list_head child_node;$/;"	m	struct:nk_thread	typeref:struct:nk_thread::list_head
child_operations	src/legion_runtime/legion_tasks.h	/^      std::set<Operation*> child_operations;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
children	include/nautilus/thread.h	/^    struct list_head children;$/;"	m	struct:nk_thread	typeref:struct:nk_thread::list_head
children	src/legion_runtime/field_tree.h	/^      std::set<FieldTree<UT>*> children;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
children	src/legion_runtime/region_tree.h	/^      ChildState children;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
children	src/legion_runtime/region_tree.h	/^      std::map<Color,CompositeView*> children;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
children	src/legion_runtime/region_tree.h	/^      std::map<Color,MaterializedView*> children;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
children_commit	src/legion_runtime/legion_tasks.h	/^      bool children_commit;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_commit_invoked	src/legion_runtime/legion_tasks.h	/^      bool children_commit_invoked;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_complete	src/legion_runtime/legion_tasks.h	/^      bool children_complete;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_complete_invoked	src/legion_runtime/legion_tasks.h	/^      bool children_complete_invoked;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
children_mapped	src/legion_runtime/legion_ops.h	/^      Event children_mapped;$/;"	m	class:LegionRuntime::HighLevel::Operation
choice	scripts/kconfig/zconf.y	/^choice: T_CHOICE T_EOL$/;"	l
choiceNoPix	scripts/kconfig/qconf.h	/^	QPixmap choiceYesPix, choiceNoPix;$/;"	m	class:ConfigList
choiceYesPix	scripts/kconfig/qconf.h	/^	QPixmap choiceYesPix, choiceNoPix;$/;"	m	class:ConfigList
choice_block	scripts/kconfig/zconf.y	/^choice_block:$/;"	l
choice_end	scripts/kconfig/zconf.y	/^choice_end: end$/;"	l
choice_entry	scripts/kconfig/zconf.y	/^choice_entry: choice choice_option_list$/;"	l
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_DEFAULT T_WORD if_expr T_EOL$/;"	l
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_OPTIONAL T_EOL$/;"	l
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_PROMPT prompt if_expr T_EOL$/;"	l
choice_option	scripts/kconfig/zconf.y	/^choice_option: T_TYPE prompt_stmt_opt T_EOL$/;"	l
choice_option_list	scripts/kconfig/zconf.y	/^choice_option_list:$/;"	l
choice_stmt	scripts/kconfig/zconf.y	/^choice_stmt: choice_entry choice_block choice_end$/;"	l
chosen	src/legion_runtime/mapping_utilities.h	/^          std::vector<Memory> chosen;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
chunk	src/legion_runtime/lowlevel.cc	/^	char chunk[CHUNK_SIZE];$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
chunk	src/legion_runtime/lowlevel_dma.cc	/^	char chunk[CHUNK_SIZE];$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
chunks	src/legion_runtime/activemsg.cc	/^    int chunks;$/;"	m	struct:ActiveMessageEndpoint::ChunkInfo	file:
ci	include/lua/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	include/lua/ldebug.h	21;"	d
cksum	include/nautilus/acpi.h	/^    uint8_t  cksum;        \/* checksum *\/$/;"	m	struct:mp_table
cksum	include/nautilus/sfi.h	/^    uint8_t  cksum;$/;"	m	struct:sfi_common_hdr
cl	include/lua/lstate.h	/^  union Closure cl;$/;"	m	union:GCObject	typeref:union:GCObject::Closure
clCvalue	include/lua/lobject.h	162;"	d
clLvalue	include/lua/lobject.h	161;"	d
cl_size	include/dev/pci.h	/^    uint8_t  cl_size;$/;"	m	struct:pci_cfg_space
class_code	include/dev/pci.h	/^    uint8_t  class_code;$/;"	m	struct:pci_cfg_space
classend	src/lua_src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clean	Makefile	/^clean := -f $(if $(KBUILD_SRC),$(srctree)\/)scripts\/Makefile.clean obj$/;"	m
clean-dirs	Makefile	/^clean-dirs      := $(addprefix _clean_,$(srctree) $(nautilus-cleandirs))$/;"	m
clean-files	scripts/kconfig/Makefile	/^clean-files	:= lkc_defs.h qconf.moc .tmp_qtcheck \\$/;"	m
cleanup_proc	src/legion_runtime/runtime.h	/^      const Processor cleanup_proc;$/;"	m	class:LegionRuntime::HighLevel::Runtime
clear	src/legion_runtime/utilities.h	/^    void clear(void) {$/;"	f	class:LegionRuntime::ImmovableLock
clear_adjacent	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::clear_adjacent(T value)$/;"	f	class:LegionRuntime::HighLevel::Segment
clear_adjacent	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::clear_adjacent(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
clear_bit	include/asm/bitops.h	/^static inline void clear_bit(int nr, volatile unsigned long *addr)$/;"	f
clear_config	scripts/basic/fixdep.c	/^void clear_config(void)$/;"	f
clear_status_on_init	include/acpi/actbl1.h	/^	uint8_t clear_status_on_init;$/;"	m	struct:acpi_hest_ia_error_bank
clear_timers	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::clear_timers(bool all_nodes \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
clear_timers	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::clear_timers(bool all_nodes \/*=true*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
clearb	src/nautilus/mm/buddy.c	/^static inline void clearb(ulong_t nr, volatile char *addr)$/;"	f	file:
clearerr	src/nautilus/libccompat.c	/^void clearerr(FILE *stream)$/;"	f
clearkeys	src/lua_src/lgc.c	/^static void clearkeys (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clearvalues	src/lua_src/lgc.c	/^static void clearvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clfsh	include/nautilus/cpuid.h	/^            uint8_t clfsh    : 1; \/\/ CLFLUSH instruction$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
cli	include/nautilus/cpu.h	/^cli (void)$/;"	f
clock	src/nautilus/libccompat.c	/^clock_t clock()$/;"	f
clock_domain	include/acpi/actbl1.h	/^	uint32_t clock_domain;$/;"	m	struct:acpi_srat_x2apic_cpu_affinity
clock_gettime	src/nautilus/libccompat.c	/^clock_gettime (clockid_t clk_id, struct timespec * tp)$/;"	f
clock_t	include/nautilus/libccompat.h	/^typedef long int clock_t;$/;"	t
clockid_t	include/nautilus/libccompat.h	/^typedef int clockid_t;$/;"	t
clockid_t	src/lua_src/lnautlib.c	/^typedef int clockid_t;$/;"	t	file:
clone	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl* ArgumentMap::Impl::clone(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
clone_as_point_task	src/legion_runtime/legion_tasks.cc	/^    PointTask* SliceTask::clone_as_point_task(const DomainPoint &p)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
clone_as_slice_task	src/legion_runtime/legion_tasks.cc	/^    SliceTask* IndexTask::clone_as_slice_task(const Domain &d, Processor p,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
clone_as_slice_task	src/legion_runtime/legion_tasks.cc	/^    SliceTask* SliceTask::clone_as_slice_task(const Domain &d, Processor p,$/;"	f	class:LegionRuntime::HighLevel::SliceTask
clone_multi_from	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::clone_multi_from(MultiTask *rhs, const Domain &d,$/;"	f	class:LegionRuntime::HighLevel::MultiTask
clone_task_op_from	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::clone_task_op_from(TaskOp *rhs, Processor p, $/;"	f	class:LegionRuntime::HighLevel::TaskOp
close	include/nautilus/dev.h	/^    int (*close)(void *state);$/;"	m	struct:nk_dev_int
closeEvent	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::closeEvent(QCloseEvent* e)$/;"	f	class:ConfigMainWindow
close_file	include/nautilus/fs.h	/^    void  (*close_file)(void *state, void *file);$/;"	m	struct:nk_fs_int
close_func	src/lua_src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_handle	src/legion_runtime/region_tree.h	/^      TreeClose close_handle;$/;"	m	struct:LegionRuntime::HighLevel::CloseInfo
close_logical_node	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_logical_node(LogicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_mask	src/legion_runtime/region_tree.h	/^      FieldMask close_mask;$/;"	m	struct:LegionRuntime::HighLevel::CloseInfo
close_mask	src/legion_runtime/region_tree.h	/^      const FieldMask close_mask;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
close_op_lock	src/legion_runtime/runtime.h	/^      Reservation close_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
close_operations	src/legion_runtime/region_tree.h	/^                                                            close_operations;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
close_operations	src/legion_runtime/region_tree.h	/^      std::deque<TreeClose> close_operations;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
close_ops	src/legion_runtime/region_tree.h	/^      std::vector<std::deque<std::pair<TreeClose,FieldMask> > > close_ops;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
close_physical_child	src/legion_runtime/region_tree.cc	/^    bool RegionTreeNode::close_physical_child(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_physical_child	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_physical_child(CompositeCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_physical_context	src/legion_runtime/region_tree.cc	/^    Event RegionTreeForest::close_physical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
close_physical_node	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_physical_node(CompositeCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_physical_node	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::close_physical_node(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
close_state	src/legion_runtime/region_tree.cc	/^    Event RegionNode::close_state(MappableInfo *info, PhysicalUser &user,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
close_state	src/lua_src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
close_tree_node	src/legion_runtime/region_tree.cc	/^    void PhysicalCloser::close_tree_node(RegionTreeNode *node,$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
closed_mask	src/legion_runtime/region_tree.h	/^      FieldMask closed_mask;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
closed_users	src/legion_runtime/region_tree.h	/^      std::deque<LogicalUser> closed_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
closef	include/lua/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream
closegoto	src/lua_src/lparser.c	/^static void closegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
closelistfield	src/lua_src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
closes	src/legion_runtime/legion_profiling.h	/^        std::deque<OpInstance> closes;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
clvalue	include/lua/lobject.h	160;"	d
cmd	include/dev/pci.h	/^    uint16_t cmd;$/;"	m	struct:pci_cfg_space
cmd_TAGS	Makefile	/^define cmd_TAGS$/;"	m
cmd_as_o_S	Makefile	/^cmd_as_o_S       = $(CC) $(a_flags) -c -o $@ $<$/;"	m
cmd_cscope	Makefile	/^      cmd_cscope = cscope -b$/;"	m
cmd_cscope-file	Makefile	/^      cmd_cscope-file = (echo \\-k; echo \\-q; $(all-sources)) > cscope.files$/;"	m
cmd_files	Makefile	/^cmd_files := $(wildcard .*.cmd $(foreach f,$(targets),$(dir $(f)).$(notdir $(f)).cmd))$/;"	m
cmd_nautilus__	Makefile	/^      cmd_nautilus__ ?= $(LD) $(LDFLAGS) $(LDFLAGS_vmlinux) -o $@ \\$/;"	m
cmd_nautilus_version	Makefile	/^      cmd_nautilus_version = set -e;                       \\$/;"	m
cmd_rmdirs	Makefile	/^      cmd_rmdirs = rm -rf $(rm-dirs)$/;"	m
cmd_rmfiles	Makefile	/^      cmd_rmfiles = rm -f $(rm-files)$/;"	m
cmd_tags	Makefile	/^define cmd_tags$/;"	m
cmd_transform_linkscript__	Makefile	/^	  cmd_transform_linkscript__ ?= $(CC) -E -P \\$/;"	m
cmdline	include/nautilus/multiboot2.h	/^  char cmdline[0];$/;"	m	struct:multiboot_tag_module
cmdline	scripts/basic/fixdep.c	/^char *cmdline;$/;"	v
cmos_index	include/acpi/actbl2.h	/^	uint8_t cmos_index;		\/* Index in CMOS RAM for the boot register *\/$/;"	m	struct:acpi_table_boot
cmov	include/nautilus/cpuid.h	/^            uint8_t cmov        : 1; \/\/ conditional move instruction$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
cmov	include/nautilus/cpuid.h	/^            uint8_t cmov     : 1; \/\/ conditional move instructions$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
cmplegacy	include/nautilus/cpuid.h	/^            uint8_t cmplegacy   : 1; \/\/ core multi-processing legacy mode$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
cmps	include/dev/hpet.h	/^    struct hpet_comparator cmps[0];$/;"	m	struct:hpet_dev	typeref:struct:hpet_dev::hpet_comparator
cmpxchg32	src/nautilus/ticketlock.c	/^cmpxchg32 (void * m, uint32_t old, uint32_t new)$/;"	f	file:
cmpxchg8b	include/nautilus/cpuid.h	/^            uint8_t cmpxchg8b   : 1; \/\/ CMPXCHG8B instruction$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
cnt_mask	include/nautilus/pmc.h	/^            uint8_t cnt_mask      : 8;$/;"	m	struct:pmc_ctl::__anon46::__anon47
cntr_status	include/dev/hpet.h	/^    hpet_stat_t cntr_status;$/;"	m	struct:hpet_dev
cntrl_name	include/nautilus/sfi.h	/^    char     cntrl_name[16]; \/\/ controller name$/;"	m	struct:sfi_gpio_entry
cnxt_id	include/nautilus/cpuid.h	/^            uint8_t cnxt_id  : 1; \/\/ L1 Context ID$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
co_funcs	src/lua_src/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
coalesce_regions	src/nautilus/numa.c	/^coalesce_regions (struct nk_locality_info * loc)$/;"	f	file:
code	include/acpi/acpiosxf.h	/^	uint32_t code;$/;"	m	struct:acpi_signal_fatal_info
code	include/lua/lobject.h	/^  Instruction *code;$/;"	m	struct:Proto
code_label	src/lua_src/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codearith	src/lua_src/lcode.c	/^static void codearith (FuncState *fs, OpCode op,$/;"	f	file:
codeclosure	src/lua_src/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecomp	src/lua_src/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codeextraarg	src/lua_src/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codenot	src/lua_src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codestring	src/lua_src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
coherence_mask	src/legion_runtime/region_tree.h	/^      FieldMask coherence_mask;$/;"	m	class:LegionRuntime::HighLevel::RestrictedTraverser
col	src/arch/k1om/xeon_phi.c	/^  size_t col;$/;"	m	struct:__anon128	file:
colIdx	scripts/kconfig/qconf.h	/^enum colIdx {$/;"	g
colMap	scripts/kconfig/qconf.h	/^	int colMap[colNr];$/;"	m	class:ConfigList
colNr	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	enum:colIdx
colRevMap	scripts/kconfig/qconf.h	/^	int colRevMap[colNr];$/;"	m	class:ConfigList
collapsed_nodes	src/legion_runtime/region_tree.h	/^      std::map<CompositeNode*,FieldMask> collapsed_nodes;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
collect_users	src/legion_runtime/region_tree.cc	/^    void CompositeView::collect_users(const std::set<Event> &term_events) $/;"	f	class:LegionRuntime::HighLevel::CompositeView
collect_users	src/legion_runtime/region_tree.cc	/^    void MaterializedView::collect_users(const std::set<Event> &term_events)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
collect_users	src/legion_runtime/region_tree.cc	/^    void ReductionView::collect_users(const std::set<Event> &term_events)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
collectargs	src/lua_src/lua.c	/^static int collectargs (char **argv, int *args) {$/;"	f	file:
collections	src/legion_runtime/runtime.h	/^      std::map<LogicalView*,std::set<Event> > collections;$/;"	m	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
collectvalidlines	src/lua_src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
color	scripts/kconfig/gconf.c	/^GdkColor color;$/;"	v
color	src/arch/k1om/xeon_phi.c	/^  uint8_t color;$/;"	m	struct:__anon128	file:
color	src/legion_runtime/legion_logging.h	/^        Color color;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
color	src/legion_runtime/legion_logging.h	/^        Color color;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
color	src/legion_runtime/region_tree.h	/^      const Color color;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
color_map	src/legion_runtime/region_tree.h	/^      std::map<Color,IndexPartNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
color_map	src/legion_runtime/region_tree.h	/^      std::map<Color,IndexSpaceNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
color_map	src/legion_runtime/region_tree.h	/^      std::map<Color,PartitionNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
color_map	src/legion_runtime/region_tree.h	/^      std::map<Color,RegionNode*> color_map;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
color_setup	scripts/kconfig/lxdialog/util.c	/^void color_setup(void)$/;"	f
color_space	src/legion_runtime/region_tree.h	/^      const Domain color_space;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
color_table	scripts/kconfig/lxdialog/util.c	/^int color_table[][3] = {$/;"	v
coloring	src/legion_runtime/legion.h	/^      Coloring coloring;$/;"	m	class:LegionRuntime::HighLevel::ColoringSerializer
coloring	src/legion_runtime/legion.h	/^      DomainColoring coloring;$/;"	m	class:LegionRuntime::HighLevel::DomainColoringSerializer
cols	scripts/kconfig/mconf.c	/^static int rows = 0, cols = 0;$/;"	v	file:
cols	xeon_phi/linux_usr/phi_console.c	/^    uint16_t cols;$/;"	m	struct:__anon79	file:
column	src/acpi/acpica/aclocal.h	/^	u32 column;$/;"	m	struct:acpi_parse_obj_asl
column2index	scripts/kconfig/gconf.c	/^static gint column2index(GtkTreeViewColumn * column)$/;"	f	file:
column_source	src/legion_runtime/region_tree.h	/^      FieldSpaceNode *const column_source;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
com_irq	src/dev/serial.c	/^static uint8_t com_irq;$/;"	v	file:
comm_page_gpa	include/nautilus/multiboot2.h	/^  multiboot_uint64_t comm_page_gpa;$/;"	m	struct:multiboot_tag_hrt
command	include/acpi/actbl2.h	/^	uint8_t command;$/;"	m	struct:acpi_asf_alert_data
command	include/acpi/actbl2.h	/^	uint8_t command;$/;"	m	struct:acpi_asf_control_data
command	include/acpi/actbl2.h	/^	uint8_t command;$/;"	m	struct:acpi_asf_rmcp
comment	scripts/kconfig/zconf.y	/^comment: T_COMMENT prompt T_EOL$/;"	l
comment_stmt	scripts/kconfig/zconf.y	/^comment_stmt: comment depends_list$/;"	l
commit_mapping	src/legion_runtime/mapping_utilities.cc	/^      void MappingMemoizer::commit_mapping(Processor target, const Task *task)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
commit_operation	src/legion_runtime/legion_ops.cc	/^    void Operation::commit_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
commit_received	src/legion_runtime/legion_tasks.h	/^      bool commit_received;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
commit_received	src/legion_runtime/legion_tasks.h	/^      bool commit_received;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
committed	src/legion_runtime/legion_ops.h	/^      bool committed;$/;"	m	class:LegionRuntime::HighLevel::Operation
committed_points	src/legion_runtime/legion_tasks.h	/^      unsigned committed_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
common	include/nautilus/multiboot2.h	/^  struct multiboot_tag_framebuffer_common common;$/;"	m	struct:multiboot_tag_framebuffer	typeref:struct:multiboot_tag_framebuffer::multiboot_tag_framebuffer_common
common	src/acpi/acpica/aclocal.h	/^	struct acpi_common_state common;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_common_state
common	src/acpi/acpica/aclocal.h	/^	struct acpi_parse_obj_common common;$/;"	m	union:acpi_parse_object	typeref:struct:acpi_parse_object::acpi_parse_obj_common
common_stmt	scripts/kconfig/zconf.y	/^common_stmt:$/;"	l
comp	src/legion_runtime/legion_utilities.h	/^      BITMASK comp[LOG2MAX];$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
compatibility_priority	include/acpi/acrestyp.h	/^	uint8_t compatibility_priority;$/;"	m	struct:acpi_resource_start_dependent
compatible_id_list	include/acpi/actypes.h	/^	struct acpica_device_id_list compatible_id_list;	\/* _CID list <must be last> *\/$/;"	m	struct:acpi_device_info	typeref:struct:acpi_device_info::acpica_device_id_list
compile_flags	src/acpi/acpica/aclocal.h	/^	u32 compile_flags;$/;"	m	struct:acpi_parse_obj_asl
complete	src/legion_runtime/region_tree.h	/^        bool complete;$/;"	m	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
complete	src/legion_runtime/region_tree.h	/^      bool has_complete, complete;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
complete	src/legion_runtime/shared_lowlevel.cc	/^		EventImpl *complete;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
complete	src/legion_runtime/shared_lowlevel.cc	/^          EventImpl *complete;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
complete_all_futures	src/legion_runtime/runtime.cc	/^    void FutureMap::Impl::complete_all_futures(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
complete_children	src/legion_runtime/legion_tasks.h	/^      LegionContainer<Operation*,COMPLETE_CHILD_ALLOC>::set complete_children;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
complete_event	src/legion_runtime/lowlevel_gpu.cc	/^      CUevent complete_event;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy	file:
complete_execution	src/legion_runtime/legion_ops.cc	/^    void Operation::complete_execution(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
complete_future	src/legion_runtime/runtime.cc	/^    void Future::Impl::complete_future(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
complete_gc_epoch	src/legion_runtime/runtime.cc	/^    void Runtime::complete_gc_epoch(GarbageCollectionEpoch *epoch)$/;"	f	class:LegionRuntime::HighLevel::Runtime
complete_mapping	src/legion_runtime/legion_ops.cc	/^    void Operation::complete_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
complete_operation	src/legion_runtime/legion_ops.cc	/^    void Operation::complete_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
complete_points	src/legion_runtime/legion_tasks.h	/^      unsigned complete_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
complete_received	src/legion_runtime/legion_tasks.h	/^      bool complete_received;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
complete_received	src/legion_runtime/legion_tasks.h	/^      bool complete_received;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
completed	src/legion_runtime/legion_ops.h	/^      bool completed;$/;"	m	class:LegionRuntime::HighLevel::Operation
completion_code	include/acpi/actbl2.h	/^	uint8_t completion_code;$/;"	m	struct:acpi_asf_rmcp
completion_event	src/legion_runtime/legion_ops.h	/^      UserEvent completion_event;$/;"	m	class:LegionRuntime::HighLevel::Operation
completion_events	src/legion_runtime/runtime.h	/^      std::set<Event> completion_events;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
component_domains	src/legion_runtime/region_tree.h	/^      std::set<Domain> component_domains;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
compress_left	src/legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::compress_left($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
compress_representation	src/legion_runtime/legion_utilities.h	/^    void BitPermutation<BITMASK,LOG2MAX>::compress_representation(void)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
compress_right	src/legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::compress_right($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
compress_strides	src/legion_runtime/lowlevel_dma.cc	/^    static unsigned compress_strides(const Rect<DIM> &r,$/;"	f	namespace:LegionRuntime::LowLevel
compress_symbols	scripts/kallsyms.c	/^static void compress_symbols(unsigned char *str, int idx)$/;"	f	file:
computeTIDOfMatrixRow	src/test/hpcg/geometry.h	/^computeTIDOfMatrixRow(const Geometry &geom,$/;"	f	namespace:lgncg
compute_copy_offsets	src/legion_runtime/region_tree.cc	/^    void InstanceManager::compute_copy_offsets($/;"	f	class:LegionRuntime::HighLevel::InstanceManager
compute_copy_offsets	src/legion_runtime/region_tree.cc	/^    void InstanceManager::compute_copy_offsets(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
compute_copy_offsets	src/legion_runtime/region_tree.cc	/^    void LayoutDescription::compute_copy_offsets($/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
compute_copy_offsets	src/legion_runtime/region_tree.cc	/^    void LayoutDescription::compute_copy_offsets(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
compute_dominates	src/legion_runtime/region_tree.cc	/^    \/*static*\/ bool IndexTreeNode::compute_dominates($/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
compute_index_path	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::compute_index_path(IndexSpace parent, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
compute_intersection	src/legion_runtime/region_tree.cc	/^    \/*static*\/ bool IndexTreeNode::compute_intersection(const Domain &left,$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
compute_intersections	src/legion_runtime/region_tree.cc	/^    \/*static*\/ bool IndexTreeNode::compute_intersections($/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
compute_layout_volume	src/legion_runtime/region_tree.cc	/^    \/*static*\/ size_t LayoutDescription::compute_layout_volume(const Domain &d)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
compute_partition_path	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::compute_partition_path(IndexSpace parent, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
compute_point_region_requirements	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::compute_point_region_requirements(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
compute_precondition_sets	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionTreeNode::compute_precondition_sets($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
compute_rebuild_rectangle	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ inline void RectangleSet<T,DISCRETE>::compute_rebuild_rectangle($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
computesizes	src/lua_src/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
cond	src/legion_runtime/activemsg.cc	/^  gasnett_cond_t cond;$/;"	m	class:ActiveMessageEndpoint	file:
cond	src/legion_runtime/lowlevel.cc	/^      gasnett_cond_t cond;$/;"	m	class:LegionRuntime::LowLevel::PthreadCondWaiter	file:
cond	src/lua_src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
cond_time	src/test/benchmark.c	/^} cond_time;$/;"	v	typeref:struct:cv	file:
condchangemem	include/lua/llimits.h	303;"	d
condchangemem	include/lua/llimits.h	305;"	d
condense_user_list	src/legion_runtime/region_tree.cc	/^    void MaterializedView::condense_user_list(std::list<PhysicalUser,ALLOC> $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
condjump	src/lua_src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
condmovestack	include/lua/llimits.h	296;"	d
condmovestack	include/lua/llimits.h	299;"	d
condvar	src/legion_runtime/activemsg.h	/^  gasnett_cond_t condvar;$/;"	m	struct:HandlerReplyFuture
condvar	src/legion_runtime/lowlevel.cc	/^	gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
condvar	src/legion_runtime/lowlevel.cc	/^      gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
condvar	src/legion_runtime/lowlevel.cc	/^      gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::ThreadImpl	file:
condvar	src/legion_runtime/lowlevel_impl.h	/^      gasnett_cond_t condvar;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
conf	scripts/kconfig/conf.c	/^static void conf(struct menu *menu)$/;"	f	file:
conf	scripts/kconfig/mconf.c	/^static void conf(struct menu *menu)$/;"	f	file:
conf-objs	scripts/kconfig/Makefile	/^conf-objs	:= conf.o  zconf.tab.o$/;"	m
conf_askvalue	scripts/kconfig/conf.c	/^static void conf_askvalue(struct symbol *sym, const char *def)$/;"	f	file:
conf_choice	scripts/kconfig/conf.c	/^static int conf_choice(struct menu *menu)$/;"	f	file:
conf_choice	scripts/kconfig/mconf.c	/^static void conf_choice(struct menu *menu)$/;"	f	file:
conf_cleanup	scripts/kconfig/mconf.c	/^static void conf_cleanup(void)$/;"	f	file:
conf_cnt	scripts/kconfig/conf.c	/^static int conf_cnt;$/;"	v	file:
conf_confnames	scripts/kconfig/confdata.c	/^const char *conf_confnames[] = {$/;"	v
conf_def_filename	scripts/kconfig/confdata.c	/^const char conf_def_filename[] = ".config";$/;"	v
conf_defname	scripts/kconfig/confdata.c	/^const char conf_defname[] = "arch\/$ARCH\/defconfig";$/;"	v
conf_expand_value	scripts/kconfig/confdata.c	/^static char *conf_expand_value(const char *in)$/;"	f	file:
conf_filename	scripts/kconfig/confdata.c	/^static const char *conf_filename;$/;"	v	file:
conf_get_default_confname	scripts/kconfig/confdata.c	/^char *conf_get_default_confname(void)$/;"	f
conf_lineno	scripts/kconfig/confdata.c	/^static int conf_lineno, conf_warnings, conf_unsaved;$/;"	v	file:
conf_load	scripts/kconfig/mconf.c	/^static void conf_load(void)$/;"	f	file:
conf_parse	scripts/kconfig/zconf.tab.c	/^void conf_parse(const char *name)$/;"	f
conf_read	scripts/kconfig/confdata.c	/^int conf_read(const char *name)$/;"	f
conf_read_simple	scripts/kconfig/confdata.c	/^int conf_read_simple(const char *name)$/;"	f
conf_save	scripts/kconfig/mconf.c	/^static void conf_save(void)$/;"	f	file:
conf_string	scripts/kconfig/conf.c	/^int conf_string(struct menu *menu)$/;"	f
conf_string	scripts/kconfig/mconf.c	/^static void conf_string(struct menu *menu)$/;"	f	file:
conf_sym	scripts/kconfig/conf.c	/^static int conf_sym(struct menu *menu)$/;"	f	file:
conf_unsaved	scripts/kconfig/confdata.c	/^static int conf_lineno, conf_warnings, conf_unsaved;$/;"	v	file:
conf_warning	scripts/kconfig/confdata.c	/^static void conf_warning(const char *fmt, ...)$/;"	f	file:
conf_warnings	scripts/kconfig/confdata.c	/^static int conf_lineno, conf_warnings, conf_unsaved;$/;"	v	file:
conf_write	scripts/kconfig/confdata.c	/^int conf_write(const char *name)$/;"	f
config-targets	Makefile	/^                config-targets := 1$/;"	m
config-targets	Makefile	/^config-targets := 0$/;"	m
configApp	scripts/kconfig/qconf.cc	/^static QApplication *configApp;$/;"	v	file:
configList	scripts/kconfig/qconf.h	/^	ConfigList *configList;$/;"	m	class:ConfigMainWindow
configView	scripts/kconfig/qconf.h	/^	ConfigView *configView;$/;"	m	class:ConfigMainWindow
config_changed	scripts/kconfig/gconf.c	/^static gboolean config_changed = FALSE;$/;"	v	file:
config_entry_start	scripts/kconfig/zconf.y	/^config_entry_start: T_CONFIG T_WORD T_EOL$/;"	l
config_option	scripts/kconfig/zconf.y	/^config_option: T_DEFAULT expr if_expr T_EOL$/;"	l
config_option	scripts/kconfig/zconf.y	/^config_option: T_PROMPT prompt if_expr T_EOL$/;"	l
config_option	scripts/kconfig/zconf.y	/^config_option: T_RANGE symbol symbol if_expr T_EOL$/;"	l
config_option	scripts/kconfig/zconf.y	/^config_option: T_SELECT T_WORD if_expr T_EOL$/;"	l
config_option	scripts/kconfig/zconf.y	/^config_option: T_TYPE prompt_stmt_opt T_EOL$/;"	l
config_option_list	scripts/kconfig/zconf.y	/^config_option_list:$/;"	l
config_stmt	scripts/kconfig/zconf.y	/^config_stmt: config_entry_start config_option_list$/;"	l
config_write_enable	include/acpi/actbl1.h	/^	uint16_t config_write_enable;$/;"	m	struct:acpi_hest_notify
configure_MPI_interoperability	src/legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::configure_MPI_interoperability(int rank)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
configure_MPI_interoperability	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::configure_MPI_interoperability(int rank)$/;"	f	class:LegionRuntime::HighLevel::Runtime
console	xeon_phi/linux_usr/phi_console.c	/^} console;$/;"	v	typeref:struct:__anon79	file:
console_flags	include/nautilus/multiboot2.h	/^  multiboot_uint32_t console_flags;$/;"	m	struct:multiboot_header_tag_console_flags
console_init	xeon_phi/linux_usr/phi_console.c	/^console_init (void * mapped_phi_gddr)$/;"	f	file:
console_main_loop	xeon_phi/linux_usr/phi_console.c	/^console_main_loop (void) $/;"	f	file:
console_read_reg	xeon_phi/linux_usr/phi_console.c	/^console_read_reg (uint32_t reg)$/;"	f	file:
console_setup_window	xeon_phi/linux_usr/phi_console.c	/^console_setup_window (WINDOW * w)$/;"	f	file:
console_write_reg	xeon_phi/linux_usr/phi_console.c	/^console_write_reg (uint32_t reg, uint32_t val)$/;"	f	file:
const_pointer	src/legion_runtime/legion_allocation.h	/^      typedef const T*    const_pointer;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
const_reference	src/legion_runtime/legion_allocation.h	/^      typedef const T&  const_reference;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
const_value	src/legion_runtime/legion.h	/^      bool const_value;$/;"	m	class:LegionRuntime::HighLevel::Predicate
constfolding	src/lua_src/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constituents	src/legion_runtime/shared_lowlevel.cc	/^        std::vector<ProcessorImpl*> constituents; \/\/ User impls of the utility processor$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
constraints	src/legion_runtime/legion_ops.h	/^      std::vector<Mapper::MappingConstraint> constraints;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
constraints	src/nautilus/scheduler.c	/^    struct nk_sched_constraints constraints;$/;"	m	struct:nk_sched_thread_state	typeref:struct:nk_sched_thread_state::nk_sched_constraints	file:
construct	src/legion_runtime/legion_allocation.h	/^      inline void construct(pointer p, const T &t) { new(p) T(t); }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
construct_ident_map	src/nautilus/paging.c	/^construct_ident_map (pml4e_t * pml, page_size_t ptype, ulong_t bytes)$/;"	f	file:
construct_mpi_rank_tables	src/legion_runtime/runtime.cc	/^    void Runtime::construct_mpi_rank_tables(Processor proc, int rank)$/;"	f	class:LegionRuntime::HighLevel::Runtime
constructed_nodes	src/legion_runtime/region_tree.h	/^      std::map<RegionTreeNode*,CompositeNode*> constructed_nodes;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
constructor	src/lua_src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
container	src/test/benchmark.c	/^typedef struct container {$/;"	s	file:
container_of	include/nautilus/list.h	36;"	d
container_of	include/nautilus/rbtree.h	104;"	d
container_t	src/test/benchmark.c	/^} container_t;$/;"	t	typeref:struct:container	file:
contains	src/legion_runtime/arrays.h	/^      bool contains(const Point<DIM> &point) const$/;"	f	class:LegionRuntime::Arrays::Rect
contains	src/legion_runtime/arrays.h	/^      bool contains(const Rect<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Rect
contains	src/legion_runtime/lowlevel.h	/^      bool contains(DomainPoint point) const$/;"	f	class:LegionRuntime::LowLevel::Domain
contains_point	src/legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::contains_point(const DomainPoint &dp) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
contains_ptr	src/legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::contains_ptr(ptr_t ptr) const $/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
contentsMouseDoubleClickEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMouseDoubleClickEvent(QMouseEvent* e)$/;"	f	class:ConfigList
contentsMouseMoveEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMouseMoveEvent(QMouseEvent* e)$/;"	f	class:ConfigList
contentsMousePressEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMousePressEvent(QMouseEvent* e)$/;"	f	class:ConfigList
contentsMouseReleaseEvent	scripts/kconfig/qconf.cc	/^void ConfigList::contentsMouseReleaseEvent(QMouseEvent* e)$/;"	f	class:ConfigList
context	src/acpi/acpica/aclocal.h	/^	void *context;		\/* Context to be passed to handler *\/$/;"	m	struct:acpi_fixed_event_handler
context	src/acpi/acpica/aclocal.h	/^	void *context;		\/* Context to be passed to handler *\/$/;"	m	struct:acpi_gpe_handler_info
context	src/acpi/osl.c	/^	void *context;$/;"	m	struct:acpi_os_dpc	file:
context	src/legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
context	src/legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
context	src/legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
context	src/legion_runtime/legion_logging.h	/^        UniqueID context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
context	src/legion_runtime/legion_tasks.h	/^      RegionTreeContext context; $/;"	m	class:LegionRuntime::HighLevel::SingleTask
context	src/legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
context	src/legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
context	src/legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
context	src/legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::LogicalView
context	src/legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::PhysicalManager
context	src/legion_runtime/region_tree.h	/^      RegionTreeForest *const context;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
context	src/legion_runtime/runtime.h	/^      SingleTask *const context;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
context	src/legion_runtime/runtime.h	/^      SingleTask *const context;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
context_barriers	src/legion_runtime/legion_tasks.h	/^      LegionContainer<Barrier,TASK_BARRIER_ALLOC>::deque context_barriers;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
context_bytes	src/legion_runtime/legion_utilities.h	/^      size_t context_bytes;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
context_bytes	src/legion_runtime/legion_utilities.h	/^      size_t context_bytes;$/;"	m	class:LegionRuntime::HighLevel::Serializer
context_locks	src/legion_runtime/legion_tasks.h	/^      LegionContainer<Reservation,TASK_RESERVATION_ALLOC>::deque context_locks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
context_states	src/legion_runtime/runtime.h	/^      std::vector<ContextState> context_states;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
control	include/acpi/actbl1.h	/^	struct acpi_generic_address control;	\/* Address of EC command\/status register *\/$/;"	m	struct:acpi_table_ecdt	typeref:struct:acpi_table_ecdt::acpi_generic_address
control	src/acpi/acpica/aclocal.h	/^	struct acpi_control_state control;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_control_state
control_data	include/acpi/actbl1.h	/^	uint64_t control_data;$/;"	m	struct:acpi_hest_ia_error_bank
control_register	include/acpi/actbl1.h	/^	uint32_t control_register;$/;"	m	struct:acpi_hest_ia_error_bank
control_register	include/acpi/actbl2.h	/^	struct acpi_generic_address control_register;$/;"	m	struct:acpi_table_mchi	typeref:struct:acpi_table_mchi::acpi_generic_address
control_register	include/acpi/actbl2.h	/^	struct acpi_generic_address control_register;$/;"	m	struct:acpi_table_wdrt	typeref:struct:acpi_table_wdrt::acpi_generic_address
controller	src/dev/ata.c	/^    struct ata_controller_state *controller;$/;"	m	struct:ata_blkdev_state	typeref:struct:ata_blkdev_state::ata_controller_state	file:
controller	src/dev/ata.c	/^static struct ata_controller_state controller;$/;"	v	typeref:struct:ata_controller_state	file:
controls	include/acpi/actbl2.h	/^	uint8_t controls;$/;"	m	struct:acpi_asf_remote
convergeephemerons	src/lua_src/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
convert	src/legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert(void) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert	src/legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorArray> RegionAccessor<AccessorGeneric>::convert<AccessorArray>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	src/legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorArrayReductionFold> RegionAccessor<AccessorGeneric>::convert<AccessorArrayReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	src/legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorReductionList> RegionAccessor<AccessorGeneric>::convert<AccessorReductionList>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessor<ET,AT2> convert(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
convert	src/legion_runtime/lowlevel_gpu.cc	/^    RegionAccessor<AccessorGPU> RegionAccessor<AccessorGeneric>::convert<AccessorGPU>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	src/legion_runtime/lowlevel_gpu.cc	/^    RegionAccessor<AccessorGPUReductionFold> RegionAccessor<AccessorGeneric>::convert<AccessorGPUReductionFold>(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
convert	src/legion_runtime/lowlevel_impl.h	/^      T convert(void) const { T thing_to_return = { value }; return thing_to_return; }$/;"	f	class:LegionRuntime::LowLevel::ID
convert2	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessor<ET,AT2> convert2(T2 arg) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
convert_helper	src/legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(AOS<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	src/legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(HybridSOA<STRIDE, BLOCK_SIZE, BLOCK_STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	src/legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(ReductionFold<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	src/legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(ReductionList<REDOP> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convert_helper	src/legion_runtime/accessor.h	/^	  RegionAccessor<AT, T> convert_helper(SOA<STRIDE> *dummy) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
convex_hull	src/legion_runtime/arrays.h	/^      Rect<DIM> convex_hull(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
coord	include/nautilus/smp.h	/^    struct nk_cpu_coords * coord;$/;"	m	struct:cpu	typeref:struct:cpu::nk_cpu_coords
copies	src/legion_runtime/legion_profiling.h	/^        std::deque<OpInstance> copies;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
copies	src/legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
copy	src/legion_runtime/lowlevel_dma.cc	/^    Event Domain::copy(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	src/legion_runtime/lowlevel_dma.cc	/^    Event Domain::copy(const std::vector<CopySrcDstField>& srcs,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	src/legion_runtime/shared_lowlevel.cc	/^    Event Domain::copy(RegionInstance src_inst, RegionInstance dst_inst, size_t elem_size,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	src/legion_runtime/shared_lowlevel.cc	/^    Event Domain::copy(const std::vector<CopySrcDstField>& srcs,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy	src/legion_runtime/shared_lowlevel.cc	/^    Event IndexSpace::Impl::copy(RegionInstance src_inst, RegionInstance dst_inst, size_t elem_size,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
copy	src/legion_runtime/shared_lowlevel.cc	/^    Event IndexSpace::Impl::copy(const std::vector<Domain::CopySrcDstField>& srcs,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
copy_across	src/legion_runtime/region_tree.cc	/^    Event RegionTreeForest::copy_across(Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
copy_across	src/legion_runtime/region_tree.cc	/^    Event RegionTreeForest::copy_across(RegionTreeContext src_ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
copy_all_fields	src/legion_runtime/lowlevel_dma.cc	/^      virtual void copy_all_fields(int src_index, int dst_index, int count_per_line,$/;"	f	class:LegionRuntime::LowLevel::InstPairCopier
copy_all_fields	src/legion_runtime/lowlevel_dma.cc	/^      virtual void copy_all_fields(int src_index, int dst_index, int count_per_line,$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
copy_all_fields	src/legion_runtime/lowlevel_dma.cc	/^      virtual void copy_all_fields(int src_index, int dst_index, int elem_count)$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
copy_data	src/legion_runtime/activemsg.cc	/^void ContiguousPayload::copy_data(void *dest)$/;"	f	class:ContiguousPayload
copy_data	src/legion_runtime/activemsg.cc	/^void SpanPayload::copy_data(void *dest)$/;"	f	class:SpanPayload
copy_data	src/legion_runtime/activemsg.cc	/^void TwoDPayload::copy_data(void *dest)$/;"	f	class:TwoDPayload
copy_display_to_vc	src/nautilus/vc.c	/^static inline void copy_display_to_vc(struct nk_virtual_console *vc) $/;"	f	file:
copy_field	src/legion_runtime/lowlevel_dma.cc	/^      virtual void copy_field(int src_index, int dst_index, int elem_count,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
copy_field	src/legion_runtime/lowlevel_dma.cc	/^      virtual void copy_field(int src_index, int dst_index, int elem_count,$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
copy_field	src/legion_runtime/region_tree.cc	/^    void MaterializedView::copy_field(FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
copy_from	src/legion_runtime/region_tree.cc	/^    void CompositeView::copy_from(const FieldMask &copy_mask, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
copy_from	src/legion_runtime/region_tree.cc	/^    void MaterializedView::copy_from(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
copy_from_fb	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_from_fb(void *dst, off_t src_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_from_fb	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_from_fb(void *dst, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_from_fb_2d	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_from_fb_2d(void *dst, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_gather	src/legion_runtime/lowlevel_dma.cc	/^      void copy_gather(const PendingGather *g, Event trigger = Event::NO_EVENT)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
copy_indirect	src/legion_runtime/lowlevel_dma.cc	/^    Event Domain::copy_indirect(const CopySrcDstField& idx,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy_indirect	src/legion_runtime/shared_lowlevel.cc	/^    Event Domain::copy_indirect(const CopySrcDstField &idx,$/;"	f	class:LegionRuntime::LowLevel::Domain
copy_mask	src/legion_runtime/region_tree.h	/^      const FieldMask copy_mask;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
copy_op_lock	src/legion_runtime/runtime.h	/^      Reservation copy_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
copy_span	src/legion_runtime/lowlevel_dma.cc	/^      void copy_span(off_t src_offset, off_t dst_offset, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
copy_to	src/legion_runtime/region_tree.cc	/^    void CompositeView::copy_to(const FieldMask &copy_mask, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
copy_to	src/legion_runtime/region_tree.cc	/^    void MaterializedView::copy_to(const FieldMask &copy_mask,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
copy_to	src/legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::Impl::copy_to(RegionInstance target, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
copy_to	src/legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::Impl::copy_to(RegionInstance target, IndexSpace src_region, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
copy_to	src/legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::Impl::copy_to(RegionInstance target, const ElementMask &mask, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
copy_to_fb	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_fb(off_t dst_offset, const void *src, size_t bytes,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_fb	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_fb(off_t dst_offset, const void *src,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_fb_2d	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_fb_2d(off_t dst_offset, const void *src, $/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_peer	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_peer(GPUProcessor *dst, off_t dst_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_peer_2d	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_to_peer_2d(GPUProcessor *dst,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_to_untyped	src/legion_runtime/lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, $/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	src/legion_runtime/lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	src/legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	src/legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, IndexSpace region,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_to_untyped	src/legion_runtime/shared_lowlevel.cc	/^    Event RegionInstance::copy_to_untyped(RegionInstance target, const ElementMask &mask,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
copy_vc_to_display	src/nautilus/vc.c	/^static inline void copy_vc_to_display(struct nk_virtual_console *vc) $/;"	f	file:
copy_within_fb	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_within_fb(off_t dst_offset, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_within_fb_2d	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::copy_within_fb_2d(off_t dst_offset, off_t src_offset,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
copy_without_mapping_info	src/legion_runtime/legion.cc	/^    void RegionRequirement::copy_without_mapping_info($/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
core-y	Makefile	/^core-y		:= $(patsubst %\/, %\/built-in.o, $(core-y))$/;"	m
core-y	Makefile	/^core-y          := src\/$/;"	m
core_barrier	include/nautilus/nautilus.h	/^    nk_barrier_t * core_barrier;$/;"	m	struct:sys_info
core_bits	include/nautilus/numa.h	/^    uint32_t core_bits;$/;"	m	struct:nk_topo_params
core_counters	src/test/benchmark.c	/^static volatile uint64_t core_counters[NUM_THREADS];$/;"	v	file:
core_id	include/nautilus/numa.h	/^    uint32_t core_id; \/\/ physical core within package$/;"	m	struct:nk_cpu_coords
core_id	src/legion_runtime/lowlevel.cc	/^      int core_id;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
core_id	src/legion_runtime/lowlevel.cc	/^      int id, core_id;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
core_id	src/legion_runtime/lowlevel_impl.h	/^      int core_id;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
core_recvd	src/test/benchmark.c	/^static volatile uint64_t core_recvd[NUM_THREADS\/64 + NUM_THREADS%64];$/;"	v	file:
cores_wait	src/test/benchmark.c	/^cores_wait(void)$/;"	f	file:
cores_wait	src/test/ipi.c	/^cores_wait(ipi_exp_data_t * data)$/;"	f	file:
correctable_mask	include/acpi/actbl1.h	/^	uint32_t correctable_mask;$/;"	m	struct:acpi_hest_aer_common
correctstack	src/lua_src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
cos	src/nautilus/libccompat.c	/^double cos(double x)$/;"	f
cosh	src/nautilus/libccompat.c	/^double cosh(double x)$/;"	f
count	include/acpi/actypes.h	/^		uint32_t count;	\/* # of elements in package *\/$/;"	m	struct:acpi_object::__anon23
count	include/acpi/actypes.h	/^	uint32_t count;		\/* Number of IDs in Ids array *\/$/;"	m	struct:acpica_device_id_list
count	include/acpi/actypes.h	/^	uint32_t count;$/;"	m	struct:acpi_object_list
count	include/nautilus/instrument.h	/^    uint64_t count;$/;"	m	struct:irq_data
count	include/nautilus/instrument.h	/^    uint64_t count;$/;"	m	struct:malloc_data
count	include/nautilus/instrument.h	/^    uint64_t count;$/;"	m	struct:thread_switch_data
count	src/acpi/acpica/aclocal.h	/^	u16 count;$/;"	m	struct:acpi_gpe_walk_info
count	src/acpi/acpica/aclocal.h	/^	u32 *count;$/;"	m	struct:acpi_find_context
count	src/acpi/acpica/aclocal.h	/^	u8 count;$/;"	m	struct:acpi_package_info2
count	src/acpi/acpica/aclocal.h	/^	u8 count;$/;"	m	struct:acpi_package_info3
count	src/legion_runtime/interval_tree.h	/^    int IntervalTreeNode<T,DISCRETE>::count(void) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
count	src/legion_runtime/lowlevel_impl.h	/^      unsigned count; \/\/ number of locks held by local threads$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
count	src/legion_runtime/region_tree.h	/^        int count;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
count1	src/acpi/acpica/aclocal.h	/^	u8 count1;$/;"	m	struct:acpi_package_info
count2	src/acpi/acpica/aclocal.h	/^	u8 count2;$/;"	m	struct:acpi_package_info
count_left	src/legion_runtime/lowlevel.cc	/^      volatile int count_left;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
count_needed	src/legion_runtime/lowlevel.cc	/^      unsigned count_needed;$/;"	m	class:LegionRuntime::LowLevel::EventMerger	file:
count_offset	src/legion_runtime/lowlevel.cc	/^      off_t count_offset;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceResp	file:
count_offset	src/legion_runtime/lowlevel_impl.h	/^	off_t count_offset;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
count_register	include/acpi/actbl2.h	/^	struct acpi_generic_address count_register;$/;"	m	struct:acpi_table_wdrt	typeref:struct:acpi_table_wdrt::acpi_generic_address
countint	src/lua_src/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
countlevels	src/lua_src/lauxlib.c	/^static int countlevels (lua_State *L) {$/;"	f	file:
covers	src/legion_runtime/rectangle_set.h	/^    inline bool RectangleSet<T,DISCRETE>::covers(T lower_x, T lower_y, $/;"	f	class:LegionRuntime::HighLevel::RectangleSet
cprint	scripts/kconfig/mconf.c	/^static int cprint(const char *fmt, ...)$/;"	f	file:
cprint1	scripts/kconfig/mconf.c	/^static int cprint1(const char *fmt, ...)$/;"	f	file:
cprint_done	scripts/kconfig/mconf.c	/^static void cprint_done(void)$/;"	f	file:
cprint_init	scripts/kconfig/mconf.c	/^static void cprint_init(void)$/;"	f	file:
cpu	include/nautilus/acpi.h	/^        struct mp_table_entry_cpu cpu;$/;"	m	union:mp_table_entry::__anon35	typeref:struct:mp_table_entry::__anon35::mp_table_entry_cpu
cpu	include/nautilus/smp.h	/^struct cpu {$/;"	s
cpu	src/nautilus/timer.c	/^    uint32_t          cpu;      \/\/ cpu to use for callback$/;"	m	struct:nk_timer	file:
cpu_base	src/legion_runtime/lowlevel_gpu.h	/^      char *cpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUZCMemory
cpu_base_impl	src/test/circuit_cpu.cc	/^void CalcNewCurrentsTask::cpu_base_impl(const CircuitPiece &p,$/;"	f	class:CalcNewCurrentsTask
cpu_base_impl	src/test/circuit_cpu.cc	/^void DistributeChargeTask::cpu_base_impl(const CircuitPiece &p,$/;"	f	class:DistributeChargeTask
cpu_base_impl	src/test/circuit_cpu.cc	/^void UpdateVoltagesTask::cpu_base_impl(const CircuitPiece &p,$/;"	f	class:UpdateVoltagesTask
cpu_freq_khz	include/nautilus/multiboot2.h	/^  multiboot_uint64_t cpu_freq_khz;;$/;"	m	struct:multiboot_tag_hrt
cpu_id_t	include/nautilus/smp.h	/^typedef uint32_t cpu_id_t;$/;"	t
cpu_id_t	src/lua_src/lnautlib.c	/^typedef unsigned int cpu_id_t;$/;"	t	file:
cpu_impl	src/test/circuit_cpu.cc	/^bool CheckTask::cpu_impl(const Task *task,$/;"	f	class:CheckTask
cpu_info_ready	src/nautilus/smp.c	/^uint8_t cpu_info_ready = 0;$/;"	v
cpu_khz	include/nautilus/smp.h	/^    ulong_t cpu_khz; $/;"	m	struct:cpu
cpu_ptr	include/nautilus/smp.h	/^    struct cpu * cpu_ptr; \/\/ 82$/;"	m	struct:ap_init_area	typeref:struct:ap_init_area::cpu
cpu_sig	include/nautilus/smp.h	/^    uint32_t cpu_sig;$/;"	m	struct:cpu
cpuid	include/nautilus/cpuid.h	/^cpuid (uint32_t func, cpuid_ret_t * ret)$/;"	f
cpuid_amd_ecx_flags	include/nautilus/cpuid.h	/^struct cpuid_amd_ecx_flags {$/;"	s
cpuid_amd_edx_flags	include/nautilus/cpuid.h	/^struct cpuid_amd_edx_flags {$/;"	s
cpuid_ecx_flags	include/nautilus/cpuid.h	/^struct cpuid_ecx_flags {$/;"	s
cpuid_edx_flags	include/nautilus/cpuid.h	/^struct cpuid_edx_flags {$/;"	s
cpuid_ext_feat_flags_ebx	include/nautilus/cpuid.h	/^struct cpuid_ext_feat_flags_ebx {$/;"	s
cpuid_feature_flags	include/nautilus/cpuid.h	/^struct cpuid_feature_flags {$/;"	s
cpuid_get_family	src/nautilus/cpuid.c	/^cpuid_get_family (void)$/;"	f
cpuid_get_model	src/nautilus/cpuid.c	/^cpuid_get_model (void)$/;"	f
cpuid_get_step	src/nautilus/cpuid.c	/^cpuid_get_step (void)$/;"	f
cpuid_leaf_max	src/nautilus/cpuid.c	/^cpuid_leaf_max (void)$/;"	f
cpuid_ret	include/nautilus/cpuid.h	/^typedef struct cpuid_ret {$/;"	s
cpuid_ret_t	include/nautilus/cpuid.h	/^} cpuid_ret_t; $/;"	t	typeref:struct:cpuid_ret
cpuid_sub	include/nautilus/cpuid.h	/^cpuid_sub (uint32_t func, uint32_t sub_func, cpuid_ret_t * ret)$/;"	f
cpus	include/nautilus/nautilus.h	/^    struct cpu * cpus[NAUT_CONFIG_MAX_CPUS];$/;"	m	struct:sys_info	typeref:struct:sys_info::cpu
cr3	include/nautilus/smp.h	/^    uint64_t cr3; \/\/ 74$/;"	m	struct:ap_init_area
cr3_to_gva	src/arch/hrt/hrt.c	/^cr3_to_gva (uint64_t cr3)$/;"	f	file:
create	src/test/hpcg/sparsemat.h	/^    create(const Geometry &geom,$/;"	f	struct:lgncg::SparseMatrix
create	src/test/hpcg/vector.h	/^    create(int64_t len,$/;"	f	struct:lgncg::Vector
create_allocator	src/legion_runtime/lowlevel.cc	/^    IndexSpaceAllocator IndexSpace::create_allocator(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_allocator	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpaceAllocator IndexSpace::Impl::create_allocator(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
create_allocator	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpaceAllocator IndexSpace::create_allocator(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_argument_map	src/legion_runtime/legion.cc	/^    ArgumentMap HighLevelRuntime::create_argument_map(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_argument_map	src/legion_runtime/runtime.cc	/^    ArgumentMap Runtime::create_argument_map(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_barrier	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Barrier Barrier::create_barrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::Barrier
create_barrier	src/legion_runtime/shared_lowlevel.cc	/^    Barrier Barrier::create_barrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::Barrier
create_copier	src/legion_runtime/lowlevel_dma.cc	/^    MemPairCopier *MemPairCopier::create_copier(Memory src_mem, Memory dst_mem,$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
create_dir	include/nautilus/fs.h	/^    int   (*create_dir)(void *state, char *path);$/;"	m	struct:nk_fs_int
create_event	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::Impl::create_event(void)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
create_field_allocator	src/legion_runtime/legion.cc	/^    FieldAllocator HighLevelRuntime::create_field_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_field_allocator	src/legion_runtime/runtime.cc	/^    FieldAllocator Runtime::create_field_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_field_space	src/legion_runtime/legion.cc	/^    FieldSpace HighLevelRuntime::create_field_space(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_field_space	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_field_space(FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_field_space	src/legion_runtime/runtime.cc	/^    FieldSpace Runtime::create_field_space(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_file	include/nautilus/fs.h	/^    void *(*create_file)(void *state, char *path);$/;"	m	struct:nk_fs_int
create_gpu_thread	src/legion_runtime/lowlevel_gpu.cc	/^      void create_gpu_thread(size_t stack_size)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
create_group	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Processor Processor::create_group(const std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
create_group	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ Processor Processor::create_group(const std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
create_handshake	src/legion_runtime/legion.cc	/^    \/*static*\/ MPILegionHandshake HighLevelRuntime::create_handshake($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_allocator	src/legion_runtime/legion.cc	/^    IndexAllocator HighLevelRuntime::create_index_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_allocator	src/legion_runtime/runtime.cc	/^    IndexAllocator Runtime::create_index_allocator(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_partition	src/legion_runtime/legion.cc	/^    IndexPartition HighLevelRuntime::create_index_partition($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_partition	src/legion_runtime/legion.h	/^    IndexPartition HighLevelRuntime::create_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_partition	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_index_partition(IndexPartition pid,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_index_partition	src/legion_runtime/runtime.cc	/^    IndexPartition Runtime::create_index_partition($/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	src/legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::create_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_space	src/legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::create_index_space(Context ctx, Domain domain)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_space	src/legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::create_index_space(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_index_space	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ IndexSpace IndexSpace::create_index_space(IndexSpace parent, const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ IndexSpace IndexSpace::create_index_space(const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ IndexSpace IndexSpace::create_index_space(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_index_space(const Domain &domain) $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_index_space	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_index_space(const Domain &hull,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_index_space	src/legion_runtime/runtime.cc	/^    IndexSpace Runtime::create_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	src/legion_runtime/runtime.cc	/^    IndexSpace Runtime::create_index_space(Context ctx, Domain domain)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	src/legion_runtime/runtime.cc	/^    IndexSpace Runtime::create_index_space(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_index_space	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::create_index_space(IndexSpace parent, const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::create_index_space(const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_index_space	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::create_index_space(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
create_instance	src/legion_runtime/lowlevel.cc	/^      virtual RegionInstance create_instance(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
create_instance	src/legion_runtime/lowlevel.cc	/^      virtual RegionInstance create_instance(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
create_instance	src/legion_runtime/lowlevel.cc	/^    RegionInstance Domain::create_instance(Memory memory,$/;"	f	class:LegionRuntime::LowLevel::Domain
create_instance	src/legion_runtime/lowlevel.cc	/^    RegionInstance GASNetMemory::create_instance(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
create_instance	src/legion_runtime/lowlevel_gpu.h	/^      virtual RegionInstance create_instance(IndexSpace is,$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
create_instance	src/legion_runtime/lowlevel_gpu.h	/^      virtual RegionInstance create_instance(IndexSpace is,$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
create_instance	src/legion_runtime/region_tree.cc	/^    InstanceManager* FieldSpaceNode::create_instance(Memory location,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
create_instance	src/legion_runtime/region_tree.cc	/^    MaterializedView* PartitionNode::create_instance(Memory target_mem,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
create_instance	src/legion_runtime/region_tree.cc	/^    MaterializedView* RegionNode::create_instance(Memory target_mem,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
create_instance	src/legion_runtime/shared_lowlevel.cc	/^    RegionInstance Domain::create_instance(Memory m, size_t elmt_size,$/;"	f	class:LegionRuntime::LowLevel::Domain
create_instance	src/legion_runtime/shared_lowlevel.cc	/^    RegionInstance Domain::create_instance(Memory memory,$/;"	f	class:LegionRuntime::LowLevel::Domain
create_instance	src/legion_runtime/shared_lowlevel.cc	/^    RegionInstance IndexSpace::Impl::create_instance(Memory m,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
create_instance_local	src/legion_runtime/lowlevel.cc	/^    RegionInstance Memory::Impl::create_instance_local(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
create_instance_remote	src/legion_runtime/lowlevel.cc	/^    RegionInstance Memory::Impl::create_instance_remote(IndexSpace r,$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
create_layout_description	src/legion_runtime/region_tree.cc	/^    LayoutDescription* FieldSpaceNode::create_layout_description($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
create_lock	src/legion_runtime/legion.cc	/^    Lock HighLevelRuntime::create_lock(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_lock	src/legion_runtime/runtime.cc	/^    Lock Runtime::create_lock(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
create_logical_region	src/legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::create_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_logical_region	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::create_logical_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_logical_region	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::create_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_mappers	src/test/saxpy_array.cc	/^void create_mappers(Machine *machine, HighLevelRuntime *runtime,$/;"	f
create_node	src/legion_runtime/region_tree.cc	/^    FieldSpaceNode* RegionTreeForest::create_node(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	src/legion_runtime/region_tree.cc	/^    IndexPartNode* RegionTreeForest::create_node(IndexPartition p, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	src/legion_runtime/region_tree.cc	/^    IndexSpaceNode* RegionTreeForest::create_node(Domain d, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	src/legion_runtime/region_tree.cc	/^    PartitionNode* RegionTreeForest::create_node(LogicalPartition p,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_node	src/legion_runtime/region_tree.cc	/^    RegionNode* RegionTreeForest::create_node(LogicalRegion r, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
create_phase_barrier	src/legion_runtime/legion.cc	/^    PhaseBarrier HighLevelRuntime::create_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_phase_barrier	src/legion_runtime/runtime.cc	/^    PhaseBarrier Runtime::create_phase_barrier(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_predicate	src/legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::create_predicate(Context ctx, const Future &f)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
create_predicate	src/legion_runtime/runtime.cc	/^    Predicate Runtime::create_predicate(Context ctx, const Future &f) $/;"	f	class:LegionRuntime::HighLevel::Runtime
create_reduction	src/legion_runtime/region_tree.cc	/^    ReductionManager* FieldSpaceNode::create_reduction(Memory location,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
create_reduction	src/legion_runtime/region_tree.cc	/^    ReductionView* PartitionNode::create_reduction(Memory target_mem, $/;"	f	class:LegionRuntime::HighLevel::PartitionNode
create_reduction	src/legion_runtime/region_tree.cc	/^    ReductionView* RegionNode::create_reduction(Memory target_mem, FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
create_reduction_op	src/legion_runtime/lowlevel.h	/^    ReductionOpUntyped *ReductionOpUntyped::create_reduction_op(void)$/;"	f	class:LegionRuntime::LowLevel::ReductionOpUntyped
create_reservation	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Reservation Reservation::create_reservation(size_t _data_size \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::Reservation
create_reservation	src/legion_runtime/shared_lowlevel.cc	/^    Reservation Reservation::create_reservation(size_t data_size)$/;"	f	class:LegionRuntime::LowLevel::Reservation
create_top_view	src/legion_runtime/region_tree.cc	/^    MaterializedView* InstanceManager::create_top_view(unsigned depth)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
create_user_event	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ UserEvent UserEvent::create_user_event(void)$/;"	f	class:LegionRuntime::LowLevel::UserEvent
create_user_event	src/legion_runtime/shared_lowlevel.cc	/^    UserEvent UserEvent::create_user_event(void)$/;"	f	class:LegionRuntime::LowLevel::UserEvent
create_view	src/legion_runtime/region_tree.cc	/^    ReductionView* ReductionManager::create_view(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
create_zone	src/nautilus/mm/kmem.c	/^create_zone (struct mem_region * region)$/;"	f	file:
created_field_spaces	src/legion_runtime/legion_tasks.h	/^      std::set<FieldSpace>                      created_field_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
created_fields	src/legion_runtime/legion_tasks.h	/^      std::set<std::pair<FieldSpace,FieldID> >  created_fields;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
created_index_spaces	src/legion_runtime/legion_tasks.h	/^      std::set<IndexSpace>                      created_index_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
created_regions	src/legion_runtime/legion_tasks.h	/^      std::set<LogicalRegion>                   created_regions;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
createmeta	src/lua_src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	src/lua_src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	src/lua_src/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	src/lua_src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	src/lua_src/lstring.c	/^static TString *createstrobj (lua_State *L, const char *str, size_t l,$/;"	f	file:
creation	src/legion_runtime/legion_profiling.h	/^        bool creation;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
creation_set	src/legion_runtime/region_tree.h	/^      NodeMask creation_set;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
creation_set	src/legion_runtime/region_tree.h	/^      NodeMask creation_set;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
creation_set	src/legion_runtime/region_tree.h	/^      NodeMask creation_set;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
critical_level	include/acpi/actbl1.h	/^	uint32_t critical_level;$/;"	m	struct:acpi_table_sbst
cs	include/nautilus/cpu.h	/^    ulong_t cs;$/;"	m	struct:nk_regs
cs	include/nautilus/idt.h	/^    ulong_t cs;$/;"	m	struct:excp_entry_state
cs	include/nautilus/realmode.h	/^    uint16_t cs;    \/\/  output only$/;"	m	struct:nk_real_mode_int_args
cseg	include/nautilus/multiboot2.h	/^  multiboot_uint16_t cseg;$/;"	m	struct:multiboot_tag_apm
cseg_16	include/nautilus/multiboot2.h	/^  multiboot_uint16_t cseg_16;$/;"	m	struct:multiboot_tag_apm
cseg_16_len	include/nautilus/multiboot2.h	/^  multiboot_uint16_t cseg_16_len;$/;"	m	struct:multiboot_tag_apm
cseg_len	include/nautilus/multiboot2.h	/^  multiboot_uint16_t cseg_len;$/;"	m	struct:multiboot_tag_apm
cst_control	include/acpi/actbl.h	/^	uint8_t cst_control;		\/* Support for the _CST object and C States change notification *\/$/;"	m	struct:acpi_table_fadt
ctb	include/lua/lobject.h	64;"	d
ctrl_regs	xeon_phi/linux_usr/phi_console.c	/^    volatile uint32_t * ctrl_regs;$/;"	m	struct:__anon79	file:
ctx	include/lua/lstate.h	/^      int ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon11::__anon13
ctx	src/legion_runtime/legion_trace.h	/^      SingleTask *const ctx;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
ctx	src/legion_runtime/region_tree.h	/^      ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
ctx	src/legion_runtime/region_tree.h	/^      ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalInitializer
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalInvalidator
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalPathRegistrar
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegistrar
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInitializer
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::RestrictedTraverser
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	class:LegionRuntime::HighLevel::StateSender
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
ctx	src/legion_runtime/region_tree.h	/^      const ContextID ctx;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
ctx	src/legion_runtime/runtime.h	/^      int ctx;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeContext
cur_attr	src/nautilus/vc.c	/^  uint8_t cur_x, cur_y, cur_attr;$/;"	m	struct:nk_virtual_console	file:
cur_entry	src/legion_runtime/shared_lowlevel.cc	/^        size_t cur_entry; \/\/ for lists$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
cur_mode	src/dev/vesa.c	/^static vesa_mode_t cur_mode;$/;"	v	file:
cur_mode_info	src/dev/vesa.c	/^static struct vesa_mode_info    cur_mode_info;$/;"	v	typeref:struct:vesa_mode_info	file:
cur_run_q	include/nautilus/thread.h	/^    nk_thread_queue_t * cur_run_q;$/;"	m	struct:nk_thread
cur_run_time	src/nautilus/scheduler.c	/^    uint64_t cur_run_time; \/\/ how long it has run without being preempted$/;"	m	struct:nk_sched_thread_state	file:
cur_size	src/legion_runtime/lowlevel.h	/^      size_t *cur_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
cur_size	src/legion_runtime/utilities.h	/^	size_t max_size, cur_size;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
cur_thread	include/nautilus/smp.h	/^    struct nk_thread * cur_thread; \/* KCH: this must be first! *\/$/;"	m	struct:cpu	typeref:struct:cpu::nk_thread
cur_thread	src/legion_runtime/lowlevel_impl.h	/^GASNETT_THREADKEY_DECLARE(cur_thread);$/;"	v
cur_time	src/nautilus/scheduler.c	/^static uint64_t cur_time()$/;"	f	file:
cur_vc	src/nautilus/vc.c	/^static struct nk_virtual_console *cur_vc = NULL;$/;"	v	typeref:struct:nk_virtual_console	file:
cur_write_count	src/legion_runtime/activemsg.cc	/^  int cur_write_lmb, cur_write_count;$/;"	m	class:ActiveMessageEndpoint	file:
cur_write_lmb	src/legion_runtime/activemsg.cc	/^  int cur_write_lmb, cur_write_count;$/;"	m	class:ActiveMessageEndpoint	file:
cur_write_offset	src/legion_runtime/activemsg.cc	/^  size_t cur_write_offset;$/;"	m	class:ActiveMessageEndpoint	file:
cur_x	src/nautilus/vc.c	/^  uint8_t cur_x, cur_y, cur_attr;$/;"	m	struct:nk_virtual_console	file:
cur_y	src/nautilus/vc.c	/^  uint8_t cur_x, cur_y, cur_attr;$/;"	m	struct:nk_virtual_console	file:
curr	scripts/kconfig/expr.h	/^	struct symbol_value curr, user;$/;"	m	struct:symbol	typeref:struct:symbol::symbol_value
currIsNewline	src/lua_src/llex.c	32;"	d	file:
curr_epoch_users	src/legion_runtime/region_tree.h	/^      FieldTree<LogicalUser> *curr_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
curr_epoch_users	src/legion_runtime/region_tree.h	/^      FieldTree<PhysicalUser> *const curr_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
curr_epoch_users	src/legion_runtime/region_tree.h	/^      LegionContainer<LogicalUser,CURR_LOGICAL_ALLOC>::list curr_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
curr_epoch_users	src/legion_runtime/region_tree.h	/^      LegionContainer<PhysicalUser,CURR_PHYSICAL_ALLOC>::list curr_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
currency_symbol	include/lua/llocale.h	/^    char *currency_symbol;    \/\/""           LC_MONETARY$/;"	m	struct:lconv
currency_symbol	src/nautilus/libccompat.c	/^    char *currency_symbol;    \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
current	include/lua/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
current	scripts/kconfig/gconf.c	/^static struct menu *current; \/\/ current node for SINGLE view$/;"	v	typeref:struct:menu	file:
current	src/legion_runtime/shared_lowlevel.cc	/^	Event current; $/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
current	src/nautilus/scheduler.c	/^    rt_thread             *current;$/;"	m	struct:nk_sched_percpu_state	file:
current_arrival_count	src/legion_runtime/lowlevel_impl.h	/^      unsigned base_arrival_count, current_arrival_count;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
current_buf	scripts/kconfig/lex.zconf.c	/^struct buffer *current_buf;$/;"	v	typeref:struct:buffer
current_cpu	include/nautilus/thread.h	/^    int current_cpu;$/;"	m	struct:nk_thread
current_depth	include/acpi/actypes.h	/^	uint16_t current_depth;$/;"	m	struct:acpi_memory_list
current_entry	scripts/kconfig/zconf.tab.c	/^static struct menu *current_menu, *current_entry;$/;"	v	typeref:struct:	file:
current_fence	src/legion_runtime/legion_tasks.h	/^      FenceOp *current_fence;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
current_file	scripts/kconfig/menu.c	/^struct file *current_file;$/;"	v	typeref:struct:file
current_gc_epoch	src/legion_runtime/runtime.h	/^      GarbageCollectionEpoch *current_gc_epoch;$/;"	m	class:LegionRuntime::HighLevel::Runtime
current_instances	src/legion_runtime/legion.h	/^      std::map<Memory,bool> current_instances;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
current_lock	src/legion_runtime/lowlevel_dma.cc	/^	Reservation current_lock;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest::Waiter	file:
current_menu	scripts/kconfig/mconf.c	/^static struct menu *current_menu;$/;"	v	typeref:struct:menu	file:
current_menu	scripts/kconfig/zconf.tab.c	/^static struct menu *current_menu, *current_entry;$/;"	v	typeref:struct:menu	file:
current_pointer	src/legion_runtime/legion.h	/^      int current_pointer;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
current_pos	scripts/kconfig/lex.zconf.c	/^} current_pos;$/;"	v	typeref:struct:__anon1	file:
current_proc	src/legion_runtime/legion.h	/^      Processor                           current_proc;$/;"	m	class:LegionRuntime::HighLevel::Task
current_state	src/legion_runtime/garbage_collection.h	/^      State current_state;$/;"	m	class:LegionRuntime::HighLevel::CollectableState
current_status	include/acpi/actypes.h	/^	uint32_t current_status;	\/* _STA value *\/$/;"	m	struct:acpi_device_info
current_sync_level	src/acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u8 current_sync_level;	\/* Mutex Sync (nested acquire) level *\/$/;"	m	struct:acpi_thread_state
current_table_count	src/acpi/acpica/aclocal.h	/^	u32 current_table_count;	\/* Tables currently in the array *\/$/;"	m	struct:acpi_table_list
current_ticks	include/dev/apic.h	/^    uint32_t current_ticks; \/\/ timeout currently being computed$/;"	m	struct:apic_dev
current_total_size	include/acpi/actypes.h	/^	uint32_t current_total_size;$/;"	m	struct:acpi_memory_list
current_trace	src/legion_runtime/legion_tasks.h	/^      LegionTrace *current_trace;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
current_versions	src/legion_runtime/region_tree.h	/^                     PHYSICAL_VERSION_ALLOC>::map current_versions;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
currentline	include/lua/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentline	src/lua_src/ldebug.c	/^static int currentline (CallInfo *ci) {$/;"	f	file:
currentpc	src/lua_src/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
currentwhite	include/lua/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
cv	src/test/benchmark.c	/^static struct cv {$/;"	s	file:
cvar	src/test/benchmark.c	/^	COND_T * cvar;$/;"	m	struct:container	file:
cview	scripts/kconfig/qconf.h	/^	ConfigMainWindow* cview;$/;"	m	class:ConfigList
cx	include/nautilus/realmode.h	/^    uint16_t cx;$/;"	m	struct:nk_real_mode_int_args
cx16	include/nautilus/cpuid.h	/^            uint8_t cx16     : 1; \/\/ CMPXCHG16B instruction available$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
cx8	include/nautilus/cpuid.h	/^            uint8_t cx8      : 1; \/\/ cmpxchg8b instruction$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
cycles_per_tick	include/dev/apic.h	/^    uint64_t cycles_per_tick;$/;"	m	struct:apic_dev
cycles_per_us	include/dev/apic.h	/^    uint64_t cycles_per_us;$/;"	m	struct:apic_dev
d	include/nautilus/cpuid.h	/^    uint32_t d;$/;"	m	struct:cpuid_ret
d	src/nautilus/libccompat.c	/^    double d;$/;"	m	union:ieee754dbl	file:
d_	include/lua/lobject.h	306;"	d
d_	include/lua/lobject.h	317;"	d
darrow_attr	scripts/kconfig/lxdialog/dialog.h	120;"	d
data	include/acpi/acrestyp.h	/^	uint8_t data[ACPI_UUID_LENGTH];$/;"	m	struct:acpi_uuid
data	include/acpi/acrestyp.h	/^	uint8_t data[ACPI_UUID_LENGTH];$/;"	m	struct:acpi_vendor_uuid
data	include/acpi/acrestyp.h	/^	union acpi_resource_data data;$/;"	m	struct:acpi_resource	typeref:union:acpi_resource::acpi_resource_data
data	include/acpi/actbl1.h	/^	struct acpi_generic_address data;	\/* Address of EC data register *\/$/;"	m	struct:acpi_table_ecdt	typeref:struct:acpi_table_ecdt::acpi_generic_address
data	include/acpi/actbl1.h	/^	uint8_t data[48];$/;"	m	struct:acpi_erst_info
data	include/dev/pci.h	/^            uint32_t data[32];$/;"	m	struct:pci_cfg_space::__anon66::__anon69
data	include/dev/pci.h	/^            uint32_t data[48];$/;"	m	struct:pci_cfg_space::__anon66::__anon67
data	include/dev/pci.h	/^            uint32_t data[48];$/;"	m	struct:pci_cfg_space::__anon66::__anon68
data	include/dev/virtio_pci.h	/^  uint8_t data[0];$/;"	m	struct:virtio_pci_vring
data	include/lua/lzio.h	/^  void* data;			\/* additional data *\/$/;"	m	struct:Zio
data	include/nautilus/smp.h	/^    void * data;$/;"	m	struct:nk_xcall
data	scripts/kconfig/expr.h	/^	void *data;$/;"	m	struct:menu
data	src/acpi/acpica/aclocal.h	/^	u8 *data;		\/* AML body or bytelist data *\/$/;"	m	struct:acpi_parse_obj_named
data	src/dev/ramdisk.c	/^    void     *data;$/;"	m	struct:ramdisk_state	file:
data	src/legion_runtime/lowlevel_impl.h	/^      CoherentData *data;$/;"	m	class:LegionRuntime::LowLevel::ExclusiveAccess
data	src/legion_runtime/lowlevel_impl.h	/^      CoherentData *data;$/;"	m	class:LegionRuntime::LowLevel::SharedAccess
data	src/legion_runtime/lowlevel_impl.h	/^      StaticData *data;$/;"	m	class:LegionRuntime::LowLevel::StaticAccess
data	src/legion_runtime/shared_lowlevel.cc	/^        void *data;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
data	src/lua_src/ldump.c	/^ void* data;$/;"	m	struct:__anon140	file:
dataColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	enum:colIdx
data_length	include/acpi/actbl1.h	/^	uint32_t data_length;	\/* Length of generic error data *\/$/;"	m	struct:acpi_bert_region
data_length	include/acpi/actbl1.h	/^	uint32_t data_length;$/;"	m	struct:acpi_hest_generic_status
data_length	include/acpi/actbl2.h	/^	uint8_t data_length;$/;"	m	struct:acpi_asf_alert
data_length	include/acpi/actbl2.h	/^	uint8_t data_length;$/;"	m	struct:acpi_asf_remote
data_offset	include/acpi/actbl2.h	/^	uint16_t data_offset;	\/* Offset of remaining data in table *\/$/;"	m	struct:acpi_table_uefi
data_ptr	src/legion_runtime/shared_lowlevel.cc	/^    void* Reservation::data_ptr(void) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
data_register_node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *data_register_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
data_setting	include/acpi/actbl2.h	/^	uint8_t data_setting;$/;"	m	struct:acpi_ivrs_de_header
data_size	src/legion_runtime/shared_lowlevel.cc	/^        size_t data_size;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
data_size	src/legion_runtime/shared_lowlevel.cc	/^    size_t Reservation::data_size(void) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
daxpy_task	src/test/custom_mapper.cc	/^void daxpy_task(const Task *task,$/;"	f
daxpy_task	src/test/partitioning.cc	/^void daxpy_task(const Task *task,$/;"	f
daxpy_task	src/test/privileges.cc	/^void daxpy_task(const Task *task,$/;"	f
day_alarm	include/acpi/actbl.h	/^	uint8_t day_alarm;		\/* Index to day-of-month alarm in RTC CMOS RAM *\/$/;"	m	struct:acpi_table_fadt
db_debug	src/lua_src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	src/lua_src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	src/lua_src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	src/lua_src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	src/lua_src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	src/lua_src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	src/lua_src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	src/lua_src/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_sethook	src/lua_src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	src/lua_src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	src/lua_src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	src/lua_src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	src/lua_src/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	src/lua_src/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	src/lua_src/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	src/lua_src/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dbg_print_flags	scripts/kconfig/gconf.c	/^const char *dbg_print_flags(int val)$/;"	f
dbg_print_ptype	scripts/kconfig/gconf.c	/^const char *dbg_print_ptype(int val)$/;"	f
dbg_print_stype	scripts/kconfig/gconf.c	/^const char *dbg_print_stype(int val)$/;"	f
dblib	src/lua_src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dca	include/nautilus/cpuid.h	/^            uint8_t dca      : 1; \/\/ can prefetch data from memory mapped device$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
de	include/nautilus/cpuid.h	/^            uint8_t de          : 1; \/\/ debugging extensions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
de	include/nautilus/cpuid.h	/^            uint8_t de       : 1; \/\/ debugging extensions$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
deactivate	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void AndPredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void CloseOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void CopyOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void FenceOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void FuturePredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void MapOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void NotPredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void OrPredOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
deactivate	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
deactivate	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
deactivate	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
deactivate	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
deactivate	src/legion_runtime/legion_tasks.cc	/^    void PointTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
deactivate	src/legion_runtime/legion_tasks.cc	/^    void RemoteTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
deactivate	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
deactivate	src/legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
deactivate	src/legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::deactivate(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
deactivate	src/legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::Impl::deactivate(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
deactivate	src/legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::deactivate(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
deactivate	src/legion_runtime/shared_lowlevel.cc	/^    void ReservationImpl::deactivate(void)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
deactivate_context	src/legion_runtime/runtime.cc	/^    void ProcessorManager::deactivate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
deactivate_context	src/legion_runtime/runtime.cc	/^    void Runtime::deactivate_context(SingleTask *context)$/;"	f	class:LegionRuntime::HighLevel::Runtime
deactivate_multi	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::deactivate_multi(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
deactivate_operation	src/legion_runtime/legion_ops.cc	/^    void Operation::deactivate_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
deactivate_outstanding_task	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::deactivate_outstanding_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
deactivate_predicate	src/legion_runtime/legion_ops.cc	/^    void Predicate::Impl::deactivate_predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
deactivate_single	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::deactivate_single(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
deactivate_speculative	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::deactivate_speculative(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
deactivate_task	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::deactivate_task(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
deactivate_wrapper	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::deactivate_wrapper(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
deadline	include/nautilus/scheduler.h	/^    uint64_t deadline; \/\/ deadline for RT computation$/;"	m	struct:nk_sched_sporadic_constraints
deadline	src/nautilus/scheduler.c	/^    uint64_t deadline;     \/\/ current deadline \/ time of next arrival if pending$/;"	m	struct:nk_sched_thread_state	file:
deadvalue	include/lua/lobject.h	168;"	d
deallocate	src/legion_runtime/legion_allocation.h	/^      inline void deallocate(pointer p, size_type size) {$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
deassert_mask	include/acpi/actbl2.h	/^	uint8_t deassert_mask;$/;"	m	struct:acpi_asf_alert
debug	src/legion_runtime/utilities.h	/^      inline void debug(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
debug	xeon_phi/linux_usr/phi_console.c	/^    WINDOW * debug;$/;"	m	struct:__anon79	file:
debug_layer	include/acpi/actypes.h	/^	uint32_t debug_layer;$/;"	m	struct:acpi_system_info
debug_level	include/acpi/actypes.h	/^	uint32_t debug_level;$/;"	m	struct:acpi_system_info
debug_mutex	src/legion_runtime/shared_lowlevel.cc	/^NK_LOCK_T debug_mutex;$/;"	v
debug_port	include/acpi/actbl2.h	/^	struct acpi_generic_address debug_port;$/;"	m	struct:acpi_table_dbgp	typeref:struct:acpi_table_dbgp::acpi_generic_address
decimal_point	include/lua/llocale.h	/^    char *decimal_point;      \/\/"."          LC_NUMERIC$/;"	m	struct:lconv
decimal_point	src/nautilus/libccompat.c	/^    char *decimal_point;      \/\/"."          LC_NUMERIC$/;"	m	struct:lconv	file:
decode_path	src/nautilus/fs.c	/^static char *decode_path(char *path, char *fs_name)$/;"	f	file:
decompose_index_space	src/legion_runtime/default_mapper.cc	/^    \/*static*\/ void DefaultMapper::decompose_index_space(const Domain &domain, $/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
decpoint	include/lua/llex.h	/^  char decpoint;  \/* locale decimal point *\/$/;"	m	struct:LexState
decrement	src/legion_runtime/lowlevel_impl.h	/^      void decrement(void)$/;"	f	class:LegionRuntime::LowLevel::Atomic
decrement_active_contexts	src/legion_runtime/runtime.cc	/^    void ProcessorManager::decrement_active_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
decrement_outstanding	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::decrement_outstanding(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
decrement_pending	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::decrement_pending(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
decrement_utility	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::decrement_utility(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
default_init	src/arch/hrt/init.c	/^default_init (unsigned long mbd,$/;"	f
default_vc	src/nautilus/vc.c	/^static struct nk_virtual_console *default_vc = NULL;$/;"	v	typeref:struct:nk_virtual_console	file:
defaultline	scripts/basic/docproc.c	/^DFL *defaultline;$/;"	v
defconfig_file	scripts/kconfig/conf.c	/^char *defconfig_file;$/;"	v
defer_collect_user	src/legion_runtime/region_tree.cc	/^    void LogicalView::defer_collect_user(Event term_event) $/;"	f	class:LegionRuntime::HighLevel::LogicalView
defer_collect_user	src/legion_runtime/runtime.cc	/^    void Runtime::defer_collect_user(LogicalView *view, Event term_event)$/;"	f	class:LegionRuntime::HighLevel::Runtime
defer_mapper_message	src/legion_runtime/runtime.cc	/^    void ProcessorManager::defer_mapper_message(Processor target, $/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
defer_mapping	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
defer_mapping	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
defer_mapping	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
defer_mapping	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
defer_mapping	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::defer_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
defer_trigger	src/legion_runtime/shared_lowlevel.cc	/^    void EventImpl::defer_trigger(Event wait_for)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
deferred_complete	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
deferred_complete	src/legion_runtime/legion_ops.cc	/^    void CloseOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
deferred_complete	src/legion_runtime/legion_ops.cc	/^    void CopyOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
deferred_complete	src/legion_runtime/legion_ops.cc	/^    void FenceOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
deferred_complete	src/legion_runtime/legion_ops.cc	/^    void Operation::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
deferred_complete	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
deferred_complete	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::deferred_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
deferred_complete	src/legion_runtime/legion_tasks.h	/^      Event deferred_complete;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
deferred_events	src/legion_runtime/region_tree.h	/^      std::map<Event,FieldMask> &deferred_events;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
deferred_free	src/legion_runtime/activemsg.cc	/^void deferred_free(void *ptr)$/;"	f
deferred_free_mutex	src/legion_runtime/activemsg.cc	/^gasnet_hsl_t deferred_free_mutex;$/;"	v
deferred_free_pos	src/legion_runtime/activemsg.cc	/^int deferred_free_pos;$/;"	v
deferred_frees	src/legion_runtime/activemsg.cc	/^void *deferred_frees[DEFERRED_FREE_COUNT];$/;"	v
deferred_map	src/legion_runtime/legion_tasks.h	/^      Event deferred_map;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
define_config	scripts/basic/fixdep.c	/^void define_config(const char * name, int len)$/;"	f
deleted_field_spaces	src/legion_runtime/legion_tasks.h	/^      std::set<FieldSpace>                      deleted_field_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deleted_fields	src/legion_runtime/legion_tasks.h	/^      std::set<std::pair<FieldSpace,FieldID> >  deleted_fields;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deleted_index_spaces	src/legion_runtime/legion_tasks.h	/^      std::set<IndexSpace>                      deleted_index_spaces;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deleted_regions	src/legion_runtime/legion_tasks.h	/^      std::set<LogicalRegion>                   deleted_regions;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
deletion_op_lock	src/legion_runtime/runtime.h	/^      Reservation deletion_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
delta	src/legion_runtime/lowlevel.cc	/^	int delta;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
delta	src/legion_runtime/lowlevel.cc	/^      int delta;$/;"	m	class:LegionRuntime::LowLevel::DeferredBarrierArrival	file:
denominator	src/legion_runtime/legion_tasks.h	/^      long long denominator;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
denominator	src/legion_runtime/legion_utilities.h	/^      T denominator;$/;"	m	class:LegionRuntime::HighLevel::Fraction
denseDotProd	src/test/hpcg/comp-dotprod.h	/^denseDotProd(const Rect<1> &subGridBounds,$/;"	f	namespace:__anon115
denseSPMV	src/test/hpcg/comp-spmv.h	/^denseSPMV($/;"	f	namespace:__anon111
denseWAXPBY	src/test/hpcg/comp-waxpby.h	/^denseWAXPBY(const Rect<1> &subgridBounds,$/;"	f	namespace:__anon116
dense_calc_new_currents	src/test/circuit_cpu.cc	/^bool CalcNewCurrentsTask::dense_calc_new_currents(const CircuitPiece &piece,$/;"	f	class:CalcNewCurrentsTask
dentry_add	src/fs/ext2/ext2.c	/^static int dentry_add(struct ext2_state *fs, $/;"	f	file:
dentry_del_by_inode	src/fs/ext2/ext2.c	772;"	d	file:
dentry_del_by_name	src/fs/ext2/ext2.c	771;"	d	file:
dentry_get	src/fs/ext2/ext2.c	769;"	d	file:
dentry_get_put_del	src/fs/ext2/ext2.c	/^static int dentry_get_put_del(struct ext2_state      *fs,$/;"	f	file:
dentry_op	src/fs/ext2/ext2_access.c	/^enum dentry_op {GET,PUT,DEL_BY_NAME,DEL_BY_INODE};$/;"	g	file:
dentry_put	src/fs/ext2/ext2.c	770;"	d	file:
dentry_remove	src/fs/ext2/ext2.c	/^static int dentry_remove(struct ext2_state *fs, int dir_inum, int target_inum) $/;"	f	file:
dep	scripts/kconfig/expr.h	/^	struct expr *dep, *dep2;$/;"	m	struct:symbol	typeref:struct:symbol::expr
dep	scripts/kconfig/expr.h	/^	struct expr *dep;$/;"	m	struct:menu	typeref:struct:menu::expr
dep2	scripts/kconfig/expr.h	/^	struct expr *dep, *dep2;$/;"	m	struct:symbol	typeref:struct:symbol::
dep_type	src/legion_runtime/legion_logging.h	/^        DependenceType dep_type;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
dependence_lock	src/legion_runtime/runtime.h	/^      Reservation dependence_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
dependence_preconditions	src/legion_runtime/runtime.h	/^      std::vector<Event> dependence_preconditions;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
dependences	src/legion_runtime/legion_ops.h	/^      std::vector<DependenceRecord> dependences;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
dependences	src/legion_runtime/legion_trace.h	/^      std::vector<std::vector<DependenceRecord> > dependences;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
dependent_children_mapped	src/legion_runtime/legion_ops.h	/^      std::set<Event> dependent_children_mapped;$/;"	m	class:LegionRuntime::HighLevel::Operation
depends	scripts/kconfig/zconf.y	/^depends: T_DEPENDS T_ON expr T_EOL$/;"	l
depends_list	scripts/kconfig/zconf.y	/^depends_list:$/;"	l
depfile	scripts/basic/fixdep.c	/^char *depfile;$/;"	v
depth	include/nautilus/multiboot2.h	/^  multiboot_uint32_t depth;$/;"	m	struct:multiboot_header_tag_framebuffer
depth	include/nautilus/multiboot2.h	/^  multiboot_uint32_t depth;$/;"	m	struct:multiboot_header_tag_module_align
depth	src/legion_runtime/legion.h	/^      unsigned                            depth;  $/;"	m	class:LegionRuntime::HighLevel::Task
depth	src/legion_runtime/legion_spy.h	/^      unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
depth	src/legion_runtime/region_tree.h	/^      const unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
depth	src/legion_runtime/region_tree.h	/^      const unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
depth	src/legion_runtime/region_tree.h	/^      const unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
depth	src/legion_runtime/region_tree.h	/^      unsigned depth;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
deque	src/legion_runtime/legion_allocation.h	/^      typedef std::deque<T, LegionAllocator<T, A> > deque;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
dequeue_request	src/legion_runtime/lowlevel_dma.cc	/^    DmaRequest *DmaRequestQueue::dequeue_request(bool sleep \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
dequeue_scancodes	src/dev/kbd.c	/^static void dequeue_scancodes()$/;"	f	file:
dequeue_thread_from_waitq	src/nautilus/thread.c	/^dequeue_thread_from_waitq (nk_thread_t * waiter, nk_thread_queue_t * waitq)$/;"	f	file:
derez	src/legion_runtime/legion_utilities.h	/^      Deserializer &derez;$/;"	m	class:LegionRuntime::HighLevel::DerezCheck
descriptor_length	include/acpi/acrestyp.h	/^	uint8_t descriptor_length;$/;"	m	struct:acpi_resource_irq
descriptor_length	include/acpi/acrestyp.h	/^	uint8_t descriptor_length;$/;"	m	struct:acpi_resource_start_dependent
descriptor_type	src/acpi/acpica/aclocal.h	/^	u8 descriptor_type;	\/* Differentiate object descriptor types *\/$/;"	m	struct:acpi_namespace_node
deserialize	src/legion_runtime/arrays.h	/^      static Mapping<IDIM, ODIM> *deserialize(const int *data)$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::BitMask
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize(T &element)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize(void *dst, size_t bytes)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize<FieldMask>(FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void Deserializer::deserialize<bool>(bool &element)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
deserialize	src/legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::deserialize(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
deserialize	src/legion_runtime/lowlevel.h	/^      const IDType *deserialize(const IDType *data)$/;"	f	class:LegionRuntime::LowLevel::Domain
deserialize	src/legion_runtime/lowlevel.h	/^      void deserialize(const int *data)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
deserialize_mapping	src/legion_runtime/arrays.h	/^      static Mapping<IDIM, ODIM> *deserialize_mapping(const int *data)$/;"	f	class:LegionRuntime::Arrays::Mapping
dest	src/legion_runtime/lowlevel.cc	/^	gasnet_node_t dest;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
dest_object	src/acpi/acpica/aclocal.h	/^	union acpi_operand_object *dest_object;$/;"	m	struct:acpi_pkg_state	typeref:union:acpi_pkg_state::acpi_operand_object
destroy	src/legion_runtime/legion_allocation.h	/^      inline void destroy(pointer p) { p->~T(); }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
destroy	src/legion_runtime/lowlevel.cc	/^    void IndexSpace::destroy(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
destroy	src/legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::destroy(void) $/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
destroy	src/legion_runtime/lowlevel.cc	/^    void RegionInstance::destroy(Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
destroy	src/legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::destroy(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
destroy	src/legion_runtime/shared_lowlevel.cc	/^    void IndexSpaceAllocator::destroy(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
destroy	src/legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::destroy(Event wait_on \/*= Event::NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
destroy	src/legion_runtime/utilities.h	/^    void destroy(void) { $/;"	f	class:LegionRuntime::ImmovableLock
destroy_barrier	src/legion_runtime/lowlevel.cc	/^    void Barrier::destroy_barrier(void)$/;"	f	class:LegionRuntime::LowLevel::Barrier
destroy_barrier	src/legion_runtime/shared_lowlevel.cc	/^    void Barrier::destroy_barrier(void)$/;"	f	class:LegionRuntime::LowLevel::Barrier
destroy_field_space	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_field_space(Context ctx, FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_field_space	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::destroy_field_space(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_field_space	src/legion_runtime/runtime.cc	/^    void Runtime::destroy_field_space(Context ctx, FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_index_partition	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_index_partition	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::destroy_index_partition(IndexPartition handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_index_partition	src/legion_runtime/runtime.cc	/^    void Runtime::destroy_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_index_space	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_index_space(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_index_space	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::destroy_index_space(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_index_space	src/legion_runtime/runtime.cc	/^    void Runtime::destroy_index_space(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_instance	src/legion_runtime/lowlevel.cc	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
destroy_instance	src/legion_runtime/lowlevel.cc	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
destroy_instance	src/legion_runtime/lowlevel.cc	/^    void GASNetMemory::destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
destroy_instance	src/legion_runtime/lowlevel_gpu.h	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
destroy_instance	src/legion_runtime/lowlevel_gpu.h	/^      virtual void destroy_instance(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
destroy_instance	src/legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::Impl::destroy_instance(RegionInstance inst)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
destroy_instance_local	src/legion_runtime/lowlevel.cc	/^    void Memory::Impl::destroy_instance_local(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
destroy_instance_remote	src/legion_runtime/lowlevel.cc	/^    void Memory::Impl::destroy_instance_remote(RegionInstance i, $/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
destroy_lock	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_lock(Context ctx, Lock l)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_lock	src/legion_runtime/runtime.cc	/^    void Runtime::destroy_lock(Context ctx, Lock l)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_logical_partition	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_logical_partition	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::destroy_logical_partition(LogicalPartition handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_logical_partition	src/legion_runtime/runtime.cc	/^    void Runtime::destroy_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_logical_region	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_logical_region	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::destroy_logical_region(LogicalRegion handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
destroy_logical_region	src/legion_runtime/runtime.cc	/^    void Runtime::destroy_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_node	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
destroy_node	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
destroy_node	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
destroy_node	src/legion_runtime/region_tree.cc	/^    void PartitionNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
destroy_node	src/legion_runtime/region_tree.cc	/^    void RegionNode::destroy_node(AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
destroy_phase_barrier	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::destroy_phase_barrier(Context ctx, PhaseBarrier pb)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
destroy_phase_barrier	src/legion_runtime/runtime.cc	/^    void Runtime::destroy_phase_barrier(Context ctx, PhaseBarrier pb)$/;"	f	class:LegionRuntime::HighLevel::Runtime
destroy_reservation	src/legion_runtime/lowlevel.cc	/^    void Reservation::destroy_reservation()$/;"	f	class:LegionRuntime::LowLevel::Reservation
destroy_reservation	src/legion_runtime/shared_lowlevel.cc	/^    void Reservation::destroy_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation
destroy_user_barrier	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::destroy_user_barrier(Barrier b)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
destroy_user_lock	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::destroy_user_lock(Reservation r)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
destroyed	src/legion_runtime/region_tree.h	/^        bool destroyed;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
destruction_event	src/legion_runtime/garbage_collection.h	/^      UserEvent destruction_event;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
destruction_set	src/legion_runtime/region_tree.h	/^      NodeMask destruction_set;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
destruction_set	src/legion_runtime/region_tree.h	/^      NodeMask destruction_set;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
destruction_set	src/legion_runtime/region_tree.h	/^      NodeMask destruction_set;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
destructor	include/nautilus/thread.h	/^    void (*destructor)(void*);$/;"	m	struct:nk_tls
destructor_func	include/nautilus/cxxglue.h	/^    void (*destructor_func)(void*);$/;"	m	struct:atexit_func_entry_t
detect_cpu	src/nautilus/cpuid.c	/^detect_cpu (void)$/;"	f
detect_mem_map	src/nautilus/mm/boot_mm.c	/^detect_mem_map (unsigned long mbd)$/;"	f	file:
dev	include/acpi/actbl2.h	/^	uint8_t dev;$/;"	m	struct:acpi_dmar_pci_path
dev	include/nautilus/blkdev.h	/^    struct nk_dev dev;$/;"	m	struct:nk_block_dev	typeref:struct:nk_block_dev::nk_dev
dev	include/nautilus/chardev.h	/^    struct nk_dev dev;$/;"	m	struct:nk_char_dev	typeref:struct:nk_char_dev::nk_dev
dev	include/nautilus/netdev.h	/^    struct nk_dev dev;$/;"	m	struct:nk_net_dev	typeref:struct:nk_net_dev::nk_dev
dev	src/fs/ext2/ext2.c	/^    struct nk_block_dev *dev;$/;"	m	struct:ext2_state	typeref:struct:ext2_state::nk_block_dev	file:
dev_addr	include/nautilus/sfi.h	/^    uint16_t dev_addr;$/;"	m	struct:sfi_plat_dev_entry
dev_cfg	include/dev/pci.h	/^        } __packed dev_cfg;$/;"	m	union:pci_cfg_space::__anon66	typeref:struct:pci_cfg_space::__anon66::__anon67
dev_int	include/nautilus/blkdev.h	/^    struct nk_dev_int dev_int;$/;"	m	struct:nk_block_dev_int	typeref:struct:nk_block_dev_int::nk_dev_int
dev_int	include/nautilus/chardev.h	/^    struct nk_dev_int dev_int;$/;"	m	struct:nk_char_dev_int	typeref:struct:nk_char_dev_int::nk_dev_int
dev_int	include/nautilus/netdev.h	/^    struct nk_dev_int dev_int;$/;"	m	struct:nk_net_dev_int	typeref:struct:nk_net_dev_int::nk_dev_int
dev_irq	include/nautilus/sfi.h	/^    uint8_t  dev_irq;$/;"	m	struct:sfi_plat_dev_entry
dev_list	include/dev/pci.h	/^    struct list_head dev_list;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::list_head
dev_list	src/dev/virtio_pci.c	/^static struct list_head dev_list;$/;"	v	typeref:struct:list_head	file:
dev_list	src/nautilus/dev.c	/^static struct list_head dev_list;$/;"	v	typeref:struct:list_head	file:
dev_list_node	include/nautilus/dev.h	/^    struct list_head dev_list_node;$/;"	m	struct:nk_dev	typeref:struct:nk_dev::list_head
dev_max_freq	include/nautilus/sfi.h	/^    uint32_t dev_max_freq; \/\/ in Hz$/;"	m	struct:sfi_plat_dev_entry
dev_name	include/nautilus/sfi.h	/^    char     dev_name[16];$/;"	m	struct:sfi_plat_dev_entry
dev_node	include/dev/pci.h	/^    struct list_head dev_node;$/;"	m	struct:pci_dev	typeref:struct:pci_dev::list_head
device	include/acpi/actbl1.h	/^	uint16_t device;$/;"	m	struct:acpi_hest_aer_common
device	include/acpi/actypes.h	/^	uint16_t device;$/;"	m	struct:acpi_pci_id
device	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_notify_object device;   \/* List of _PRW devices for implicit notify *\/$/;"	m	union:acpi_gpe_dispatch_info	typeref:struct:acpi_gpe_dispatch_info::acpi_gpe_notify_object
device_control	include/acpi/actbl1.h	/^	uint16_t device_control;$/;"	m	struct:acpi_hest_aer_common
device_device_copies	src/legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> device_device_copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
device_host_copies	src/legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> device_host_copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
device_id	include/acpi/actbl2.h	/^	uint16_t device_id;		\/* ID of IOMMU *\/$/;"	m	struct:acpi_ivrs_header
device_id	include/dev/pci.h	/^    uint16_t device_id;$/;"	m	struct:pci_cfg_space
device_to_device_stream	src/legion_runtime/lowlevel_gpu.cc	/^      CUstream device_to_device_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
device_to_host_stream	src/legion_runtime/lowlevel_gpu.cc	/^      CUstream device_to_host_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
devices	include/acpi/actbl2.h	/^	uint8_t devices;$/;"	m	struct:acpi_asf_address
devices	src/dev/ata.c	/^    struct ata_blkdev_state devices[4];$/;"	m	struct:ata_controller_state	typeref:struct:ata_controller_state::ata_blkdev_state	file:
df	src/dev/ata.c	/^	uint8_t df:1;   \/\/ drive fault$/;"	m	struct:ata_status_reg::__anon135	file:
df_handler	src/nautilus/idt.c	/^df_handler (excp_entry_t * excp,$/;"	f	file:
dgrp_t	src/fs/ext2/ext2fs.h	/^typedef __u32		dgrp_t;$/;"	t
dhcp	include/acpi/actbl2.h	/^	uint8_t dhcp[16];$/;"	m	struct:acpi_ibft_nic
dhcpack	include/nautilus/multiboot2.h	/^  multiboot_uint8_t dhcpack[0];$/;"	m	struct:multiboot_tag_network
di	include/nautilus/realmode.h	/^    uint16_t di;$/;"	m	struct:nk_real_mode_int_args
diag	src/test/hpcg/sparsemat.h	/^    Vector diag;$/;"	m	struct:lgncg::SparseMatrix
dialog_attr	scripts/kconfig/lxdialog/dialog.h	94;"	d
dialog_checklist	scripts/kconfig/lxdialog/checklist.c	/^int dialog_checklist(const char *title, const char *prompt, int height,$/;"	f
dialog_clear	scripts/kconfig/lxdialog/util.c	/^void dialog_clear(void)$/;"	f
dialog_input_result	scripts/kconfig/lxdialog/inputbox.c	/^char dialog_input_result[MAX_LEN + 1];$/;"	v
dialog_inputbox	scripts/kconfig/lxdialog/inputbox.c	/^int dialog_inputbox(const char *title, const char *prompt, int height, int width,$/;"	f
dialog_menu	scripts/kconfig/lxdialog/menubox.c	/^int dialog_menu(const char *title, const char *prompt, int height, int width,$/;"	f
dialog_msgbox	scripts/kconfig/lxdialog/msgbox.c	/^int dialog_msgbox(const char *title, const char *prompt, int height, int width,$/;"	f
dialog_textbox	scripts/kconfig/lxdialog/textbox.c	/^int dialog_textbox(const char *title, const char *file, int height, int width)$/;"	f
dialog_yesno	scripts/kconfig/lxdialog/yesno.c	/^int dialog_yesno(const char *title, const char *prompt, int height, int width)$/;"	f
did	src/legion_runtime/garbage_collection.h	/^      const DistributedID did;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
did	src/legion_runtime/garbage_collection.h	/^      const DistributedID did;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
did	src/legion_runtime/runtime.h	/^        DistributedID did;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredRecycleArgs
diff	src/legion_runtime/utilities.h	/^    bool diff;$/;"	m	class:LegionRuntime::TimeStamp
diff_allocations	src/legion_runtime/runtime.h	/^        int       diff_allocations;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
diff_bytes	src/legion_runtime/runtime.h	/^        off_t           diff_bytes;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
difference_type	src/legion_runtime/legion_allocation.h	/^      typedef ptrdiff_t difference_type;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
difftime	src/nautilus/libccompat.c	/^double difftime(time_t time1, time_t time2)$/;"	f
digs	src/nautilus/doprnt.c	/^static char digs[] = "0123456789abcdef";$/;"	v	file:
dim	src/legion_runtime/lowlevel.h	/^	int dim;$/;"	m	class:LegionRuntime::LowLevel::DomainLinearization
dim	src/legion_runtime/lowlevel.h	/^      int dim;$/;"	m	class:LegionRuntime::LowLevel::Domain
dim	src/legion_runtime/lowlevel.h	/^      int dim;$/;"	m	class:LegionRuntime::LowLevel::DomainPoint
dim_size	src/legion_runtime/arrays.h	/^      int dim_size(int dim) const$/;"	f	class:LegionRuntime::Arrays::Rect
dir	src/legion_runtime/rectangle_set.h	/^      Direction dir;$/;"	m	class:LegionRuntime::HighLevel::Segment
direct_color_attributes	include/dev/vesa.h	/^    uint8_t direct_color_attributes;$/;"	m	struct:vesa_mode_info
dirty	src/legion_runtime/legion_utilities.h	/^      bool dirty;$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
dirty_mask	src/legion_runtime/region_tree.h	/^      FieldMask dirty_mask;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
dirty_mask	src/legion_runtime/region_tree.h	/^      FieldMask dirty_mask;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
dirty_mask	src/legion_runtime/region_tree.h	/^      FieldMask dirty_mask;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
disable	src/legion_runtime/lowlevel.cc	/^    void ElementMask::disable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
disable	src/legion_runtime/shared_lowlevel.cc	/^    void ElementMask::disable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
disable_8259pic	src/nautilus/irq.c	/^disable_8259pic (void)$/;"	f
disable_acpi	include/nautilus/acpi-x86_64.h	/^static inline void disable_acpi(void)$/;"	f
disable_all_events	src/nautilus/pmc.c	/^disable_all_events (void)$/;"	f
disable_blink	src/dev/vga.c	/^static void disable_blink()$/;"	f	file:
disable_idle_task	src/legion_runtime/lowlevel.cc	/^      virtual void disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
disable_idle_task	src/legion_runtime/lowlevel.cc	/^    void Processor::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
disable_idle_task	src/legion_runtime/lowlevel.cc	/^    void UtilityProcessor::disable_idle_task(Processor::Impl *proc)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
disable_idle_task	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
disable_idle_task	src/legion_runtime/lowlevel_impl.h	/^      virtual void disable_idle_task(void) { assert(0); }$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
disable_idle_task	src/legion_runtime/shared_lowlevel.cc	/^    void Processor::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
disable_idle_task	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::disable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
disable_irqs	include/nautilus/irq.h	55;"	d
disable_perf_event	src/nautilus/pmc.c	/^disable_perf_event (perf_event_t * event)$/;"	f
disable_profiling	src/legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::disable_profiling(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
disable_profiling	src/legion_runtime/legion_profiling.h	/^      static inline void disable_profiling(void)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
disabledColorGroup	scripts/kconfig/qconf.h	/^	QColorGroup disabledColorGroup;$/;"	m	class:ConfigList
discharge2anyreg	src/lua_src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	src/lua_src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	src/lua_src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
discover_ata_drives	src/dev/ata.c	/^static int discover_ata_drives()$/;"	f	file:
discover_device	src/dev/ata.c	/^static void discover_device(int channel, int id)$/;"	f	file:
discover_ramdisks	src/dev/ramdisk.c	/^static int discover_ramdisks()$/;"	f	file:
disjoint	src/legion_runtime/legion_logging.h	/^        bool disjoint;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
disjoint	src/legion_runtime/region_tree.h	/^      const bool disjoint;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
disjoint	src/legion_runtime/region_tree.h	/^      const bool disjoint;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
disjoint_subsets	src/legion_runtime/region_tree.h	/^      std::set<std::pair<Color,Color> > disjoint_subsets;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
disjoint_subspaces	src/legion_runtime/region_tree.h	/^      std::set<std::pair<Color,Color> > disjoint_subspaces;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
dispatch	src/acpi/acpica/aclocal.h	/^	union acpi_gpe_dispatch_info dispatch;	\/* Either Method or Handler *\/$/;"	m	struct:acpi_gpe_event_info	typeref:union:acpi_gpe_event_info::acpi_gpe_dispatch_info
dispatch	src/test/circuit_cpu.cc	/^bool CheckTask::dispatch(Context ctx, HighLevelRuntime *runtime, bool success)$/;"	f	class:CheckTask
dispatch_task	src/test/circuit.h	/^  void dispatch_task(T &launcher, Context ctx, HighLevelRuntime *runtime,$/;"	f	namespace:TaskHelper
display_list	scripts/kconfig/gconf.c	/^static void display_list(void)$/;"	f	file:
display_tree	scripts/kconfig/gconf.c	/^static void display_tree(struct menu *menu)$/;"	f	file:
display_tree_part	scripts/kconfig/gconf.c	/^static void display_tree_part(void)$/;"	f	file:
dist_collectables	src/legion_runtime/runtime.h	/^                     RUNTIME_DIST_COLLECT_ALLOC>::map dist_collectables;$/;"	m	class:LegionRuntime::HighLevel::Runtime
distance_high	src/legion_runtime/rectangle_set.h	/^    inline T Segment<T>::distance_high(const Segment<T> &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Segment
distance_low	src/legion_runtime/rectangle_set.h	/^    inline T Segment<T>::distance_low(const Segment<T> &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Segment
distribute_task	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
distribute_task	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
distribute_task	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
distribute_task	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
distribute_task	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::distribute_task(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
distribute_tasks	src/legion_runtime/legion_ops.cc	/^    void MustEpochDistributor::distribute_tasks(Runtime *runtime,$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
distributed_collectable_lock	src/legion_runtime/runtime.h	/^      Reservation distributed_collectable_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
distributed_id_lock	src/legion_runtime/runtime.h	/^      Reservation distributed_id_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
distributed_lock	src/legion_runtime/region_tree.h	/^      Reservation distributed_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
divide	src/legion_runtime/legion_utilities.h	/^    void Fraction<T>::divide(T factor)$/;"	f	class:LegionRuntime::HighLevel::Fraction
divides	src/legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::divides(const Segment<T> &other) const$/;"	f	class:LegionRuntime::HighLevel::Segment
dma	include/acpi/acrestyp.h	/^	struct acpi_resource_dma dma;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_dma
dma_cond	src/legion_runtime/shared_lowlevel.cc	/^      nk_condvar_t       dma_cond;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_lock	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T      dma_lock;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_queue	src/legion_runtime/lowlevel_dma.cc	/^    static DmaRequestQueue *dma_queue = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
dma_queue	src/legion_runtime/shared_lowlevel.cc	/^      static DMAQueue *dma_queue;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
dma_queue	src/legion_runtime/shared_lowlevel.cc	/^    DMAQueue *Runtime::dma_queue = NULL;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
dma_shutdown	src/legion_runtime/shared_lowlevel.cc	/^      bool dma_shutdown;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_shutdown_requested	src/legion_runtime/lowlevel_gpu.cc	/^    static volatile bool dma_shutdown_requested = false;$/;"	m	namespace:LegionRuntime::LowLevel	file:
dma_threads	src/legion_runtime/lowlevel_gpu.cc	/^    static std::vector<pthread_t> dma_threads;$/;"	m	namespace:LegionRuntime::LowLevel	file:
dma_threads	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<nk_thread_id_t> dma_threads;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
dma_worker_thread_loop	src/legion_runtime/lowlevel_dma.cc	/^    static void *dma_worker_thread_loop(void *arg)$/;"	f	namespace:LegionRuntime::LowLevel
doMG	src/test/hpcg/hpcg-problem.h	/^    bool doMG;$/;"	m	struct:Problem
doPreconditioning	src/test/hpcg/hpcg-main.cc	/^    bool doPreconditioning;$/;"	m	struct:__anon117::DriverParams	file:
do_config_file	scripts/basic/fixdep.c	/^void do_config_file(char *filename)$/;"	f
do_div	include/nautilus/math.h	135;"	d
do_domain	src/legion_runtime/shared_lowlevel.cc	/^        void do_domain(const Domain domain)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
do_domain	src/legion_runtime/shared_lowlevel.cc	/^        void do_domain(const Domain domain)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply
do_domain	src/legion_runtime/shared_lowlevel.cc	/^        void do_domain(const Domain domain)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold
do_fputchar	src/nautilus/fprintk.c	/^do_fputchar (nk_fs_fd_t fd, uint8_t c)$/;"	f	file:
do_fputs	src/nautilus/fprintk.c	/^do_fputs (nk_fs_fd_t fd, char * s)$/;"	f	file:
do_hash	src/nautilus/hashtable.c	/^do_hash (struct nk_hashtable * htable, addr_t key) $/;"	f	file:
do_print_item	scripts/kconfig/lxdialog/menubox.c	/^static void do_print_item(WINDOW * win, const char *item, int choice,$/;"	f	file:
do_putchar	src/nautilus/printk.c	48;"	d	file:
do_puts	src/nautilus/printk.c	49;"	d	file:
do_remote_apply_red_list	src/legion_runtime/lowlevel.cc	/^    void do_remote_apply_red_list(int node, Memory mem, off_t offset,$/;"	f	namespace:LegionRuntime::LowLevel
do_remote_fence	src/legion_runtime/lowlevel.cc	/^    void do_remote_fence(Memory mem, unsigned sequence_id, unsigned num_writes, Event event)$/;"	f	namespace:LegionRuntime::LowLevel
do_remote_reduce	src/legion_runtime/lowlevel.cc	/^    unsigned do_remote_reduce(Memory mem, off_t offset,$/;"	f	namespace:LegionRuntime::LowLevel
do_remote_write	src/legion_runtime/lowlevel.cc	/^    unsigned do_remote_write(Memory mem, off_t offset,$/;"	f	namespace:LegionRuntime::LowLevel
do_resize	scripts/kconfig/mconf.c	/^static int do_resize;$/;"	v	file:
do_scroll	scripts/kconfig/lxdialog/menubox.c	/^static void do_scroll(WINDOW *win, int *scroll, int n)$/;"	f	file:
do_some_polling	src/legion_runtime/activemsg.cc	/^void do_some_polling(void)$/;"	f
do_span	src/legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
do_span	src/legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
do_span	src/legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
do_span	src/legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
do_span	src/legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
do_span	src/legion_runtime/lowlevel.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
do_span	src/legion_runtime/lowlevel_dma.cc	/^	void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
do_span	src/legion_runtime/lowlevel_gpu.cc	/^      void do_span(off_t pos, size_t len)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
do_span	src/legion_runtime/shared_lowlevel.cc	/^        void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy
do_span	src/legion_runtime/shared_lowlevel.cc	/^        void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply
do_span	src/legion_runtime/shared_lowlevel.cc	/^        void do_span(int offset, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold
do_span	src/legion_runtime/shared_lowlevel.cc	/^        void do_span(int start, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
do_span	src/legion_runtime/shared_lowlevel.cc	/^        void do_span(int start, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply
do_span	src/legion_runtime/shared_lowlevel.cc	/^        void do_span(int start, int count)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold
docall	src/lua_src/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
docfunctions	scripts/basic/docproc.c	/^void docfunctions(char * filename, char * type)$/;"	f
dofile	src/lua_src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	src/lua_src/lbaselib.c	/^static int dofilecont (lua_State *L) {$/;"	f	file:
dojump	src/lua_src/lvm.c	507;"	d	file:
dolibrary	src/lua_src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
domain	include/nautilus/numa.h	/^    struct numa_domain * domain;$/;"	m	struct:domain_adj_entry	typeref:struct:domain_adj_entry::numa_domain
domain	include/nautilus/smp.h	/^    struct numa_domain * domain;$/;"	m	struct:cpu	typeref:struct:cpu::numa_domain
domain	src/legion_runtime/legion.h	/^        Domain domain;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
domain	src/legion_runtime/lowlevel_dma.cc	/^      Domain domain;$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
domain	src/legion_runtime/lowlevel_dma.cc	/^      Domain domain;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
domain	src/legion_runtime/region_tree.h	/^      const Domain domain;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
domain	src/legion_runtime/runtime.h	/^        Domain domain;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
domain	src/legion_runtime/shared_lowlevel.cc	/^      Domain domain;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
domain_adj_entry	include/nautilus/numa.h	/^struct domain_adj_entry {$/;"	s
domain_id	include/nautilus/numa.h	/^    uint32_t domain_id;$/;"	m	struct:mem_region
domains	include/nautilus/numa.h	/^    struct numa_domain * domains[MAX_NUMA_DOMAINS];$/;"	m	struct:nk_locality_info	typeref:struct:nk_locality_info::numa_domain
dominates	src/legion_runtime/interval_tree.h	/^    bool IntervalTree<T,DISCRETE>::dominates(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
dominates	src/legion_runtime/interval_tree.h	/^    bool IntervalTreeNode<T,DISCRETE>::dominates(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
dominates	src/legion_runtime/region_tree.cc	/^    bool CompositeNode::dominates(RegionTreeNode *dst)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
dominates	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::dominates(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
dominates	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::dominates(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
dominates	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::dominates(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
dominates	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::dominates(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
dominates	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::dominates(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
dominates	src/legion_runtime/region_tree.cc	/^    bool RegionNode::dominates(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
dominator_mask	src/legion_runtime/region_tree.h	/^      FieldMask dominator_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
dominators	src/legion_runtime/region_tree.h	/^      std::map<IndexTreeNode*,bool> dominators;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
done	src/test/benchmark.c	/^static volatile int done[2];$/;"	v	file:
done	src/test/ipi.c	/^    volatile uint64_t  done;$/;"	m	struct:time_struct	file:
done	src/test/ipi.c	/^static volatile int done = 0;$/;"	v	file:
done_event	src/legion_runtime/shared_lowlevel.cc	/^      EventImpl *done_event;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
done_sync	src/arch/hrt/hrt.c	/^static volatile int done_sync = 0;$/;"	v	file:
donextjump	src/lua_src/lvm.c	513;"	d	file:
dooptions	src/lua_src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	src/lua_src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dot	src/legion_runtime/arrays.h	/^      int dot(const Point<DIM> other) const { return dot(*this, other); }$/;"	f	class:LegionRuntime::Arrays::Point
dot	src/legion_runtime/arrays.h	/^      int dot(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
dot	src/legion_runtime/arrays.h	/^      static int dot(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
dot-config	Makefile	/^		dot-config := 0$/;"	m
dot-config	Makefile	/^dot-config     := 1$/;"	m
dotProdTask	src/test/hpcg/comp-dotprod.h	/^dotProdTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
dothecall	src/lua_src/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
dotprod	src/test/hpcg/comp-dotprod.h	/^dotprod(Vector &x,$/;"	f	namespace:lgncg
dotty	src/lua_src/lua.c	/^static void dotty (lua_State *L) {$/;"	f	file:
down	src/legion_runtime/legion_logging.cc	/^    void TreeStateLogger::down(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
down	src/legion_runtime/legion_spy.cc	/^    void TreeStateLogger::down(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
dpl	include/nautilus/idt.h	/^            uint8_t  dpl   : 2;$/;"	m	struct:gate_desc64::__anon61::__anon63
drand48	src/nautilus/libccompat.c	/^drand48(void) $/;"	f
draw_box	scripts/kconfig/lxdialog/util.c	/^draw_box(WINDOW * win, int y, int x, int height, int width,$/;"	f
draw_done	xeon_phi/linux_usr/phi_console.c	/^draw_done (void)$/;"	f	file:
draw_fb	xeon_phi/linux_usr/phi_console.c	/^draw_fb (unsigned offset, unsigned nlines)$/;"	f	file:
draw_hist_buf	xeon_phi/linux_usr/phi_console.c	/^draw_hist_buf (struct line_elm * head, $/;"	f	file:
draw_line_buf	xeon_phi/linux_usr/phi_console.c	/^draw_line_buf (uint16_t * buf, unsigned row) $/;"	f	file:
draw_output_win	xeon_phi/linux_usr/phi_console.c	/^draw_output_win (void)$/;"	f	file:
draw_shadow	scripts/kconfig/lxdialog/util.c	/^void draw_shadow(WINDOW * win, int y, int x, int height, int width)$/;"	f
drill_page_tables	src/nautilus/paging.c	/^drill_page_tables (addr_t addr, addr_t map_addr, uint64_t flags)$/;"	f	file:
drill_pd	src/nautilus/paging.c	/^drill_pd (pde_t * pd, addr_t addr, addr_t map_addr, uint64_t flags)$/;"	f	file:
drill_pdpt	src/nautilus/paging.c	/^drill_pdpt (pdpte_t * pdpt, addr_t addr, addr_t map_addr, uint64_t flags)$/;"	f	file:
drq	src/dev/ata.c	/^	uint8_t drq:1;  \/\/ drive has data ready or can accept data (PIO)$/;"	m	struct:ata_status_reg::__anon135	file:
ds	include/nautilus/cpuid.h	/^            uint8_t ds       : 1; \/\/ debug store$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
ds	include/nautilus/realmode.h	/^    uint16_t ds;    \/\/$/;"	m	struct:nk_real_mode_int_args
ds_cpl	include/nautilus/cpuid.h	/^            uint8_t ds_cpl   : 1; \/\/ CPL Qualified Debug Store$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
dsdt	include/acpi/actbl.h	/^	uint32_t dsdt;		\/* 32-bit physical address of DSDT *\/$/;"	m	struct:acpi_table_fadt
dsdt	src/arch/hrt/shutdown.c	/^    uint32_t  dsdt;$/;"	m	struct:shutdown_info	file:
dsdt	src/arch/x64/shutdown.c	/^    uint32_t  dsdt;$/;"	m	struct:shutdown_info	file:
dseg	include/nautilus/multiboot2.h	/^  multiboot_uint16_t dseg;$/;"	m	struct:multiboot_tag_apm
dseg_len	include/nautilus/multiboot2.h	/^  multiboot_uint16_t dseg_len;$/;"	m	struct:multiboot_tag_apm
dso_handle	include/nautilus/cxxglue.h	/^    void *dso_handle;$/;"	m	struct:atexit_func_entry_t
dst	src/legion_runtime/lowlevel_dma.cc	/^      Domain::CopySrcDstField dst;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
dst	src/legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *src, *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier	file:
dst	src/legion_runtime/lowlevel_gpu.cc	/^      void *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
dst	src/legion_runtime/lowlevel_gpu.cc	/^      void *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
dst_acc	src/legion_runtime/lowlevel_dma.cc	/^      RegionAccessor<AccessorType::Generic> dst_acc;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier	file:
dst_base	src/legion_runtime/lowlevel.cc	/^	char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
dst_base	src/legion_runtime/lowlevel_dma.cc	/^	char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
dst_base	src/legion_runtime/lowlevel_dma.cc	/^      char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier	file:
dst_base	src/legion_runtime/lowlevel_dma.cc	/^      char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
dst_base	src/legion_runtime/lowlevel_dma.cc	/^      char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::MemcpyMemPairCopier	file:
dst_base	src/legion_runtime/shared_lowlevel.cc	/^        char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
dst_base	src/legion_runtime/shared_lowlevel.cc	/^        char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
dst_base	src/legion_runtime/shared_lowlevel.cc	/^        char *dst_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold	file:
dst_buffer	src/legion_runtime/lowlevel_dma.cc	/^      char *dst_buffer;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
dst_core	include/test/ipi.h	/^	cpu_id_t       dst_core; \/\/ destination $/;"	m	struct:ipi_exp_data
dst_inst	src/legion_runtime/lowlevel_dma.cc	/^      RegionInstance::Impl *dst_inst;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
dst_instance	src/legion_runtime/legion_logging.h	/^        PhysicalInstance dst_instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
dst_ioapic_id	include/nautilus/acpi.h	/^    uint8_t  dst_ioapic_id;$/;"	m	struct:mp_table_entry_ioint
dst_ioapic_id	include/nautilus/irq.h	/^    uint8_t    dst_ioapic_id;$/;"	m	struct:nk_int_entry
dst_ioapic_intin	include/nautilus/acpi.h	/^    uint8_t  dst_ioapic_intin;$/;"	m	struct:mp_table_entry_ioint
dst_ioapic_intin	include/nautilus/irq.h	/^    uint8_t    dst_ioapic_intin;$/;"	m	struct:nk_int_entry
dst_lapic_id	include/nautilus/acpi.h	/^    uint8_t  dst_lapic_id;$/;"	m	struct:mp_table_entry_lint
dst_lapic_lintin	include/nautilus/acpi.h	/^    uint8_t  dst_lapic_lintin;$/;"	m	struct:mp_table_entry_lint
dst_mapping_paths	src/legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> dst_mapping_paths;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
dst_mask	src/legion_runtime/shared_lowlevel.cc	/^          const ElementMask &dst_mask;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
dst_mem	src/legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
dst_mem	src/legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
dst_mem	src/legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
dst_offset	src/legion_runtime/lowlevel_dma.cc	/^      unsigned src_offset, dst_offset, size;$/;"	m	struct:LegionRuntime::LowLevel::OffsetsAndSize	file:
dst_privilege_paths	src/legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> dst_privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
dst_requirements	src/legion_runtime/legion.h	/^      std::vector<RegionRequirement>    dst_requirements;$/;"	m	class:LegionRuntime::HighLevel::Copy
dst_requirements	src/legion_runtime/legion.h	/^      std::vector<RegionRequirement>  dst_requirements;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
dst_size	src/legion_runtime/lowlevel_dma.cc	/^	off_t dst_size;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteMemPairCopier::PendingGather	file:
dst_size	src/legion_runtime/lowlevel_dma.cc	/^      std::vector<int> dst_size;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
dst_start	src/legion_runtime/lowlevel_dma.cc	/^	off_t dst_start;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteMemPairCopier::PendingGather	file:
dst_start	src/legion_runtime/lowlevel_dma.cc	/^      std::vector<off_t> dst_start;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
dst_stride	src/legion_runtime/lowlevel_gpu.cc	/^      off_t dst_stride, src_stride;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
dst_type	include/test/ipi.h	/^	ipi_dst_type_t dst_type; \/\/ target one or all cores? (oneway & roundtrip only)$/;"	m	struct:ipi_exp_data
dstptr	src/legion_runtime/activemsg.cc	/^  void *dstptr;$/;"	m	struct:OutgoingMessage	file:
dsts	src/legion_runtime/lowlevel_dma.cc	/^	std::vector<void *> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
dsts	src/legion_runtime/shared_lowlevel.cc	/^	std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
dsts	src/legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply	file:
dsts	src/legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold	file:
dsts	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<Domain::CopySrcDstField> dsts;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
dt	src/test/circuit.h	/^  float         dt;$/;"	m	struct:CircuitPiece
dtest64	include/nautilus/cpuid.h	/^            uint8_t dtest64  : 1; \/\/ 64-bit DS Area$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
dtype	src/legion_runtime/legion.h	/^        DependenceType dtype;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
dtype	src/legion_runtime/legion_ops.h	/^        DependenceType dtype;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
dtype	src/legion_runtime/legion_trace.h	/^        DependenceType dtype;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
dummy	include/lua/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for `local' udata *\/$/;"	m	union:Udata
dummy	include/lua/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:TString
dummy	src/legion_runtime/lowlevel_impl.h	/^      uint64_t dummy;$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl
dummy	src/legion_runtime/shared_lowlevel.cc	/^      int dummy;$/;"	m	struct:LegionRuntime::LowLevel::ElementMaskImpl	file:
dummy	src/nautilus/nemo.c	/^dummy (void)$/;"	f	file:
dummy_int_handler	src/dev/apic.c	/^dummy_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
dummy_medium_handler	src/legion_runtime/activemsg.h	/^void dummy_medium_handler(MSGTYPE dummy, const void *data, size_t datalen) {}$/;"	f
dummy_medium_w_reply_handler	src/legion_runtime/activemsg.h	/^RPLTYPE dummy_medium_w_reply_handler(MSGTYPE dummy, const void *data, size_t datalen) { RPLTYPE dummyret; return dummyret; }$/;"	f
dummy_mono_clock	src/nautilus/libccompat.c	/^static uint64_t dummy_mono_clock = 0;$/;"	v	file:
dummy_short_handler	src/legion_runtime/activemsg.h	/^void dummy_short_handler(MSGTYPE dummy) {}$/;"	f
dummy_short_w_reply_handler	src/legion_runtime/activemsg.h	/^RPLTYPE dummy_short_w_reply_handler(MSGTYPE dummy) { RPLTYPE dummyret; return dummyret; }$/;"	f
dummynode	src/lua_src/ltable.c	68;"	d	file:
dummynode_	src/lua_src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dump	src/test/hpcg/vector.h	/^    dump(std::string prefix,$/;"	f	struct:lgncg::Vector
dump_adj_list	src/nautilus/numa.c	/^dump_adj_list (struct numa_domain * d)$/;"	f	file:
dump_allocation_info	src/legion_runtime/runtime.cc	/^    void Runtime::dump_allocation_info(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
dump_logical_context	src/legion_runtime/region_tree.cc	/^    void PartitionNode::dump_logical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
dump_logical_context	src/legion_runtime/region_tree.cc	/^    void RegionNode::dump_logical_context(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
dump_logical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::dump_logical_state(LogicalRegion region,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
dump_mem_regions	src/nautilus/numa.c	/^dump_mem_regions (struct numa_domain * d)$/;"	f	file:
dump_mwait_info	src/arch/hrt/mwait.c	/^dump_mwait_info (void)$/;"	f	file:
dump_mwait_info	src/arch/x64/mwait.c	/^dump_mwait_info (void)$/;"	f	file:
dump_numa_domains	src/nautilus/numa.c	/^dump_numa_domains (struct nk_locality_info * numa)$/;"	f	file:
dump_numa_matrix	src/nautilus/numa.c	/^dump_numa_matrix (struct nk_locality_info * numa)$/;"	f	file:
dump_physical_context	src/legion_runtime/region_tree.cc	/^    void PartitionNode::dump_physical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
dump_physical_context	src/legion_runtime/region_tree.cc	/^    void RegionNode::dump_physical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
dump_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::dump_physical_state(LogicalRegion region,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
dump_pml4	src/arch/hrt/hrt.c	/^dump_pml4 (void *pt)$/;"	f	file:
dump_processor_states	src/legion_runtime/runtime.cc	/^    void Runtime::dump_processor_states(FILE *target)$/;"	f	class:LegionRuntime::HighLevel::Runtime
dump_profiling	src/legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::dump_profiling(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
dump_profiling	src/legion_runtime/legion_profiling.h	/^      static inline void dump_profiling(void)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
dump_state	src/legion_runtime/runtime.cc	/^    void ProcessorManager::dump_state(FILE *target)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
dump_trace	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void Tracer<ITEM>::dump_trace(const char *filename, bool append)$/;"	f	class:LegionRuntime::LowLevel::Tracer
dumped	src/legion_runtime/legion_profiling.h	/^        int dumped;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
duty_offset	include/acpi/actbl.h	/^	uint8_t duty_offset;		\/* Processor duty cycle index in processor's P_CNT reg *\/$/;"	m	struct:acpi_table_fadt
duty_width	include/acpi/actbl.h	/^	uint8_t duty_width;		\/* Processor duty cycle value bit width in P_CNT register *\/$/;"	m	struct:acpi_table_fadt
dval	src/test/circuit.cc	/^union test_dbl { double dval; unsigned long long uval; };$/;"	m	union:test_dbl	file:
dx	include/nautilus/realmode.h	/^    uint16_t dx;$/;"	m	struct:nk_real_mode_int_args
dyd	include/lua/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata
dyd	src/lua_src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
dynamic_independence_tests	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::dynamic_independence_tests = true;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
dynamic_independence_tests	src/legion_runtime/runtime.h	/^      static bool dynamic_independence_tests;$/;"	m	class:LegionRuntime::HighLevel::Runtime
dynamic_lock	src/legion_runtime/region_tree.h	/^      Reservation dynamic_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
dynamic_part_tests	src/legion_runtime/region_tree.h	/^      std::deque<DynamicPartTest>  dynamic_part_tests;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
dynamic_space_tests	src/legion_runtime/region_tree.h	/^      std::deque<DynamicSpaceTest> dynamic_space_tests;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
e1	scripts/kconfig/expr.c	132;"	d	file:
e1	scripts/kconfig/expr.c	190;"	d	file:
e1	scripts/kconfig/expr.c	510;"	d	file:
e1	scripts/kconfig/expr.c	556;"	d	file:
e1	scripts/kconfig/expr.c	562;"	d	file:
e1	scripts/kconfig/expr.c	612;"	d	file:
e1	scripts/kconfig/expr.c	854;"	d	file:
e1	scripts/kconfig/expr.c	877;"	d	file:
e2	scripts/kconfig/expr.c	133;"	d	file:
e2	scripts/kconfig/expr.c	191;"	d	file:
e2	scripts/kconfig/expr.c	511;"	d	file:
e2	scripts/kconfig/expr.c	557;"	d	file:
e2	scripts/kconfig/expr.c	563;"	d	file:
e2	scripts/kconfig/expr.c	613;"	d	file:
e2	scripts/kconfig/expr.c	855;"	d	file:
e2	scripts/kconfig/expr.c	878;"	d	file:
e2_blkcnt_t	src/fs/ext2/ext2fs.h	/^typedef __s64		e2_blkcnt_t;$/;"	t
early_acpi_os_unmap_memory	src/acpi/osl.c	/^void early_acpi_os_unmap_memory(void __iomem *virt, acpi_size size)$/;"	f
early_map	src/legion_runtime/legion.h	/^      bool early_map;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
early_map_regions	src/legion_runtime/legion_tasks.cc	/^    bool TaskOp::early_map_regions(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
early_mapped_regions	src/legion_runtime/legion_tasks.h	/^      std::map<unsigned\/*idx*\/,InstanceRef> early_mapped_regions;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
early_printk	src/nautilus/printk.c	/^early_printk (const char *fmt, va_list args)$/;"	f
echoBanner	src/test/hpcg/hpcg-main.cc	/^echoBanner(const DriverParams &params)$/;"	f	namespace:__anon117
ecx	include/nautilus/cpuid.h	/^    struct cpuid_ecx_flags ecx;$/;"	m	struct:cpuid_feature_flags	typeref:struct:cpuid_feature_flags::cpuid_ecx_flags
edge	include/nautilus/pmc.h	/^            uint8_t edge          : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
edx	include/nautilus/cpuid.h	/^    struct cpuid_edx_flags edx;$/;"	m	struct:cpuid_feature_flags	typeref:struct:cpuid_feature_flags::cpuid_edx_flags
efi_mem_desc	include/nautilus/sfi.h	/^struct efi_mem_desc {$/;"	s
efi_mem_desc_t	include/nautilus/sfi.h	/^typedef struct efi_mem_desc efi_mem_desc_t;$/;"	t	typeref:struct:efi_mem_desc
efi_mem_type_t	include/nautilus/sfi.h	/^} efi_mem_type_t;$/;"	t	typeref:enum:__anon48
efi_mem_types	src/nautilus/sfi.c	/^static char * efi_mem_types[] = {$/;"	v	file:
eid	include/acpi/actbl1.h	/^	uint8_t eid;			\/* Processor EID *\/$/;"	m	struct:acpi_cpep_polling
eid	include/acpi/actbl1.h	/^	uint8_t eid;			\/* Processor EID *\/$/;"	m	struct:acpi_madt_interrupt_source
eid	include/acpi/actbl1.h	/^	uint8_t eid;			\/* SAPIC EID *\/$/;"	m	struct:acpi_madt_local_sapic
eist	include/nautilus/cpuid.h	/^            uint8_t eist     : 1; \/\/ Enchanced Intel SpeedStep technology$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
elem	src/legion_runtime/legion_utilities.h	/^    inline __m256d& AVXBitMask<MAX>::elem(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
elem	src/legion_runtime/legion_utilities.h	/^    inline __m256d& AVXTLBitMask<MAX>::elem(const unsigned &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
elem	src/legion_runtime/legion_utilities.h	/^    inline const __m256d& AVXBitMask<MAX>::elem(const unsigned int &idx) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
elem	src/legion_runtime/legion_utilities.h	/^    inline const __m256d& AVXTLBitMask<MAX>::elem(const unsigned &idx) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
elem_ptr	src/legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
elem_ptr	src/legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
elem_ptr	src/legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
elem_ptr	src/legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
elem_ptr	src/legion_runtime/accessor.h	/^	  inline char *elem_ptr(ptr_t ptr) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
elem_size	src/legion_runtime/shared_lowlevel.cc	/^	size_t elem_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
element_size	src/legion_runtime/lowlevel.cc	/^      size_t element_size;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
elements	include/acpi/actypes.h	/^		union acpi_object *elements;	\/* Pointer to an array of ACPI_OBJECTs *\/$/;"	m	struct:acpi_object::__anon23	typeref:union:acpi_object::__anon23::acpi_object
elems	src/legion_runtime/lowlevel_impl.h	/^      ET elems[SIZE];$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNode
elm	include/nautilus/irq.h	/^    struct list_head elm;$/;"	m	struct:nk_bus_entry	typeref:struct:nk_bus_entry::list_head
elm	include/nautilus/irq.h	/^    struct list_head elm;$/;"	m	struct:nk_int_entry	typeref:struct:nk_int_entry::list_head
elmt_size	src/legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
elmt_size	src/legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
elmt_size	src/legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
elmt_size	src/legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
elmt_size	src/legion_runtime/lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
elmt_size	src/legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
elmt_size	src/legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
elmt_size	src/legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
elmt_size	src/legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
elmt_size	src/legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
elmt_size	src/legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
elmt_size	src/legion_runtime/lowlevel_dma.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
elmt_size	src/legion_runtime/lowlevel_gpu.cc	/^      size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
elmt_size	src/legion_runtime/lowlevel_impl.h	/^	size_t block_size, elmt_size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
elmt_size	src/legion_runtime/shared_lowlevel.cc	/^	size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
elmt_size	src/legion_runtime/shared_lowlevel.cc	/^        size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
elmt_size	src/legion_runtime/shared_lowlevel.cc	/^        size_t elmt_size;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
empty	include/nautilus/cxxglue.h	/^    void * empty;$/;"	m	struct:_Unwind_Context
empty	include/nautilus/cxxglue.h	/^    void* empty;$/;"	m	struct:_Unwind_Exception
empty	src/legion_runtime/lowlevel_impl.h	/^    bool JobQueue<JOBTYPES>::empty(void) const$/;"	f	class:LegionRuntime::LowLevel::JobQueue
empty	src/legion_runtime/runtime.h	/^      volatile bool empty;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
en	include/nautilus/pmc.h	/^            uint8_t en            : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
enable	src/legion_runtime/lowlevel.cc	/^    void ElementMask::enable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enable	src/legion_runtime/shared_lowlevel.cc	/^    void ElementMask::enable(int start, int count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enable_WAR_optimization	src/legion_runtime/legion.h	/^      bool enable_WAR_optimization;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
enable_address	src/acpi/acpica/aclocal.h	/^	struct acpi_generic_address enable_address;	\/* Address of enable reg *\/$/;"	m	struct:acpi_gpe_register_info	typeref:struct:acpi_gpe_register_info::acpi_generic_address
enable_all_events	src/nautilus/pmc.c	/^enable_all_events (void)$/;"	f
enable_bit_mask	src/acpi/acpica/aclocal.h	/^	u16 enable_bit_mask;$/;"	m	struct:acpi_fixed_event_info
enable_for_run	src/acpi/acpica/aclocal.h	/^	u8 enable_for_run;	\/* GPEs to keep enabled when running *\/$/;"	m	struct:acpi_gpe_register_info
enable_for_wake	src/acpi/acpica/aclocal.h	/^	u8 enable_for_wake;	\/* GPEs to keep enabled when sleeping *\/$/;"	m	struct:acpi_gpe_register_info
enable_idle_task	src/legion_runtime/lowlevel.cc	/^      virtual void enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
enable_idle_task	src/legion_runtime/lowlevel.cc	/^    void Processor::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
enable_idle_task	src/legion_runtime/lowlevel.cc	/^    void UtilityProcessor::enable_idle_task(Processor::Impl *proc)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
enable_idle_task	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
enable_idle_task	src/legion_runtime/lowlevel_impl.h	/^      virtual void enable_idle_task(void) { assert(0); }$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
enable_idle_task	src/legion_runtime/shared_lowlevel.cc	/^    void Processor::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::Processor
enable_idle_task	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::enable_idle_task(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
enable_imprecise_filter	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::enable_imprecise_filter = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
enable_imprecise_filter	src/legion_runtime/runtime.h	/^      static bool enable_imprecise_filter;$/;"	m	class:LegionRuntime::HighLevel::Runtime
enable_irqs	include/nautilus/irq.h	54;"	d
enable_peer_access	src/legion_runtime/lowlevel_gpu.cc	/^      void enable_peer_access(GPUProcessor::Internal *neighbor)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
enable_peer_access	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::enable_peer_access(GPUProcessor *peer)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
enable_perf_event	src/nautilus/pmc.c	/^enable_perf_event (perf_event_t * event)$/;"	f
enable_profiling	src/legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::enable_profiling(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
enable_profiling	src/legion_runtime/legion_profiling.h	/^      static inline void enable_profiling(void)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
enable_register_id	src/acpi/acpica/aclocal.h	/^	u8 enable_register_id;$/;"	m	struct:acpi_fixed_event_info
enable_sse	src/nautilus/fpu.c	/^enable_sse (void)$/;"	f	file:
enable_x87	src/nautilus/fpu.c	/^enable_x87 (void)$/;"	f	file:
enabled	include/acpi/actbl1.h	/^	uint8_t enabled;$/;"	m	struct:acpi_hest_aer_common
enabled	include/acpi/actbl1.h	/^	uint8_t enabled;$/;"	m	struct:acpi_hest_generic
enabled	include/acpi/actbl1.h	/^	uint8_t enabled;$/;"	m	struct:acpi_hest_ia_corrected
enabled	include/acpi/actbl1.h	/^	uint8_t enabled;$/;"	m	struct:acpi_hest_ia_machine_check
enabled	include/dev/ioapic.h	/^    uint8_t enabled; $/;"	m	struct:iored_entry
enabled	include/nautilus/acpi.h	/^    uint8_t  enabled : 1;$/;"	m	struct:mp_table_entry_ioapic
enabled	include/nautilus/acpi.h	/^   uint8_t  enabled     : 1;$/;"	m	struct:mp_table_entry_cpu
enabled	include/nautilus/numa.h	/^    uint8_t  enabled;$/;"	m	struct:mem_region
enabled	include/nautilus/pmc.h	/^    uint8_t enabled;$/;"	m	struct:pmc_event
enabled	include/nautilus/smp.h	/^    uint8_t enabled;$/;"	m	struct:cpu
enclosing	src/legion_runtime/legion_tasks.h	/^      SingleTask *enclosing;$/;"	m	class:LegionRuntime::HighLevel::InlineTask
enclosing_physical_contexts	src/legion_runtime/legion_tasks.h	/^      std::deque<RegionTreeContext> enclosing_physical_contexts;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
end	scripts/kconfig/zconf.y	/^end:	  T_ENDMENU T_EOL	{ $$ = $1; }$/;"	l
end	src/acpi/acpica/aclocal.h	/^	u16 end;$/;"	m	struct:acpi_port_info
end	src/test/benchmark.c	/^    uint64_t end;$/;"	m	struct:cv	file:
end_address	include/acpi/actbl2.h	/^	uint64_t end_address;	\/* 4_k aligned limit address *\/$/;"	m	struct:acpi_dmar_reserved_memory
end_bus_number	include/acpi/actbl2.h	/^	uint8_t end_bus_number;	\/* Final PCI Bus number *\/$/;"	m	struct:acpi_mcfg_allocation
end_capture	src/lua_src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
end_context	src/legion_runtime/legion_utilities.h	/^    inline void Deserializer::end_context(void)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
end_context	src/legion_runtime/legion_utilities.h	/^    inline void Serializer::end_context(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
end_cycle	src/test/ipi.c	/^    uint64_t end_cycle;$/;"	m	struct:time_struct	file:
end_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void Operation::end_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
end_dialog	scripts/kconfig/lxdialog/util.c	/^void end_dialog(void)$/;"	f
end_event	src/legion_runtime/legion_logging.h	/^        Event end_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
end_helper	src/legion_runtime/legion.h	/^      static inline void end_helper(HighLevelRuntime *rt, Context ctx,$/;"	f	class:LegionRuntime::HighLevel::LegionSerialization
end_line	src/acpi/acpica/aclocal.h	/^	u32 end_line;$/;"	m	struct:acpi_parse_obj_asl
end_logical_line	src/acpi/acpica/aclocal.h	/^	u32 end_logical_line;$/;"	m	struct:acpi_parse_obj_asl
end_node	src/legion_runtime/region_tree.cc	/^    void LogicalCloser::end_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalCloser
end_node	src/legion_runtime/region_tree.cc	/^    void LogicalFilter::end_node(FieldTree<LogicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalFilter
end_node	src/legion_runtime/region_tree.cc	/^    void PhysicalDepAnalyzer<FILTER>::end_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
end_node	src/legion_runtime/region_tree.cc	/^    void PhysicalFilter::end_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalFilter
end_node	src/legion_runtime/region_tree.cc	/^    void PhysicalUnpacker::end_node(FieldTree<PhysicalUser> *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalUnpacker
end_node	src/legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
end_node	src/legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalFieldInvalidator
end_node	src/legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<LogicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
end_node	src/legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
end_node	src/legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::PhysicalEventFilter
end_node	src/legion_runtime/region_tree.h	/^      inline void end_node(FieldTree<PhysicalUser> *node) { }$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
end_perf_trace	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::end_perf_trace(unsigned long long tolerance)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
end_premapping	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::end_premapping(RegionTreeID tid, UserEvent term_premap)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
end_reached	scripts/kconfig/lxdialog/textbox.c	/^static int begin_reached = 1, end_reached, page_length;$/;"	v	file:
end_smp_boot	src/asm/smpboot.S	/^end_smp_boot:$/;"	l
end_tag	include/acpi/acrestyp.h	/^	struct acpi_resource_end_tag end_tag;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_end_tag
end_task	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::end_task(Context ctx, const void *result, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
end_task	src/legion_runtime/legion.h	/^        static inline void end_task(HighLevelRuntime *rt, $/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::StructHandler
end_task	src/legion_runtime/legion.h	/^        static inline void end_task(HighLevelRuntime *rt, Context ctx, $/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::NonPODSerializer
end_task	src/legion_runtime/legion.h	/^        static inline void end_task(HighLevelRuntime *rt, Context ctx, $/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::StructHandler
end_task	src/legion_runtime/legion.h	/^      static inline void end_task(HighLevelRuntime *rt, Context ctx, T *result)$/;"	f	class:LegionRuntime::HighLevel::LegionSerialization
end_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::end_task(const void *res, size_t res_size, bool owned)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
end_task	src/legion_runtime/runtime.cc	/^    void Runtime::end_task(SingleTask *ctx, const void *result, $/;"	f	class:LegionRuntime::HighLevel::Runtime
end_time	src/nautilus/scheduler.c	/^    uint64_t end_time;    \/\/ to when it stops (entry to need_resched())$/;"	m	struct:tsc_info	file:
end_trace	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::end_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
end_trace	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::end_trace(TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
end_trace	src/legion_runtime/runtime.cc	/^    void Runtime::end_trace(Context ctx, TraceID tid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
end_trace_capture	src/legion_runtime/legion_trace.cc	/^    void LegionTrace::end_trace_capture(void)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
end_trace_execution	src/legion_runtime/legion_trace.cc	/^    void LegionTrace::end_trace_execution(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
endpc	include/lua/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
endpoint_manager	src/legion_runtime/activemsg.cc	/^static EndpointManager *endpoint_manager;$/;"	v	file:
endpoints	src/legion_runtime/activemsg.cc	/^  ActiveMessageEndpoint **endpoints;$/;"	m	class:EndpointManager	file:
enqueue	src/legion_runtime/lowlevel.cc	/^      void enqueue(gasnet_node_t dest, gasnet_handler_t handler,$/;"	f	class:LegionRuntime::LowLevel::AMQueue
enqueue_copy	src/legion_runtime/lowlevel_gpu.cc	/^      void enqueue_copy(GPUJob *job)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
enqueue_dma	src/legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::enqueue_dma(CopyOperation *copy)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
enqueue_message	src/legion_runtime/activemsg.cc	/^  void enqueue_message(OutgoingMessage *hdr, bool in_order)$/;"	f	class:ActiveMessageEndpoint
enqueue_message	src/legion_runtime/activemsg.cc	/^  void enqueue_message(gasnet_node_t target, OutgoingMessage *hdr, bool in_order)$/;"	f	class:EndpointManager
enqueue_message	src/legion_runtime/activemsg.cc	/^void enqueue_message(gasnet_node_t target, int msgid,$/;"	f
enqueue_request	src/legion_runtime/lowlevel_dma.cc	/^    void DmaRequestQueue::enqueue_request(DmaRequest *r)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
enqueue_scancode_as_keycode	src/nautilus/vc.c	/^static int enqueue_scancode_as_keycode(struct nk_virtual_console *cur_vc, uint8_t scan)$/;"	f	file:
enqueue_task	src/legion_runtime/lowlevel.cc	/^      virtual void enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
enqueue_task	src/legion_runtime/lowlevel.cc	/^      virtual void enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
enqueue_task	src/legion_runtime/lowlevel.cc	/^    void ProcessorGroup::enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
enqueue_task	src/legion_runtime/lowlevel.cc	/^    void UtilityProcessor::enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
enqueue_task	src/legion_runtime/lowlevel_gpu.cc	/^      void enqueue_task(GPUTask *job)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
enqueue_task	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::enqueue_task(Task *task)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
enqueue_task	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::enqueue_task(TaskDesc *task)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
enqueue_thread_on_waitq	src/nautilus/thread.c	/^enqueue_thread_on_waitq (nk_thread_t * waiter, nk_thread_queue_t * waitq)$/;"	f	file:
enterblock	src/lua_src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
enterlevel	src/lua_src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
enterprise_id	include/acpi/actbl2.h	/^	uint32_t enterprise_id;$/;"	m	struct:acpi_asf_rmcp
entersweep	src/lua_src/lgc.c	/^static int entersweep (lua_State *L) {$/;"	f	file:
entity	include/acpi/actbl2.h	/^	uint8_t entity;$/;"	m	struct:acpi_asf_alert_data
entity_system	scripts/basic/docproc.c	/^FILELINE * entity_system;$/;"	v
entries	include/acpi/actbl1.h	/^	uint32_t entries;$/;"	m	struct:acpi_table_einj
entries	include/acpi/actbl1.h	/^	uint32_t entries;$/;"	m	struct:acpi_table_erst
entries	include/acpi/actbl2.h	/^	uint32_t entries;		\/* Number of watchdog entries that follow *\/$/;"	m	struct:acpi_table_wdat
entries	include/dev/ioapic.h	/^    struct iored_entry * entries;$/;"	m	struct:ioapic	typeref:struct:ioapic::iored_entry
entries	include/nautilus/acpi.h	/^    struct mp_table_entry entries[0];$/;"	m	struct:mp_table	typeref:struct:mp_table::mp_table_entry
entries	include/nautilus/multiboot2.h	/^  struct multiboot_mmap_entry entries[0];  $/;"	m	struct:multiboot_tag_mmap	typeref:struct:multiboot_tag_mmap::multiboot_mmap_entry
entries	include/nautilus/sfi.h	/^    efi_mem_desc_t        entries[0];$/;"	m	struct:sfi_mmap_tbl
entries	include/nautilus/sfi.h	/^    sfi_cpu_desc_t entries[0];$/;"	m	struct:sfi_cpu_tbl
entries	include/nautilus/sfi.h	/^    sfi_freq_entry_t entries[0];$/;"	m	struct:sfi_freq_tbl
entries	include/nautilus/sfi.h	/^    sfi_ioapic_desc_t entries[0];$/;"	m	struct:sfi_ioapic_tbl
entries	include/nautilus/sfi.h	/^    sfi_m_rtc_entry_t entries[0];$/;"	m	struct:sfi_m_rtc_tbl
entries	include/nautilus/sfi.h	/^    sfi_m_timer_entry_t entries[0];$/;"	m	struct:sfi_m_timer_tbl
entries	include/nautilus/sfi.h	/^    sfi_plat_dev_entry_t entries[0];$/;"	m	struct:sfi_plat_dev_tbl
entries	include/nautilus/sfi.h	/^    sfi_tbl_desc_t entries[0];$/;"	m	struct:sfi_sys_tbl
entry	include/acpi/actbl1.h	/^	uint8_t entry[1];		\/* Real size = localities^2 *\/$/;"	m	struct:acpi_table_slit
entry	include/nautilus/hashtable.h	/^    struct nk_hash_entry * entry;$/;"	m	struct:nk_hashtable_iter	typeref:struct:nk_hashtable_iter::nk_hash_entry
entry	include/nautilus/numa.h	/^    struct list_head entry;$/;"	m	struct:mem_region	typeref:struct:mem_region::list_head
entry	include/nautilus/smp.h	/^    void (*entry)(struct cpu * core); \/\/ 90$/;"	m	struct:ap_init_area
entry_addr	include/nautilus/multiboot2.h	/^  multiboot_uint32_t entry_addr;$/;"	m	struct:multiboot_header_tag_entry_address
entry_cnt	include/nautilus/acpi.h	/^    uint16_t entry_cnt;$/;"	m	struct:mp_table
entry_count	include/acpi/actbl1.h	/^	uint32_t entry_count;$/;"	m	struct:acpi_einj_trigger
entry_count	src/nautilus/hashtable.c	/^    uint_t entry_count;$/;"	m	struct:nk_hashtable	file:
entry_list	src/legion_runtime/lowlevel.h	/^      void *entry_list;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
entry_size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t entry_size;$/;"	m	struct:multiboot_tag_mmap
entry_type	include/acpi/actbl2.h	/^	uint8_t entry_type;$/;"	m	struct:acpi_dmar_device_scope
entry_version	include/nautilus/multiboot2.h	/^  multiboot_uint32_t entry_version;$/;"	m	struct:multiboot_tag_mmap
entry_x	src/test/saxpy_array.cc	/^  ptr_t entry_x[BLOCK_SIZE], entry_y[BLOCK_SIZE], entry_z[BLOCK_SIZE];$/;"	m	struct:Block	file:
entry_y	src/test/saxpy_array.cc	/^  ptr_t entry_x[BLOCK_SIZE], entry_y[BLOCK_SIZE], entry_z[BLOCK_SIZE];$/;"	m	struct:Block	file:
entry_z	src/test/saxpy_array.cc	/^  ptr_t entry_x[BLOCK_SIZE], entry_y[BLOCK_SIZE], entry_z[BLOCK_SIZE];$/;"	m	struct:Block	file:
entsize	include/nautilus/multiboot2.h	/^  multiboot_uint32_t entsize;$/;"	m	struct:multiboot_tag_elf_sections
enumerate_disabled	src/legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_disabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_disabled	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_disabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_enabled	src/legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_enabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_enabled	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator *ElementMask::enumerate_enabled(int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
enumerate_modes	src/dev/vesa.c	/^static void enumerate_modes()$/;"	f	file:
enumerate_points	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::enumerate_points(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
enumeration_id	include/acpi/actbl2.h	/^	uint8_t enumeration_id;$/;"	m	struct:acpi_dmar_device_scope
enumerator	src/legion_runtime/legion.h	/^      Enumerator *const enumerator;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
env	include/lua/lobject.h	/^    struct Table *env;$/;"	m	struct:Udata::__anon6	typeref:struct:Udata::__anon6::Table
envn	include/lua/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState
ephemeron	include/lua/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State
epoch	src/legion_runtime/runtime.h	/^        GarbageCollectionEpoch *epoch;$/;"	m	struct:LegionRuntime::HighLevel::GarbageCollectionEpoch::GarbageCollectionArgs
epoch_op_lock	src/legion_runtime/runtime.h	/^      Reservation epoch_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
eprom_address	include/acpi/actbl2.h	/^	uint8_t eprom_address;$/;"	m	struct:acpi_asf_address
eq_fn	src/nautilus/hashtable.c	/^    int (*eq_fn) (addr_t key1, addr_t key2);$/;"	m	struct:nk_hashtable	file:
eqshrstr	include/lua/lstring.h	34;"	d
equalobj	include/lua/lvm.h	20;"	d
erms	include/nautilus/cpuid.h	/^            uint8_t erms                : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
err	src/dev/ata.c	/^	uint8_t err:1;  \/\/ error occurred$/;"	m	struct:ata_status_reg::__anon135	file:
err_code	include/nautilus/cpu.h	/^    ulong_t err_code;$/;"	m	struct:nk_regs
err_int_cnt	include/dev/apic.h	/^    uint64_t err_int_cnt;$/;"	m	struct:apic_dev
errfile	src/lua_src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	include/lua/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
errloop	src/asm/excp_early.S	/^errloop:$/;"	l
errno	src/lua_src/lauxlib.c	/^int errno = 0;$/;"	v
error	src/legion_runtime/utilities.h	/^      inline void error(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
error	src/lua_src/lundump.c	/^static l_noret error(LoadState* S, const char* why)$/;"	f	file:
errorJmp	include/lua/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_block_length	include/acpi/actbl1.h	/^	uint32_t error_block_length;$/;"	m	struct:acpi_hest_generic
error_code	include/nautilus/idt.h	/^    ulong_t error_code;$/;"	m	struct:excp_entry_state
error_data_length	include/acpi/actbl1.h	/^	uint32_t error_data_length;$/;"	m	struct:acpi_hest_generic_data
error_expected	src/lua_src/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
error_int_handler	src/dev/apic.c	/^error_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
error_severity	include/acpi/actbl1.h	/^	uint32_t error_severity;	\/* Severity code *\/$/;"	m	struct:acpi_bert_region
error_severity	include/acpi/actbl1.h	/^	uint32_t error_severity;$/;"	m	struct:acpi_hest_generic_data
error_severity	include/acpi/actbl1.h	/^	uint32_t error_severity;$/;"	m	struct:acpi_hest_generic_status
error_source_count	include/acpi/actbl1.h	/^	uint32_t error_source_count;$/;"	m	struct:acpi_table_hest
error_status_address	include/acpi/actbl1.h	/^	struct acpi_generic_address error_status_address;$/;"	m	struct:acpi_hest_generic	typeref:struct:acpi_hest_generic::acpi_generic_address
error_threshold_value	include/acpi/actbl1.h	/^	uint32_t error_threshold_value;$/;"	m	struct:acpi_hest_notify
error_threshold_window	include/acpi/actbl1.h	/^	uint32_t error_threshold_window;$/;"	m	struct:acpi_hest_notify
errorlimit	src/lua_src/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
es	include/nautilus/realmode.h	/^    uint16_t es;    \/\/$/;"	m	struct:nk_real_mode_int_args
escape	scripts/kconfig/kxgettext.c	/^static char *escape(const char* text, char *bf, int len)$/;"	f	file:
escerror	src/lua_src/llex.c	/^static void escerror (LexState *ls, int *c, int n, const char *msg) {$/;"	f	file:
event	include/lua/lua.h	/^  int event;$/;"	m	struct:lua_Debug
event	include/nautilus/pmc.h	/^    perf_event_t * event;$/;"	m	struct:perf_slot
event	src/legion_runtime/legion_logging.h	/^        Event event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
event	src/legion_runtime/lowlevel.cc	/^	  Event event;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
event	src/legion_runtime/lowlevel.cc	/^	Event event;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
event	src/legion_runtime/lowlevel.cc	/^	Event event;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
event	src/legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::EventSubscribeArgs	file:
event	src/legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::EventTriggerArgs	file:
event	src/legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteEntry	file:
event	src/legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
event	src/legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
event	src/legion_runtime/lowlevel.cc	/^      Event event;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
event	src/legion_runtime/lowlevel_dma.cc	/^	Event event;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
event	src/legion_runtime/lowlevel_dma.cc	/^      Event event;$/;"	m	class:LegionRuntime::LowLevel::CopyCompletionLogger	file:
event	src/legion_runtime/shared_lowlevel.cc	/^		Event event;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
event_gen	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
event_id	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
event_info	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_event_info *event_info;	\/* One for each GPE *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_event_info
event_is_valid	src/nautilus/nemo.c	/^event_is_valid (nemo_event_id_t id)$/;"	f	file:
event_lock	src/legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         event_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
event_prop	include/nautilus/pmc.h	/^typedef struct event_prop {$/;"	s
event_prop_t	include/nautilus/pmc.h	/^} event_prop_t;$/;"	t	typeref:struct:event_prop
event_props	src/nautilus/pmc.c	/^static event_prop_t event_props[256] = $/;"	v	file:
event_references	src/legion_runtime/region_tree.h	/^      LegionContainer<Event,EVENT_REFERENCE_ALLOC>::set event_references;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
event_references	src/legion_runtime/region_tree.h	/^      std::set<Event> event_references;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
event_select0	include/nautilus/pmc.h	/^            uint8_t event_select0 : 8;$/;"	m	struct:pmc_ctl::__anon46::__anon47
event_select1	include/nautilus/pmc.h	/^            uint8_t event_select1 : 4;$/;"	m	struct:pmc_ctl::__anon46::__anon47
event_stack	src/legion_runtime/lowlevel.cc	/^	EventStackEntry *event_stack;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
event_trace_file	src/legion_runtime/lowlevel.cc	/^    static char *event_trace_file = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
event_triggered	src/legion_runtime/lowlevel.cc	/^	  virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
event_triggered	src/legion_runtime/lowlevel.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
event_triggered	src/legion_runtime/lowlevel_dma.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
event_triggered	src/legion_runtime/lowlevel_dma.cc	/^    bool DmaRequest::Waiter::event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
event_triggered	src/legion_runtime/lowlevel_gpu.cc	/^      virtual bool event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
event_triggered	src/legion_runtime/lowlevel_gpu.cc	/^    bool GPUTask::event_triggered(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
events	include/nautilus/libccompat.h	/^    short events;$/;"	m	struct:pollfd
events	src/legion_runtime/lowlevel_dma.cc	/^      std::set<Event> events;$/;"	m	class:LegionRuntime::LowLevel::DelayedMemPairCopier	file:
events	src/legion_runtime/lowlevel_impl.h	/^      DynamicTable<EventTableAllocator> events;$/;"	m	struct:Node
events	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<EventImpl*> events;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
exclusive	src/legion_runtime/legion.h	/^      bool exclusive;$/;"	m	struct:LegionRuntime::HighLevel::LockRequest
exclusive	src/legion_runtime/lowlevel.cc	/^      bool exclusive;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
exclusive	src/legion_runtime/region_tree.h	/^      bool exclusive;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
exclusive	src/legion_runtime/runtime.h	/^        bool exclusive;$/;"	m	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
exclusive	src/legion_runtime/shared_lowlevel.cc	/^		bool exclusive;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
exclusive	src/legion_runtime/shared_lowlevel.cc	/^	bool exclusive;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
excp_codes	src/nautilus/idt.c	/^const char * excp_codes[NUM_EXCEPTIONS][2] = {$/;"	v
excp_entry_state	include/nautilus/idt.h	/^struct excp_entry_state {$/;"	s
excp_entry_t	include/nautilus/idt.h	/^typedef struct excp_entry_state excp_entry_t;$/;"	t	typeref:struct:excp_entry_state
excp_err	src/asm/excp_early.S	/^excp_err:$/;"	l
excp_err_str	src/asm/excp_early.S	/^excp_err_str:$/;"	l
excp_vec_t	include/nautilus/idt.h	/^typedef ulong_t excp_vec_t;$/;"	t
excp_vec_t	src/lua_src/lnautlib.c	/^typedef long unsigned int excp_vec_t;$/;"	t	file:
exec_conf	scripts/kconfig/mconf.c	/^static int exec_conf(void)$/;"	f	file:
exec_kernel_doc	scripts/basic/docproc.c	/^void exec_kernel_doc(char **svec)$/;"	f
execute	src/legion_runtime/lowlevel.cc	/^      void execute(Processor *proc)$/;"	f	class:LegionRuntime::LowLevel::Task
execute	src/legion_runtime/lowlevel.cc	/^    void MultiNodeRollUp::execute(void)$/;"	f	class:LegionRuntime::LowLevel::MultiNodeRollUp
execute	src/legion_runtime/lowlevel_gpu.cc	/^      virtual void execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
execute	src/legion_runtime/lowlevel_gpu.cc	/^      virtual void execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy2D
execute	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
execute_by_owner_id	src/acpi/acpica/aclocal.h	/^	u8 execute_by_owner_id;$/;"	m	struct:acpi_gpe_walk_info
execute_index_space	src/legion_runtime/legion.cc	/^    Future HighLevelRuntime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_index_space	src/legion_runtime/legion.cc	/^    FutureMap HighLevelRuntime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_index_space	src/legion_runtime/runtime.cc	/^    Future Runtime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_index_space	src/legion_runtime/runtime.cc	/^    FutureMap Runtime::execute_index_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_must_epoch	src/legion_runtime/legion.cc	/^    FutureMap HighLevelRuntime::execute_must_epoch(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_must_epoch	src/legion_runtime/runtime.cc	/^    FutureMap Runtime::execute_must_epoch(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_task	src/legion_runtime/legion.cc	/^    Future HighLevelRuntime::execute_task(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
execute_task	src/legion_runtime/runtime.cc	/^    Future Runtime::execute_task(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
execute_task	src/legion_runtime/shared_lowlevel.cc	/^    bool ProcessorImpl::execute_task(bool permit_shutdown, int flags)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
execute_task_launch	src/legion_runtime/runtime.cc	/^    void Runtime::execute_task_launch(Context ctx, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
executed	src/legion_runtime/legion_ops.h	/^      bool executed;$/;"	m	class:LegionRuntime::HighLevel::Operation
executed_children	src/legion_runtime/legion_tasks.h	/^      LegionContainer<Operation*,EXECUTED_CHILD_ALLOC>::set executed_children;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
executing_children	src/legion_runtime/legion_tasks.h	/^      LegionContainer<Operation*,EXECUTING_CHILD_ALLOC>::set executing_children;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
executing_processor	src/legion_runtime/legion_tasks.h	/^      Processor executing_processor;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
execution_times	src/legion_runtime/mapping_utilities.h	/^          std::list<long long> execution_times;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler::VariantProfile
exists	include/nautilus/fs.h	/^    int   (*exists)(void *state, char *path);$/;"	m	struct:nk_fs_int
exists	src/legion_runtime/lowlevel.h	/^      bool exists(void) const { return (is_id != 0) || (dim > 0); }$/;"	f	class:LegionRuntime::LowLevel::Domain
exists	src/legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; } $/;"	f	class:LegionRuntime::LowLevel::IndexSpace
exists	src/legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Event
exists	src/legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Memory
exists	src/legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Processor
exists	src/legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
exists	src/legion_runtime/lowlevel.h	/^      bool exists(void) const { return id != 0; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
exists	src/legion_runtime/runtime.h	/^      inline bool exists(void) const { return (ctx >= 0); }$/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
exists	src/nautilus/fs.c	/^static int exists(struct nk_fs *fs, char *path) $/;"	f	file:
exit	src/nautilus/libccompat.c	/^exit(int status)$/;"	f
exit_time	src/nautilus/scheduler.c	/^    uint64_t exit_time;    \/\/ time of actual completion \/ arrival$/;"	m	struct:nk_sched_thread_state	file:
exitstatus	scripts/basic/docproc.c	/^int exitstatus = 0;$/;"	v
exp	src/nautilus/libccompat.c	/^double exp(double x)$/;"	f
exp1	src/lua_src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	src/lua_src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
exp_rom_bar	include/dev/pci.h	/^            uint32_t exp_rom_bar;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
exp_rom_bar	include/dev/pci.h	/^            uint32_t exp_rom_bar;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
exp_types	src/test/ipi.c	/^static const char* exp_types[3] = {"ONEWAY", "ROUNDTRIP", "BROADCAST"};$/;"	v	file:
expand_symbol	scripts/kallsyms.c	/^static int expand_symbol(unsigned char *data, int len, char *result)$/;"	f	file:
expdesc	include/lua/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	include/lua/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expected	src/legion_runtime/shared_lowlevel.cc	/^                int expected;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
expected_btypes	src/acpi/acpica/aclocal.h	/^	u8 expected_btypes;$/;"	m	struct:acpi_name_info
expkind	include/lua/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon15
explicit_utility_procs	src/legion_runtime/lowlevel.h	/^      bool explicit_utility_procs;$/;"	m	class:LegionRuntime::LowLevel::Machine
explist	src/lua_src/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
exponent	include/acpi/actbl2.h	/^	uint32_t exponent;$/;"	m	struct:acpi_slic_key
exponent	src/nautilus/libccompat.c	/^        uint32_t exponent  : 11;$/;"	m	struct:ieee754dbl::__anon130	file:
expr	scripts/kconfig/expr.h	/^	struct expr *expr;$/;"	m	struct:expr_value	typeref:struct:expr_value::expr
expr	scripts/kconfig/expr.h	/^	struct expr *expr;$/;"	m	struct:property	typeref:struct:property::expr
expr	scripts/kconfig/expr.h	/^	struct expr *expr;$/;"	m	union:expr_data	typeref:struct:expr_data::expr
expr	scripts/kconfig/expr.h	/^struct expr {$/;"	s
expr	scripts/kconfig/zconf.tab.c	/^	struct expr *expr;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::expr	file:
expr	scripts/kconfig/zconf.y	/^expr:	  symbol				{ $$ = expr_alloc_symbol($1); }$/;"	l
expr	src/lua_src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
expr_alloc_and	scripts/kconfig/expr.c	/^struct expr *expr_alloc_and(struct expr *e1, struct expr *e2)$/;"	f
expr_alloc_comp	scripts/kconfig/expr.c	/^struct expr *expr_alloc_comp(enum expr_type type, struct symbol *s1, struct symbol *s2)$/;"	f
expr_alloc_one	scripts/kconfig/expr.c	/^struct expr *expr_alloc_one(enum expr_type type, struct expr *ce)$/;"	f
expr_alloc_or	scripts/kconfig/expr.c	/^struct expr *expr_alloc_or(struct expr *e1, struct expr *e2)$/;"	f
expr_alloc_symbol	scripts/kconfig/expr.c	/^struct expr *expr_alloc_symbol(struct symbol *sym)$/;"	f
expr_alloc_two	scripts/kconfig/expr.c	/^struct expr *expr_alloc_two(enum expr_type type, struct expr *e1, struct expr *e2)$/;"	f
expr_calc_value	scripts/kconfig/expr.c	/^tristate expr_calc_value(struct expr *e)$/;"	f
expr_compare_type	scripts/kconfig/expr.c	/^int expr_compare_type(enum expr_type t1, enum expr_type t2)$/;"	f
expr_contains_symbol	scripts/kconfig/expr.c	/^int expr_contains_symbol(struct expr *dep, struct symbol *sym)$/;"	f
expr_copy	scripts/kconfig/expr.c	/^struct expr *expr_copy(struct expr *org)$/;"	f
expr_data	scripts/kconfig/expr.h	/^union expr_data {$/;"	u
expr_depends_symbol	scripts/kconfig/expr.c	/^bool expr_depends_symbol(struct expr *dep, struct symbol *sym)$/;"	f
expr_eliminate_dups	scripts/kconfig/expr.c	/^struct expr *expr_eliminate_dups(struct expr *e)$/;"	f
expr_eliminate_dups1	scripts/kconfig/expr.c	/^static void expr_eliminate_dups1(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	file:
expr_eliminate_dups2	scripts/kconfig/expr.c	/^static void expr_eliminate_dups2(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	file:
expr_eliminate_eq	scripts/kconfig/expr.c	/^void expr_eliminate_eq(struct expr **ep1, struct expr **ep2)$/;"	f
expr_eliminate_yn	scripts/kconfig/expr.c	/^struct expr *expr_eliminate_yn(struct expr *e)$/;"	f
expr_eq	scripts/kconfig/expr.c	/^int expr_eq(struct expr *e1, struct expr *e2)$/;"	f
expr_extract_eq	scripts/kconfig/expr.c	/^void expr_extract_eq(enum expr_type type, struct expr **ep, struct expr **ep1, struct expr **ep2)$/;"	f
expr_extract_eq_and	scripts/kconfig/expr.c	/^struct expr *expr_extract_eq_and(struct expr **ep1, struct expr **ep2)$/;"	f
expr_extract_eq_or	scripts/kconfig/expr.c	/^struct expr *expr_extract_eq_or(struct expr **ep1, struct expr **ep2)$/;"	f
expr_fprint	scripts/kconfig/expr.c	/^void expr_fprint(struct expr *e, FILE *out)$/;"	f
expr_free	scripts/kconfig/expr.c	/^void expr_free(struct expr *e)$/;"	f
expr_gstr_print	scripts/kconfig/expr.c	/^void expr_gstr_print(struct expr *e, struct gstr *gs)$/;"	f
expr_is_no	scripts/kconfig/expr.h	/^static inline int expr_is_no(struct expr *e)$/;"	f
expr_is_yes	scripts/kconfig/expr.h	/^static inline int expr_is_yes(struct expr *e)$/;"	f
expr_join_and	scripts/kconfig/expr.c	/^struct expr *expr_join_and(struct expr *e1, struct expr *e2)$/;"	f
expr_join_or	scripts/kconfig/expr.c	/^struct expr *expr_join_or(struct expr *e1, struct expr *e2)$/;"	f
expr_print	scripts/kconfig/expr.c	/^void expr_print(struct expr *e, void (*fn)(void *, const char *), void *data, int prevtoken)$/;"	f
expr_print_file_helper	scripts/kconfig/expr.c	/^static void expr_print_file_helper(void *data, const char *str)$/;"	f	file:
expr_print_gstr_helper	scripts/kconfig/expr.c	/^static void expr_print_gstr_helper(void *data, const char *str)$/;"	f	file:
expr_print_help	scripts/kconfig/qconf.cc	/^static void expr_print_help(void *data, const char *str)$/;"	f	file:
expr_trans_bool	scripts/kconfig/expr.c	/^struct expr *expr_trans_bool(struct expr *e)$/;"	f
expr_trans_compare	scripts/kconfig/expr.c	/^struct expr *expr_trans_compare(struct expr *e, enum expr_type type, struct symbol *sym)$/;"	f
expr_transform	scripts/kconfig/expr.c	/^struct expr *expr_transform(struct expr *e)$/;"	f
expr_type	scripts/kconfig/expr.h	/^enum expr_type {$/;"	g
expr_value	scripts/kconfig/expr.h	/^struct expr_value {$/;"	s
exprstat	src/lua_src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
ext2_close	src/fs/ext2/ext2.c	/^static void ext2_close(void *state, void *file) $/;"	f	file:
ext2_create	src/fs/ext2/ext2.c	/^static void *ext2_create(void *state, char *path, int dir)$/;"	f	file:
ext2_create_dir	src/fs/ext2/ext2.c	/^static int ext2_create_dir(void *state, char *path)$/;"	f	file:
ext2_create_file	src/fs/ext2/ext2.c	/^static void *ext2_create_file(void *state, char *path)$/;"	f	file:
ext2_dir_entry	src/fs/ext2/ext2fs.h	/^struct ext2_dir_entry {$/;"	s
ext2_dir_entry_2	src/fs/ext2/ext2fs.h	/^struct ext2_dir_entry_2 {$/;"	s
ext2_dirhash_t	src/fs/ext2/ext2fs.h	/^typedef __u32		ext2_dirhash_t;$/;"	t
ext2_exists	src/fs/ext2/ext2.c	/^static int ext2_exists(void *state, char *path) $/;"	f	file:
ext2_group_desc	src/fs/ext2/ext2fs.h	/^struct ext2_group_desc$/;"	s
ext2_ino_t	src/fs/ext2/ext2fs.h	/^typedef __u32		ext2_ino_t;$/;"	t
ext2_inode	src/fs/ext2/ext2fs.h	/^struct ext2_inode {$/;"	s
ext2_inter	src/fs/ext2/ext2.c	/^static struct nk_fs_int ext2_inter = {$/;"	v	typeref:struct:nk_fs_int	file:
ext2_off64_t	src/fs/ext2/ext2fs.h	/^typedef __u64		ext2_off64_t;$/;"	t
ext2_off_t	src/fs/ext2/ext2fs.h	/^typedef __u32		ext2_off_t;$/;"	t
ext2_open	src/fs/ext2/ext2.c	/^static void * ext2_open(void *state, char *path) $/;"	f	file:
ext2_read	src/fs/ext2/ext2.c	/^static ssize_t ext2_read(void *state, void *file, void *srcdest, off_t offset, size_t num_bytes)$/;"	f	file:
ext2_read_write	src/fs/ext2/ext2.c	/^static ssize_t ext2_read_write(void *state, void *file, void *srcdest, off_t offset, size_t num_bytes, int write)$/;"	f	file:
ext2_remove	src/fs/ext2/ext2.c	/^int ext2_remove(void *state, char *path) $/;"	f
ext2_stat	src/fs/ext2/ext2.c	/^static int ext2_stat(void *state, void *file, struct nk_fs_stat *st)$/;"	f	file:
ext2_stat_path	src/fs/ext2/ext2.c	/^static int ext2_stat_path(void *state, char *path, struct nk_fs_stat *st)$/;"	f	file:
ext2_state	src/fs/ext2/ext2.c	/^struct ext2_state {$/;"	s	file:
ext2_super_block	src/fs/ext2/ext2fs.h	/^struct ext2_super_block {$/;"	s
ext2_swab	lib/bitmap.c	/^static inline unsigned long ext2_swab(const unsigned long y)$/;"	f	file:
ext2_swabp	lib/bitmap.c	/^static inline unsigned long ext2_swabp(const unsigned long * x)$/;"	f	file:
ext2_truncate	src/fs/ext2/ext2.c	/^static int ext2_truncate(void *state, void *file, off_t len)$/;"	f	file:
ext2_write	src/fs/ext2/ext2.c	/^static ssize_t ext2_write(void *state, void *file, void *srcdest, off_t offset, size_t num_bytes)$/;"	f	file:
ext4_offsetof	src/fs/ext2/ext2fs.h	257;"	d
ext4_offsetof	src/fs/ext2/ext2fs.h	259;"	d
ext_address64	include/acpi/acrestyp.h	/^	struct acpi_resource_extended_address64 ext_address64;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_extended_address64
ext_table_checksum	include/nautilus/acpi.h	/^    uint8_t  ext_table_checksum;$/;"	m	struct:mp_table
ext_table_len	include/nautilus/acpi.h	/^    uint16_t ext_table_len;$/;"	m	struct:mp_table
extapicspace	include/nautilus/cpuid.h	/^            uint8_t extapicspace: 1; \/\/ extended APIC space$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
extended_checksum	include/acpi/actbl.h	/^	uint8_t extended_checksum;	\/* Checksum of entire table (ACPI 2.0+) *\/$/;"	m	struct:acpi_table_rsdp
extended_data	include/acpi/actbl2.h	/^	uint32_t extended_data;$/;"	m	struct:acpi_ivrs_device8b
extended_irq	include/acpi/acrestyp.h	/^	struct acpi_resource_extended_irq extended_irq;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_extended_irq
extensions	include/acpi/actbl2.h	/^	uint16_t extensions;$/;"	m	struct:acpi_ibft_control
external_name	src/acpi/acpica/aclocal.h	/^	char *external_name;$/;"	m	struct:acpi_parse_obj_asl
external_name	src/acpi/acpica/aclocal.h	/^	const char *external_name;$/;"	m	struct:acpi_namestring_info
external_specification	include/nautilus/multiboot2.h	/^  multiboot_uint8_t external_specification[256];$/;"	m	struct:multiboot_vbe_mode_info_block
external_specification	include/nautilus/multiboot2.h	/^  multiboot_uint8_t external_specification[512];$/;"	m	struct:multiboot_vbe_info_block
external_wait	src/legion_runtime/lowlevel.cc	/^    void Event::Impl::external_wait(Event::gen_t gen_needed)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
external_wait	src/legion_runtime/lowlevel.cc	/^    void Event::external_wait(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
external_wait	src/legion_runtime/shared_lowlevel.cc	/^    void Event::external_wait(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
externalfunctions	scripts/basic/docproc.c	/^FILEONLY *externalfunctions;$/;"	v
extfunc	scripts/basic/docproc.c	/^void extfunc(char * filename) { docfunctions(filename, FUNCTION);   }$/;"	f
extra	include/lua/lobject.h	/^    lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString::__anon5
extra	include/lua/lstate.h	/^  ptrdiff_t extra;$/;"	m	struct:CallInfo
extra	src/acpi/acpica/aclocal.h	/^	u8 extra;$/;"	m	struct:acpi_parse_obj_asl
extra_value	src/acpi/acpica/aclocal.h	/^	u32 extra_value;$/;"	m	struct:acpi_parse_obj_asl
extract_accessor	src/legion_runtime/accessor.h	/^    inline RegionAccessor<AT,ET> extract_accessor(const RT &region) $/;"	f	namespace:LegionRuntime::Accessor
extract_mask	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline uint64_t AVXTLBitMask<MAX>::extract_mask(__m256d value)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
extract_mask	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline uint64_t AVXTLBitMask<MAX>::extract_mask(__m256i value)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
extract_mask	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline uint64_t SSETLBitMask<MAX>::extract_mask(__m128i value)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
f	include/lua/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream
f	include/lua/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value
f	include/lua/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	include/lua/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	include/lua/lparser.h	/^  int f;  \/* patch list of `exit when false' *\/$/;"	m	struct:expdesc
f	src/lua_src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f16c	include/nautilus/cpuid.h	/^            uint8_t f16c     : 1; \/\/ 16-bit floating-point conversion instructions$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
f2cOp	src/test/hpcg/mg-data.h	/^    Vector f2cOp;$/;"	m	struct:lgncg::MGData
fGeom	src/test/hpcg/hpcg-problem.cc	/^    lgncg::Geometry fGeom;$/;"	m	struct:__anon113::PF2CTaskArgs	file:
f_call	src/lua_src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_flush	src/lua_src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	src/lua_src/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	src/lua_src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	src/lua_src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	src/lua_src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	src/lua_src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	src/lua_src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	src/lua_src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_tostring	src/lua_src/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	src/lua_src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
fabs	src/nautilus/libccompat.c	/^double fabs(double __x){$/;"	f
facs	include/acpi/actbl.h	/^	uint32_t facs;		\/* 32-bit physical address of FACS *\/$/;"	m	struct:acpi_table_fadt
failed_index_tasks	src/legion_runtime/legion_ops.h	/^      std::set<IndexTask*> failed_index_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
failed_individual_tasks	src/legion_runtime/legion_ops.h	/^      std::set<IndividualTask*> failed_individual_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
failed_mappings	src/legion_runtime/default_mapper.h	/^      std::map<UniqueID,unsigned> failed_mappings;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
failed_slices	src/legion_runtime/legion_tasks.h	/^      std::set<SliceTask*> failed_slices;$/;"	m	class:LegionRuntime::HighLevel::DeferredSlicer
failed_thiefs	src/legion_runtime/runtime.h	/^      std::multimap<MapperID,Processor> failed_thiefs;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
false	include/nautilus/naut_types.h	79;"	d
fasttm	include/lua/ltm.h	44;"	d
fb	src/arch/k1om/xeon_phi.c	/^  volatile uint16_t * fb;$/;"	m	struct:__anon128	file:
fb	xeon_phi/linux_usr/phi_console.c	/^    volatile uint16_t * fb;$/;"	m	struct:__anon79	file:
fbmem_gpu_base	src/legion_runtime/lowlevel_gpu.cc	/^      void *fbmem_gpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
fbmem_reserve	src/legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_reserve, fbmem_reserve;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
fbmem_size	src/legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_size, fbmem_size;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
fclose	src/nautilus/libccompat.c	/^fclose (FILE * f)$/;"	f
fd	include/nautilus/fprintk.h	/^    nk_fs_fd_t fd;$/;"	m	struct:fprintk_state
fd	include/nautilus/libccompat.h	/^    int fd;$/;"	m	struct:pollfd
fd	include/test/ipi.h	/^    nk_fs_fd_t fd;    \/\/ the FD to use if we should$/;"	m	struct:ipi_exp_data
fd	scripts/kconfig/lxdialog/textbox.c	/^static int hscroll, fd, file_size, bytes_read;$/;"	v	file:
fdopen	src/nautilus/libccompat.c	/^fdopen (int fd, const char * mode)$/;"	f
feat_flags	include/nautilus/acpi.h	/^   uint32_t feat_flags;$/;"	m	struct:mp_table_entry_cpu
feat_flags	include/nautilus/smp.h	/^    uint32_t feat_flags;$/;"	m	struct:cpu
fence_gen	src/legion_runtime/legion_tasks.h	/^      GenerationID fence_gen;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
fence_op_lock	src/legion_runtime/runtime.h	/^      Reservation fence_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
feof	src/nautilus/libccompat.c	/^int feof(FILE * x)$/;"	f
ferror	src/nautilus/libccompat.c	/^ferror (FILE * f)$/;"	f
fflush	src/nautilus/libccompat.c	/^int fflush (FILE * f)$/;"	f
ffs	include/asm/bitops.h	/^static inline int ffs(int x)$/;"	f
ffxsr	include/nautilus/cpuid.h	/^            uint8_t ffxsr       : 1; \/\/ FXSAVE & FXSTOR instr optimizations$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
ffz	include/asm/bitops.h	/^static inline unsigned long ffz(unsigned long word)$/;"	f
fgets	src/nautilus/libccompat.c	/^char *fgets(char *str, int n, FILE *stream)$/;"	f
fgets_check_stream	scripts/kconfig/conf.c	/^static char *fgets_check_stream(char *s, int size, FILE *stream)$/;"	f	file:
fibonacci_task	src/test/tasks_and_futures.cc	/^int fibonacci_task(const Task *task,$/;"	f
fid	src/legion_runtime/legion_logging.h	/^        FieldID fid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
fid	src/legion_runtime/legion_tasks.h	/^        FieldID    fid;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
fid	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::FieldID fid;$/;"	m	struct:lgncg::Vector
field	src/lua_src/lparser.c	/^static void field (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
fieldSpaceID	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::FieldSpaceID fieldSpaceID;$/;"	m	struct:lgncg::Vector
field_bit_length	src/acpi/acpica/aclocal.h	/^	u32 field_bit_length;$/;"	m	struct:acpi_create_field_info
field_bit_position	src/acpi/acpica/aclocal.h	/^	u32 field_bit_position;$/;"	m	struct:acpi_create_field_info
field_component	src/legion_runtime/legion_logging.h	/^        unsigned field_component;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
field_flag	src/acpi/acpica/aclocal.h	/^	u8 field_flag;$/;"	m	struct:acpi_field_info
field_flags	src/acpi/acpica/aclocal.h	/^	u8 field_flags;$/;"	m	struct:acpi_create_field_info
field_handle	src/legion_runtime/legion_logging.h	/^        FieldSpace field_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
field_handle	src/legion_runtime/legion_logging.h	/^        FieldSpace field_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
field_indexes	src/legion_runtime/region_tree.h	/^      std::map<unsigned\/*index*\/,FieldID> field_indexes;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
field_infos	src/legion_runtime/legion_profiling.h	/^        std::map<unsigned,size_t> field_infos;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
field_infos	src/legion_runtime/region_tree.h	/^      std::map<FieldID,Domain::CopySrcDstField> field_infos;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
field_mask	src/legion_runtime/region_tree.h	/^      FieldMask field_mask;$/;"	m	struct:LegionRuntime::HighLevel::GenericUser
field_mask	src/legion_runtime/region_tree.h	/^      const FieldMask field_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalPathRegistrar
field_mask	src/legion_runtime/region_tree.h	/^      const FieldMask field_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegistrar
field_node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *field_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
field_node	src/legion_runtime/region_tree.h	/^      FieldSpaceNode *const field_node;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
field_nodes	src/legion_runtime/region_tree.h	/^      std::map<FieldSpace,FieldSpaceNode*>     field_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
field_offset	src/legion_runtime/accessor.h	/^	  off_t field_offset;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
field_size	src/legion_runtime/legion_tasks.h	/^        size_t     field_size;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
field_size	src/legion_runtime/lowlevel.cc	/^      const size_t &field_size(int idx) const { return *((&num_fields)+idx+1); }$/;"	f	struct:LegionRuntime::LowLevel::CreateInstancePayload
field_size	src/legion_runtime/lowlevel.cc	/^      size_t &field_size(int idx) { return *((&num_fields)+idx+1); }$/;"	f	struct:LegionRuntime::LowLevel::CreateInstancePayload
field_size	src/legion_runtime/region_tree.h	/^        size_t field_size;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
field_sizes	src/legion_runtime/lowlevel_impl.h	/^	int field_sizes[MAX_FIELDS_PER_INST];$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
field_sizes	src/legion_runtime/shared_lowlevel.cc	/^        std::vector<size_t> field_sizes;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
field_space	src/legion_runtime/legion.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::FieldAllocator
field_space	src/legion_runtime/legion.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
field_space	src/legion_runtime/legion.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
field_space	src/legion_runtime/legion_ops.h	/^      FieldSpace field_space;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
field_states	src/legion_runtime/region_tree.h	/^      LegionContainer<FieldState,LOGICAL_FIELD_STATE_ALLOC>::list field_states;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
field_type	src/acpi/acpica/aclocal.h	/^	u8 field_type;$/;"	m	struct:acpi_create_field_info
field_versions	src/legion_runtime/region_tree.h	/^                     LOGICAL_FIELD_VERSIONS_ALLOC>::map field_versions;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
field_width	src/nautilus/printk.c	/^	int			field_width;	\/* width of output field *\/$/;"	m	struct:printf_spec	file:
fieldargs	src/lua_src/lbitlib.c	/^static int fieldargs (lua_State *L, int farg, int *width) {$/;"	f	file:
fields	src/legion_runtime/legion.h	/^      std::set<FieldID>                 fields;$/;"	m	class:LegionRuntime::HighLevel::Acquire
fields	src/legion_runtime/legion.h	/^      std::set<FieldID>                 fields;$/;"	m	class:LegionRuntime::HighLevel::Release
fields	src/legion_runtime/legion.h	/^      std::set<FieldID>               fields;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
fields	src/legion_runtime/legion.h	/^      std::set<FieldID>               fields;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
fields	src/legion_runtime/legion_logging.h	/^        std::string fields;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
fields	src/legion_runtime/region_tree.h	/^      std::map<FieldID,FieldInfo> fields;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
fieldsel	src/lua_src/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
file	scripts/kconfig/expr.h	/^	struct file *file;$/;"	m	struct:menu	typeref:struct:menu::file
file	scripts/kconfig/expr.h	/^	struct file *file;$/;"	m	struct:property	typeref:struct:property::file
file	scripts/kconfig/expr.h	/^struct file {$/;"	s
file	scripts/kconfig/kxgettext.c	/^	char*		 file;$/;"	m	struct:file_line	file:
file	scripts/kconfig/lex.zconf.c	/^	struct file *file;$/;"	m	struct:__anon1	typeref:struct:__anon1::file	file:
file	scripts/kconfig/zconf.tab.c	/^	struct file *file;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::file	file:
file	src/nautilus/fs.c	/^    void          *file;$/;"	m	struct:nk_fs_open_file_state	file:
file_create	src/nautilus/fs.c	/^static void *file_create(struct nk_fs *fs, char* path) $/;"	f	file:
file_line	scripts/kconfig/kxgettext.c	/^struct file_line {$/;"	s	file:
file_line__new	scripts/kconfig/kxgettext.c	/^static struct file_line *file_line__new(char *file, int lineno)$/;"	f	file:
file_list	scripts/kconfig/menu.c	/^struct file *file_list;$/;"	v	typeref:struct:file
file_lookup	scripts/kconfig/util.c	/^struct file *file_lookup(const char *name)$/;"	f
file_node	src/nautilus/fs.c	/^    struct list_head file_node;$/;"	m	struct:nk_fs_open_file_state	typeref:struct:nk_fs_open_file_state::list_head	file:
file_open	src/nautilus/fs.c	/^static void * file_open(struct nk_fs *fs, char *path, int access) $/;"	f	file:
file_read	src/nautilus/fs.c	/^static inline ssize_t file_read(nk_fs_fd_t fd, char *buf, size_t num_bytes) $/;"	f	file:
file_size	scripts/kconfig/lxdialog/textbox.c	/^static int hscroll, fd, file_size, bytes_read;$/;"	v	file:
file_stat	src/nautilus/fs.c	/^static int file_stat(struct nk_fs *fs, void *file, struct nk_fs_stat *st) $/;"	f	file:
file_trunc	src/nautilus/fs.c	/^static int file_trunc(nk_fs_fd_t fd, off_t len)$/;"	f	file:
file_type	src/fs/ext2/ext2fs.h	/^	__u8	file_type;$/;"	m	struct:ext2_dir_entry_2
file_write	src/nautilus/fs.c	/^static inline ssize_t file_write(nk_fs_fd_t fd, char *buf, size_t num_bytes) $/;"	f	file:
file_write_dep	scripts/kconfig/util.c	/^int file_write_dep(const char *name)$/;"	f
filename	scripts/basic/docproc.c	/^	char *filename;$/;"	m	struct:symfile	file:
filename	scripts/kconfig/mconf.c	/^static char filename[PATH_MAX+1] = ".config";$/;"	v	file:
filename	src/acpi/acpica/aclocal.h	/^	char *filename;$/;"	m	struct:acpi_parse_obj_asl
filename_exist	scripts/basic/docproc.c	/^struct symfile * filename_exist(char * filename)$/;"	f
files	scripts/kconfig/kxgettext.c	/^	struct file_line *files;$/;"	m	struct:message	typeref:struct:message::file_line	file:
fill_row	scripts/kconfig/gconf.c	/^static gchar **fill_row(struct menu *menu)$/;"	f	file:
filter_close_operations	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::filter_close_operations(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
filter_curr_epoch_users	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::filter_curr_epoch_users(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
filter_degenerate	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::filter_degenerate(T lower, T upper,$/;"	f	class:LegionRuntime::HighLevel::Segment
filter_degenerate	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::filter_degenerate(std::set<Segment<T>*> &segments)$/;"	f	class:LegionRuntime::HighLevel::Segment
filter_list	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::filter_list($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
filter_local_users	src/legion_runtime/region_tree.cc	/^    void MaterializedView::filter_local_users($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
filter_local_users	src/legion_runtime/region_tree.cc	/^    void MaterializedView::filter_local_users(Event term_event) $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
filter_mask	src/legion_runtime/region_tree.h	/^      const FieldMask filter_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
filter_mask	src/legion_runtime/region_tree.h	/^      const FieldMask filter_mask;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
filter_memories	src/legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::filter_memories(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filter_memories	src/legion_runtime/mapping_utilities.cc	/^      const std::set<Memory>& MachineQueryInterface::filter_memories($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filter_prev_epoch_users	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::filter_prev_epoch_users(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
filter_processors	src/legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::filter_processors(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filter_processors	src/legion_runtime/mapping_utilities.cc	/^      const std::set<Processor>& MachineQueryInterface::filter_processors($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
filtered_users	src/legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> filtered_users;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
filterpc	src/lua_src/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:
final_aml_length	src/acpi/acpica/aclocal.h	/^	u32 final_aml_length;$/;"	m	struct:acpi_parse_obj_asl
final_aml_offset	src/acpi/acpica/aclocal.h	/^	u32 final_aml_offset;$/;"	m	struct:acpi_parse_obj_asl
finalize	src/legion_runtime/lowlevel.cc	/^  \/*static*\/ void Logger::finalize(void)$/;"	f	class:LegionRuntime::Logger
finalize	src/legion_runtime/shared_lowlevel.cc	/^  \/*static*\/ void Logger::finalize(void)$/;"	f	class:LegionRuntime::Logger
finalize	src/test/hpcg/cg.h	/^finalize(void) { }$/;"	f	namespace:lgncg::cg
finalize	src/test/hpcg/lgncg.cc	/^finalize(void) { }$/;"	f	namespace:lgncg
finalize_field_destroy	src/legion_runtime/runtime.cc	/^    void Runtime::finalize_field_destroy(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_field_destroy	src/legion_runtime/runtime.cc	/^    void Runtime::finalize_field_destroy(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_field_space_destroy	src/legion_runtime/runtime.cc	/^    void Runtime::finalize_field_space_destroy(FieldSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_index_partition_destroy	src/legion_runtime/runtime.cc	/^    void Runtime::finalize_index_partition_destroy(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_index_space_destroy	src/legion_runtime/runtime.cc	/^    bool Runtime::finalize_index_space_destroy(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_legion_logging	src/legion_runtime/legion_logging.h	/^      static void finalize_legion_logging(const std::set<Processor> &processors)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
finalize_logical_partition_destroy	src/legion_runtime/runtime.cc	/^    void Runtime::finalize_logical_partition_destroy($/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_logical_region_destroy	src/legion_runtime/runtime.cc	/^    bool Runtime::finalize_logical_region_destroy(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
finalize_processor	src/legion_runtime/legion_profiling.h	/^      static inline void finalize_processor(Processor proc)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
finalreport	src/lua_src/lua.c	/^static void finalreport (lua_State *L, int status) {$/;"	f	file:
find_address_space	src/legion_runtime/runtime.cc	/^    AddressSpaceID Runtime::find_address_space(Processor target) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_adjoining	src/legion_runtime/rectangle_set.h	/^    inline Segment<T>* Segment<T>::find_adjoining(Segment<T> *par, $/;"	f	class:LegionRuntime::HighLevel::Segment
find_best_token	scripts/kallsyms.c	/^static int find_best_token(void)$/;"	f	file:
find_bounding_roots	src/legion_runtime/region_tree.cc	/^    void CompositeNode::find_bounding_roots(CompositeView *target,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
find_buddy	src/nautilus/mm/buddy.c	/^find_buddy (struct buddy_mempool *mp, struct block *block, ulong_t order)$/;"	f	file:
find_conflicted_regions	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::find_conflicted_regions($/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
find_conflicting_regions	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(AcquireOp *acquire,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_conflicting_regions	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(CopyOp *copy,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_conflicting_regions	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(ReleaseOp *release,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_conflicting_regions	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::find_conflicting_regions(TaskOp *task,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_copy_across_instances	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_copy_across_instances(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_copy_preconditions	src/legion_runtime/region_tree.cc	/^    void CompositeView::find_copy_preconditions(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
find_copy_preconditions	src/legion_runtime/region_tree.cc	/^    void MaterializedView::find_copy_preconditions(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
find_copy_preconditions	src/legion_runtime/region_tree.cc	/^    void ReductionView::find_copy_preconditions(ReductionOpID redop,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
find_copy_preconditions_above	src/legion_runtime/region_tree.cc	/^    void MaterializedView::find_copy_preconditions_above(Color child_color,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
find_disabled	src/legion_runtime/lowlevel.cc	/^    int ElementMask::find_disabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_disabled	src/legion_runtime/shared_lowlevel.cc	/^    int ElementMask::find_disabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_distributed_collectable	src/legion_runtime/runtime.cc	/^    DistributedCollectable* Runtime::find_distributed_collectable($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_distributed_id	src/legion_runtime/garbage_collection.cc	/^    DistributedID HierarchicalCollectable::find_distributed_id($/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
find_enabled	src/legion_runtime/lowlevel.cc	/^    int ElementMask::find_enabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_enabled	src/legion_runtime/shared_lowlevel.cc	/^    int ElementMask::find_enabled(int count \/*= 1 *\/, int start \/*= 0*\/) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
find_enclosing_local_fields	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
find_enclosing_local_fields	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::InlineTask
find_enclosing_local_fields	src/legion_runtime/legion_tasks.cc	/^    void PointTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::PointTask
find_enclosing_local_fields	src/legion_runtime/legion_tasks.cc	/^    void RemoteTask::find_enclosing_local_fields($/;"	f	class:LegionRuntime::HighLevel::RemoteTask
find_enclosing_physical_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext IndividualTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
find_enclosing_physical_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext InlineTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::InlineTask
find_enclosing_physical_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext PointTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::PointTask
find_enclosing_physical_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext RemoteTask::find_enclosing_physical_context($/;"	f	class:LegionRuntime::HighLevel::RemoteTask
find_export_symbols	scripts/basic/docproc.c	/^void find_export_symbols(char * filename)$/;"	f
find_field	src/legion_runtime/shared_lowlevel.cc	/^    static size_t find_field(const std::vector<size_t>& field_sizes,$/;"	f	namespace:LegionRuntime::LowLevel
find_field_info	src/legion_runtime/region_tree.cc	/^    const Domain::CopySrcDstField& LayoutDescription::find_field_info($/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
find_field_offsets	src/legion_runtime/region_tree.cc	/^    void FoldReductionManager::find_field_offsets(const FieldMask &reduce_mask,$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
find_field_offsets	src/legion_runtime/region_tree.cc	/^    void ListReductionManager::find_field_offsets(const FieldMask &reduce_mask,$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
find_field_start	src/legion_runtime/lowlevel.cc	/^    static void find_field_start(const int *field_sizes, off_t byte_offset, size_t size, off_t& field_start, int& field_size)$/;"	f	namespace:LegionRuntime::LowLevel
find_field_start	src/legion_runtime/lowlevel_dma.cc	/^    static void find_field_start(const int *field_sizes, off_t byte_offset, size_t size, off_t& field_start, int& field_size)$/;"	f	namespace:LegionRuntime::LowLevel
find_first_bit	include/lib/bitops.h	261;"	d
find_first_bit	lib/bitmap.c	/^unsigned long find_first_bit(const unsigned long *addr, unsigned long size)$/;"	f
find_first_set	src/legion_runtime/legion_utilities.h	/^    inline int AVXBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
find_first_set	src/legion_runtime/legion_utilities.h	/^    inline int AVXTLBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
find_first_set	src/legion_runtime/legion_utilities.h	/^    inline int BitMask<T,MAX,SHIFT,MASK>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
find_first_set	src/legion_runtime/legion_utilities.h	/^    inline int SSEBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
find_first_set	src/legion_runtime/legion_utilities.h	/^    inline int SSETLBitMask<MAX>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
find_first_set	src/legion_runtime/legion_utilities.h	/^    inline int TLBitMask<T,MAX,SHIFT,MASK>::find_first_set(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
find_first_zero_bit	include/lib/bitops.h	262;"	d
find_first_zero_bit	lib/bitmap.c	/^unsigned long find_first_zero_bit(const unsigned long *addr, unsigned long size)$/;"	f
find_forward_MPI_mapping	src/legion_runtime/legion.cc	/^                                HighLevelRuntime::find_forward_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
find_forward_MPI_mapping	src/legion_runtime/runtime.cc	/^    const std::map<int,AddressSpace>& Runtime::find_forward_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_future	src/legion_runtime/runtime.cc	/^    Future::Impl* Runtime::find_future(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_global_memory	src/legion_runtime/mapping_utilities.cc	/^      Memory MachineQueryInterface::find_global_memory(void)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_global_memory	src/legion_runtime/mapping_utilities.cc	/^      \/*static*\/ Memory MachineQueryInterface::find_global_memory($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_hierarchical_collectable	src/legion_runtime/runtime.cc	/^    HierarchicalCollectable* Runtime::find_hierarchical_collectable($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_high	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ Segment<T>* RectangleSet<T,DISCRETE>::find_high($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
find_inline_function	src/legion_runtime/runtime.cc	/^    \/*static*\/ InlineFnptr Runtime::find_inline_function($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_intersection_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& CompositeNode::find_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::CompositeNode
find_layout_description	src/legion_runtime/region_tree.cc	/^    LayoutDescription* FieldSpaceNode::find_layout_description($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
find_local_copy_preconditions	src/legion_runtime/region_tree.cc	/^    void MaterializedView::find_local_copy_preconditions(int local_color,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
find_location	src/test/circuit.cc	/^PointerLocation find_location(ptr_t ptr, const std::set<ptr_t> &private_nodes,$/;"	f
find_low	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ Segment<T>* RectangleSet<T,DISCRETE>::find_low($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
find_manager	src/legion_runtime/region_tree.cc	/^    PhysicalManager* RegionTreeForest::find_manager(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
find_mapper	src/legion_runtime/runtime.cc	/^    Mapper* ProcessorManager::find_mapper(MapperID mid) const$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
find_memory	src/legion_runtime/runtime.cc	/^    MemoryManager* Runtime::find_memory(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_memory_kind	src/legion_runtime/mapping_utilities.cc	/^      Memory MachineQueryInterface::find_memory_kind(Memory mem, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_kind	src/legion_runtime/mapping_utilities.cc	/^      Memory MachineQueryInterface::find_memory_kind(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_kind	src/legion_runtime/mapping_utilities.cc	/^      \/*static*\/ Memory MachineQueryInterface::find_memory_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_stack	src/legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::find_memory_stack(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_stack	src/legion_runtime/mapping_utilities.cc	/^      void MachineQueryInterface::find_memory_stack(Memory mem,$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_memory_stack	src/legion_runtime/mapping_utilities.cc	/^      void MachineQueryInterface::find_memory_stack(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_messenger	src/legion_runtime/runtime.cc	/^    MessageManager* Runtime::find_messenger(AddressSpaceID sid) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_messenger	src/legion_runtime/runtime.cc	/^    MessageManager* Runtime::find_messenger(Processor target) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_mp_pointer	src/arch/x64/smp.c	/^find_mp_pointer (void)$/;"	f	file:
find_next_bit	lib/bitmap.c	/^unsigned long find_next_bit(const unsigned long *addr, unsigned long size,$/;"	f
find_next_bit_le	lib/bitmap.c	/^unsigned long find_next_bit_le(const void *addr, unsigned$/;"	f
find_next_zero_bit	lib/bitmap.c	/^unsigned long find_next_zero_bit(const unsigned long *addr, unsigned long size,$/;"	f
find_next_zero_bit_le	lib/bitmap.c	/^unsigned long find_next_zero_bit_le(const void *addr, unsigned$/;"	f
find_one_adjacent	src/legion_runtime/rectangle_set.h	/^    inline Segment<T>* Segment<T>::find_one_adjacent(T value) const$/;"	f	class:LegionRuntime::HighLevel::Segment
find_operation_index	src/legion_runtime/legion_ops.cc	/^    int MustEpochOp::find_operation_index(Operation *op, GenerationID op_gen)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
find_or_create_future	src/legion_runtime/runtime.cc	/^    Future::Impl* Runtime::find_or_create_future(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_or_init_remote_context	src/legion_runtime/runtime.cc	/^    RemoteTask* Runtime::find_or_init_remote_context(UniqueID uid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_outermost_physical_context	src/legion_runtime/legion_tasks.cc	/^    RemoteTask* IndividualTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
find_outermost_physical_context	src/legion_runtime/legion_tasks.cc	/^    RemoteTask* InlineTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
find_outermost_physical_context	src/legion_runtime/legion_tasks.cc	/^    RemoteTask* PointTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
find_outermost_physical_context	src/legion_runtime/legion_tasks.cc	/^    RemoteTask* RemoteTask::find_outermost_physical_context(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
find_parent_index_region	src/legion_runtime/legion_tasks.cc	/^    unsigned SingleTask::find_parent_index_region(unsigned index, TaskOp *child)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_parent_region	src/legion_runtime/legion_tasks.cc	/^    unsigned SingleTask::find_parent_region(unsigned index, TaskOp *child)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
find_partition_projection_function	src/legion_runtime/runtime.cc	/^                            find_partition_projection_function(ProjectionID pid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_pending_updates	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_pending_updates(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_physical_instance	src/legion_runtime/runtime.cc	/^    PhysicalInstance MemoryManager::find_physical_instance($/;"	f	class:LegionRuntime::HighLevel::MemoryManager
find_physical_instance	src/legion_runtime/runtime.cc	/^    PhysicalInstance MemoryManager::find_physical_instance(size_t field_size,$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
find_physical_instance	src/legion_runtime/runtime.cc	/^    PhysicalInstance Runtime::find_physical_instance(Memory mem, $/;"	f	class:LegionRuntime::HighLevel::Runtime
find_physical_instance	src/legion_runtime/runtime.cc	/^    PhysicalInstance Runtime::find_physical_instance(Memory mem,$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_premapped_region	src/legion_runtime/legion_tasks.cc	/^    InstanceRef TaskOp::find_premapped_region(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
find_privilege_task_name	src/legion_runtime/runtime.cc	/^      const char* find_privilege_task_name(void *impl)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
find_privilege_task_name	src/legion_runtime/runtime.cc	/^    \/*static*\/ const char* Runtime::find_privilege_task_name(void *impl)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_processor_group	src/legion_runtime/runtime.cc	/^    Processor Runtime::find_processor_group(const std::set<Processor> &procs)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_processor_kind	src/legion_runtime/mapping_utilities.cc	/^      Processor MachineQueryInterface::find_processor_kind(Memory mem, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_processor_kind	src/legion_runtime/mapping_utilities.cc	/^      \/*static*\/ Processor MachineQueryInterface::find_processor_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
find_region_projection_function	src/legion_runtime/runtime.cc	/^    \/*static*\/ RegionProjectionFnptr Runtime::find_region_projection_function($/;"	f	class:LegionRuntime::HighLevel::Runtime
find_reverse_MPI_mapping	src/legion_runtime/legion.cc	/^                                HighLevelRuntime::find_reverse_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
find_reverse_MPI_mapping	src/legion_runtime/runtime.cc	/^    const std::map<AddressSpace,int>& Runtime::find_reverse_MPI_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_runtime	src/legion_runtime/runtime.cc	/^    \/*static*\/ Runtime* LegionAllocation::find_runtime(void)$/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
find_task_by_index	src/legion_runtime/legion_ops.cc	/^    TaskOp* MustEpochOp::find_task_by_index(int index)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
find_thread	src/nautilus/scheduler.c	/^static void find_thread(rt_thread *r, void *priv)$/;"	f	file:
find_user_data	src/legion_runtime/legion.cc	/^    \/*static*\/ const void* HighLevelRuntime::find_user_data(TaskID tid,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
find_user_data	src/legion_runtime/runtime.cc	/^    \/*static*\/ const void* Runtime::find_user_data(TaskID tid, VariantID vid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_utility_group	src/legion_runtime/runtime.h	/^      inline Processor find_utility_group(void) { return utility_group; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
find_valid_instance_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_valid_instance_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_valid_reduction_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::find_valid_reduction_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
find_view	src/legion_runtime/region_tree.cc	/^    LogicalView* RegionTreeForest::find_view(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
findfield	src/lua_src/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	src/lua_src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findgotos	src/lua_src/lparser.c	/^static void findgotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
findindex	src/lua_src/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findit	tools/guest_kernel_calls.pl	/^sub findit {$/;"	s
findlabel	src/lua_src/lparser.c	/^static int findlabel (LexState *ls, int g) {$/;"	f	file:
findloader	src/lua_src/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findlocal	src/lua_src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n,$/;"	f	file:
findpcall	src/lua_src/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findsetreg	src/lua_src/ldebug.c	/^static int findsetreg (Proto *p, int lastpc, int reg) {$/;"	f	file:
findvararg	src/lua_src/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finish	src/legion_runtime/lowlevel.cc	/^	Event finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
finish	src/legion_runtime/lowlevel_dma.cc	/^	Event finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
finish	src/legion_runtime/lowlevel_dma.cc	/^	void finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched
finish	src/legion_runtime/lowlevel_dma.cc	/^	void finish(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched
finishCcall	src/lua_src/ldo.c	/^static void finishCcall (lua_State *L) {$/;"	f	file:
finish_arrivals	src/legion_runtime/shared_lowlevel.cc	/^                int finish_arrivals;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
finish_block	src/legion_runtime/legion_logging.cc	/^    void TreeStateLogger::finish_block(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
finish_block	src/legion_runtime/legion_spy.cc	/^    void TreeStateLogger::finish_block(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
finish_count	src/legion_runtime/lowlevel_impl.h	/^      int run_count, finish_count;$/;"	m	class:LegionRuntime::LowLevel::Task
finish_event	src/legion_runtime/lowlevel.cc	/^      Event finish_event;$/;"	m	class:LegionRuntime::LowLevel::EventMerger	file:
finish_event	src/legion_runtime/lowlevel.cc	/^      Event finish_event;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
finish_event	src/legion_runtime/lowlevel_gpu.cc	/^      Event finish_event;$/;"	m	class:LegionRuntime::LowLevel::GPUJob	file:
finish_event	src/legion_runtime/lowlevel_impl.h	/^      Event finish_event;$/;"	m	class:LegionRuntime::LowLevel::Task
finish_job	src/legion_runtime/lowlevel_gpu.cc	/^      virtual void finish_job(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
finish_job	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::finish_job(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
finished	src/legion_runtime/legion.h	/^      bool finished;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
finished	src/legion_runtime/lowlevel_impl.h	/^      void finished(void)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
finishpcall	src/lua_src/lbaselib.c	/^static int finishpcall (lua_State *L, int status) {$/;"	f	file:
finobj	include/lua/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State
firmware_waking_vector	include/acpi/actbl.h	/^	uint32_t firmware_waking_vector;	\/* 32-bit physical address of the Firmware Waking Vector *\/$/;"	m	struct:acpi_table_facs
first	include/nautilus/list.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
firstChild	scripts/kconfig/qconf.h	/^	ConfigItem* firstChild() const$/;"	f	class:ConfigItem
firstChild	scripts/kconfig/qconf.h	/^	ConfigItem* firstChild() const$/;"	f	class:ConfigList
first_alpha	scripts/kconfig/lxdialog/util.c	/^int first_alpha(const char *string, const char *exempt)$/;"	f
first_element	src/legion_runtime/lowlevel.h	/^      int first_element;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
first_elmt	src/legion_runtime/lowlevel.h	/^      size_t first_elmt;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
first_elmt	src/legion_runtime/lowlevel_impl.h	/^        size_t first_elmt, last_elmt;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
first_enabled	src/legion_runtime/lowlevel.h	/^      int first_enabled(void) const { return first_enabled_elmt; }$/;"	f	class:LegionRuntime::LowLevel::ElementMask
first_enabled_elmt	src/legion_runtime/lowlevel.h	/^      int first_enabled_elmt, last_enabled_elmt;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
first_free	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Reservation::Impl *Reservation::Impl::first_free = 0;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl	file:
first_free	src/legion_runtime/lowlevel_impl.h	/^      ET * volatile first_free;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
first_free	src/legion_runtime/lowlevel_impl.h	/^      static Reservation::Impl *first_free;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
first_hrt_apic_id	include/nautilus/multiboot2.h	/^  multiboot_uint32_t first_hrt_apic_id;$/;"	m	struct:multiboot_tag_hrt
first_hrt_entry	include/dev/ioapic.h	/^    unsigned first_hrt_entry;$/;"	m	struct:ioapic
first_hrt_gpa	include/nautilus/multiboot2.h	/^  multiboot_uint64_t first_hrt_gpa;$/;"	m	struct:multiboot_tag_hrt
first_hrt_ioapic_entry	include/nautilus/multiboot2.h	/^  multiboot_uint32_t first_hrt_ioapic_entry;$/;"	m	struct:multiboot_tag_hrt
first_index	src/legion_runtime/lowlevel_impl.h	/^      IT first_index, last_index;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
first_node	src/test/circuit.h	/^  ptr_t         first_node;$/;"	m	struct:CircuitPiece
first_ts	scripts/kconfig/lex.zconf.c	/^static int last_ts, first_ts;$/;"	v	file:
first_wire	src/test/circuit.h	/^  ptr_t         first_wire;$/;"	m	struct:CircuitPiece
firstgoto	src/lua_src/lparser.c	/^  short firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	src/lua_src/lparser.c	/^  short firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
firstlocal	include/lua/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState
fix_trace	src/legion_runtime/legion_trace.cc	/^    void LegionTrace::fix_trace(void)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
fixed	src/legion_runtime/legion_trace.h	/^      bool fixed;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
fixed_io	include/acpi/acrestyp.h	/^	struct acpi_resource_fixed_io fixed_io;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_fixed_io
fixed_memory32	include/acpi/acrestyp.h	/^	struct acpi_resource_fixed_memory32 fixed_memory32;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_fixed_memory32
fixjump	src/lua_src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
fixup_rootmenu	scripts/kconfig/gconf.c	/^void fixup_rootmenu(struct menu *menu)$/;"	f
fixup_rootmenu	scripts/kconfig/qconf.cc	/^void fixup_rootmenu(struct menu *menu)$/;"	f
flags	include/acpi/actbl.h	/^	uint32_t flags;		\/* Miscellaneous flag bits (see below for individual flags) *\/$/;"	m	struct:acpi_table_fadt
flags	include/acpi/actbl.h	/^	uint32_t flags;$/;"	m	struct:acpi_table_facs
flags	include/acpi/actbl.h	/^	uint8_t flags;$/;"	m	struct:acpi_table_desc
flags	include/acpi/actbl1.h	/^	uint32_t flags;		\/* Interrupt Source Flags *\/$/;"	m	struct:acpi_madt_interrupt_source
flags	include/acpi/actbl1.h	/^	uint32_t flags;$/;"	m	struct:acpi_srat_cpu_affinity
flags	include/acpi/actbl1.h	/^	uint32_t flags;$/;"	m	struct:acpi_srat_mem_affinity
flags	include/acpi/actbl1.h	/^	uint32_t flags;$/;"	m	struct:acpi_srat_x2apic_cpu_affinity
flags	include/acpi/actbl1.h	/^	uint32_t flags;$/;"	m	struct:acpi_table_madt
flags	include/acpi/actbl1.h	/^	uint8_t flags;$/;"	m	struct:acpi_hest_aer_common
flags	include/acpi/actbl1.h	/^	uint8_t flags;$/;"	m	struct:acpi_hest_generic_data
flags	include/acpi/actbl1.h	/^	uint8_t flags;$/;"	m	struct:acpi_hest_ia_corrected
flags	include/acpi/actbl1.h	/^	uint8_t flags;$/;"	m	struct:acpi_hest_ia_machine_check
flags	include/acpi/actbl1.h	/^	uint8_t flags;$/;"	m	struct:acpi_table_einj
flags	include/acpi/actbl1.h	/^	uint8_t flags;$/;"	m	struct:acpi_whea_header
flags	include/acpi/actbl2.h	/^	uint32_t flags;$/;"	m	struct:acpi_table_waet
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_asf_info
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_dmar_atsr
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_dmar_hardware_unit
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_ibft_header
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_ivrs_header
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_table_dmar
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_table_hpet
flags	include/acpi/actbl2.h	/^	uint8_t flags;$/;"	m	struct:acpi_table_wdat
flags	include/acpi/actypes.h	/^	uint32_t flags;$/;"	m	struct:acpi_system_info
flags	include/acpi/actypes.h	/^	uint8_t flags;		\/* Miscellaneous info *\/$/;"	m	struct:acpi_device_info
flags	include/dev/hpet.h	/^    uint8_t flags;$/;"	m	struct:hpet_dev
flags	include/lua/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table
flags	include/nautilus/dev.h	/^    uint64_t      flags;$/;"	m	struct:nk_dev
flags	include/nautilus/fs.h	/^    uint64_t          flags;$/;"	m	struct:nk_fs
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_address
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_console_flags
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_entry_address
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_framebuffer
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_information_request
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_module_align
flags	include/nautilus/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_tag_apm
flags	include/nautilus/nautilus.h	/^    uint64_t flags;$/;"	m	struct:sys_info
flags	include/nautilus/realmode.h	/^    uint16_t flags; \/\/  output only$/;"	m	struct:nk_real_mode_int_args
flags	scripts/kconfig/expr.h	/^	int flags;$/;"	m	struct:file
flags	scripts/kconfig/expr.h	/^	int flags;$/;"	m	struct:symbol
flags	scripts/kconfig/expr.h	/^	unsigned int flags;$/;"	m	struct:menu
flags	scripts/kconfig/lkc.h	/^	unsigned int flags;$/;"	m	struct:kconf_id
flags	src/acpi/acpica/aclocal.h	/^	u16 flags;		\/* Misc flags *\/$/;"	m	struct:acpi_opcode_info
flags	src/acpi/acpica/aclocal.h	/^	u32 flags;$/;"	m	struct:acpi_db_method_info
flags	src/acpi/acpica/aclocal.h	/^	u32 flags;$/;"	m	struct:acpi_predefined_data
flags	src/acpi/acpica/aclocal.h	/^	u8 flags;		\/* Misc info about this GPE *\/$/;"	m	struct:acpi_gpe_event_info
flags	src/acpi/acpica/aclocal.h	/^	u8 flags;		\/* Miscellaneous flags *\/$/;"	m	struct:acpi_namespace_node
flags	src/acpi/acpica/aclocal.h	/^	u8 flags;$/;"	m	struct:acpi_interface_info
flags	src/acpi/acpica/aclocal.h	/^	u8 flags;$/;"	m	struct:acpi_table_list
flags	src/dev/kbd.c	/^static nk_keycode_t flags = 0;$/;"	v	file:
flags	src/legion_runtime/legion.h	/^      RegionFlags flags; \/**< optional flags set for region requirements*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
flags	src/nautilus/fmtout.c	/^enum flags {$/;"	g	file:
flags	src/nautilus/fs.c	/^    int      flags;$/;"	m	struct:nk_fs_open_file_state	file:
flags	src/nautilus/printk.c	/^	int			flags;		\/* flags to number() *\/$/;"	m	struct:printf_spec	file:
flags	src/nautilus/timer.c	/^    uint64_t          flags;    $/;"	m	struct:nk_timer	file:
flex_int16_t	scripts/kconfig/lex.zconf.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	scripts/kconfig/lex.zconf.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	scripts/kconfig/lex.zconf.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	scripts/kconfig/lex.zconf.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	scripts/kconfig/lex.zconf.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	scripts/kconfig/lex.zconf.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	scripts/kconfig/lex.zconf.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	scripts/kconfig/lex.zconf.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	scripts/kconfig/lex.zconf.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flib	src/lua_src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
floor	src/nautilus/libccompat.c	/^double floor(double x)$/;"	f
flow_control	include/acpi/actbl2.h	/^	uint8_t flow_control;$/;"	m	struct:acpi_table_spcr
fls	include/asm/bitops.h	/^static inline int fls(int x)$/;"	f
fls64	include/asm/bitops.h	/^static inline int fls64(uint64_t x)$/;"	f
fls_long	include/lib/bitops.h	/^static inline unsigned fls_long(unsigned long l)$/;"	f
fls_long	include/lib/linux_bitops.h	/^static inline unsigned fls_long(unsigned long l)$/;"	f
flush	src/legion_runtime/lowlevel.cc	/^      void flush(void)$/;"	f	class:LegionRuntime::LowLevel::AMQueue
flush	src/legion_runtime/lowlevel.cc	/^    void RegionAccessor<AccessorReductionList>::flush(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
flush	src/legion_runtime/lowlevel_dma.cc	/^      virtual void flush(Event after_copy)$/;"	f	class:LegionRuntime::LowLevel::DelayedMemPairCopier
flush	src/legion_runtime/lowlevel_dma.cc	/^      virtual void flush(Event after_copy)$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
flush	src/legion_runtime/lowlevel_dma.cc	/^      virtual void flush(Event after_copy)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
flush	src/legion_runtime/lowlevel_dma.cc	/^      virtual void flush(void) {}$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
flush	src/legion_runtime/lowlevel_dma.cc	/^      virtual void flush(void) {}$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
flush	src/nautilus/fprintk.c	/^flush (struct fprintk_state * state, nk_fs_fd_t fd)$/;"	f	file:
flush	src/nautilus/printk.c	/^flush (struct printk_state *state)$/;"	f	file:
flush_reductions	src/legion_runtime/region_tree.cc	/^    void CompositeView::flush_reductions(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
flush_reductions	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::flush_reductions(const FieldMask &valid_mask,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
flush_scancodes	src/dev/kbd.c	/^static void flush_scancodes()$/;"	f	file:
flush_size	include/acpi/actbl.h	/^	uint16_t flush_size;		\/* Processor's memory cache line width, in bytes *\/$/;"	m	struct:acpi_table_fadt
flush_stride	include/acpi/actbl.h	/^	uint16_t flush_stride;	\/* Number of flush strides that need to be read *\/$/;"	m	struct:acpi_table_fadt
flush_tlb	src/arch/hrt/hrt.c	/^flush_tlb (void)$/;"	f	file:
fma	include/nautilus/cpuid.h	/^            uint8_t fma      : 1; \/\/ FMA extensions using YMM state$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
fma4	include/nautilus/cpuid.h	/^            uint8_t fma4        : 1; \/\/ 4-operand FMA instruction support$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
fmod	src/nautilus/libccompat.c	/^double fmod(double y, double x){$/;"	f
fmodnew	src/nautilus/libccompat.c	/^double fmodnew(int y, int x){$/;"	f
fn	include/acpi/actbl2.h	/^	uint8_t fn;$/;"	m	struct:acpi_dmar_pci_path
fname	include/test/ipi.h	/^    char fname[IPI_MAX_FNAME_LEN]; \/\/ the filename to use$/;"	m	struct:ipi_exp_data
fns_to_ids	src/legion_runtime/arrays.h	/^      std::map<MappingDeserializerFn, int> fns_to_ids;$/;"	m	class:LegionRuntime::Arrays::MappingRegistry
focusInEvent	scripts/kconfig/qconf.cc	/^void ConfigList::focusInEvent(QFocusEvent *e)$/;"	f	class:ConfigList
fold	src/legion_runtime/legion_logging.h	/^        bool fold;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
fold	src/legion_runtime/lowlevel.h	/^      virtual void fold(void *rhs1_ptr, const void *rhs2_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
fold	src/legion_runtime/lowlevel_dma.cc	/^      bool fold;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
fold	src/legion_runtime/lowlevel_dma.cc	/^      bool fold;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
fold	src/test/circuit_cpu.cc	/^void AccumulateCharge::fold<false>(RHS &rhs1, RHS rhs2)$/;"	f	class:AccumulateCharge
fold	src/test/circuit_cpu.cc	/^void AccumulateCharge::fold<true>(RHS &rhs1, RHS rhs2) $/;"	f	class:AccumulateCharge
fold	src/test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::fold<false>(RHS &rhs1, RHS rhs2) {$/;"	f	class:lgncg::DotProdAccumulate
fold	src/test/hpcg/dotprod-accumulate.h	/^DotProdAccumulate::fold<true>(RHS &rhs1, RHS rhs2) {$/;"	f	class:lgncg::DotProdAccumulate
fold	src/test/saxpy_array.cc	/^  template <bool EXCL> static void fold(float& rhs1, float rhs2) { rhs1 += rhs2; }$/;"	f	struct:Add
fold_list_entry	src/legion_runtime/lowlevel.h	/^      virtual void fold_list_entry(void *rhs_ptr, const void *entry_ptr, size_t count,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
fold_reduction_future	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::fold_reduction_future(const void *result, $/;"	f	class:LegionRuntime::HighLevel::MultiTask
fold_strided	src/legion_runtime/lowlevel.h	/^      virtual void fold_strided(void *lhs_ptr, const void *rhs_ptr,$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
foo	src/test/global_vars.cc	/^void foo(void)$/;"	f
fopen	src/nautilus/libccompat.c	/^fopen (const char * path, FILE * f)$/;"	f
fopen64	src/nautilus/libccompat.c	/^fopen64 (const char * path, FILE * f)$/;"	f
for_all_choices	scripts/kconfig/expr.h	122;"	d
for_all_defaults	scripts/kconfig/expr.h	121;"	d
for_all_prompts	scripts/kconfig/expr.h	123;"	d
for_all_properties	scripts/kconfig/expr.h	118;"	d
for_all_symbols	scripts/kconfig/expr.h	79;"	d
for_each_clear_bit	include/lib/bitops.h	84;"	d
for_each_clear_bit	include/lib/linux_bitops.h	59;"	d
for_each_clear_bit_from	include/lib/bitops.h	90;"	d
for_each_clear_bit_from	include/lib/linux_bitops.h	65;"	d
for_each_set_bit	include/lib/bitops.h	73;"	d
for_each_set_bit	include/lib/linux_bitops.h	48;"	d
for_each_set_bit_from	include/lib/bitops.h	79;"	d
for_each_set_bit_from	include/lib/linux_bitops.h	54;"	d
forall_ranges	src/legion_runtime/lowlevel.h	/^    \/*static*\/ int ElementMask::forall_ranges(T &executor,$/;"	f	class:LegionRuntime::LowLevel::ElementMask
forbody	src/lua_src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
force	src/legion_runtime/region_tree.h	/^      const bool force;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
force_long_messages	src/legion_runtime/activemsg.cc	/^static bool force_long_messages = true;$/;"	v	file:
forest	src/legion_runtime/region_tree.h	/^      RegionTreeForest *forest;$/;"	m	class:LegionRuntime::HighLevel::PerfTracer
forest	src/legion_runtime/runtime.h	/^      RegionTreeForest *const forest;$/;"	m	class:LegionRuntime::HighLevel::Runtime
forest_lock	src/legion_runtime/region_tree.h	/^      Reservation forest_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
forget_symbol	scripts/kallsyms.c	/^static void forget_symbol(unsigned char *symbol, int len)$/;"	f	file:
forlist	src/lua_src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
format_decode	src/nautilus/printk.c	/^static int format_decode(const char *fmt, struct printf_spec *spec)$/;"	f	file:
format_int	src/nautilus/fmtout.c	/^format_int(struct Output_Sink *q, uintmax_t val, enum flags flags,$/;"	f	file:
format_type	src/nautilus/printk.c	/^enum format_type {$/;"	g	file:
fornum	src/lua_src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	src/lua_src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
forward_mpi_mapping	src/legion_runtime/runtime.h	/^      std::map<int,AddressSpace> forward_mpi_mapping;$/;"	m	class:LegionRuntime::HighLevel::Runtime
found	scripts/kconfig/gconf.c	/^static GtkTreeIter found;$/;"	v	file:
fprintf	src/nautilus/libccompat.c	/^fprintf (FILE * f, const char * s, ...)$/;"	f
fprintk	src/nautilus/fprintk.c	/^fprintk (nk_fs_fd_t fd, const char * fmt, ...)$/;"	f
fprintk_char	src/nautilus/fprintk.c	/^fprintk_char (char * arg, int c)$/;"	f	file:
fprintk_state	include/nautilus/fprintk.h	/^struct fprintk_state {$/;"	s
fptr	src/legion_runtime/activemsg.h	/^  HandlerReplyFuture<RPLTYPE> *fptr;$/;"	m	struct:ArgsWithReplyInfo
fpu	include/nautilus/cpuid.h	/^            uint8_t fpu         : 1; \/\/ x87 floating-point unit on-chip$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
fpu	include/nautilus/cpuid.h	/^            uint8_t fpu      : 1; \/\/ floating point unit on-chip$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
fpu_init	src/nautilus/fpu.c	/^fpu_init (struct naut_info * naut)$/;"	f
fpu_init_common	src/nautilus/fpu.c	/^fpu_init_common (struct naut_info * naut)$/;"	f	file:
fpu_state_offset	include/nautilus/thread.h	/^    uint16_t fpu_state_offset; \/* SHOULD NOT CHANGE POSITION *\/$/;"	m	struct:nk_thread
fputc	src/nautilus/libccompat.c	/^int fputc (int c, FILE * f) $/;"	f
fputs	src/nautilus/libccompat.c	/^int fputs (const char *s, FILE *stream)$/;"	f
frac_digits	include/lua/llocale.h	/^    char frac_digits;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv
frac_digits	src/nautilus/libccompat.c	/^    char frac_digits;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
framebuffer	include/dev/vesa.h	/^    uint32_t framebuffer;            \/\/ physical address of the linear frame buffer; write here to draw to the screen$/;"	m	struct:vesa_mode_info
framebuffer_addr	include/nautilus/multiboot2.h	/^  multiboot_uint64_t framebuffer_addr;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_blue_field_position	include/nautilus/multiboot2.h	/^      multiboot_uint8_t framebuffer_blue_field_position;$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon51
framebuffer_blue_mask_size	include/nautilus/multiboot2.h	/^      multiboot_uint8_t framebuffer_blue_mask_size;$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon51
framebuffer_bpp	include/nautilus/multiboot2.h	/^  multiboot_uint8_t framebuffer_bpp;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_green_field_position	include/nautilus/multiboot2.h	/^      multiboot_uint8_t framebuffer_green_field_position;$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon51
framebuffer_green_mask_size	include/nautilus/multiboot2.h	/^      multiboot_uint8_t framebuffer_green_mask_size;$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon51
framebuffer_height	include/nautilus/multiboot2.h	/^  multiboot_uint32_t framebuffer_height;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_palette	include/nautilus/multiboot2.h	/^      struct multiboot_color framebuffer_palette[0];$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon50	typeref:struct:multiboot_tag_framebuffer::__anon49::__anon50::multiboot_color
framebuffer_palette_num_colors	include/nautilus/multiboot2.h	/^      multiboot_uint16_t framebuffer_palette_num_colors;$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon50
framebuffer_pitch	include/nautilus/multiboot2.h	/^  multiboot_uint32_t framebuffer_pitch;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_red_field_position	include/nautilus/multiboot2.h	/^      multiboot_uint8_t framebuffer_red_field_position;$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon51
framebuffer_red_mask_size	include/nautilus/multiboot2.h	/^      multiboot_uint8_t framebuffer_red_mask_size;$/;"	m	struct:multiboot_tag_framebuffer::__anon49::__anon51
framebuffer_type	include/nautilus/multiboot2.h	/^  multiboot_uint8_t framebuffer_type;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_width	include/nautilus/multiboot2.h	/^  multiboot_uint32_t framebuffer_width;$/;"	m	struct:multiboot_tag_framebuffer_common
fread	src/nautilus/libccompat.c	/^size_t fread (void *ptr, size_t size, size_t count, FILE *stream)$/;"	f
frealloc	include/lua/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
free	src/legion_runtime/legion.h	/^    inline void IndexAllocator::free(ptr_t ptr, unsigned num_elements \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
free	src/legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::free(unsigned ptr, unsigned count \/*= 1  *\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
free	src/legion_runtime/shared_lowlevel.cc	/^    void IndexSpaceAllocator::free(unsigned ptr, unsigned count \/*= 1 *\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
free	src/nautilus/mm/kmem.c	/^free (void * addr)$/;"	f
free	src/test/hpcg/cg-data.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::CGData
free	src/test/hpcg/hpcg-problem.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:Problem
free	src/test/hpcg/mg-data.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::MGData
free	src/test/hpcg/sparsemat.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::SparseMatrix
free	src/test/hpcg/vector.h	/^    free(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:lgncg::Vector
free_acquire_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_acquire_op(AcquireOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_alloc_lock	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_alloc_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_and_predicate_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_and_predicate_op(AndPredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_block	src/fs/ext2/ext2_access.c	582;"	d	file:
free_blocks	src/legion_runtime/lowlevel_impl.h	/^      std::map<off_t, off_t> free_blocks;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
free_bytes	src/legion_runtime/lowlevel.cc	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
free_bytes	src/legion_runtime/lowlevel.cc	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
free_bytes	src/legion_runtime/lowlevel.cc	/^    void GASNetMemory::free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
free_bytes	src/legion_runtime/lowlevel_gpu.h	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
free_bytes	src/legion_runtime/lowlevel_gpu.h	/^      virtual void free_bytes(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
free_bytes_local	src/legion_runtime/lowlevel.cc	/^    void Memory::Impl::free_bytes_local(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
free_bytes_remote	src/legion_runtime/lowlevel.cc	/^    void Memory::Impl::free_bytes_remote(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
free_capture_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_capture_op(TraceCaptureOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_close_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_close_op(CloseOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_context	src/legion_runtime/runtime.cc	/^    void Runtime::free_context(SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_copy_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_copy_op(CopyOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_deletion_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_deletion_op(DeletionOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_distributed_id	src/legion_runtime/garbage_collection.h	/^      bool free_distributed_id;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
free_distributed_id	src/legion_runtime/runtime.cc	/^    void Runtime::free_distributed_id(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_elements	src/legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::Impl::free_elements(unsigned ptr, unsigned count \/*= 1*\/)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
free_elmt	src/legion_runtime/shared_lowlevel.cc	/^    void IndexSpaceAllocator::Impl::free_elmt(unsigned ptr, unsigned count)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
free_entry	src/legion_runtime/lowlevel_impl.h	/^    void DynamicTableFreeList<ALLOCATOR>::free_entry(ET *entry)$/;"	f	class:LegionRuntime::LowLevel::DynamicTableFreeList
free_epoch_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_epoch_op(MustEpochOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_event	src/legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_event(EventImpl *e)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_event_lock	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_event_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_events	src/legion_runtime/shared_lowlevel.cc	/^      std::deque<EventImpl*> free_events; $/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_fence_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_fence_op(FenceOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_field	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::free_field(Context ctx, FieldSpace sp, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
free_field	src/legion_runtime/legion.h	/^    inline void FieldAllocator::free_field(FieldID id)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
free_field	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::free_field(FieldID fid, AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
free_field	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::free_field(FieldSpace handle, FieldID fid, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
free_field	src/legion_runtime/runtime.cc	/^    void Runtime::free_field(Context ctx, FieldSpace space, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_fields	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::free_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
free_fields	src/legion_runtime/legion.h	/^    inline void FieldAllocator::free_fields(const std::set<FieldID> &to_free)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
free_fields	src/legion_runtime/legion_ops.h	/^      std::set<FieldID> free_fields;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
free_fields	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::free_fields(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
free_fields	src/legion_runtime/runtime.cc	/^    void Runtime::free_fields(Context ctx, FieldSpace space,$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_future_predicate_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_future_predicate_op(FuturePredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_generation	src/legion_runtime/lowlevel_impl.h	/^      Event::gen_t generation, gen_subscribed, free_generation;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
free_generation	src/legion_runtime/shared_lowlevel.cc	/^        EventGeneration free_generation;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
free_index	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::free_index(unsigned index)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
free_index_task	src/legion_runtime/runtime.cc	/^    void Runtime::free_index_task(IndexTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_individual_task	src/legion_runtime/runtime.cc	/^    void Runtime::free_individual_task(IndividualTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_inline_task	src/legion_runtime/runtime.cc	/^    void Runtime::free_inline_task(InlineTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_inode	src/fs/ext2/ext2_access.c	509;"	d	file:
free_inst_lock	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_inst_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_instance	src/legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_instance(RegionInstance::Impl *impl)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_instances	src/legion_runtime/shared_lowlevel.cc	/^      std::deque<RegionInstance::Impl*> free_instances;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_list	src/legion_runtime/activemsg.cc	/^  std::map<char *, size_t> free_list;$/;"	m	class:SrcDataPool	file:
free_map_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_map_op(MapOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_metadata	src/legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_metadata(IndexSpace::Impl *impl)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_metas	src/legion_runtime/shared_lowlevel.cc	/^      std::deque<IndexSpace::Impl*> free_metas;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_metas_lock	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_metas_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_not_predicate_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_not_predicate_op(NotPredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_or_predicate_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_or_predicate_op(OrPredOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_physical_instance	src/legion_runtime/runtime.cc	/^    void MemoryManager::free_physical_instance(PhysicalManager *manager)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
free_physical_instance	src/legion_runtime/runtime.cc	/^    void Runtime::free_physical_instance(PhysicalManager *instance)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_point_task	src/legion_runtime/runtime.cc	/^    void Runtime::free_point_task(PointTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_release_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_release_op(ReleaseOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_remote_task	src/legion_runtime/runtime.cc	/^    void Runtime::free_remote_task(RemoteTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_reservation	src/legion_runtime/shared_lowlevel.cc	/^    void Runtime::free_reservation(ReservationImpl *r)$/;"	f	class:LegionRuntime::LowLevel::Runtime
free_reservation_lock	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T       free_reservation_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_reservations	src/legion_runtime/shared_lowlevel.cc	/^      std::deque<ReservationImpl*> free_reservations;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
free_slice_task	src/legion_runtime/runtime.cc	/^    void Runtime::free_slice_task(SliceTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_space	src/legion_runtime/shared_lowlevel.cc	/^    void IndexSpace::Impl::free_space(unsigned ptr, unsigned count)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
free_space	src/legion_runtime/shared_lowlevel.cc	/^    void MemoryImpl::free_space(void *ptr, size_t size)$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
free_split_path	src/fs/ext2/ext2_access.c	/^static void free_split_path(char **list, int n)$/;"	f	file:
free_trace_op	src/legion_runtime/runtime.cc	/^    void Runtime::free_trace_op(TraceCompleteOp *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
free_usable_ram	src/nautilus/mm/boot_mm.c	/^free_usable_ram (boot_mem_info_t * mem)$/;"	f	file:
freeexp	src/lua_src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freekey	src/nautilus/hashtable.c	160;"	d	file:
freelist	src/lua_src/lauxlib.c	525;"	d	file:
freelist_mutex	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ gasnet_hsl_t Reservation::Impl::freelist_mutex = GASNET_HSL_INITIALIZER;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl	file:
freelist_mutex	src/legion_runtime/lowlevel_impl.h	/^      static gasnet_hsl_t freelist_mutex;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
freeobj	src/lua_src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	include/lua/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freereg	src/lua_src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freestack	src/lua_src/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
freeze	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl* ArgumentMap::Impl::freeze(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
freopen	src/nautilus/libccompat.c	/^FILE *freopen(const char *fname, const char *mode,FILE *stream)$/;"	f
freq	include/dev/hpet.h	/^    ulong_t freq;$/;"	m	struct:hpet_dev
freq	include/nautilus/sfi.h	/^    uint32_t freq; \/\/ in MHz$/;"	m	struct:sfi_freq_entry
frexp	src/nautilus/libccompat.c	/^double frexp(double x, int *e){$/;"	f
from_index_space	src/legion_runtime/lowlevel.h	/^      static DomainLinearization from_index_space(int first_elmt)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
from_mapping	src/legion_runtime/lowlevel.h	/^      static DomainLinearization from_mapping(typename Arrays::Mapping<DIM, 1> *mapping)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
from_point	src/legion_runtime/lowlevel.h	/^      static Domain from_point(typename Arrays::Point<DIM> p)$/;"	f	class:LegionRuntime::LowLevel::Domain
from_point	src/legion_runtime/lowlevel.h	/^      static DomainPoint from_point(typename Arrays::Point<DIM> p)$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
from_rect	src/legion_runtime/lowlevel.h	/^      static Domain from_rect(typename Arrays::Rect<DIM> r)$/;"	f	class:LegionRuntime::LowLevel::Domain
fromstate	src/lua_src/lstate.c	77;"	d	file:
frozen	src/legion_runtime/lowlevel_impl.h	/^	bool frozen;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
frozen	src/legion_runtime/runtime.h	/^      bool frozen;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
fru_id	include/acpi/actbl1.h	/^	uint8_t fru_id[16];$/;"	m	struct:acpi_hest_generic_data
fru_text	include/acpi/actbl1.h	/^	uint8_t fru_text[20];$/;"	m	struct:acpi_hest_generic_data
fs	include/lua/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
fs	include/nautilus/realmode.h	/^    uint16_t fs;    \/\/$/;"	m	struct:nk_real_mode_int_args
fs	src/fs/ext2/ext2.c	/^    struct nk_fs        *fs;$/;"	m	struct:ext2_state	typeref:struct:ext2_state::nk_fs	file:
fs	src/nautilus/fs.c	/^    struct nk_fs  *fs;$/;"	m	struct:nk_fs_open_file_state	typeref:struct:nk_fs_open_file_state::nk_fs	file:
fs	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::FieldSpace fs;$/;"	m	struct:lgncg::Vector
fs_list	src/nautilus/fs.c	/^static struct list_head fs_list;$/;"	v	typeref:struct:list_head	file:
fs_list_node	include/nautilus/fs.h	/^    struct list_head  fs_list_node;$/;"	m	struct:nk_fs	typeref:struct:nk_fs::list_head
fscanf	src/nautilus/libccompat.c	/^int fscanf(FILE *restrict stream, const char *restrict format, ... )$/;"	f
fseek	src/nautilus/libccompat.c	/^int fseek(FILE *stream, long offset, int whence)$/;"	f
fseeko64	src/nautilus/libccompat.c	/^int fseeko64 (FILE *fp, uint64_t offset, int whence)$/;"	f
fsgsbase	include/nautilus/cpuid.h	/^            uint8_t fsgsbase            : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
fspace	src/legion_runtime/legion_logging.h	/^        FieldSpace fspace;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
fspace	src/test/saxpy_array.cc	/^  FieldSpace fspace;$/;"	m	struct:MainArgs	file:
ftell	src/nautilus/libccompat.c	/^long ftell(FILE *x)$/;"	f
ftello64	src/nautilus/libccompat.c	/^uint64_t ftello64 (FILE *stream)$/;"	f
fullMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode$/;"	e	enum:listMode
fully_qualified	src/acpi/acpica/aclocal.h	/^	u8 fully_qualified;$/;"	m	struct:acpi_namestring_info
fun	include/nautilus/smp.h	/^    nk_xcall_func_t fun;$/;"	m	struct:nk_xcall
fun	include/nautilus/thread.h	/^    nk_thread_fun_t fun;$/;"	m	struct:nk_thread
func	include/lua/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	include/lua/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
func	src/legion_runtime/lowlevel.cc	/^      FuncPtr func;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
func	src/lua_src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func_data	src/nautilus/instrument.c	/^struct func_data {$/;"	s	file:
func_htable	include/nautilus/instrument.h	/^    struct nk_hashtable * func_htable;$/;"	m	struct:nk_instr_data	typeref:struct:nk_instr_data::nk_hashtable
func_id	src/legion_runtime/lowlevel.cc	/^      Processor::TaskFuncID func_id;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
func_id	src/legion_runtime/lowlevel_gpu.cc	/^      Processor::TaskFuncID func_id;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
func_id	src/legion_runtime/lowlevel_impl.h	/^      Processor::TaskFuncID func_id;$/;"	m	class:LegionRuntime::LowLevel::Task
func_id	src/legion_runtime/shared_lowlevel.cc	/^		Processor::TaskFuncID func_id;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
funcargs	src/lua_src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcinfo	src/lua_src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	src/lua_src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcstat	src/lua_src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
function	include/acpi/actbl1.h	/^	uint16_t function;$/;"	m	struct:acpi_hest_aer_common
function	include/acpi/actbl2.h	/^	uint8_t function;$/;"	m	struct:acpi_asf_control_data
function	include/acpi/actypes.h	/^	uint16_t function;$/;"	m	struct:acpi_pci_id
function	src/acpi/osl.c	/^	acpi_osd_exec_callback function;$/;"	m	struct:acpi_os_dpc	file:
future	src/legion_runtime/legion_ops.h	/^      Future future;$/;"	m	class:LegionRuntime::HighLevel::FuturePredOp
future_lock	src/legion_runtime/runtime.h	/^      Reservation future_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
future_map	src/legion_runtime/legion_tasks.h	/^      FutureMap future_map;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
future_map	src/legion_runtime/runtime.h	/^        FutureMap::Impl *future_map;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
future_pred_op	src/legion_runtime/legion_ops.h	/^        FuturePredOp *future_pred_op;$/;"	m	struct:LegionRuntime::HighLevel::FuturePredOp::ResolveFuturePredArgs
future_pred_op_lock	src/legion_runtime/runtime.h	/^      Reservation future_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
future_size	src/legion_runtime/legion_tasks.h	/^      size_t future_size;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
future_store	src/legion_runtime/legion_tasks.h	/^      void *future_store;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
futures	src/legion_runtime/legion.h	/^      std::vector<Future>                 futures;$/;"	m	class:LegionRuntime::HighLevel::Task
futures	src/legion_runtime/legion.h	/^      std::vector<Future>                futures;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
futures	src/legion_runtime/legion.h	/^      std::vector<Future>                futures;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
futures	src/legion_runtime/runtime.h	/^      std::map<DomainPoint,Future,DomainPoint::STLComparator> futures;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
fvalue	include/lua/lobject.h	163;"	d
fwrite	src/nautilus/libccompat.c	/^size_t fwrite (const void *ptr, size_t size, size_t nmemb, FILE *stream)$/;"	f
fxsr	include/nautilus/cpuid.h	/^            uint8_t fxsr        : 1; \/\/ FXSAVE & FXSTOR instructions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
fxsr	include/nautilus/cpuid.h	/^            uint8_t fxsr     : 1; \/\/ FXSAVE and FXRSTOR instructions$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
g	src/lua_src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g2g	src/test/hpcg/sparsemat.h	/^    Vector g2g;$/;"	m	struct:lgncg::SparseMatrix
g_iofile	src/lua_src/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	src/lua_src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	src/lua_src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
garbage_collect	src/legion_runtime/region_tree.cc	/^    void CompositeView::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
garbage_collect	src/legion_runtime/region_tree.cc	/^    void InstanceManager::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
garbage_collect	src/legion_runtime/region_tree.cc	/^    void MaterializedView::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
garbage_collect	src/legion_runtime/region_tree.cc	/^    void ReductionManager::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
garbage_collect	src/legion_runtime/region_tree.cc	/^    void ReductionView::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
garbage_collect	src/legion_runtime/runtime.cc	/^    void Future::Impl::garbage_collect(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
gasnet_barrier	src/legion_runtime/lowlevel.cc	/^    static void gasnet_barrier(void)$/;"	f	namespace:LegionRuntime::LowLevel
gasnet_poll_thread_loop	src/legion_runtime/activemsg.cc	/^static void *gasnet_poll_thread_loop(void *data)$/;"	f	file:
gate_desc64	include/nautilus/idt.h	/^struct gate_desc64 {$/;"	s
gate_type_t	include/nautilus/idt.h	/^} gate_type_t;$/;"	t	typeref:enum:__anon60
gateway	include/acpi/actbl2.h	/^	uint8_t gateway[16];$/;"	m	struct:acpi_ibft_nic
gather_time	src/legion_runtime/lowlevel_dma.cc	/^      unsigned long long gather_time;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
gathers	src/legion_runtime/lowlevel_dma.cc	/^      std::map<off_t, PendingGather *> gathers;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
gc	include/lua/lobject.h	/^  GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value
gc_epoch_counter	src/legion_runtime/runtime.h	/^      unsigned gc_epoch_counter;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_epoch_lock	src/legion_runtime/runtime.h	/^      Reservation gc_epoch_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_epoch_size	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::gc_epoch_size = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
gc_epoch_size	src/legion_runtime/runtime.h	/^      static unsigned gc_epoch_size;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_lock	src/legion_runtime/garbage_collection.h	/^      Reservation gc_lock;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
gc_lock	src/legion_runtime/garbage_collection.h	/^      Reservation gc_lock;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
gc_proc	src/legion_runtime/runtime.h	/^      const Processor gc_proc;$/;"	m	class:LegionRuntime::HighLevel::Runtime
gc_references	src/legion_runtime/garbage_collection.h	/^      unsigned gc_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
gc_references	src/legion_runtime/garbage_collection.h	/^      unsigned gc_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
gch	include/lua/lstate.h	/^  GCheader gch;  \/* common header *\/$/;"	m	union:GCObject
gch	include/lua/lstate.h	197;"	d
gckind	include/lua/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State
gclist	include/lua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	include/lua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	include/lua/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gcmajorinc	include/lua/lstate.h	/^  int gcmajorinc;  \/* pause between major collections (only in gen. mode) *\/$/;"	m	struct:global_State
gco2ccl	include/lua/lstate.h	206;"	d
gco2cl	include/lua/lstate.h	207;"	d
gco2lcl	include/lua/lstate.h	205;"	d
gco2p	include/lua/lstate.h	210;"	d
gco2t	include/lua/lstate.h	209;"	d
gco2th	include/lua/lstate.h	212;"	d
gco2ts	include/lua/lstate.h	202;"	d
gco2u	include/lua/lstate.h	204;"	d
gco2uv	include/lua/lstate.h	211;"	d
gconf-objs	scripts/kconfig/Makefile	/^gconf-objs	:= gconf.o kconfig_load.o zconf.tab.o$/;"	m
gconf-target	scripts/kconfig/Makefile	/^	gconf-target := 1$/;"	m
gcpause	include/lua/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcrunning	include/lua/lstate.h	/^  lu_byte gcrunning;  \/* true if GC is running *\/$/;"	m	struct:global_State
gcstate	include/lua/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	include/lua/lstate.h	/^  int gcstepmul;  \/* GC `granularity' *\/$/;"	m	struct:global_State
gctm	src/lua_src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	include/lua/lobject.h	154;"	d
gddr	xeon_phi/linux_usr/phi_console.c	/^    void * gddr;$/;"	m	struct:__anon79	file:
gddr_size	xeon_phi/linux_usr/phi_console.c	/^    unsigned long gddr_size;$/;"	m	struct:__anon79	file:
gdt	include/nautilus/smp.h	/^    uint32_t gdt[6] ; \/\/ 8$/;"	m	struct:ap_init_area
gdt32	src/arch/k1om/asm/boot.S	/^gdt32:$/;"	l
gdt32	src/arch/x64/asm/boot.S	/^gdt32:$/;"	l
gdt64	include/nautilus/smp.h	/^    uint64_t gdt64[3]; \/\/ 40$/;"	m	struct:ap_init_area
gdt64	src/arch/hrt/asm/boot.S	/^gdt64:$/;"	l
gdt64	src/arch/k1om/asm/boot.S	/^gdt64:$/;"	l
gdt64	src/arch/x64/asm/boot.S	/^gdt64:$/;"	l
gdt64_base	include/nautilus/smp.h	/^    uint64_t gdt64_base; \/\/ 66$/;"	m	struct:ap_init_area
gdt64_limit	include/nautilus/smp.h	/^    uint16_t gdt64_limit; \/\/ 64$/;"	m	struct:ap_init_area
gdt_base	include/nautilus/smp.h	/^    uint32_t gdt_base; \/\/ 34$/;"	m	struct:ap_init_area
gdt_desc32	include/nautilus/gdt.h	/^struct gdt_desc32 {$/;"	s
gdt_desc64	include/nautilus/gdt.h	/^struct gdt_desc64 {$/;"	s
gdt_limit	include/nautilus/smp.h	/^    uint16_t gdt_limit; \/\/ 32$/;"	m	struct:ap_init_area
gdtr32	src/arch/k1om/asm/boot.S	/^gdtr32:$/;"	l
gdtr32	src/arch/x64/asm/boot.S	/^gdtr32:$/;"	l
gen	src/legion_runtime/legion_ops.h	/^      GenerationID gen;$/;"	m	class:LegionRuntime::HighLevel::Operation
gen	src/legion_runtime/lowlevel.h	/^      gen_t gen;$/;"	m	class:LegionRuntime::LowLevel::Event
gen	src/legion_runtime/region_tree.h	/^      GenerationID gen;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
genCoarseProbGeom	src/test/hpcg/hpcg-problem.cc	/^Problem::genCoarseProbGeom(lgncg::SparseMatrix &Af,$/;"	f	class:Problem
genProbTID	src/test/hpcg/hpcg-problem.cc	/^int Problem::genProbTID       = -1;$/;"	m	class:Problem	file:
genProbTID	src/test/hpcg/hpcg-problem.h	/^    static int genProbTID;$/;"	m	struct:Problem
gen_subscribed	src/legion_runtime/lowlevel_impl.h	/^      Event::gen_t generation, gen_subscribed, free_generation;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
gen_t	src/legion_runtime/lowlevel.h	/^      typedef unsigned gen_t;$/;"	t	class:LegionRuntime::LowLevel::Event
generate_color	src/legion_runtime/region_tree.cc	/^    Color IndexSpaceNode::generate_color(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
generate_permutation	src/legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::generate_permutation($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
generate_unique_color	src/legion_runtime/region_tree.cc	/^    Color RegionTreeForest::generate_unique_color($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
generation	src/legion_runtime/lowlevel_impl.h	/^      Event::gen_t generation, gen_subscribed, free_generation;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
generation	src/legion_runtime/shared_lowlevel.cc	/^	EventGeneration generation;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
generationalcollection	src/lua_src/lgc.c	/^static void generationalcollection (lua_State *L) {$/;"	f	file:
generic_reader	src/lua_src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
generic_receive_callback	src/nautilus/netdev.c	/^static void generic_receive_callback(void *context)$/;"	f	file:
generic_reg	include/acpi/acrestyp.h	/^	struct acpi_resource_generic_register generic_reg;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_generic_register
generic_send_callback	src/nautilus/netdev.c	/^static void generic_send_callback(void *context)$/;"	f	file:
geom	src/test/hpcg/hpcg-problem.cc	/^    lgncg::Geometry geom;$/;"	m	struct:__anon113::HPCGTaskArgs	file:
geom	src/test/hpcg/sparsemat.h	/^    Geometry geom;$/;"	m	struct:lgncg::SparseMatrix
get	src/legion_runtime/activemsg.h	/^  T get(void) const { return value; }$/;"	f	struct:HandlerReplyFuture
get	src/legion_runtime/lowlevel_impl.h	/^      T get(void) const { return (*((volatile T*)(&value))); }$/;"	f	class:LegionRuntime::LowLevel::Atomic
getBMode	include/lua/lopcodes.h	275;"	d
getCMode	include/lua/lopcodes.h	276;"	d
getF	src/lua_src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getOpMode	include/lua/lopcodes.h	274;"	d
getParamsFromArgs	src/test/hpcg/hpcg-main.cc	/^getParamsFromArgs(DriverParams &params)$/;"	f	namespace:__anon117
getS	src/lua_src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getTaskID	src/test/hpcg/utils.h	/^getTaskID(const LegionRuntime::HighLevel::Task *task)$/;"	f	namespace:lgncg
get_accessor	src/legion_runtime/legion.cc	/^      PhysicalRegion::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
get_accessor	src/legion_runtime/lowlevel.cc	/^    RegionAccessor<AccessorType::Generic> RegionInstance::get_accessor(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
get_accessor	src/legion_runtime/region_tree.cc	/^      FoldReductionManager::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_accessor	src/legion_runtime/region_tree.cc	/^      InstanceManager::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_accessor	src/legion_runtime/region_tree.cc	/^      InstanceRef::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_accessor	src/legion_runtime/region_tree.cc	/^      ListReductionManager::get_accessor(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_accessor	src/legion_runtime/runtime.cc	/^      PhysicalRegion::Impl::get_accessor(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_accessor	src/legion_runtime/shared_lowlevel.cc	/^    RegionAccessor<AccessorType::Generic> RegionInstance::get_accessor(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
get_accessor_privilege	src/legion_runtime/legion.cc	/^    AccessorPrivilege RegionRequirement::get_accessor_privilege(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
get_address	src/legion_runtime/shared_lowlevel.cc	/^    void* RegionInstance::Impl::get_address(int index, size_t field_start, size_t field_size,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_address_space_count	src/legion_runtime/lowlevel.cc	/^    size_t Machine::get_address_space_count(void) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_address_space_count	src/legion_runtime/shared_lowlevel.cc	/^    size_t Machine::get_address_space_count(void) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_all_fields	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::get_all_fields(std::set<FieldID> &to_set)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_all_fields	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_all_fields(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_all_memories	src/legion_runtime/lowlevel.h	/^      const std::set<Memory>&    get_all_memories(void) const { return memories; }$/;"	f	class:LegionRuntime::LowLevel::Machine
get_all_processors	src/legion_runtime/lowlevel.h	/^      const std::set<Processor>& get_all_processors(void) const { return procs; }$/;"	f	class:LegionRuntime::LowLevel::Machine
get_all_regions	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::get_all_regions(std::set<LogicalRegion> &regions)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_all_regions	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_all_regions(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_all_variants	src/legion_runtime/legion.h	/^      const std::map<VariantID,Variant>& get_all_variants(void) const { return variants; }$/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
get_allocation	src/legion_runtime/runtime.h	/^      inline void* get_allocation(void) const { return allocation; }$/;"	f	class:LegionRuntime::HighLevel::AllocManager
get_allocation_name	src/legion_runtime/runtime.cc	/^    \/*static*\/ const char* Runtime::get_allocation_name(AllocationType type)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_allocation_size	src/legion_runtime/runtime.h	/^      inline size_t get_allocation_size(void) const$/;"	f	class:LegionRuntime::HighLevel::AllocManager
get_allocator	src/legion_runtime/region_tree.cc	/^    IndexSpaceAllocator* IndexSpaceNode::get_allocator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_aos_parameters	src/legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_aos_parameters(void *&base, size_t &stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_aos_parameters	src/legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_aos_parameters(void *& base, size_t& stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_available_acquire_op	src/legion_runtime/runtime.cc	/^    AcquireOp* Runtime::get_available_acquire_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_and_pred_op	src/legion_runtime/runtime.cc	/^    AndPredOp* Runtime::get_available_and_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_capture_op	src/legion_runtime/runtime.cc	/^    TraceCaptureOp* Runtime::get_available_capture_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_close_op	src/legion_runtime/runtime.cc	/^    CloseOp* Runtime::get_available_close_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_copy_op	src/legion_runtime/runtime.cc	/^    CopyOp* Runtime::get_available_copy_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_deletion_op	src/legion_runtime/runtime.cc	/^    DeletionOp* Runtime::get_available_deletion_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_distributed_id	src/legion_runtime/runtime.cc	/^    DistributedID Runtime::get_available_distributed_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_epoch_op	src/legion_runtime/runtime.cc	/^    MustEpochOp* Runtime::get_available_epoch_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_fence_op	src/legion_runtime/runtime.cc	/^    FenceOp* Runtime::get_available_fence_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_future_pred_op	src/legion_runtime/runtime.cc	/^    FuturePredOp* Runtime::get_available_future_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_index_task	src/legion_runtime/runtime.cc	/^    IndexTask* Runtime::get_available_index_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_individual_task	src/legion_runtime/runtime.cc	/^    IndividualTask* Runtime::get_available_individual_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_inline_task	src/legion_runtime/runtime.cc	/^    InlineTask* Runtime::get_available_inline_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_map_op	src/legion_runtime/runtime.cc	/^    MapOp* Runtime::get_available_map_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_not_pred_op	src/legion_runtime/runtime.cc	/^    NotPredOp* Runtime::get_available_not_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_or_pred_op	src/legion_runtime/runtime.cc	/^    OrPredOp* Runtime::get_available_or_pred_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_point_task	src/legion_runtime/runtime.cc	/^    PointTask* Runtime::get_available_point_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_release_op	src/legion_runtime/runtime.cc	/^    ReleaseOp* Runtime::get_available_release_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_remote_task	src/legion_runtime/runtime.cc	/^    RemoteTask* Runtime::get_available_remote_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_slice_task	src/legion_runtime/runtime.cc	/^    SliceTask* Runtime::get_available_slice_task(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_available_trace_op	src/legion_runtime/runtime.cc	/^    TraceCompleteOp* Runtime::get_available_trace_op(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_avg_per	src/nautilus/scheduler.c	/^static inline uint64_t get_avg_per(rt_priority_queue *runnable, rt_priority_queue *pending, rt_thread *new_thread)$/;"	f	file:
get_barrier	src/legion_runtime/legion.h	/^      Barrier get_barrier(void) const { return phase_barrier; }$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
get_barrier	src/legion_runtime/shared_lowlevel.cc	/^    Barrier EventImpl::get_barrier(unsigned expected_arrivals)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
get_base_ptr	src/legion_runtime/shared_lowlevel.cc	/^        void* get_base_ptr(void) const { return base_ptr; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_batch	src/legion_runtime/lowlevel.cc	/^    void GASNetMemory::get_batch(size_t batch_size,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_bitmask_order	include/lib/bitops.h	/^static __inline__ int get_bitmask_order(unsigned int count)$/;"	f
get_bitmask_order	include/lib/linux_bitops.h	/^static __inline__ int get_bitmask_order(unsigned int count)$/;"	f
get_block_size	src/fs/ext2/ext2_access.c	/^static uint32_t get_block_size(struct ext2_state *fs) $/;"	f	file:
get_block_size	src/legion_runtime/shared_lowlevel.cc	/^        size_t get_block_size(void) const { return block_size; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_blocking_factor	src/legion_runtime/region_tree.cc	/^    size_t MaterializedView::get_blocking_factor(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_boolean_value	src/legion_runtime/runtime.cc	/^    bool Future::Impl::get_boolean_value(bool &valid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_buffer	src/legion_runtime/legion_utilities.h	/^      inline const void* get_buffer(void) const { return buffer; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_buffer_size	src/legion_runtime/legion_utilities.h	/^      inline size_t get_buffer_size(void) const { return total_bytes; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_bytes	src/legion_runtime/lowlevel.cc	/^      virtual void get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
get_bytes	src/legion_runtime/lowlevel.cc	/^      virtual void get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
get_bytes	src/legion_runtime/lowlevel.cc	/^    void GASNetMemory::get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_bytes	src/legion_runtime/lowlevel.cc	/^    void RegionInstance::Impl::get_bytes(int index, off_t byte_offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_bytes	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUFBMemory::get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
get_bytes	src/legion_runtime/lowlevel_gpu.h	/^      virtual void get_bytes(off_t offset, void *dst, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
get_categories_by_id	src/legion_runtime/utilities.h	/^    static std::vector<std::string>& get_categories_by_id(void)$/;"	f	class:LegionRuntime::Logger
get_categories_by_name	src/legion_runtime/utilities.h	/^    static std::map<std::string,int>& get_categories_by_name(void)$/;"	f	class:LegionRuntime::Logger
get_characteristics	include/nautilus/blkdev.h	/^    int (*get_characteristics)(void *state, struct nk_block_dev_characteristics *c);$/;"	m	struct:nk_block_dev_int
get_characteristics	include/nautilus/chardev.h	/^    int (*get_characteristics)(void *state, struct nk_char_dev_characteristics *c); $/;"	m	struct:nk_char_dev_int
get_characteristics	include/nautilus/netdev.h	/^    int (*get_characteristics)(void *state, struct nk_net_dev_characteristics *c);$/;"	m	struct:nk_net_dev_int
get_characteristics	src/dev/ata.c	/^static int get_characteristics(void *state, struct nk_block_dev_characteristics *c)$/;"	f	file:
get_characteristics	src/dev/ramdisk.c	/^static int get_characteristics(void *state, struct nk_block_dev_characteristics *c)$/;"	f	file:
get_child	src/legion_runtime/region_tree.cc	/^    Color RegionTreePath::get_child(unsigned depth) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
get_child	src/legion_runtime/region_tree.cc	/^    IndexPartNode* IndexSpaceNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_child	src/legion_runtime/region_tree.cc	/^    IndexSpaceNode* IndexPartNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_child	src/legion_runtime/region_tree.cc	/^    PartitionNode* RegionNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_child	src/legion_runtime/region_tree.cc	/^    RegionNode* PartitionNode::get_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_child	src/legion_runtime/region_tree.h	/^      inline int get_child(void) const { return close_handle.get_child(); }$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
get_child	src/legion_runtime/region_tree.h	/^      inline int get_child(void) const { return impl->target_child; }$/;"	f	class:LegionRuntime::HighLevel::TreeClose
get_children_mapped	src/legion_runtime/legion_ops.h	/^      inline Event get_children_mapped(void) const { return children_mapped; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_cleanup_proc	src/legion_runtime/runtime.cc	/^    Processor Runtime::get_cleanup_proc(Processor p) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_close_operations	src/legion_runtime/region_tree.cc	/^    void RegionTreePath::get_close_operations(unsigned depth,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
get_coherence_mask	src/legion_runtime/region_tree.cc	/^    const FieldMask& RestrictedTraverser::get_coherence_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
get_collection_table	src/legion_runtime/runtime.cc	/^                                      Runtime::get_collection_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_color	src/legion_runtime/region_tree.cc	/^    unsigned PartitionNode::get_color(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_color	src/legion_runtime/region_tree.cc	/^    unsigned RegionNode::get_color(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_color_modulus	src/legion_runtime/runtime.h	/^      inline unsigned get_color_modulus(void) const { return runtime_stride; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_colors	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::get_colors(std::set<Color> &colors)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_column_source	src/legion_runtime/region_tree.h	/^      inline FieldSpaceNode* get_column_source(void) const $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
get_completion_event	src/legion_runtime/legion_ops.h	/^      inline Event get_completion_event(void) const { return completion_event; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_component_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& IndexSpaceNode::get_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_component_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& PartitionNode::get_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_component_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& RegionNode::get_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_composite_node	src/legion_runtime/region_tree.cc	/^    CompositeNode* CompositeCloser::get_composite_node(RegionTreeNode *node,$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
get_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext InlineTask::get_context(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext SingleTask::get_context(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_context_count	src/legion_runtime/runtime.h	/^      inline unsigned get_context_count(void) { return total_contexts; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_context_id	src/legion_runtime/legion_tasks.cc	/^    ContextID InlineTask::get_context_id(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_context_id	src/legion_runtime/legion_tasks.cc	/^    ContextID SingleTask::get_context_id(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_contig_pointer	src/legion_runtime/activemsg.cc	/^  virtual void *get_contig_pointer(void) { return 0; }$/;"	f	class:PayloadSource
get_contig_pointer	src/legion_runtime/activemsg.cc	/^  virtual void *get_contig_pointer(void) { return srcptr; }$/;"	f	class:ContiguousPayload
get_count_order	include/lib/bitops.h	/^static __inline__ int get_count_order(unsigned int count)$/;"	f
get_count_order	include/lib/linux_bitops.h	/^static __inline__ int get_count_order(unsigned int count)$/;"	f
get_cpu	include/nautilus/percpu.h	/^get_cpu (void)$/;"	f
get_cur_entry	src/legion_runtime/shared_lowlevel.cc	/^        size_t* get_cur_entry(void) { return &cur_entry; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_cur_thread	include/nautilus/thread.h	/^get_cur_thread (void)$/;"	f
get_current_pointer	src/legion_runtime/legion_utilities.h	/^    inline const void* Deserializer::get_current_pointer(void) const$/;"	f	class:LegionRuntime::HighLevel::Deserializer
get_current_time_in_micros	src/legion_runtime/utilities.h	/^    static inline unsigned long long get_current_time_in_micros(void)$/;"	f	class:LegionRuntime::TimeStamp
get_current_time_in_nanos	src/legion_runtime/utilities.h	/^    static inline unsigned long long get_current_time_in_nanos(void)$/;"	f	class:LegionRuntime::TimeStamp
get_cursor_x	xeon_phi/linux_usr/phi_console.c	/^get_cursor_x (void)$/;"	f	file:
get_cursor_y	xeon_phi/linux_usr/phi_console.c	/^get_cursor_y (void)$/;"	f	file:
get_data_ptr	src/legion_runtime/shared_lowlevel.cc	/^    void* ReservationImpl::get_data_ptr(void) const$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
get_data_size	src/legion_runtime/shared_lowlevel.cc	/^    size_t ReservationImpl::get_data_size(void) const$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
get_denom	src/legion_runtime/legion_utilities.h	/^      inline T get_denom(void) const { return denominator; }$/;"	f	class:LegionRuntime::HighLevel::Fraction
get_depth	src/legion_runtime/legion.cc	/^    unsigned Acquire::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Acquire
get_depth	src/legion_runtime/legion.cc	/^    unsigned Copy::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Copy
get_depth	src/legion_runtime/legion.cc	/^    unsigned Inline::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Inline
get_depth	src/legion_runtime/legion.cc	/^    unsigned Release::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Release
get_depth	src/legion_runtime/legion.cc	/^    unsigned Task::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Task
get_depth	src/legion_runtime/legion_spy.h	/^      unsigned get_depth(void) const { return depth; }$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
get_depth	src/legion_runtime/region_tree.cc	/^    unsigned PartitionNode::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_depth	src/legion_runtime/region_tree.cc	/^    unsigned RegionNode::get_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_diff_us	src/legion_runtime/utilities.h	/^    double get_diff_us(mach_timespec_t &start, mach_timespec_t &stop)$/;"	f	class:LegionRuntime::TimeStamp
get_diff_us	src/legion_runtime/utilities.h	/^    double get_diff_us(struct timespec &start, struct timespec &stop)$/;"	f	class:LegionRuntime::TimeStamp
get_dim	src/legion_runtime/lowlevel.h	/^      int get_dim(void) const { return dim; }$/;"	f	class:LegionRuntime::LowLevel::Domain
get_dim	src/legion_runtime/lowlevel.h	/^      int get_dim(void) const { return dim; }$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
get_dim	src/legion_runtime/lowlevel.h	/^      int get_dim(void) const { return dim; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
get_direct_ptr	src/legion_runtime/lowlevel.cc	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
get_direct_ptr	src/legion_runtime/lowlevel.cc	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
get_direct_ptr	src/legion_runtime/lowlevel.cc	/^    void *GASNetMemory::get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_direct_ptr	src/legion_runtime/lowlevel_gpu.h	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
get_direct_ptr	src/legion_runtime/lowlevel_gpu.h	/^      virtual void *get_direct_ptr(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
get_dirty_mask	src/legion_runtime/region_tree.cc	/^    const FieldMask& PhysicalCloser::get_dirty_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
get_dma_queue	src/legion_runtime/shared_lowlevel.cc	/^      static DMAQueue *get_dma_queue(void) { return dma_queue; }$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_domain	src/legion_runtime/region_tree.cc	/^    Domain PartitionNode::get_domain(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_domain	src/legion_runtime/region_tree.cc	/^    Domain RegionNode::get_domain(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_domain_volume	src/legion_runtime/region_tree.cc	/^    size_t RegionTreeForest::get_domain_volume(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_domain_volume	src/legion_runtime/region_tree.cc	/^    size_t RegionTreeForest::get_domain_volume(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_dominator_mask	src/legion_runtime/region_tree.cc	/^    FieldMask LogicalDepAnalyzer::get_dominator_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
get_dst	src/legion_runtime/legion_utilities.h	/^    inline unsigned BitPermutation<BITMASK,LOG2MAX>::get_dst(unsigned src)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
get_element_mask	src/legion_runtime/shared_lowlevel.cc	/^    const ElementMask& IndexSpace::Impl::get_element_mask(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_elmt_size	src/legion_runtime/shared_lowlevel.cc	/^        size_t get_elmt_size(void) const { return elmt_size; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_enclosing_physical_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext TaskOp::get_enclosing_physical_context(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_equalTM	src/lua_src/lvm.c	/^static const TValue *get_equalTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_event	src/legion_runtime/shared_lowlevel.cc	/^    Event EventImpl::get_event() $/;"	f	class:LegionRuntime::LowLevel::EventImpl
get_event_impl	src/legion_runtime/lowlevel.cc	/^    Event::Impl *Runtime::get_event_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_event_impl	src/legion_runtime/shared_lowlevel.cc	/^    EventImpl* Runtime::get_event_impl(Event e)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_executing_processor	src/legion_runtime/legion.cc	/^    Processor HighLevelRuntime::get_executing_processor(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_executing_processor	src/legion_runtime/legion_tasks.h	/^      inline Processor get_executing_processor(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_executing_processor	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Processor Machine::get_executing_processor(void) $/;"	f	class:LegionRuntime::LowLevel::Machine
get_executing_processor	src/legion_runtime/runtime.cc	/^    Processor Runtime::get_executing_processor(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_executing_processor	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ Processor Machine::get_executing_processor(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
get_fbmem_gpu_base	src/legion_runtime/lowlevel_gpu.cc	/^    void *GPUProcessor::get_fbmem_gpu_base(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
get_field_accessor	src/legion_runtime/accessor.h	/^	RegionAccessor<Generic, FT, PT> get_field_accessor(FT T::* ptr) { $/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::StructSpecific
get_field_accessor	src/legion_runtime/legion.cc	/^      PhysicalRegion::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
get_field_accessor	src/legion_runtime/region_tree.cc	/^      FoldReductionManager::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_field_accessor	src/legion_runtime/region_tree.cc	/^      InstanceManager::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_field_accessor	src/legion_runtime/region_tree.cc	/^      InstanceRef::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_field_accessor	src/legion_runtime/region_tree.cc	/^      ListReductionManager::get_field_accessor(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_field_accessor	src/legion_runtime/runtime.cc	/^      PhysicalRegion::Impl::get_field_accessor(FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_field_index	src/legion_runtime/region_tree.cc	/^    unsigned FieldSpaceNode::get_field_index(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_indexes	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::get_field_indexes(const std::set<FieldID> &needed,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_mask	src/legion_runtime/region_tree.cc	/^    FieldMask FieldSpaceNode::get_field_mask($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_size	src/legion_runtime/legion.cc	/^    size_t HighLevelRuntime::get_field_size(Context ctx, FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_field_size	src/legion_runtime/legion.cc	/^    size_t Mapper::get_field_size(FieldSpace handle, FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_field_size	src/legion_runtime/region_tree.cc	/^    size_t FieldSpaceNode::get_field_size(FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
get_field_size	src/legion_runtime/region_tree.cc	/^    size_t RegionTreeForest::get_field_size(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_field_size	src/legion_runtime/runtime.cc	/^    size_t Runtime::get_field_size(Context ctx, FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_field_size	src/legion_runtime/runtime.cc	/^    size_t Runtime::get_field_size(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_field_sizes	src/legion_runtime/shared_lowlevel.cc	/^        const std::vector<size_t>& get_field_sizes(void) const { return field_sizes; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_field_space	src/legion_runtime/legion.h	/^      inline FieldSpace get_field_space(void) const { return field_space; }$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
get_field_space	src/legion_runtime/legion.h	/^      inline FieldSpace get_field_space(void) const { return field_space; }$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
get_field_space	src/legion_runtime/legion.h	/^      inline FieldSpace get_field_space(void) const { return field_space; }$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
get_file_size	src/fs/ext2/ext2.c	/^static size_t get_file_size(struct ext2_state *fs, struct ext2_inode *inode) $/;"	f	file:
get_first_block	src/legion_runtime/utilities.h	/^      static TraceBlock*& get_first_block(void)$/;"	f	class:LegionRuntime::LowLevel::Tracer
get_fnptr	src/legion_runtime/arrays.h	/^      MappingDeserializerFn get_fnptr(int id) const$/;"	f	class:LegionRuntime::Arrays::MappingRegistry
get_free_event	src/legion_runtime/shared_lowlevel.cc	/^    EventImpl* Runtime::get_free_event()$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_instance	src/legion_runtime/shared_lowlevel.cc	/^    RegionInstance::Impl* Runtime::get_free_instance(IndexSpace r, Memory m, $/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_metadata	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_free_metadata(IndexSpace::Impl *parent, const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_metadata	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_free_metadata(const ElementMask &mask)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_metadata	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_free_metadata(size_t num_elmts)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_proc_group	src/legion_runtime/shared_lowlevel.cc	/^    ProcessorGroup *Runtime::get_free_proc_group(const std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_free_reservation	src/legion_runtime/shared_lowlevel.cc	/^    ReservationImpl* Runtime::get_free_reservation(size_t data_size\/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_future	src/legion_runtime/legion.cc	/^    Future FutureMap::get_future(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_future	src/legion_runtime/legion.h	/^    inline Future FutureMap::get_future(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_future	src/legion_runtime/runtime.cc	/^    Future FutureMap::Impl::get_future(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
get_gc_proc	src/legion_runtime/runtime.cc	/^    Processor Runtime::get_gc_proc(Processor p) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_generation	src/legion_runtime/legion_ops.h	/^      inline GenerationID get_generation(void) const { return gen; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_gpu_valid_mask	src/legion_runtime/lowlevel_gpu.cc	/^    static unsigned *get_gpu_valid_mask(RegionMetaDataUntyped region)$/;"	f	namespace:LegionRuntime::LowLevel
get_group_members	src/legion_runtime/lowlevel.cc	/^    void Processor::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
get_group_members	src/legion_runtime/lowlevel.cc	/^    void ProcessorGroup::get_group_members(std::vector<Processor>& member_list)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
get_group_members	src/legion_runtime/shared_lowlevel.cc	/^    void Processor::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::Processor
get_group_members	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorGroup::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
get_group_members	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::get_group_members(std::vector<Processor>& members)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_handle	src/legion_runtime/region_tree.h	/^      const ViewHandle& get_handle(void) const { return handle; }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_hash_key	src/legion_runtime/legion_utilities.h	/^    inline T BitMask<T,MAX,SHIFT,MASK>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
get_hash_key	src/legion_runtime/legion_utilities.h	/^    inline T TLBitMask<T,MAX,SHIFT,MASK>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
get_hash_key	src/legion_runtime/legion_utilities.h	/^    inline uint64_t AVXBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
get_hash_key	src/legion_runtime/legion_utilities.h	/^    inline uint64_t AVXTLBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
get_hash_key	src/legion_runtime/legion_utilities.h	/^    inline uint64_t SSEBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
get_hash_key	src/legion_runtime/legion_utilities.h	/^    inline uint64_t SSETLBitMask<MAX>::get_hash_key(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
get_home_node	src/legion_runtime/lowlevel.cc	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
get_home_node	src/legion_runtime/lowlevel.cc	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
get_home_node	src/legion_runtime/lowlevel.cc	/^    int GASNetMemory::get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
get_home_node	src/legion_runtime/lowlevel_gpu.h	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
get_home_node	src/legion_runtime/lowlevel_gpu.h	/^      virtual int get_home_node(off_t offset, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
get_hybrid_soa_parameters	src/legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_hybrid_soa_parameters(void *&base, size_t &stride, $/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_hybrid_soa_parameters	src/legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_hybrid_soa_parameters(void *& base, size_t& stride,$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_id	src/legion_runtime/arrays.h	/^      int get_id(void) const {$/;"	f	class:LegionRuntime::Arrays::MappingRegistry
get_id	src/legion_runtime/legion.h	/^      inline FieldSpaceID get_id(void) const { return id; }$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
get_id	src/legion_runtime/runtime.h	/^      inline ContextID get_id(void) const $/;"	f	class:LegionRuntime::HighLevel::RegionTreeContext
get_id	src/legion_runtime/shared_lowlevel.cc	/^        Processor get_id(void) const { return proc; }$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_image	src/legion_runtime/lowlevel.h	/^      int get_image(const DomainPoint& p) const$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
get_index	src/legion_runtime/legion_utilities.h	/^      inline off_t get_index(void) const { return index; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_index	src/legion_runtime/lowlevel.h	/^      int get_index(void) const$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
get_index_partition	src/legion_runtime/legion.cc	/^    IndexPartition HighLevelRuntime::get_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_partition	src/legion_runtime/legion.cc	/^    IndexPartition Mapper::get_index_partition(IndexSpace parent, $/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_partition	src/legion_runtime/legion.h	/^      inline IndexPartition get_index_partition(void) const $/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
get_index_partition	src/legion_runtime/region_tree.cc	/^    IndexPartition RegionTreeForest::get_index_partition(IndexSpace parent,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_partition	src/legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_index_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition	src/legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_index_partition(IndexSpace parent, Color color)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color	src/legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_index_partition_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_partition_color	src/legion_runtime/legion.cc	/^    Color Mapper::get_index_partition_color(IndexPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_partition_color	src/legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_index_partition_color(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_partition_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_index_partition_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_index_partition_color(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color_space	src/legion_runtime/legion.cc	/^    Domain HighLevelRuntime::get_index_partition_color_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_partition_color_space	src/legion_runtime/legion.cc	/^    Domain Mapper::get_index_partition_color_space(IndexPartition p) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_partition_color_space	src/legion_runtime/region_tree.cc	/^    Domain RegionTreeForest::get_index_partition_color_space(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_partition_color_space	src/legion_runtime/runtime.cc	/^    Domain Runtime::get_index_partition_color_space(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_partition_color_space	src/legion_runtime/runtime.cc	/^    Domain Runtime::get_index_partition_color_space(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space	src/legion_runtime/legion.h	/^      inline IndexSpace get_index_space(void) const { return index_space; }$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
get_index_space	src/legion_runtime/legion.h	/^      inline IndexSpace get_index_space(void) const { return index_space; }$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
get_index_space	src/legion_runtime/lowlevel.h	/^      LegionRuntime::LowLevel::IndexSpace get_index_space(bool create_if_needed = false)$/;"	f	class:LegionRuntime::LowLevel::Domain
get_index_space	src/legion_runtime/lowlevel.h	/^      LegionRuntime::LowLevel::IndexSpace get_index_space(void) const$/;"	f	class:LegionRuntime::LowLevel::Domain
get_index_space_allocator	src/legion_runtime/region_tree.cc	/^    IndexSpaceAllocator* RegionTreeForest::get_index_space_allocator($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_color	src/legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_index_space_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_color	src/legion_runtime/legion.cc	/^    Color Mapper::get_index_space_color(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_color	src/legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_index_space_color(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_index_space_color(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_index_space_color(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domain	src/legion_runtime/legion.cc	/^    Domain HighLevelRuntime::get_index_space_domain(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_domain	src/legion_runtime/legion.cc	/^    Domain Mapper::get_index_space_domain(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_domain	src/legion_runtime/region_tree.cc	/^    Domain RegionTreeForest::get_index_space_domain(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_domain	src/legion_runtime/runtime.cc	/^    Domain Runtime::get_index_space_domain(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domain	src/legion_runtime/runtime.cc	/^    Domain Runtime::get_index_space_domain(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domains	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::get_index_space_domains(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_domains	src/legion_runtime/legion.cc	/^    void Mapper::get_index_space_domains(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_domains	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_index_space_domains(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_domains	src/legion_runtime/runtime.cc	/^    void Runtime::get_index_space_domains(Context ctx, IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_domains	src/legion_runtime/runtime.cc	/^    void Runtime::get_index_space_domains(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_impl	src/legion_runtime/lowlevel.cc	/^    IndexSpace::Impl *Runtime::get_index_space_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_index_space_partition_colors	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::get_index_space_partition_colors(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_space_partition_colors	src/legion_runtime/legion.cc	/^    void Mapper::get_index_space_partition_colors(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_space_partition_colors	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::get_index_space_partition_colors(IndexSpace sp,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_space_partition_colors	src/legion_runtime/runtime.cc	/^    void Runtime::get_index_space_partition_colors(Context ctx, IndexSpace sp,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_space_partition_colors	src/legion_runtime/runtime.cc	/^    void Runtime::get_index_space_partition_colors(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_subspace	src/legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::get_index_subspace(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_subspace	src/legion_runtime/legion.cc	/^    IndexSpace Mapper::get_index_subspace(IndexPartition p, Color c) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_subspace	src/legion_runtime/legion.h	/^    IndexSpace HighLevelRuntime::get_index_subspace(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_index_subspace	src/legion_runtime/legion.h	/^    IndexSpace Mapper::get_index_subspace(IndexPartition p,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_index_subspace	src/legion_runtime/region_tree.cc	/^    IndexSpace RegionTreeForest::get_index_subspace(IndexPartition parent,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_index_subspace	src/legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_index_subspace(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_index_subspace	src/legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_index_subspace(IndexPartition p, Color c)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_inline_table	src/legion_runtime/runtime.cc	/^                                          Runtime::get_inline_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_inode_num_by_path	src/fs/ext2/ext2_access.c	/^static uint32_t get_inode_num_by_path(struct ext2_state *fs, char *path) $/;"	f	file:
get_inode_num_from_dir	src/fs/ext2/ext2_access.c	/^static uint32_t get_inode_num_from_dir(struct ext2_state *fs, $/;"	f	file:
get_input_args	src/legion_runtime/legion.cc	/^    \/*static*\/ const InputArgs& HighLevelRuntime::get_input_args(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_input_args	src/legion_runtime/runtime.cc	/^    \/*static*\/ InputArgs& Runtime::get_input_args(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_instance	src/legion_runtime/legion_tasks.cc	/^    PhysicalManager* SingleTask::get_instance(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_instance	src/legion_runtime/lowlevel.cc	/^    RegionInstance::Impl *Memory::Impl::get_instance(RegionInstance i)$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
get_instance	src/legion_runtime/region_tree.h	/^      inline PhysicalInstance get_instance(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
get_instance	src/legion_runtime/shared_lowlevel.cc	/^    RegionInstance RegionInstance::Impl::get_instance(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_instance_impl	src/legion_runtime/lowlevel.cc	/^    RegionInstance::Impl *Runtime::get_instance_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_instance_impl	src/legion_runtime/shared_lowlevel.cc	/^    RegionInstance::Impl* Runtime::get_instance_impl(RegionInstance i)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_instance_ref	src/legion_runtime/region_tree.cc	/^    const MappingRef& MappingTraverser::get_instance_ref(void) const$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
get_instance_size	src/legion_runtime/region_tree.cc	/^    size_t FoldReductionManager::get_instance_size(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_instance_size	src/legion_runtime/region_tree.cc	/^    size_t InstanceManager::get_instance_size(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_instance_size	src/legion_runtime/region_tree.cc	/^    size_t ListReductionManager::get_instance_size(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_intersection_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& IndexPartNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_intersection_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& IndexSpaceNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_intersection_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& PartitionNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_intersection_domains	src/legion_runtime/region_tree.cc	/^    const std::set<Domain>& RegionNode::get_intersection_domains($/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_kind	src/legion_runtime/lowlevel.cc	/^    Memory::Kind Memory::Impl::get_kind(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory::Impl
get_kind	src/legion_runtime/shared_lowlevel.cc	/^    Memory::Kind MemoryImpl::get_kind(void) const$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
get_last_block	src/legion_runtime/utilities.h	/^      static TraceBlock*& get_last_block(void)$/;"	f	class:LegionRuntime::LowLevel::Tracer
get_layout_size	src/legion_runtime/region_tree.cc	/^    size_t LayoutDescription::get_layout_size(void) const$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
get_leave_open	src/legion_runtime/region_tree.h	/^      inline bool get_leave_open(void) const $/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
get_leave_open	src/legion_runtime/region_tree.h	/^      inline bool get_leave_open(void) const { return impl->leave_open; }$/;"	f	class:LegionRuntime::HighLevel::TreeClose
get_line	scripts/kconfig/lxdialog/textbox.c	/^static char *get_line(void)$/;"	f	file:
get_linearization	src/legion_runtime/shared_lowlevel.cc	/^        const DomainLinearization& get_linearization(void) const { return linearization; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_list_pointers	src/legion_runtime/lowlevel.h	/^      virtual void get_list_pointers(unsigned *ptrs, const void *entry_ptr, size_t count) const$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
get_lmb_size	src/legion_runtime/activemsg.cc	/^size_t get_lmb_size(int target_node)$/;"	f
get_local_args	src/legion_runtime/legion.cc	/^    const void* HighLevelRuntime::get_local_args(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_local_args	src/legion_runtime/runtime.cc	/^    const void* Runtime::get_local_args(SingleTask *ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_local_processors	src/legion_runtime/lowlevel.cc	/^    const std::set<Processor>& Machine::get_local_processors(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_local_processors	src/legion_runtime/shared_lowlevel.cc	/^    const std::set<Processor>& Machine::get_local_processors(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_location	src/legion_runtime/region_tree.cc	/^    Memory MaterializedView::get_location(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_location	src/legion_runtime/region_tree.cc	/^    Memory ReductionView::get_location(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
get_lock_impl	src/legion_runtime/lowlevel.cc	/^    Reservation::Impl *Runtime::get_lock_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_log_cats_enabled	src/legion_runtime/utilities.h	/^    static std::vector<bool>& get_log_cats_enabled(void)$/;"	f	class:LegionRuntime::Logger
get_log_file	src/legion_runtime/lowlevel.cc	/^  \/*static*\/ FILE* Logger::get_log_file(void)$/;"	f	class:LegionRuntime::Logger
get_log_file	src/legion_runtime/utilities.h	/^    static inline int get_log_file(void)$/;"	f	class:LegionRuntime::Logger
get_log_level	src/legion_runtime/utilities.h	/^    static LogLevel& get_log_level(void)$/;"	f	class:LegionRuntime::Logger
get_logging_buffer	src/legion_runtime/utilities.h	/^    static inline char* get_logging_buffer(void)$/;"	f	class:LegionRuntime::Logger
get_logging_location	src/legion_runtime/utilities.h	/^    static long long* get_logging_location(void)$/;"	f	class:LegionRuntime::Logger
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* AcquireOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* AndPredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* CloseOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* CopyOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* DeletionOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* FenceOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* FuturePredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* MapOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* MustEpochOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* NotPredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* OrPredOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
get_logging_name	src/legion_runtime/legion_ops.cc	/^    const char* ReleaseOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_logging_name	src/legion_runtime/legion_tasks.cc	/^    const char* TaskOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_logging_name	src/legion_runtime/legion_trace.cc	/^    const char* TraceCaptureOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
get_logging_name	src/legion_runtime/legion_trace.cc	/^    const char* TraceCompleteOp::get_logging_name(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
get_logical_mask	src/legion_runtime/region_tree.h	/^      inline FieldMask& get_logical_mask(void) const $/;"	f	class:LegionRuntime::HighLevel::TreeClose
get_logical_partition	src/legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition	src/legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_logical_partition(LogicalRegion parent,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition	src/legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_logical_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition(LogicalRegion parent,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_color	src/legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_logical_partition_by_color($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition_by_color	src/legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_logical_partition_by_color(LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition_by_color	src/legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_logical_partition_by_color($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition_by_color	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_color($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_color	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_color(LogicalRegion par,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_tree	src/legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_logical_partition_by_tree($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition_by_tree	src/legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_logical_partition_by_tree(IndexPartition part,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition_by_tree	src/legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_logical_partition_by_tree($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition_by_tree	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_tree($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_by_tree	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_logical_partition_by_tree(IndexPartition part,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_color	src/legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_logical_partition_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_partition_color	src/legion_runtime/legion.cc	/^    Color Mapper::get_logical_partition_color(LogicalPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_partition_color	src/legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_logical_partition_color(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_partition_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_logical_partition_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_partition_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_logical_partition_color(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_region	src/legion_runtime/legion.cc	/^    LogicalRegion PhysicalRegion::get_logical_region(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
get_logical_region	src/legion_runtime/runtime.cc	/^    LogicalRegion PhysicalRegion::Impl::get_logical_region(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_logical_region_color	src/legion_runtime/legion.cc	/^    Color HighLevelRuntime::get_logical_region_color(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_region_color	src/legion_runtime/legion.cc	/^    Color Mapper::get_logical_region_color(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_region_color	src/legion_runtime/region_tree.cc	/^    Color RegionTreeForest::get_logical_region_color(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_region_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_logical_region_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_region_color	src/legion_runtime/runtime.cc	/^    Color Runtime::get_logical_region_color(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_state	src/legion_runtime/region_tree.cc	/^    LogicalState& RegionTreeNode::get_logical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
get_logical_subregion	src/legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_logical_subregion(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_subregion	src/legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_logical_subregion(LogicalPartition parent,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_subregion	src/legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_logical_subregion($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_subregion	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion(LogicalPartition parent,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_color	src/legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_logical_subregion_by_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_subregion_by_color	src/legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_logical_subregion_by_color(LogicalPartition par,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_subregion_by_color	src/legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_logical_subregion_by_color($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_subregion_by_color	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_color(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_color	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_color(LogicalPartition par,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_tree	src/legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_logical_subregion_by_tree(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_logical_subregion_by_tree	src/legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_logical_subregion_by_tree(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_logical_subregion_by_tree	src/legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_logical_subregion_by_tree($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_logical_subregion_by_tree	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_tree(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_logical_subregion_by_tree	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_logical_subregion_by_tree(IndexSpace handle,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_lower_targets	src/legion_runtime/region_tree.cc	/^                                                  get_lower_targets(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
get_machine	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Machine *Machine::get_machine(void) { return the_machine; }$/;"	f	class:LegionRuntime::LowLevel::Machine
get_machine	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ Machine* Machine::get_machine(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
get_manager	src/legion_runtime/region_tree.cc	/^    PhysicalManager* CompositeView::get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
get_manager	src/legion_runtime/region_tree.cc	/^    PhysicalManager* MaterializedView::get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_manager	src/legion_runtime/region_tree.cc	/^    PhysicalManager* ReductionView::get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
get_manager	src/legion_runtime/region_tree.h	/^      inline PhysicalManager* get_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
get_mappable_kind	src/legion_runtime/legion_ops.cc	/^    Mappable::MappableKind AcquireOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_mappable_kind	src/legion_runtime/legion_ops.cc	/^    Mappable::MappableKind CopyOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
get_mappable_kind	src/legion_runtime/legion_ops.cc	/^    Mappable::MappableKind MapOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
get_mappable_kind	src/legion_runtime/legion_ops.cc	/^    Mappable::MappableKind ReleaseOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_mappable_kind	src/legion_runtime/legion_tasks.cc	/^    Mappable::MappableKind TaskOp::get_mappable_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_mapper	src/legion_runtime/legion.cc	/^    Mapper* HighLevelRuntime::get_mapper(Context ctx, MapperID id,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_mapper	src/legion_runtime/runtime.cc	/^    Mapper* Runtime::get_mapper(Context ctx, MapperID id, Processor target)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_mapping	src/legion_runtime/lowlevel.h	/^      Arrays::Mapping<DIM, 1> *get_mapping(void) const$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
get_mask	src/legion_runtime/region_tree.h	/^      inline const FieldMask& get_mask(void) const { return needed_fields; }$/;"	f	class:LegionRuntime::HighLevel::MappingRef
get_materialized_parent_view	src/legion_runtime/region_tree.cc	/^    MaterializedView* MaterializedView::get_materialized_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_materialized_subview	src/legion_runtime/region_tree.cc	/^    MaterializedView* MaterializedView::get_materialized_subview(Color c)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_max_id_per_pkg	src/nautilus/numa.c	/^get_max_id_per_pkg (void)$/;"	f	file:
get_max_mode	src/dev/apic.c	/^static apic_mode_t get_max_mode()$/;"	f	file:
get_mem_mem_affinity	src/legion_runtime/lowlevel.cc	/^    int Machine::get_mem_mem_affinity(std::vector<Machine::MemoryMemoryAffinity>& result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_mem_mem_affinity	src/legion_runtime/shared_lowlevel.cc	/^    int Machine::get_mem_mem_affinity(std::vector<MemoryMemoryAffinity> &result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory	src/legion_runtime/region_tree.cc	/^    Memory InstanceRef::get_memory(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_memory_impl	src/legion_runtime/lowlevel.cc	/^    Memory::Impl *Runtime::get_memory_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_memory_impl	src/legion_runtime/shared_lowlevel.cc	/^    MemoryImpl* Runtime::get_memory_impl(Memory m)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_memory_kind	src/legion_runtime/lowlevel.cc	/^    Memory::Kind Machine::get_memory_kind(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory_kind	src/legion_runtime/shared_lowlevel.cc	/^    Memory::Kind Machine::get_memory_kind(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory_size	src/legion_runtime/lowlevel.cc	/^    size_t Machine::get_memory_size(const Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_memory_size	src/legion_runtime/shared_lowlevel.cc	/^    size_t Machine::get_memory_size(const Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_message_proc	src/legion_runtime/runtime.cc	/^    Processor Runtime::get_message_proc(Processor p) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_metadata	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace IndexSpace::Impl::get_metadata(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_metadata_impl	src/legion_runtime/shared_lowlevel.cc	/^    IndexSpace::Impl* Runtime::get_metadata_impl(IndexSpace m)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_min_per	src/nautilus/scheduler.c	/^static inline uint64_t get_min_per(rt_priority_queue *runnable, rt_priority_queue *pending, rt_thread *thread)$/;"	f	file:
get_mode	src/dev/apic.c	/^static apic_mode_t get_mode()$/;"	f	file:
get_my_apicid	src/nautilus/sfi.c	/^get_my_apicid (void)$/;"	f	file:
get_my_cr3	src/arch/hrt/hrt.c	/^get_my_cr3 (void)$/;"	f	file:
get_next	src/legion_runtime/accessor.h	/^	  inline ptr_t get_next(void) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
get_next	src/legion_runtime/lowlevel.cc	/^    bool ElementMask::Enumerator::get_next(int &position, int &length)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
get_next	src/legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::Enumerator::get_next(int &position, int &length)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
get_next_available_id	src/legion_runtime/runtime.cc	/^    \/*static*\/ Processor::TaskFuncID Runtime::get_next_available_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_node	src/legion_runtime/region_tree.cc	/^    FieldSpaceNode* RegionTreeForest::get_node(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	src/legion_runtime/region_tree.cc	/^    IndexPartNode* RegionTreeForest::get_node(IndexPartition part)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	src/legion_runtime/region_tree.cc	/^    IndexSpaceNode* RegionTreeForest::get_node(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	src/legion_runtime/region_tree.cc	/^    PartitionNode* RegionTreeForest::get_node(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node	src/legion_runtime/region_tree.cc	/^    RegionNode* RegionTreeForest::get_node(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_node_voltage	src/test/circuit_cpu.cc	/^static inline float get_node_voltage(const RegionAccessor<AT,float> &priv,$/;"	f	file:
get_non_dominated_mask	src/legion_runtime/region_tree.cc	/^    const FieldMask& PhysicalDepAnalyzer<FILTER>::get_non_dominated_mask(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
get_non_dominated_mask	src/legion_runtime/region_tree.h	/^      inline const FieldMask& get_non_dominated_mask(void) const $/;"	f	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
get_num	src/legion_runtime/legion_utilities.h	/^      inline T get_num(void) const { return numerator; }$/;"	f	class:LegionRuntime::HighLevel::Fraction
get_num_children	src/legion_runtime/region_tree.cc	/^    size_t IndexPartNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_num_children	src/legion_runtime/region_tree.cc	/^    size_t IndexSpaceNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_num_children	src/legion_runtime/region_tree.cc	/^    size_t PartitionNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_num_children	src/legion_runtime/region_tree.cc	/^    size_t RegionNode::get_num_children(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_num_elmts	src/legion_runtime/lowlevel.h	/^      int get_num_elmts(void) const { return num_elements; }$/;"	f	class:LegionRuntime::LowLevel::ElementMask
get_num_elmts	src/legion_runtime/shared_lowlevel.cc	/^        size_t get_num_elmts(void) const { return num_elmts; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_num_elmts	src/legion_runtime/shared_lowlevel.cc	/^        size_t get_num_elmts(void) const { return num_elmts; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_observed_mask	src/legion_runtime/region_tree.cc	/^    const FieldMask& PhysicalDepAnalyzer<FILTER>::get_observed_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
get_operation_depth	src/legion_runtime/legion_ops.cc	/^    unsigned Operation::get_operation_depth(void) const$/;"	f	class:LegionRuntime::HighLevel::Operation
get_parent	src/legion_runtime/legion_ops.h	/^      inline SingleTask* get_parent(void) const { return parent_ctx; }$/;"	f	class:LegionRuntime::HighLevel::Operation
get_parent	src/legion_runtime/region_tree.cc	/^    IndexTreeNode* IndexPartNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_parent	src/legion_runtime/region_tree.cc	/^    IndexTreeNode* IndexSpaceNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
get_parent	src/legion_runtime/region_tree.cc	/^    RegionTreeNode* PartitionNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_parent	src/legion_runtime/region_tree.cc	/^    RegionTreeNode* RegionNode::get_parent(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_parent_index_partition	src/legion_runtime/legion.cc	/^    IndexPartition HighLevelRuntime::get_parent_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_index_partition	src/legion_runtime/legion.cc	/^    IndexPartition Mapper::get_parent_index_partition(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_index_partition	src/legion_runtime/region_tree.cc	/^    IndexPartition RegionTreeForest::get_parent_index_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_index_partition	src/legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_parent_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_index_partition	src/legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_parent_index_partition(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_index_space	src/legion_runtime/legion.cc	/^    IndexSpace HighLevelRuntime::get_parent_index_space(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_index_space	src/legion_runtime/legion.cc	/^    IndexSpace Mapper::get_parent_index_space(IndexPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_index_space	src/legion_runtime/region_tree.cc	/^    IndexSpace RegionTreeForest::get_parent_index_space(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_index_space	src/legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_parent_index_space(Context ctx,   $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_index_space	src/legion_runtime/runtime.cc	/^    IndexSpace Runtime::get_parent_index_space(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_partition	src/legion_runtime/legion.cc	/^    LogicalPartition HighLevelRuntime::get_parent_logical_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_logical_partition	src/legion_runtime/legion.cc	/^    LogicalPartition Mapper::get_parent_logical_partition(LogicalRegion r) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_logical_partition	src/legion_runtime/region_tree.cc	/^    LogicalPartition RegionTreeForest::get_parent_logical_partition($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_logical_partition	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_parent_logical_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_partition	src/legion_runtime/runtime.cc	/^    LogicalPartition Runtime::get_parent_logical_partition(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_region	src/legion_runtime/legion.cc	/^    LogicalRegion HighLevelRuntime::get_parent_logical_region(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_parent_logical_region	src/legion_runtime/legion.cc	/^    LogicalRegion Mapper::get_parent_logical_region(LogicalPartition part) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
get_parent_logical_region	src/legion_runtime/region_tree.cc	/^    LogicalRegion RegionTreeForest::get_parent_logical_region($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_parent_logical_region	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_parent_logical_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_logical_region	src/legion_runtime/runtime.cc	/^    LogicalRegion Runtime::get_parent_logical_region(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_parent_view	src/legion_runtime/region_tree.cc	/^    InstanceView* CompositeView::get_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
get_parent_view	src/legion_runtime/region_tree.cc	/^    InstanceView* MaterializedView::get_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_part	src/legion_runtime/legion_utilities.h	/^    Fraction<T> Fraction<T>::get_part(T ways)$/;"	f	class:LegionRuntime::HighLevel::Fraction
get_partition_projection_table	src/legion_runtime/runtime.cc	/^                                          get_partition_projection_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_path_length	src/legion_runtime/region_tree.cc	/^    unsigned RegionTreePath::get_path_length(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
get_periodic_util	src/nautilus/scheduler.c	/^static inline void get_periodic_util(rt_scheduler *sched, uint64_t *util, uint64_t *count)$/;"	f	file:
get_periodic_util_rms_limit	src/nautilus/scheduler.c	/^static inline uint64_t get_periodic_util_rms_limit(uint64_t count)$/;"	f	file:
get_physical_mask	src/legion_runtime/region_tree.cc	/^    const FieldMask& MaterializedView::get_physical_mask(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_physical_region	src/legion_runtime/legion_tasks.cc	/^    PhysicalRegion SingleTask::get_physical_region(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_physical_regions	src/legion_runtime/legion_tasks.cc	/^    const std::vector<PhysicalRegion>& SingleTask::get_physical_regions() const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_point	src/legion_runtime/legion.cc	/^    TaskArgument ArgumentMap::get_point(const DomainPoint &point) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
get_point	src/legion_runtime/lowlevel.h	/^      Arrays::Point<DIM> get_point(void) const { assert(dim == DIM); return Arrays::Point<DIM>(point_data); }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
get_point	src/legion_runtime/runtime.cc	/^    TaskArgument ArgumentMap::Impl::get_point(const DomainPoint &point) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
get_pointer_space	src/legion_runtime/region_tree.cc	/^    Domain FoldReductionManager::get_pointer_space(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
get_pointer_space	src/legion_runtime/region_tree.cc	/^    Domain ListReductionManager::get_pointer_space(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
get_predicate_value	src/legion_runtime/legion_ops.cc	/^    bool SpeculativeOp::get_predicate_value(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
get_previous_phase	src/legion_runtime/lowlevel.cc	/^    Event Barrier::get_previous_phase(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
get_previous_phase	src/legion_runtime/shared_lowlevel.cc	/^    Event Barrier::get_previous_phase(void) const$/;"	f	class:LegionRuntime::LowLevel::Barrier
get_privilege_string	src/legion_runtime/accessor.h	/^      static inline const char* get_privilege_string(AccessorPrivilege priv)$/;"	f	namespace:LegionRuntime::Accessor::AccessorType
get_proc_kind	src/legion_runtime/shared_lowlevel.cc	/^        Processor::Kind get_proc_kind(void) const { return proc_kind; }$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_proc_mem_affinity	src/legion_runtime/lowlevel.cc	/^    int Machine::get_proc_mem_affinity(std::vector<Machine::ProcessorMemoryAffinity>& result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_proc_mem_affinity	src/legion_runtime/shared_lowlevel.cc	/^    int Machine::get_proc_mem_affinity(std::vector<ProcessorMemoryAffinity> &result,$/;"	f	class:LegionRuntime::LowLevel::Machine
get_processor	src/legion_runtime/lowlevel.cc	/^        virtual Processor get_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
get_processor	src/legion_runtime/lowlevel.cc	/^      virtual Processor get_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
get_processor	src/legion_runtime/lowlevel_gpu.cc	/^      Processor get_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
get_processor	src/legion_runtime/lowlevel_gpu.cc	/^    \/*static*\/ Processor GPUProcessor::get_processor(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
get_processor_impl	src/legion_runtime/lowlevel.cc	/^    Processor::Impl *Runtime::get_processor_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_processor_impl	src/legion_runtime/shared_lowlevel.cc	/^    ProcessorImpl* Runtime::get_processor_impl(Processor p)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_processor_kind	src/legion_runtime/lowlevel.cc	/^    Processor::Kind Machine::get_processor_kind(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_processor_kind	src/legion_runtime/shared_lowlevel.cc	/^    Processor::Kind Machine::get_processor_kind(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_procgroup_impl	src/legion_runtime/lowlevel.cc	/^    ProcessorGroup *Runtime::get_procgroup_impl(ID id)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_profiler	src/legion_runtime/legion_logging.h	/^      static inline ProcessorProfiler& get_profiler()$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
get_profiler	src/legion_runtime/legion_profiling.h	/^      static inline ProcessorProfiler& get_profiler(Processor proc)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
get_prompt	src/lua_src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_prompt_str	scripts/kconfig/mconf.c	/^static void get_prompt_str(struct gstr *r, struct property *prop)$/;"	f	file:
get_ptr	src/legion_runtime/legion.h	/^      inline void*  get_ptr(void) const { return args; }$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
get_rand_byte	src/nautilus/random.c	/^get_rand_byte (void) $/;"	f	file:
get_rand_float	src/test/saxpy_array.cc	/^float get_rand_float() {$/;"	f
get_random	src/nautilus/scheduler.c	/^static inline uint64_t get_random()$/;"	f	file:
get_raw	src/legion_runtime/lowlevel.cc	/^    const void *ElementMask::get_raw(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
get_raw	src/legion_runtime/shared_lowlevel.cc	/^    const void *ElementMask::get_raw(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
get_ready_event	src/legion_runtime/region_tree.h	/^      inline Event get_ready_event(void) const { return ready_event; }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_ready_event	src/legion_runtime/runtime.cc	/^    Event PhysicalRegion::Impl::get_ready_event(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_ready_event	src/legion_runtime/runtime.h	/^      Event get_ready_event(void) const { return ready_event; }$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_rect	src/legion_runtime/lowlevel.h	/^      Arrays::Rect<DIM> get_rect(void) const { assert(dim == DIM); return Arrays::Rect<DIM>(rect_data); }$/;"	f	class:LegionRuntime::LowLevel::Domain
get_recycle_event	src/legion_runtime/region_tree.cc	/^    Event InstanceManager::get_recycle_event(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_redfold_parameters	src/legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redfold_parameters(void *&base) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redfold_parameters	src/legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redfold_parameters(void *& base) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redlist_parameters	src/legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redlist_parameters(void *&base, ptr_t *&next_ptr) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redlist_parameters	src/legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_redlist_parameters(void *& base, ptr_t *& next_ptr) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_redop	src/legion_runtime/region_tree.cc	/^    ReductionOpID ReductionView::get_redop(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
get_reduction_op	src/legion_runtime/legion.cc	/^    \/*static*\/ const ReductionOp* HighLevelRuntime::get_reduction_op($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_reduction_op	src/legion_runtime/runtime.cc	/^    \/*static*\/ const ReductionOp* Runtime::get_reduction_op($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_reduction_op	src/legion_runtime/shared_lowlevel.cc	/^    const ReductionOpUntyped* Runtime::get_reduction_op(ReductionOpID redop)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_reduction_table	src/legion_runtime/legion.cc	/^                                                      get_reduction_table(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_reduction_table	src/legion_runtime/runtime.cc	/^                                                      get_reduction_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_reference	src/legion_runtime/legion.h	/^    inline const T& Future::get_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_reference	src/legion_runtime/runtime.cc	/^    const InstanceRef& PhysicalRegion::Impl::get_reference(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_region_projection_table	src/legion_runtime/runtime.cc	/^                                              get_region_projection_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_relations_str	scripts/kconfig/mconf.c	/^static struct gstr get_relations_str(struct symbol **sym_arr)$/;"	f	file:
get_remaining_bytes	src/legion_runtime/legion_utilities.h	/^    inline size_t Deserializer::get_remaining_bytes(void) const$/;"	f	class:LegionRuntime::HighLevel::Deserializer
get_required_lock	src/legion_runtime/region_tree.h	/^      Reservation get_required_lock(void) const { return needed_lock; }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
get_requirement	src/legion_runtime/legion_ops.cc	/^    const RegionRequirement& AcquireOp::get_requirement(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_requirement	src/legion_runtime/legion_ops.cc	/^    const RegionRequirement& ReleaseOp::get_requirement(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_requirement	src/legion_runtime/runtime.cc	/^    const RegionRequirement& PhysicalRegion::Impl::get_requirement(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_reservation	src/legion_runtime/shared_lowlevel.cc	/^    Reservation IndexSpace::Impl::get_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
get_reservation	src/legion_runtime/shared_lowlevel.cc	/^    Reservation RegionInstance::Impl::get_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_reservation	src/legion_runtime/shared_lowlevel.cc	/^    Reservation ReservationImpl::get_reservation(void) const$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
get_reservation_impl	src/legion_runtime/shared_lowlevel.cc	/^    ReservationImpl* Runtime::get_reservation_impl(Reservation r)$/;"	f	class:LegionRuntime::LowLevel::Runtime
get_result	src/legion_runtime/legion.h	/^    inline RT FutureMap::get_result(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_result	src/legion_runtime/legion.h	/^    inline T Future::get_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_result	src/legion_runtime/legion.h	/^    inline T FutureMap::get_result(const DomainPoint &dp)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_root_dir_inode	src/fs/ext2/ext2_access.c	/^static int get_root_dir_inode(void * fs, struct ext2_inode *inode) $/;"	f	file:
get_runtime	src/legion_runtime/legion.cc	/^    \/*static*\/ HighLevelRuntime* HighLevelRuntime::get_runtime(Processor p)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_runtime	src/legion_runtime/lowlevel_impl.h	/^      static Runtime *get_runtime(void) { return runtime; }$/;"	f	class:Runtime
get_runtime	src/legion_runtime/runtime.cc	/^    \/*static*\/ Runtime* Runtime::get_runtime(Processor p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_runtime	src/legion_runtime/shared_lowlevel.cc	/^      static Runtime* get_runtime(void) { return runtime; } $/;"	f	class:LegionRuntime::LowLevel::Runtime
get_s5	src/arch/hrt/shutdown.c	/^get_s5 (struct shutdown_info * s)$/;"	f	file:
get_s5	src/arch/x64/shutdown.c	/^get_s5 (struct shutdown_info * s)$/;"	f	file:
get_shared_processors	src/legion_runtime/lowlevel.h	/^      const std::set<Processor>& get_shared_processors(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_size	src/legion_runtime/legion.h	/^      inline size_t get_size(void) const { return arglen; }$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
get_soa_parameters	src/legion_runtime/lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_soa_parameters(void *&base, size_t &stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_soa_parameters	src/legion_runtime/shared_lowlevel.cc	/^    bool AccessorType::Generic::Untyped::get_soa_parameters(void *& base, size_t& stride) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_sporadic_util	src/nautilus/scheduler.c	/^static inline void get_sporadic_util(rt_scheduler *sched, uint64_t now, uint64_t *util, uint64_t *count)$/;"	f	file:
get_src	src/legion_runtime/legion_utilities.h	/^    inline unsigned BitPermutation<BITMASK,LOG2MAX>::get_src(unsigned dst)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
get_start_color	src/legion_runtime/runtime.h	/^      inline unsigned get_start_color(void) const { return address_space; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_start_event	src/legion_runtime/legion_tasks.h	/^      inline Event get_start_event(void) { return legion_spy_start; }$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_strided_parameters	src/legion_runtime/lowlevel.cc	/^    bool RegionInstance::Impl::get_strided_parameters(void *&base, size_t &stride,$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
get_subspace_domains	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::get_subspace_domains(std::set<Domain> &subspaces)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
get_subview	src/legion_runtime/region_tree.cc	/^    InstanceView* CompositeView::get_subview(Color c)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
get_subview	src/legion_runtime/region_tree.cc	/^    InstanceView* MaterializedView::get_subview(Color c)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
get_symbol_str	scripts/kconfig/mconf.c	/^static void get_symbol_str(struct gstr *r, struct symbol *sym)$/;"	f	file:
get_task_completion	src/legion_runtime/legion_tasks.cc	/^    Event IndexTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexTask
get_task_completion	src/legion_runtime/legion_tasks.cc	/^    Event IndividualTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
get_task_completion	src/legion_runtime/legion_tasks.cc	/^    Event InlineTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_task_completion	src/legion_runtime/legion_tasks.cc	/^    Event PointTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::PointTask
get_task_completion	src/legion_runtime/legion_tasks.cc	/^    Event RemoteTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
get_task_completion	src/legion_runtime/legion_tasks.cc	/^    Event SliceTask::get_task_completion(void) const$/;"	f	class:LegionRuntime::HighLevel::SliceTask
get_task_kind	src/legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind IndexTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexTask
get_task_kind	src/legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind IndividualTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
get_task_kind	src/legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind InlineTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::InlineTask
get_task_kind	src/legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind PointTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::PointTask
get_task_kind	src/legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind RemoteTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
get_task_kind	src/legion_runtime/legion_tasks.cc	/^    TaskOp::TaskKind SliceTask::get_task_kind(void) const$/;"	f	class:LegionRuntime::HighLevel::SliceTask
get_task_name	src/legion_runtime/runtime.cc	/^    const char* PhysicalRegion::Impl::get_task_name(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
get_task_table	src/legion_runtime/runtime.cc	/^    \/*static*\/ Processor::TaskIDTable& Runtime::get_task_table($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_top_regions	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::get_top_regions(std::vector<LogicalRegion> &top_regions)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
get_topo_params	src/nautilus/numa.c	/^get_topo_params (struct nk_topo_params * tp)$/;"	f	file:
get_topo_secondary	src/nautilus/numa.c	/^get_topo_secondary (struct nk_topo_params * tp)$/;"	f	file:
get_tree	src/legion_runtime/region_tree.cc	/^    RegionNode* RegionTreeForest::get_tree(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
get_tree_child	src/legion_runtime/region_tree.cc	/^    RegionTreeNode* PartitionNode::get_tree_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
get_tree_child	src/legion_runtime/region_tree.cc	/^    RegionTreeNode* RegionNode::get_tree_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
get_tree_id	src/legion_runtime/legion.h	/^      inline RegionTreeID get_tree_id(void) const { return tree_id; }$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
get_tree_id	src/legion_runtime/legion.h	/^      inline RegionTreeID get_tree_id(void) const { return tree_id; }$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
get_tree_state_logger	src/legion_runtime/runtime.h	/^      TreeStateLogger *get_tree_state_logger(void) { return tree_state_logger; }$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_tunable_value	src/legion_runtime/default_mapper.cc	/^    int DefaultMapper::get_tunable_value(const Task *task, TunableID tid,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
get_tunable_value	src/legion_runtime/legion.cc	/^    int HighLevelRuntime::get_tunable_value(Context ctx, TunableID tid,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
get_tunable_value	src/legion_runtime/runtime.cc	/^    int Runtime::get_tunable_value(Context ctx, TunableID tid,$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_tunable_value	src/test/custom_mapper.cc	/^int PartitioningMapper::get_tunable_value(const Task *task,$/;"	f	class:PartitioningMapper
get_tunable_value	src/test/hpcg/cg-mapper.h	/^CGMapper::get_tunable_value(const LegionRuntime::HighLevel::Task *task,$/;"	f	class:CGMapper
get_unique_acquire_id	src/legion_runtime/legion.h	/^    inline UniqueID Acquire::get_unique_acquire_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Acquire
get_unique_copy_id	src/legion_runtime/legion.h	/^    inline UniqueID Copy::get_unique_copy_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Copy
get_unique_field_id	src/legion_runtime/runtime.cc	/^    FieldID Runtime::get_unique_field_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_field_space_id	src/legion_runtime/runtime.cc	/^    FieldSpaceID Runtime::get_unique_field_space_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_inline_id	src/legion_runtime/legion.h	/^    inline UniqueID Inline::get_unique_inline_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Inline
get_unique_mappable_id	src/legion_runtime/legion_ops.cc	/^    UniqueID AcquireOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
get_unique_mappable_id	src/legion_runtime/legion_ops.cc	/^    UniqueID CopyOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::CopyOp
get_unique_mappable_id	src/legion_runtime/legion_ops.cc	/^    UniqueID MapOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::MapOp
get_unique_mappable_id	src/legion_runtime/legion_ops.cc	/^    UniqueID ReleaseOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
get_unique_mappable_id	src/legion_runtime/legion_tasks.cc	/^    UniqueID TaskOp::get_unique_mappable_id(void) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
get_unique_op_id	src/legion_runtime/legion_ops.h	/^      inline UniqueID get_unique_op_id(void) const { return unique_op_id; } $/;"	f	class:LegionRuntime::HighLevel::Operation
get_unique_operation_id	src/legion_runtime/runtime.cc	/^    UniqueID Runtime::get_unique_operation_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_partition_id	src/legion_runtime/runtime.cc	/^    IndexPartition Runtime::get_unique_partition_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_unique_release_id	src/legion_runtime/legion.h	/^    inline UniqueID Release::get_unique_release_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Release
get_unique_task_id	src/legion_runtime/legion.h	/^    inline UniqueID Task::get_unique_task_id(void) const$/;"	f	class:LegionRuntime::HighLevel::Task
get_unique_tree_id	src/legion_runtime/runtime.cc	/^    RegionTreeID Runtime::get_unique_tree_id(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_untyped_field_accessor	src/legion_runtime/accessor.h	/^	  RegionAccessor<Generic, void, void> get_untyped_field_accessor(off_t _field_offset, size_t _field_size)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
get_untyped_pointer	src/legion_runtime/legion.h	/^    inline const void* Future::get_untyped_pointer(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_untyped_result	src/legion_runtime/legion.cc	/^    void* Future::get_untyped_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_untyped_result	src/legion_runtime/runtime.cc	/^    void* Future::Impl::get_untyped_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_untyped_size	src/legion_runtime/runtime.cc	/^    size_t Future::Impl::get_untyped_size(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_upper_targets	src/legion_runtime/region_tree.cc	/^                                                  get_upper_targets(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
get_use_event	src/legion_runtime/region_tree.h	/^      inline Event get_use_event(void) const { return use_event; }$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
get_used_bytes	src/legion_runtime/legion_utilities.h	/^      inline size_t get_used_bytes(void) const { return index; }$/;"	f	class:LegionRuntime::HighLevel::Serializer
get_user_data_table	src/legion_runtime/runtime.cc	/^                                      Runtime::get_user_data_table(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
get_user_event	src/legion_runtime/shared_lowlevel.cc	/^    UserEvent EventImpl::get_user_event()$/;"	f	class:LegionRuntime::LowLevel::EventImpl
get_utility_processor	src/legion_runtime/lowlevel.cc	/^    Processor Processor::get_utility_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
get_utility_processor	src/legion_runtime/shared_lowlevel.cc	/^    Processor Processor::get_utility_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
get_utility_processor	src/legion_runtime/shared_lowlevel.cc	/^    Processor ProcessorImpl::get_utility_processor(void) const$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_utility_processor_mapping	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::get_utility_processor_mapping($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_utility_users	src/legion_runtime/shared_lowlevel.cc	/^    const std::set<Processor>& ProcessorImpl::get_utility_users(void) const$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
get_valid_mask	src/legion_runtime/lowlevel.cc	/^    const ElementMask &IndexSpace::get_valid_mask(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
get_valid_mask	src/legion_runtime/shared_lowlevel.cc	/^    const ElementMask &IndexSpace::get_valid_mask(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
get_variant	src/legion_runtime/legion.cc	/^    VariantID TaskVariantCollection::get_variant(Processor::Kind kind, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
get_variant	src/legion_runtime/legion.cc	/^    const TaskVariantCollection::Variant& TaskVariantCollection::get_variant($/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
get_variant_collection	src/legion_runtime/runtime.cc	/^    \/*static*\/ TaskVariantCollection* Runtime::get_variant_collection($/;"	f	class:LegionRuntime::HighLevel::Runtime
get_vec_node_voltage	src/test/circuit_cpu.cc	/^static inline __m128 get_vec_node_voltage(ptr_t current_wire,$/;"	f	file:
get_vendor_string	src/nautilus/cpu.c	/^get_vendor_string (char name[13])$/;"	f	file:
get_view	src/legion_runtime/region_tree.h	/^      inline LogicalView* get_view(void) const { return view; } $/;"	f	class:LegionRuntime::HighLevel::MappingRef
get_view	src/legion_runtime/region_tree.h	/^      inline LogicalView* get_view(void) const { return view; }$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
get_visible_memories	src/legion_runtime/lowlevel.h	/^      const std::set<Memory>&    get_visible_memories(Memory m) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_visible_memories	src/legion_runtime/lowlevel.h	/^      const std::set<Memory>&    get_visible_memories(Processor p) const$/;"	f	class:LegionRuntime::LowLevel::Machine
get_void_result	src/legion_runtime/legion.cc	/^    void Future::get_void_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future
get_void_result	src/legion_runtime/legion.cc	/^    void FutureMap::get_void_result(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_void_result	src/legion_runtime/legion.h	/^    inline void FutureMap::get_void_result(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::FutureMap
get_void_result	src/legion_runtime/runtime.cc	/^    void Future::Impl::get_void_result(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
get_void_result	src/legion_runtime/runtime.cc	/^    void FutureMap::Impl::get_void_result(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
get_volume	src/legion_runtime/lowlevel.h	/^      int get_volume(void) const$/;"	f	class:LegionRuntime::LowLevel::Domain
get_written_location	src/legion_runtime/utilities.h	/^    static int* get_written_location(void)$/;"	f	class:LegionRuntime::Logger
get_xsave_features	src/nautilus/fpu.c	/^get_xsave_features (void)$/;"	f	file:
get_zcmem_cpu_base	src/legion_runtime/lowlevel_gpu.cc	/^    void *GPUProcessor::get_zcmem_cpu_base(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
getarg	include/lua/lopcodes.h	93;"	d
getargs	src/lua_src/lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	file:
getbinopr	src/lua_src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	src/lua_src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getc	src/nautilus/libccompat.c	/^int getc(FILE* arg)$/;"	f
getcached	src/lua_src/lvm.c	/^static Closure *getcached (Proto *p, UpVal **encup, StkId base) {$/;"	f	file:
getcode	include/lua/lcode.h	39;"	d
getenv	src/nautilus/libccompat.c	/^char *getenv(const char *name)$/;"	f
getfield	src/lua_src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	src/lua_src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfuncline	include/lua/ldebug.h	16;"	d
getfuncname	src/lua_src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethooktable	src/lua_src/ldblib.c	267;"	d	file:
getiofile	src/lua_src/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	src/lua_src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	src/lua_src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocaledecpoint	src/lua_src/llex.c	209;"	d	file:
getlocvar	src/lua_src/lparser.c	/^static LocVar *getlocvar (FuncState *fs, int i) {$/;"	f	file:
getobjname	src/lua_src/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	f	file:
getproto	include/lua/lobject.h	537;"	d
getstr	include/lua/lobject.h	421;"	d
gettext	scripts/kconfig/lkc.h	14;"	d
gettext	src/nautilus/libccompat.c	/^char *gettext (const char * msgid)$/;"	f
getthread	src/lua_src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettotalbytes	include/lua/lstate.h	219;"	d
getunopr	src/lua_src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	src/lua_src/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	src/lua_src/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
getwc	src/nautilus/libccompat.c	/^int getwc (FILE *stream)$/;"	f
gfasttm	include/lua/ltm.h	41;"	d
ghost_nodes	src/test/circuit.h	/^  LogicalPartition pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:Partitions
ghost_nodes	src/test/circuit.h	/^  LogicalRegion pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:CircuitPiece
gig_pages_supported	src/nautilus/paging.c	/^gig_pages_supported (void)$/;"	f	file:
gkey	include/lua/ltable.h	14;"	d
glob_exp_data	src/test/ipi.c	/^static ipi_exp_data_t * glob_exp_data;$/;"	v	file:
glob_link	include/nautilus/numa.h	/^    struct list_head glob_link;$/;"	m	struct:mem_region	typeref:struct:mem_region::list_head
glob_zone_list	src/nautilus/mm/kmem.c	/^static struct list_head glob_zone_list;$/;"	v	typeref:struct:list_head	file:
global	src/lua_src/lnautlib.c	/^int* global; $/;"	v
globalL	src/lua_src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	include/lua/lstate.h	/^typedef struct global_State {$/;"	s
global_State	include/lua/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
global_arg	src/legion_runtime/legion.h	/^      TaskArgument                       global_arg;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
global_capability_data	include/acpi/actbl1.h	/^	uint64_t global_capability_data;$/;"	m	struct:acpi_hest_ia_machine_check
global_constant	src/test/global_vars.cc	/^const int global_constant = 4;$/;"	v
global_control_data	include/acpi/actbl1.h	/^	uint64_t global_control_data;$/;"	m	struct:acpi_hest_ia_machine_check
global_interrupt	include/acpi/actbl2.h	/^	uint32_t global_interrupt;$/;"	m	struct:acpi_table_mchi
global_irq	include/acpi/actbl1.h	/^	uint32_t global_irq;		\/* Global system interrupt *\/$/;"	m	struct:acpi_madt_interrupt_override
global_irq	include/acpi/actbl1.h	/^	uint32_t global_irq;		\/* Global system interrupt *\/$/;"	m	struct:acpi_madt_interrupt_source
global_irq	include/acpi/actbl1.h	/^	uint32_t global_irq;		\/* Global system interrupt *\/$/;"	m	struct:acpi_madt_nmi_source
global_irq_base	include/acpi/actbl1.h	/^	uint32_t global_irq_base;	\/* Global interrupt for SAPIC start *\/$/;"	m	struct:acpi_madt_io_sapic
global_irq_base	include/acpi/actbl1.h	/^	uint32_t global_irq_base;	\/* Global system interrupt where INTI lines start *\/$/;"	m	struct:acpi_madt_io_apic
global_lock	include/acpi/actbl.h	/^	uint32_t global_lock;	\/* Global Lock for shared hardware resources *\/$/;"	m	struct:acpi_table_facs
global_memory	src/legion_runtime/lowlevel_impl.h	/^      Memory::Impl *global_memory;$/;"	m	class:Runtime
global_memory	src/legion_runtime/mapping_utilities.h	/^        Memory global_memory;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
global_sched_state	src/nautilus/scheduler.c	/^static struct nk_sched_global_state global_sched_state;$/;"	v	typeref:struct:nk_sched_global_state	file:
global_timer_mutex	src/legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T global_timer_mutex;$/;"	m	namespace:LegionRuntime::LowLevel	file:
global_var	src/test/global_vars.cc	/^int global_var = 0;$/;"	v
gmatch	src/lua_src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	src/lua_src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gmtime	src/nautilus/libccompat.c	/^struct tm *gmtime(const time_t *timer)$/;"	f
gnext	include/lua/ltable.h	16;"	d
gnode	include/lua/ltable.h	13;"	d
gnodelast	src/lua_src/lgc.c	94;"	d	file:
go	src/test/benchmark.c	/^static volatile int go;$/;"	v	file:
goBack	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::goBack(void)$/;"	f	class:ConfigMainWindow
goParent	scripts/kconfig/qconf.h	/^	bool goParent;$/;"	m	class:ConfigItem
go_circuit	src/test/circuit.cc	/^int go_circuit(int argc, char **argv) $/;"	f
go_circuit_c	src/test/circuit.cc	/^extern "C" void go_circuit_c(int argc, char ** argv) {$/;"	f
go_custom	src/test/custom_mapper.cc	/^int go_custom(int argc, char **argv)$/;"	f
go_custom_c	src/test/custom_mapper.cc	/^extern "C" void go_custom_c (int argc, char ** argv) {$/;"	f
go_global_vars	src/test/global_vars.cc	/^int go_global_vars(int argc, char **argv)$/;"	f
go_global_vars_c	src/test/global_vars.cc	/^extern "C" void go_global_vars_c (int argc, char ** argv) {$/;"	f
go_hello	src/test/hello_world.cc	/^int go_hello(int argc, char **argv)$/;"	f
go_hello_c	src/test/hello_world.cc	/^extern "C" void go_hello_c (int argc, char ** argv) {$/;"	f
go_hpcg	src/test/hpcg/hpcg-main.cc	/^int go_hpcg (int argc, const char ** argv)$/;"	f
go_hpcg_c	src/test/hpcg/hpcg-main.cc	/^extern "C" void go_hpcg_c (int argc, char ** argv) {$/;"	f
go_index_task	src/test/index_tasks.cc	/^int go_index_task(int argc, char **argv)$/;"	f
go_index_task_c	src/test/index_tasks.cc	/^extern "C" void go_index_task_c (int argc, char ** argv) {$/;"	f
go_log_regs	src/test/logical_regions.cc	/^int go_log_regs(int argc, char **argv)$/;"	f
go_log_regs_c	src/test/logical_regions.cc	/^extern "C" void go_log_regs_c(int argc, char ** argv) {$/;"	f
go_multi	src/test/multiple_partitions.cc	/^int go_multi(int argc, char **argv)$/;"	f
go_multi_c	src/test/multiple_partitions.cc	/^extern "C" void go_multi_c (int argc, char ** argv) {$/;"	f
go_partit	src/test/partitioning.cc	/^int go_partit(int argc, char **argv)$/;"	f
go_partit_c	src/test/partitioning.cc	/^extern "C" void go_partit_c(int argc, char ** argv) {$/;"	f
go_phys_regs	src/test/physical_regions.cc	/^int go_phys_regs(int argc, char **argv)$/;"	f
go_phys_regs_c	src/test/physical_regions.cc	/^extern "C" void go_phys_regs_c(int argc, char ** argv) {$/;"	f
go_privileges	src/test/privileges.cc	/^int go_privileges(int argc, char **argv)$/;"	f
go_privileges_c	src/test/privileges.cc	/^extern "C" void go_privileges_c(int argc, char **argv) {$/;"	f
go_saxpy	src/test/saxpy_array.cc	/^int go_saxpy(int argc, char **argv) {$/;"	f
go_saxpy_c	src/test/saxpy_array.cc	/^extern "C" void go_saxpy_c(int argc, char ** argv)$/;"	f
go_taf	src/test/tasks_and_futures.cc	/^int go_taf(int argc, char **argv)$/;"	f
go_taf_c	src/test/tasks_and_futures.cc	/^extern "C" void go_taf_c (int argc, char ** argv) {$/;"	f
gotostat	src/lua_src/lparser.c	/^static void gotostat (LexState *ls, int pc) {$/;"	f	file:
gpe	include/acpi/actbl1.h	/^	uint8_t gpe;			\/* The GPE for the EC *\/$/;"	m	struct:acpi_table_ecdt
gpe	include/acpi/actbl2.h	/^	uint8_t gpe;$/;"	m	struct:acpi_table_mchi
gpe0_block	include/acpi/actbl.h	/^	uint32_t gpe0_block;		\/* 32-bit Port address of General Purpose Event 0 Reg Blk *\/$/;"	m	struct:acpi_table_fadt
gpe0_block_length	include/acpi/actbl.h	/^	uint8_t gpe0_block_length;	\/* Byte Length of ports at gpe0_block *\/$/;"	m	struct:acpi_table_fadt
gpe1_base	include/acpi/actbl.h	/^	uint8_t gpe1_base;		\/* Offset in GPE number space where GPE1 events start *\/$/;"	m	struct:acpi_table_fadt
gpe1_block	include/acpi/actbl.h	/^	uint32_t gpe1_block;		\/* 32-bit Port address of General Purpose Event 1 Reg Blk *\/$/;"	m	struct:acpi_table_fadt
gpe1_block_length	include/acpi/actbl.h	/^	uint8_t gpe1_block_length;	\/* Byte Length of ports at gpe1_block *\/$/;"	m	struct:acpi_table_fadt
gpe_block	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *gpe_block;$/;"	m	struct:acpi_gpe_walk_info	typeref:struct:acpi_gpe_walk_info::acpi_gpe_block_info
gpe_block_list_head	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *gpe_block_list_head;	\/* List of GPE blocks for this xrupt *\/$/;"	m	struct:acpi_gpe_xrupt_info	typeref:struct:acpi_gpe_xrupt_info::acpi_gpe_block_info
gpe_count	src/acpi/acpica/aclocal.h	/^	u16 gpe_count;		\/* Number of individual GPEs in block *\/$/;"	m	struct:acpi_gpe_block_info
gpe_device	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *gpe_device;$/;"	m	struct:acpi_gpe_device_info	typeref:struct:acpi_gpe_device_info::acpi_namespace_node
gpe_device	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *gpe_device;$/;"	m	struct:acpi_gpe_walk_info	typeref:struct:acpi_gpe_walk_info::acpi_namespace_node
gpe_number	include/acpi/actbl2.h	/^	uint8_t gpe_number;		\/* GPE assigned *\/$/;"	m	struct:acpi_table_spmi
gpe_number	src/acpi/acpica/aclocal.h	/^	u8 gpe_number;		\/* This GPE *\/$/;"	m	struct:acpi_gpe_event_info
gpu	src/legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier	file:
gpu	src/legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier	file:
gpu	src/legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier	file:
gpu	src/legion_runtime/lowlevel_gpu.cc	/^      GPUProcessor *const gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu	src/legion_runtime/lowlevel_gpu.cc	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUJob	file:
gpu	src/legion_runtime/lowlevel_gpu.h	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUFBMemory
gpu	src/legion_runtime/lowlevel_gpu.h	/^      GPUProcessor *gpu;$/;"	m	class:LegionRuntime::LowLevel::GPUZCMemory
gpu_dma_args	src/legion_runtime/lowlevel_gpu.cc	/^    struct gpu_dma_args {$/;"	s	namespace:LegionRuntime::LowLevel	file:
gpu_dma_thread	src/legion_runtime/lowlevel_gpu.cc	/^      const bool gpu_dma_thread;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu_dma_worker_loop	src/legion_runtime/lowlevel_gpu.cc	/^    void* GPUProcessor::gpu_dma_worker_loop(void *args)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
gpu_index	src/legion_runtime/lowlevel_gpu.cc	/^      const int gpu_index;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu_ptr	src/legion_runtime/lowlevel.h	/^      T *gpu_ptr(ptr_t ptr) const {$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
gpu_thread	src/legion_runtime/lowlevel.cc	/^GASNETT_THREADKEY_DEFINE(gpu_thread);$/;"	v
gpu_thread	src/legion_runtime/lowlevel_gpu.cc	/^      pthread_t gpu_thread;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
gpu_thread	src/legion_runtime/lowlevel_gpu.h	/^GASNETT_THREADKEY_DECLARE(gpu_thread);$/;"	v
grant_event	src/legion_runtime/runtime.h	/^      Event grant_event;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
grant_lock	src/legion_runtime/runtime.h	/^      Reservation grant_lock;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>                  grants;$/;"	m	class:LegionRuntime::HighLevel::Task
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>                 grants;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>                 grants;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>                grants;$/;"	m	class:LegionRuntime::HighLevel::Acquire
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>                grants;$/;"	m	class:LegionRuntime::HighLevel::Copy
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>                grants;$/;"	m	class:LegionRuntime::HighLevel::Release
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>              grants;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>              grants;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
grants	src/legion_runtime/legion.h	/^      std::vector<Grant>              grants;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
granularity	include/acpi/acrestyp.h	/^	ACPI_RESOURCE_ADDRESS_COMMON uint16_t granularity;$/;"	m	struct:acpi_resource_address16
granularity	include/acpi/acrestyp.h	/^	ACPI_RESOURCE_ADDRESS_COMMON uint32_t granularity;$/;"	m	struct:acpi_resource_address32
granularity	include/acpi/acrestyp.h	/^	ACPI_RESOURCE_ADDRESS_COMMON uint64_t granularity;$/;"	m	struct:acpi_resource_address64
granularity	include/acpi/acrestyp.h	/^	uint64_t granularity;$/;"	m	struct:acpi_resource_extended_address64
granularity	include/dev/vesa.h	/^    uint16_t granularity;      \/\/ deprecated; used while calculating bank numbers$/;"	m	struct:vesa_mode_info
gray	include/lua/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
gray2black	include/lua/lgc.h	115;"	d
grayagain	include/lua/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
green	include/nautilus/multiboot2.h	/^  multiboot_uint8_t green;$/;"	m	struct:multiboot_color
green_mask	include/dev/vesa.h	/^    uint8_t green_mask;$/;"	m	struct:vesa_mode_info
green_position	include/dev/vesa.h	/^    uint8_t green_position;$/;"	m	struct:vesa_mode_info
group_lock	src/legion_runtime/runtime.h	/^      Reservation group_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
grouping	include/lua/llocale.h	/^    char *grouping;           \/\/""           LC_NUMERIC$/;"	m	struct:lconv
grouping	src/nautilus/libccompat.c	/^    char *grouping;           \/\/""           LC_NUMERIC$/;"	m	struct:lconv	file:
groups	src/legion_runtime/shared_lowlevel.cc	/^        std::vector<ProcessorGroup *> groups;  \/\/ groups this proc is a member of$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
grow_config	scripts/basic/fixdep.c	/^void grow_config(int len)$/;"	f
growstack	src/lua_src/lapi.c	/^static void growstack (lua_State *L, void *ud) {$/;"	f	file:
gs	include/nautilus/realmode.h	/^    uint16_t gs;    \/\/$/;"	m	struct:nk_real_mode_int_args
gstr	scripts/kconfig/lkc.h	/^struct gstr {$/;"	s
gt	include/lua/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata
gtktree_iter_find_node	scripts/kconfig/gconf.c	/^GtkTreeIter *gtktree_iter_find_node(GtkTreeIter * parent,$/;"	f
guest_end	src/asm/guest.S	/^guest_end:$/;"	l
guest_start	src/asm/guest.S	/^guest_start:$/;"	l
gva_offset	include/nautilus/multiboot2.h	/^  multiboot_uint64_t gva_offset;$/;"	m	struct:multiboot_tag_hrt
gval	include/lua/ltable.h	15;"	d
h	include/lua/lparser.h	/^  Table *h;  \/* table to find (and reuse) elements in `k' *\/$/;"	m	struct:FuncState
h	include/lua/lstate.h	/^  struct Table h;$/;"	m	union:GCObject	typeref:struct:GCObject::Table
h_i_author	src/fs/ext2/ext2fs.h	/^			__u32	h_i_author;$/;"	m	struct:ext2_inode::__anon125::__anon127
h_i_frag	src/fs/ext2/ext2fs.h	/^			__u8	h_i_frag;	\/* Fragment number *\/$/;"	m	struct:ext2_inode::__anon125::__anon127
h_i_fsize	src/fs/ext2/ext2fs.h	/^			__u8	h_i_fsize;	\/* Fragment size *\/$/;"	m	struct:ext2_inode::__anon125::__anon127
h_i_gid_high	src/fs/ext2/ext2fs.h	/^			__u16	h_i_gid_high;$/;"	m	struct:ext2_inode::__anon125::__anon127
h_i_mode_high	src/fs/ext2/ext2fs.h	/^			__u16	h_i_mode_high;$/;"	m	struct:ext2_inode::__anon125::__anon127
h_i_translator	src/fs/ext2/ext2fs.h	/^			__u32  h_i_translator;$/;"	m	struct:ext2_inode::__anon122::__anon124
h_i_uid_high	src/fs/ext2/ext2fs.h	/^			__u16	h_i_uid_high;$/;"	m	struct:ext2_inode::__anon125::__anon127
halt	include/nautilus/cpu.h	/^halt (void) $/;"	f
handle	include/acpi/actbl2.h	/^	uint8_t handle;$/;"	m	struct:acpi_ivrs_device8c
handle	include/acpi/actypes.h	/^		acpi_handle handle;	\/* object reference *\/$/;"	m	struct:acpi_object::__anon24
handle	src/legion_runtime/legion.h	/^      FieldSpace   handle;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceRequirement
handle	src/legion_runtime/legion.h	/^      IndexSpace    handle;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
handle	src/legion_runtime/legion_logging.h	/^        FieldSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
handle	src/legion_runtime/legion_logging.h	/^        FieldSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldSpace
handle	src/legion_runtime/legion_logging.h	/^        IndexPartition handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
handle	src/legion_runtime/legion_logging.h	/^        IndexSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
handle	src/legion_runtime/legion_logging.h	/^        IndexSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
handle	src/legion_runtime/legion_tasks.h	/^        FieldSpace handle;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
handle	src/legion_runtime/region_tree.h	/^      ViewHandle handle;$/;"	m	class:LegionRuntime::HighLevel::InstanceRef
handle	src/legion_runtime/region_tree.h	/^      const FieldSpace handle;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
handle	src/legion_runtime/region_tree.h	/^      const IndexPartition handle;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
handle	src/legion_runtime/region_tree.h	/^      const IndexSpace handle;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
handle	src/legion_runtime/region_tree.h	/^      const LogicalPartition handle;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
handle	src/legion_runtime/region_tree.h	/^      const LogicalRegion handle;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
handle	src/legion_runtime/region_tree.h	/^      const LogicalRegion handle;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
handle	src/legion_runtime/shared_lowlevel.cc	/^            TriggerHandle handle;$/;"	m	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo	file:
handle_adjustment	src/legion_runtime/lowlevel.cc	/^      int handle_adjustment(Barrier::timestamp_t ts, int delta)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates
handle_advertisement	src/legion_runtime/runtime.cc	/^    void Runtime::handle_advertisement(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_char_update	xeon_phi/linux_usr/phi_console.c	/^handle_char_update (void)$/;"	f	file:
handle_clear_timer_request	src/legion_runtime/lowlevel.cc	/^    void handle_clear_timer_request(ClearTimerRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_cmd	src/nautilus/shell.c	/^static int handle_cmd(char *buf, int n)$/;"	f	file:
handle_collection	src/legion_runtime/runtime.cc	/^    bool GarbageCollectionEpoch::handle_collection($/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
handle_copies	src/legion_runtime/lowlevel_gpu.cc	/^      void handle_copies(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
handle_copies	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::handle_copies(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
handle_create_instance	src/legion_runtime/lowlevel.cc	/^    CreateInstanceResp handle_create_instance(CreateInstanceArgs args, const void *msgdata, size_t msglen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_cursor_update	xeon_phi/linux_usr/phi_console.c	/^handle_cursor_update (void)$/;"	f	file:
handle_data	src/legion_runtime/lowlevel.cc	/^    void MultiNodeRollUp::handle_data(const void *data, size_t datalen)$/;"	f	class:LegionRuntime::LowLevel::MultiNodeRollUp
handle_deferred_collect	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void LogicalView::handle_deferred_collect(LogicalView *view,$/;"	f	class:LegionRuntime::HighLevel::LogicalView
handle_degenerate	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::handle_degenerate($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
handle_destroy_instance	src/legion_runtime/lowlevel.cc	/^    void handle_destroy_instance(DestroyInstanceArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_destroy_lock	src/legion_runtime/lowlevel.cc	/^    void handle_destroy_lock(Reservation lock)$/;"	f	namespace:LegionRuntime::LowLevel
handle_distribute_task	src/legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochDistributor::handle_distribute_task($/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
handle_distributed_add_remote	src/legion_runtime/runtime.cc	/^    void Runtime::handle_distributed_add_remote(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_distributed_remove_remote	src/legion_runtime/runtime.cc	/^    void Runtime::handle_distributed_remove_remote(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_distributed_remove_resource	src/legion_runtime/runtime.cc	/^    void Runtime::handle_distributed_remove_resource(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_event_subscribe	src/legion_runtime/lowlevel.cc	/^    void handle_event_subscribe(EventSubscribeArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_event_trigger	src/legion_runtime/lowlevel.cc	/^    void handle_event_trigger(EventTriggerArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_exit	xeon_phi/linux_usr/phi_console.c	/^handle_exit (void)$/;"	f	file:
handle_field_allocation	src/legion_runtime/runtime.cc	/^    void Runtime::handle_field_allocation(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_field_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::handle_field_destruction(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_field_space_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::handle_field_space_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_field_space_node	src/legion_runtime/runtime.cc	/^    void Runtime::handle_field_space_node(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_flip_ack	src/legion_runtime/activemsg.cc	/^  void handle_flip_ack(gasnet_node_t src, int ack_buffer)$/;"	f	class:EndpointManager
handle_flip_ack	src/legion_runtime/activemsg.cc	/^  void handle_flip_ack(int buffer)$/;"	f	class:ActiveMessageEndpoint
handle_flip_ack	src/legion_runtime/activemsg.cc	/^static void handle_flip_ack(gasnet_token_t token,$/;"	f	file:
handle_flip_req	src/legion_runtime/activemsg.cc	/^static void handle_flip_req(gasnet_token_t token,$/;"	f	file:
handle_flip_request	src/legion_runtime/activemsg.cc	/^  bool handle_flip_request(int buffer, int count)$/;"	f	class:ActiveMessageEndpoint
handle_flip_request	src/legion_runtime/activemsg.cc	/^  void handle_flip_request(gasnet_node_t src, int flip_buffer, int flip_count)$/;"	f	class:EndpointManager
handle_future	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::handle_future(const DomainPoint &point, const void *result,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
handle_future	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::handle_future(const void *res, size_t res_size,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
handle_future	src/legion_runtime/legion_tasks.cc	/^    void PointTask::handle_future(const void *res, size_t res_size, bool owner)$/;"	f	class:LegionRuntime::HighLevel::PointTask
handle_future	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::handle_future(const DomainPoint &point, const void *result,$/;"	f	class:LegionRuntime::HighLevel::SliceTask
handle_future	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::handle_future(const void *res, size_t res_size, bool owned)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
handle_future_result	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Future::Impl::handle_future_result(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
handle_future_result	src/legion_runtime/runtime.cc	/^    void Runtime::handle_future_result(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_future_send	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Future::Impl::handle_future_send(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
handle_future_send	src/legion_runtime/runtime.cc	/^    void Runtime::handle_future_send(Deserializer &derez, AddressSpaceID source)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_future_subscription	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Future::Impl::handle_future_subscription($/;"	f	class:LegionRuntime::HighLevel::Future::Impl
handle_future_subscription	src/legion_runtime/runtime.cc	/^    void Runtime::handle_future_subscription(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_hierarchical_remove_remote	src/legion_runtime/runtime.cc	/^    void Runtime::handle_hierarchical_remove_remote(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_hierarchical_remove_resource	src/legion_runtime/runtime.cc	/^    void Runtime::handle_hierarchical_remove_resource(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index	src/legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochTriggerer::handle_index(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
handle_index_partition_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::handle_index_partition_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index_partition_node	src/legion_runtime/runtime.cc	/^    void Runtime::handle_index_partition_node(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index_space_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::handle_index_space_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_index_space_node	src/legion_runtime/runtime.cc	/^    void Runtime::handle_index_space_node(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual	src/legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochTriggerer::handle_individual(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
handle_individual_remote_commit	src/legion_runtime/runtime.cc	/^    void Runtime::handle_individual_remote_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_remote_complete	src/legion_runtime/runtime.cc	/^    void Runtime::handle_individual_remote_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_remote_mapped	src/legion_runtime/runtime.cc	/^    void Runtime::handle_individual_remote_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_request	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::handle_individual_request(Runtime *runtime,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
handle_individual_request	src/legion_runtime/runtime.cc	/^    void Runtime::handle_individual_request(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_individual_return	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::handle_individual_return(Runtime *runtime,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
handle_individual_return	src/legion_runtime/runtime.cc	/^    void Runtime::handle_individual_return(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_launch_task	src/legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochDistributor::handle_launch_task(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
handle_line_update	xeon_phi/linux_usr/phi_console.c	/^handle_line_update (void)$/;"	f	file:
handle_lock_grant	src/legion_runtime/lowlevel.cc	/^    void handle_lock_grant(LockGrantArgs args, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_lock_release	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void \/*Reservation::Impl::*\/handle_lock_release(LockReleaseArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_lock_request	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void \/*Reservation::Impl::*\/handle_lock_request(LockRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_logical_partition_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::handle_logical_partition_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_logical_region_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::handle_logical_region_destruction(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_logical_region_node	src/legion_runtime/runtime.cc	/^    void Runtime::handle_logical_region_node(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_long_msgptr	src/legion_runtime/activemsg.cc	/^  bool handle_long_msgptr(void *ptr)$/;"	f	class:ActiveMessageEndpoint
handle_long_msgptr	src/legion_runtime/activemsg.cc	/^  void handle_long_msgptr(gasnet_node_t source, void *ptr)$/;"	f	class:EndpointManager
handle_long_msgptr	src/legion_runtime/activemsg.cc	/^void handle_long_msgptr(gasnet_node_t source, void *ptr)$/;"	f
handle_luainit	src/lua_src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_machine_shutdown_request	src/legion_runtime/lowlevel.cc	/^    void handle_machine_shutdown_request(MachineShutdownRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_make_persistent	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void InstanceManager::handle_make_persistent(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
handle_make_persistent	src/legion_runtime/runtime.cc	/^    void Runtime::handle_make_persistent(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_map_task	src/legion_runtime/legion_ops.cc	/^    \/*static*\/ void MustEpochMapper::handle_map_task(const void *args)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
handle_mapper_message	src/legion_runtime/runtime.cc	/^    void Runtime::handle_mapper_message(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_mapper_send_message	src/legion_runtime/runtime.cc	/^    void Runtime::handle_mapper_send_message(Mapper *mapper, Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_message	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::handle_message(Processor source,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
handle_messages	src/legion_runtime/runtime.cc	/^    void MessageManager::handle_messages(unsigned num_messages,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
handle_node_creation	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void FieldSpaceNode::handle_node_creation($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
handle_node_creation	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void IndexPartNode::handle_node_creation($/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
handle_node_creation	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void IndexSpaceNode::handle_node_creation($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
handle_node_creation	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionNode::handle_node_creation(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
handle_peer_access	src/legion_runtime/lowlevel_gpu.cc	/^      void handle_peer_access(CUcontext peer_ctx)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
handle_remote_copy	src/legion_runtime/lowlevel_dma.cc	/^    void handle_remote_copy(RemoteCopyArgs args, const void *data, size_t msglen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_mem_alloc	src/legion_runtime/lowlevel.cc	/^    off_t handle_remote_mem_alloc(RemoteMemAllocArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_redlist	src/legion_runtime/lowlevel.cc	/^    void handle_remote_redlist(RemoteRedListArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_reduce	src/legion_runtime/lowlevel.cc	/^    void handle_remote_reduce(RemoteReduceArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_references	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::handle_remote_references(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
handle_remote_write	src/legion_runtime/lowlevel.cc	/^    void handle_remote_write(RemoteWriteArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_remote_write_fence	src/legion_runtime/lowlevel.cc	/^    void handle_remote_write_fence(RemoteWriteFenceArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_request	src/legion_runtime/lowlevel.cc	/^      static void handle_request(RequestArgs args)$/;"	f	struct:LegionRuntime::LowLevel::BarrierAdjustMessage
handle_roll_up_data	src/legion_runtime/lowlevel.cc	/^    void handle_roll_up_data(RollUpDataArgs args, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_roll_up_request	src/legion_runtime/lowlevel.cc	/^    void handle_roll_up_request(RollUpRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handle_screen_redraw	xeon_phi/linux_usr/phi_console.c	/^handle_screen_redraw (void)$/;"	f	file:
handle_script	src/lua_src/lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	file:
handle_scrollup	xeon_phi/linux_usr/phi_console.c	/^handle_scrollup (void)$/;"	f	file:
handle_send_back_composite_view	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void CompositeView::handle_send_back_composite_view($/;"	f	class:LegionRuntime::HighLevel::CompositeView
handle_send_back_composite_view	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_composite_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_materialized_view	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::handle_send_back_materialized_view($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
handle_send_back_materialized_view	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_materialized_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_partition_state	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_partition_state(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_reduction_view	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionView::handle_send_back_reduction_view($/;"	f	class:LegionRuntime::HighLevel::ReductionView
handle_send_back_reduction_view	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_reduction_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_region_state	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_region_state(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_back_state	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void PartitionNode::handle_send_back_state($/;"	f	class:LegionRuntime::HighLevel::PartitionNode
handle_send_back_state	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionNode::handle_send_back_state($/;"	f	class:LegionRuntime::HighLevel::RegionNode
handle_send_back_user	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void LogicalView::handle_send_back_user(RegionTreeForest *ctx,$/;"	f	class:LegionRuntime::HighLevel::LogicalView
handle_send_back_user	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_back_user(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_composite_update	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void CompositeView::handle_send_composite_update($/;"	f	class:LegionRuntime::HighLevel::CompositeView
handle_send_composite_update	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_composite_update(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_composite_view	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void CompositeView::handle_send_composite_view($/;"	f	class:LegionRuntime::HighLevel::CompositeView
handle_send_composite_view	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_composite_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_instance_manager	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_instance_manager(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_manager	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void InstanceManager::handle_send_manager($/;"	f	class:LegionRuntime::HighLevel::InstanceManager
handle_send_manager	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionManager::handle_send_manager($/;"	f	class:LegionRuntime::HighLevel::ReductionManager
handle_send_materialized_update	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_materialized_update(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_materialized_view	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::handle_send_materialized_view($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
handle_send_materialized_view	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_materialized_view(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_partition_state	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_partition_state(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_reduction_manager	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_reduction_manager(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_reduction_update	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_reduction_update(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_reduction_view	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionView::handle_send_reduction_view($/;"	f	class:LegionRuntime::HighLevel::ReductionView
handle_send_reduction_view	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_reduction_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_region_state	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_region_state(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_remote_references	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_remote_references(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_state	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void PartitionNode::handle_send_state(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
handle_send_state	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionNode::handle_send_state(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
handle_send_subscriber	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void InstanceView::handle_send_subscriber($/;"	f	class:LegionRuntime::HighLevel::InstanceView
handle_send_subscriber	src/legion_runtime/runtime.cc	/^    void Runtime::handle_send_subscriber(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_send_update	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void ReductionView::handle_send_update(RegionTreeForest *context,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
handle_send_updates	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void MaterializedView::handle_send_updates($/;"	f	class:LegionRuntime::HighLevel::MaterializedView
handle_slice	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void DeferredSlicer::handle_slice(const void *args)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
handle_slice_remote_commit	src/legion_runtime/runtime.cc	/^    void Runtime::handle_slice_remote_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_remote_complete	src/legion_runtime/runtime.cc	/^    void Runtime::handle_slice_remote_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_remote_mapped	src/legion_runtime/runtime.cc	/^    void Runtime::handle_slice_remote_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_request	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::handle_slice_request(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::IndexTask
handle_slice_request	src/legion_runtime/runtime.cc	/^    void Runtime::handle_slice_request(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_slice_return	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void SliceTask::handle_slice_return(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::SliceTask
handle_slice_return	src/legion_runtime/runtime.cc	/^    void Runtime::handle_slice_return(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_spawn_task_message	src/legion_runtime/lowlevel.cc	/^    void handle_spawn_task_message(SpawnTaskArgs args,$/;"	f	namespace:LegionRuntime::LowLevel
handle_special_switch	src/nautilus/scheduler.c	/^static void handle_special_switch(rt_status what, int have_lock, uint8_t flags)$/;"	f	file:
handle_steal	src/legion_runtime/runtime.cc	/^    void Runtime::handle_steal(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_task	src/legion_runtime/runtime.cc	/^    void Runtime::handle_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
handle_type	src/legion_runtime/legion.h	/^      HandleType handle_type; \/**< region or partition requirement*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
handle_unpack_layout_description	src/legion_runtime/region_tree.cc	/^      handle_unpack_layout_description(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
handle_valid_mask_data	src/legion_runtime/lowlevel.cc	/^    void handle_valid_mask_data(ValidMaskDataArgs args, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
handle_valid_mask_request	src/legion_runtime/lowlevel.cc	/^    void handle_valid_mask_request(ValidMaskRequestArgs args)$/;"	f	namespace:LegionRuntime::LowLevel
handled	src/legion_runtime/shared_lowlevel.cc	/^		bool handled;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
handler	src/acpi/acpica/aclocal.h	/^	acpi_event_handler handler;	\/* Address of handler. *\/$/;"	m	struct:acpi_fixed_event_handler
handler	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_handler_info *handler;  \/* Installed GPE handler *\/$/;"	m	union:acpi_gpe_dispatch_info	typeref:struct:acpi_gpe_dispatch_info::acpi_gpe_handler_info
handler	src/legion_runtime/lowlevel.cc	/^	gasnet_handler_t handler;$/;"	m	struct:LegionRuntime::LowLevel::AMQueue::AMQueueEntry	file:
handler_obj	src/acpi/acpica/aclocal.h	/^	union acpi_operand_object *handler_obj;$/;"	m	struct:acpi_notify_info	typeref:union:acpi_notify_info::acpi_operand_object
handler_safe	src/legion_runtime/lowlevel_dma.cc	/^      virtual bool handler_safe(void) { return(false); }$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
handler_safe	src/legion_runtime/lowlevel_dma.cc	/^      virtual bool handler_safe(void) { return(false); }$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
harden_operation	src/legion_runtime/legion_ops.cc	/^    void Operation::harden_operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
hardened	src/legion_runtime/legion_ops.h	/^      bool hardened;$/;"	m	class:LegionRuntime::HighLevel::Operation
hardware_id	include/acpi/actypes.h	/^	struct acpica_device_id hardware_id;	\/* _HID value *\/$/;"	m	struct:acpi_device_info	typeref:struct:acpi_device_info::acpica_device_id
hardware_signature	include/acpi/actbl.h	/^	uint32_t hardware_signature;	\/* Hardware configuration signature *\/$/;"	m	struct:acpi_table_facs
has_E	src/lua_src/lua.c	396;"	d	file:
has_adjacent	src/legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::has_adjacent(Segment<T> *seg) const$/;"	f	class:LegionRuntime::HighLevel::Segment
has_avx	src/nautilus/fpu.c	/^has_avx (void)$/;"	f	file:
has_child	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
has_child	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
has_child	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
has_child	src/legion_runtime/region_tree.cc	/^    bool RegionNode::has_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
has_child	src/legion_runtime/region_tree.cc	/^    bool RegionTreePath::has_child(unsigned depth) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
has_child	src/legion_runtime/region_tree.h	/^      bool has_child;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
has_clflush	src/nautilus/fpu.c	/^has_clflush (void)$/;"	f	file:
has_complete	src/legion_runtime/region_tree.h	/^      bool has_complete, complete;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
has_component_domains	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::has_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
has_component_domains	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::has_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
has_component_domains	src/legion_runtime/region_tree.cc	/^    bool RegionNode::has_component_domains(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
has_conflicting_regions	src/legion_runtime/legion_tasks.cc	/^    int SingleTask::has_conflicting_regions(MapOp *op, bool &parent_conflict,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_created_field	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_created_field(FieldSpace handle, FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_created_index_space	src/legion_runtime/legion_tasks.cc	/^    bool TaskOp::has_created_index_space(IndexSpace space) const$/;"	f	class:LegionRuntime::HighLevel::TaskOp
has_created_region	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_created_region(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_cvt16	src/nautilus/fpu.c	/^has_cvt16 (void)$/;"	f	file:
has_cx16	src/nautilus/fpu.c	/^has_cx16 (void)$/;"	f	file:
has_divisor	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ bool RectangleSet<T,DISCRETE>::has_divisor($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
has_e	src/lua_src/lua.c	395;"	d	file:
has_entry	src/legion_runtime/lowlevel_impl.h	/^    bool DynamicTable<ALLOCATOR>::has_entry(IT index) const$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
has_executed_operation	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_executed_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_executing_operation	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_executing_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_explicit_utility_processors	src/legion_runtime/lowlevel.h	/^      bool has_explicit_utility_processors(void) const { return explicit_utility_procs; }$/;"	f	class:LegionRuntime::LowLevel::Machine
has_field	src/legion_runtime/region_tree.cc	/^    bool FieldSpaceNode::has_field(FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
has_field	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_field(FieldSpace space, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_field_privilege	src/legion_runtime/legion.cc	/^    bool RegionRequirement::has_field_privilege(FieldID fid) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
has_fma4	src/nautilus/fpu.c	/^has_fma4 (void)$/;"	f	file:
has_future	src/legion_runtime/runtime.cc	/^    bool Runtime::has_future(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_fxsr	src/nautilus/fpu.c	/^has_fxsr (void)$/;"	f	file:
has_htt	src/nautilus/numa.c	/^has_htt (void)$/;"	f	file:
has_i	src/lua_src/lua.c	393;"	d	file:
has_identity	src/legion_runtime/lowlevel.h	/^      bool has_identity;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
has_instance	src/legion_runtime/region_tree.cc	/^    bool FieldSpaceNode::has_instance(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
has_instance	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::has_instance(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
has_instance	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::has_instance(RegionTreeID tid)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
has_intersects	src/legion_runtime/region_tree.h	/^        bool has_intersects;$/;"	m	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
has_leafb	src/nautilus/numa.c	/^has_leafb (void)$/;"	f	file:
has_manager	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_manager(DistributedID did) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_mapping	src/legion_runtime/mapping_utilities.cc	/^      bool MappingMemoizer::has_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
has_mmx	src/nautilus/fpu.c	/^has_mmx (void)$/;"	f	file:
has_multiple_domains	src/legion_runtime/legion.cc	/^    bool HighLevelRuntime::has_multiple_domains(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
has_multiple_domains	src/legion_runtime/legion.cc	/^    bool Mapper::has_multiple_domains(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
has_multiple_domains	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_multiple_domains(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_multiple_domains	src/legion_runtime/runtime.cc	/^    bool Runtime::has_multiple_domains(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_multiple_domains	src/legion_runtime/runtime.cc	/^    bool Runtime::has_multiple_domains(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_mwait	src/arch/hrt/mwait.c	/^has_mwait (void) $/;"	f	file:
has_mwait	src/arch/x64/mwait.c	/^has_mwait (void) $/;"	f	file:
has_next	src/legion_runtime/legion.h	/^    inline bool IndexIterator::has_next(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
has_node	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(FieldSpace space) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(IndexPartition part) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(IndexSpace space) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(LogicalPartition handle) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_node	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_node(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_overlap	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ bool RectangleSet<T,DISCRETE>::has_overlap(Segment<T> *segment,$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
has_parent_index_partition	src/legion_runtime/legion.cc	/^    bool HighLevelRuntime::has_parent_index_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
has_parent_index_partition	src/legion_runtime/legion.cc	/^    bool Mapper::has_parent_index_partition(IndexSpace handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
has_parent_index_partition	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_parent_index_partition(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_parent_index_partition	src/legion_runtime/runtime.cc	/^    bool Runtime::has_parent_index_partition(Context ctx, IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_index_partition	src/legion_runtime/runtime.cc	/^    bool Runtime::has_parent_index_partition(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_logical_partition	src/legion_runtime/legion.cc	/^    bool HighLevelRuntime::has_parent_logical_partition(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
has_parent_logical_partition	src/legion_runtime/legion.cc	/^    bool Mapper::has_parent_logical_partition(LogicalRegion handle) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
has_parent_logical_partition	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_parent_logical_partition(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_parent_logical_partition	src/legion_runtime/runtime.cc	/^    bool Runtime::has_parent_logical_partition(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_logical_partition	src/legion_runtime/runtime.cc	/^    bool Runtime::has_parent_logical_partition(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::Runtime
has_parent_view	src/legion_runtime/region_tree.cc	/^    bool CompositeView::has_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
has_parent_view	src/legion_runtime/region_tree.cc	/^    bool MaterializedView::has_parent_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
has_point	src/legion_runtime/legion.cc	/^    bool ArgumentMap::has_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
has_point	src/legion_runtime/runtime.cc	/^    bool ArgumentMap::Impl::has_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
has_ref	src/legion_runtime/region_tree.h	/^      inline bool has_ref(void) const { return (view != NULL); }$/;"	f	class:LegionRuntime::HighLevel::MappingRef
has_ref	src/legion_runtime/region_tree.h	/^      inline bool has_ref(void) const { return handle.has_view(); }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
has_required_lock	src/legion_runtime/region_tree.h	/^      inline bool has_required_lock(void) const { return needed_lock.exists(); }$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
has_scheduler	src/legion_runtime/shared_lowlevel.cc	/^        const bool has_scheduler;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
has_simultaneous	src/legion_runtime/legion_tasks.h	/^      bool simultaneous_checked, has_simultaneous;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
has_simultaneous_coherence	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::has_simultaneous_coherence(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
has_sse	src/nautilus/fpu.c	/^has_sse (void) $/;"	f	file:
has_sse2	src/nautilus/fpu.c	/^has_sse2 (void)$/;"	f	file:
has_sse3	src/nautilus/fpu.c	/^has_sse3 (void)$/;"	f	file:
has_sse4d1	src/nautilus/fpu.c	/^has_sse4d1 (void)$/;"	f	file:
has_sse4d2	src/nautilus/fpu.c	/^has_sse4d2 (void)$/;"	f	file:
has_ssse3	src/nautilus/fpu.c	/^has_ssse3 (void)$/;"	f	file:
has_tree	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_tree(RegionTreeID tid) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_triggered	src/legion_runtime/lowlevel.cc	/^    bool Event::Impl::has_triggered(Event::gen_t needed_gen) volatile$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
has_triggered	src/legion_runtime/lowlevel.cc	/^    bool Event::has_triggered(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
has_triggered	src/legion_runtime/shared_lowlevel.cc	/^    bool Event::has_triggered(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
has_triggered	src/legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::has_triggered(EventGeneration needed_gen)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
has_v	src/lua_src/lua.c	394;"	d	file:
has_variant	src/legion_runtime/legion.cc	/^    bool TaskVariantCollection::has_variant(Processor::Kind kind, $/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
has_variant	src/legion_runtime/legion.cc	/^    bool TaskVariantCollection::has_variant(VariantID vid)$/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
has_view	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::has_view(DistributedID did) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
has_view	src/legion_runtime/region_tree.h	/^      inline bool has_view(void) const { return (view != NULL); }$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
has_waiter	include/nautilus/smp.h	/^    uint8_t has_waiter;$/;"	m	struct:nk_xcall
has_war	src/legion_runtime/region_tree.h	/^      bool has_war;$/;"	m	class:LegionRuntime::HighLevel::WARAnalyzer
has_war_dependence	src/legion_runtime/region_tree.cc	/^    bool CompositeView::has_war_dependence(const RegionUsage &usage, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
has_war_dependence	src/legion_runtime/region_tree.cc	/^    bool MaterializedView::has_war_dependence(const RegionUsage &usage,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
has_war_dependence	src/legion_runtime/region_tree.h	/^      inline bool has_war_dependence(void) const { return has_war; }$/;"	f	class:LegionRuntime::HighLevel::WARAnalyzer
has_war_dependence_above	src/legion_runtime/region_tree.cc	/^    bool MaterializedView::has_war_dependence_above(const RegionUsage &usage,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
has_x87	src/nautilus/fpu.c	/^has_x87 (void)$/;"	f	file:
has_xsave	src/nautilus/fpu.c	/^has_xsave (void)$/;"	f	file:
hash	include/lua/lobject.h	/^    unsigned int hash;$/;"	m	struct:TString::__anon5
hash	include/lua/lstate.h	/^  GCObject **hash;$/;"	m	struct:stringtable
hash	src/nautilus/hashtable.c	/^    uint_t hash;$/;"	m	struct:nk_hash_entry	file:
hash_fn	src/nautilus/hashtable.c	/^    uint_t (*hash_fn) (addr_t key);$/;"	m	struct:nk_hashtable	file:
hashboolean	src/lua_src/ltable.c	55;"	d	file:
hashmod	src/lua_src/ltable.c	62;"	d	file:
hashnum	src/lua_src/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	src/lua_src/ltable.c	65;"	d	file:
hashpow2	src/lua_src/ltable.c	52;"	d	file:
hashstr	src/lua_src/ltable.c	54;"	d	file:
hashtable_expand	src/nautilus/hashtable.c	/^hashtable_expand (struct nk_hashtable * htable) $/;"	f	file:
hasjumps	src/lua_src/lcode.c	29;"	d	file:
hasmultret	src/lua_src/lparser.c	35;"	d	file:
have_hrt_ioapic	include/nautilus/multiboot2.h	/^  multiboot_uint32_t have_hrt_ioapic;$/;"	m	struct:multiboot_tag_hrt
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_cpu_tbl	typeref:struct:sfi_cpu_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_freq_tbl	typeref:struct:sfi_freq_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_ioapic_tbl	typeref:struct:sfi_ioapic_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_m_rtc_tbl	typeref:struct:sfi_m_rtc_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_m_timer_tbl	typeref:struct:sfi_m_timer_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_mmap_tbl	typeref:struct:sfi_mmap_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_plat_dev_tbl	typeref:struct:sfi_plat_dev_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_sys_tbl	typeref:struct:sfi_sys_tbl::sfi_common_hdr
hdr	include/nautilus/sfi.h	/^    struct sfi_common_hdr hdr;$/;"	m	struct:sfi_wake_vec_tbl	typeref:struct:sfi_wake_vec_tbl::sfi_common_hdr
hdr_end	src/arch/hrt/asm/boot.S	/^hdr_end:$/;"	l
hdr_end	src/arch/k1om/asm/boot.S	/^hdr_end:$/;"	l
hdr_end	src/arch/x64/asm/boot.S	/^hdr_end:$/;"	l
hdr_type	include/dev/pci.h	/^    uint8_t  hdr_type;$/;"	m	struct:pci_cfg_space
head	src/nautilus/scheduler.c	/^    rt_node *head;$/;"	m	struct:rt_list	file:
head	src/nautilus/scheduler.c	/^    uint64_t   head;        \/\/ index of newest element $/;"	m	struct:rt_queue	file:
head	src/nautilus/vc.c	/^  uint16_t head, tail;$/;"	m	struct:nk_virtual_console	file:
header	include/acpi/actbl.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_table_header
header	include/acpi/actbl.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_rsdt	typeref:struct:acpi_table_rsdt::acpi_table_header
header	include/acpi/actbl.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_xsdt	typeref:struct:acpi_table_xsdt::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_hest_header header;$/;"	m	struct:acpi_hest_aer	typeref:struct:acpi_hest_aer::acpi_hest_header
header	include/acpi/actbl1.h	/^	struct acpi_hest_header header;$/;"	m	struct:acpi_hest_aer_bridge	typeref:struct:acpi_hest_aer_bridge::acpi_hest_header
header	include/acpi/actbl1.h	/^	struct acpi_hest_header header;$/;"	m	struct:acpi_hest_aer_root	typeref:struct:acpi_hest_aer_root::acpi_hest_header
header	include/acpi/actbl1.h	/^	struct acpi_hest_header header;$/;"	m	struct:acpi_hest_generic	typeref:struct:acpi_hest_generic::acpi_hest_header
header	include/acpi/actbl1.h	/^	struct acpi_hest_header header;$/;"	m	struct:acpi_hest_ia_corrected	typeref:struct:acpi_hest_ia_corrected::acpi_hest_header
header	include/acpi/actbl1.h	/^	struct acpi_hest_header header;$/;"	m	struct:acpi_hest_ia_machine_check	typeref:struct:acpi_hest_ia_machine_check::acpi_hest_header
header	include/acpi/actbl1.h	/^	struct acpi_hest_header header;$/;"	m	struct:acpi_hest_ia_nmi	typeref:struct:acpi_hest_ia_nmi::acpi_hest_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_cpep_polling	typeref:struct:acpi_cpep_polling::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_interrupt_override	typeref:struct:acpi_madt_interrupt_override::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_interrupt_source	typeref:struct:acpi_madt_interrupt_source::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_io_apic	typeref:struct:acpi_madt_io_apic::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_io_sapic	typeref:struct:acpi_madt_io_sapic::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_local_apic	typeref:struct:acpi_madt_local_apic::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_local_apic_nmi	typeref:struct:acpi_madt_local_apic_nmi::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_local_apic_override	typeref:struct:acpi_madt_local_apic_override::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_local_sapic	typeref:struct:acpi_madt_local_sapic::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_local_x2apic	typeref:struct:acpi_madt_local_x2apic::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_local_x2apic_nmi	typeref:struct:acpi_madt_local_x2apic_nmi::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_madt_nmi_source	typeref:struct:acpi_madt_nmi_source::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_srat_cpu_affinity	typeref:struct:acpi_srat_cpu_affinity::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_srat_mem_affinity	typeref:struct:acpi_srat_mem_affinity::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_subtable_header header;$/;"	m	struct:acpi_srat_x2apic_cpu_affinity	typeref:struct:acpi_srat_x2apic_cpu_affinity::acpi_subtable_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_bert	typeref:struct:acpi_table_bert::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_cpep	typeref:struct:acpi_table_cpep::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_ecdt	typeref:struct:acpi_table_ecdt::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_einj	typeref:struct:acpi_table_einj::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_erst	typeref:struct:acpi_table_erst::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_hest	typeref:struct:acpi_table_hest::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_madt	typeref:struct:acpi_table_madt::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_msct	typeref:struct:acpi_table_msct::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_sbst	typeref:struct:acpi_table_sbst::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_slit	typeref:struct:acpi_table_slit::acpi_table_header
header	include/acpi/actbl1.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_srat	typeref:struct:acpi_table_srat::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_asf_header header;$/;"	m	struct:acpi_asf_address	typeref:struct:acpi_asf_address::acpi_asf_header
header	include/acpi/actbl2.h	/^	struct acpi_asf_header header;$/;"	m	struct:acpi_asf_alert	typeref:struct:acpi_asf_alert::acpi_asf_header
header	include/acpi/actbl2.h	/^	struct acpi_asf_header header;$/;"	m	struct:acpi_asf_info	typeref:struct:acpi_asf_info::acpi_asf_header
header	include/acpi/actbl2.h	/^	struct acpi_asf_header header;$/;"	m	struct:acpi_asf_remote	typeref:struct:acpi_asf_remote::acpi_asf_header
header	include/acpi/actbl2.h	/^	struct acpi_asf_header header;$/;"	m	struct:acpi_asf_rmcp	typeref:struct:acpi_asf_rmcp::acpi_asf_header
header	include/acpi/actbl2.h	/^	struct acpi_dmar_header header;$/;"	m	struct:acpi_dmar_atsr	typeref:struct:acpi_dmar_atsr::acpi_dmar_header
header	include/acpi/actbl2.h	/^	struct acpi_dmar_header header;$/;"	m	struct:acpi_dmar_hardware_unit	typeref:struct:acpi_dmar_hardware_unit::acpi_dmar_header
header	include/acpi/actbl2.h	/^	struct acpi_dmar_header header;$/;"	m	struct:acpi_dmar_reserved_memory	typeref:struct:acpi_dmar_reserved_memory::acpi_dmar_header
header	include/acpi/actbl2.h	/^	struct acpi_dmar_header header;$/;"	m	struct:acpi_dmar_rhsa	typeref:struct:acpi_dmar_rhsa::acpi_dmar_header
header	include/acpi/actbl2.h	/^	struct acpi_ibft_header header;$/;"	m	struct:acpi_ibft_control	typeref:struct:acpi_ibft_control::acpi_ibft_header
header	include/acpi/actbl2.h	/^	struct acpi_ibft_header header;$/;"	m	struct:acpi_ibft_initiator	typeref:struct:acpi_ibft_initiator::acpi_ibft_header
header	include/acpi/actbl2.h	/^	struct acpi_ibft_header header;$/;"	m	struct:acpi_ibft_nic	typeref:struct:acpi_ibft_nic::acpi_ibft_header
header	include/acpi/actbl2.h	/^	struct acpi_ibft_header header;$/;"	m	struct:acpi_ibft_target	typeref:struct:acpi_ibft_target::acpi_ibft_header
header	include/acpi/actbl2.h	/^	struct acpi_ivrs_de_header header;$/;"	m	struct:acpi_ivrs_device4	typeref:struct:acpi_ivrs_device4::acpi_ivrs_de_header
header	include/acpi/actbl2.h	/^	struct acpi_ivrs_de_header header;$/;"	m	struct:acpi_ivrs_device8a	typeref:struct:acpi_ivrs_device8a::acpi_ivrs_de_header
header	include/acpi/actbl2.h	/^	struct acpi_ivrs_de_header header;$/;"	m	struct:acpi_ivrs_device8b	typeref:struct:acpi_ivrs_device8b::acpi_ivrs_de_header
header	include/acpi/actbl2.h	/^	struct acpi_ivrs_de_header header;$/;"	m	struct:acpi_ivrs_device8c	typeref:struct:acpi_ivrs_device8c::acpi_ivrs_de_header
header	include/acpi/actbl2.h	/^	struct acpi_ivrs_header header;$/;"	m	struct:acpi_ivrs_hardware	typeref:struct:acpi_ivrs_hardware::acpi_ivrs_header
header	include/acpi/actbl2.h	/^	struct acpi_ivrs_header header;$/;"	m	struct:acpi_ivrs_memory	typeref:struct:acpi_ivrs_memory::acpi_ivrs_header
header	include/acpi/actbl2.h	/^	struct acpi_slic_header header;$/;"	m	struct:acpi_slic_key	typeref:struct:acpi_slic_key::acpi_slic_header
header	include/acpi/actbl2.h	/^	struct acpi_slic_header header;$/;"	m	struct:acpi_slic_marker	typeref:struct:acpi_slic_marker::acpi_slic_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_asf	typeref:struct:acpi_table_asf::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_boot	typeref:struct:acpi_table_boot::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_dbgp	typeref:struct:acpi_table_dbgp::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_dmar	typeref:struct:acpi_table_dmar::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_hpet	typeref:struct:acpi_table_hpet::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_ibft	typeref:struct:acpi_table_ibft::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_ivrs	typeref:struct:acpi_table_ivrs::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_mcfg	typeref:struct:acpi_table_mcfg::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_mchi	typeref:struct:acpi_table_mchi::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_slic	typeref:struct:acpi_table_slic::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_spcr	typeref:struct:acpi_table_spcr::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_spmi	typeref:struct:acpi_table_spmi::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_tcpa	typeref:struct:acpi_table_tcpa::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_uefi	typeref:struct:acpi_table_uefi::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_waet	typeref:struct:acpi_table_waet::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_wdat	typeref:struct:acpi_table_wdat::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_wddt	typeref:struct:acpi_table_wddt::acpi_table_header
header	include/acpi/actbl2.h	/^	struct acpi_table_header header;	\/* Common ACPI table header *\/$/;"	m	struct:acpi_table_wdrt	typeref:struct:acpi_table_wdrt::acpi_table_header
header	src/legion_runtime/runtime.h	/^      MessageHeader header;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
header_addr	include/nautilus/multiboot2.h	/^  multiboot_uint32_t header_addr;$/;"	m	struct:multiboot_header_tag_address
header_length	include/acpi/actbl1.h	/^	uint32_t header_length;$/;"	m	struct:acpi_table_einj
header_length	include/acpi/actbl1.h	/^	uint32_t header_length;$/;"	m	struct:acpi_table_erst
header_length	include/acpi/actbl2.h	/^	uint32_t header_length;	\/* Watchdog Header Length *\/$/;"	m	struct:acpi_table_wdat
header_length	include/nautilus/multiboot2.h	/^  multiboot_uint32_t header_length;$/;"	m	struct:multiboot_header
header_size	include/acpi/actbl1.h	/^	uint32_t header_size;$/;"	m	struct:acpi_einj_trigger
height	include/dev/vesa.h	/^    uint16_t height;           \/\/ height in pixels$/;"	m	struct:vesa_mode_info
height	include/dev/vesa.h	/^    uint16_t height;$/;"	m	struct:vesa_mode_request
height	include/nautilus/multiboot2.h	/^  multiboot_uint32_t height;$/;"	m	struct:multiboot_header_tag_framebuffer
height	include/nautilus/multiboot2.h	/^  multiboot_uint32_t height;$/;"	m	struct:multiboot_header_tag_module_align
held	src/legion_runtime/lowlevel_impl.h	/^      bool held;$/;"	m	class:LegionRuntime::LowLevel::AutoHSLLock
held_remote_references	src/legion_runtime/garbage_collection.h	/^      unsigned held_remote_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
held_remote_references	src/legion_runtime/garbage_collection.h	/^      unsigned held_remote_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
hello_world_task	src/test/hello_world.cc	/^void hello_world_task(const Task *task, $/;"	f
help	scripts/kconfig/expr.h	/^	char *help;$/;"	m	struct:symbol
help	scripts/kconfig/zconf.y	/^help: help_start T_HELPTEXT$/;"	l
helpText	scripts/kconfig/qconf.h	/^	QTextView *helpText;$/;"	m	class:ConfigMainWindow
help_complete_future	src/legion_runtime/runtime.cc	/^    void Runtime::help_complete_future(const Future &f)$/;"	f	class:LegionRuntime::HighLevel::Runtime
help_create_future	src/legion_runtime/runtime.cc	/^    Future Runtime::help_create_future(TaskOp *task \/*= NULL*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
help_reset_future	src/legion_runtime/runtime.cc	/^    bool Runtime::help_reset_future(const Future &f)$/;"	f	class:LegionRuntime::HighLevel::Runtime
help_start	scripts/kconfig/zconf.y	/^help_start: T_HELP T_EOL$/;"	l
hex_asc	src/nautilus/printk.c	/^const char hex_asc[] = "0123456789abcdef";$/;"	v
hex_asc_hi	src/nautilus/printk.c	157;"	d	file:
hex_asc_lo	src/nautilus/printk.c	156;"	d	file:
hg_only	include/nautilus/pmc.h	/^            uint8_t hg_only       : 2;$/;"	m	struct:pmc_ctl::__anon46::__anon47
hi	src/legion_runtime/arrays.h	/^      Point<DIM> lo, hi;$/;"	m	class:LegionRuntime::Arrays::Rect
hier_collectables	src/legion_runtime/runtime.h	/^                     RUNTIME_HIER_COLLECT_ALLOC>::map hier_collectables;$/;"	m	class:LegionRuntime::HighLevel::Runtime
hierarchical_collectable_lock	src/legion_runtime/runtime.h	/^      Reservation hierarchical_collectable_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
high_level	src/legion_runtime/runtime.h	/^      HighLevelRuntime *const high_level;$/;"	m	class:LegionRuntime::HighLevel::Runtime
high_level_index_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_index_task_wrapper(const void *args, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
high_level_inline_index_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_inline_index_task_wrapper($/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
high_level_inline_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_inline_task_wrapper(const Task *task,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
high_level_runtime_task	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::high_level_runtime_task($/;"	f	class:LegionRuntime::HighLevel::Runtime
high_level_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::high_level_task_wrapper(const void *args, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
higher	src/legion_runtime/rectangle_set.h	/^      Segment<T> *lower, *higher;$/;"	m	struct:LegionRuntime::HighLevel::SplitSegment
higher_x	src/legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
higher_y	src/legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
highest_dstates	include/acpi/actypes.h	/^	uint8_t highest_dstates[4];	\/* _sx_d values: 0xFF indicates not valid *\/$/;"	m	struct:acpi_device_info
highlevel_end_event	src/legion_runtime/legion_logging.h	/^        Event highlevel_end_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
hist_cnt	xeon_phi/linux_usr/phi_console.c	/^    unsigned hist_cnt;$/;"	m	struct:__anon79	file:
hits	include/acpi/actypes.h	/^	uint32_t hits;$/;"	m	struct:acpi_memory_list
hle	include/nautilus/cpuid.h	/^            uint8_t hle                 : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
hlist_add_after	include/nautilus/list.h	/^static inline void hlist_add_after(struct hlist_node *n,$/;"	f
hlist_add_before	include/nautilus/list.h	/^static inline void hlist_add_before(struct hlist_node *n,$/;"	f
hlist_add_head	include/nautilus/list.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_del	include/nautilus/list.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f
hlist_del_init	include/nautilus/list.h	/^static inline void hlist_del_init(struct hlist_node *n)$/;"	f
hlist_empty	include/nautilus/list.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	include/nautilus/list.h	541;"	d
hlist_for_each	include/nautilus/list.h	543;"	d
hlist_for_each_entry	include/nautilus/list.h	558;"	d
hlist_for_each_entry_continue	include/nautilus/list.h	570;"	d
hlist_for_each_entry_from	include/nautilus/list.h	582;"	d
hlist_for_each_entry_safe	include/nautilus/list.h	595;"	d
hlist_for_each_safe	include/nautilus/list.h	547;"	d
hlist_head	include/nautilus/list.h	/^struct hlist_head {$/;"	s
hlist_node	include/nautilus/list.h	/^struct hlist_node {$/;"	s
hlist_unhashed	include/nautilus/list.h	/^static inline int hlist_unhashed(const struct hlist_node *h)$/;"	f
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::FuturePredOp::ResolveFuturePredArgs
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochDistributorArgs
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochLauncherArgs
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochMapper::MustEpochMapArgs
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndexArgs
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndivArgs
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredCompleteArgs
hlr_id	src/legion_runtime/legion_ops.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
hlr_id	src/legion_runtime/legion_tasks.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::DeferredSlicer::DeferredSliceArgs
hlr_id	src/legion_runtime/legion_tasks.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::PostEndArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::GarbageCollectionEpoch::GarbageCollectionArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::DeferredTriggerArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::SchedulerArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerOpArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerTaskArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredRecycleArgs
hlr_id	src/legion_runtime/runtime.h	/^        HLRTaskID hlr_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MPIRankArgs
hob	src/dev/ata.c	/^	uint8_t hob:1;   \/\/ read back high-order byte of LBA48 (?)$/;"	m	struct:ata_cmd_reg::__anon136	file:
holders	src/legion_runtime/shared_lowlevel.cc	/^	unsigned holders;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
hook	include/lua/lstate.h	/^  lua_Hook hook;$/;"	m	struct:lua_State
hookcount	include/lua/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	src/lua_src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	include/lua/lstate.h	/^  lu_byte hookmask;$/;"	m	struct:lua_State
host_device_copies	src/legion_runtime/lowlevel_gpu.cc	/^      std::deque<GPUJob*> host_device_copies;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
host_num	include/nautilus/sfi.h	/^    uint8_t  host_num;$/;"	m	struct:sfi_plat_dev_entry
host_to_device_stream	src/legion_runtime/lowlevel_gpu.cc	/^      CUstream host_to_device_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
host_type	include/nautilus/sfi.h	/^    uint8_t  host_type;$/;"	m	struct:sfi_plat_dev_entry
hostprogs-y	scripts/basic/Makefile	/^hostprogs-y	:= fixdep split-include docproc$/;"	m
hostprogs-y	scripts/kconfig/Makefile	/^hostprogs-y	:= conf mconf qconf gconf kxgettext$/;"	m
hostprogs-y	scripts/kconfig/lxdialog/Makefile	/^hostprogs-y	:= lxdialog$/;"	m
hot_pluggable	include/nautilus/numa.h	/^    uint8_t  hot_pluggable;$/;"	m	struct:mem_region
hpaned	scripts/kconfig/gconf.c	/^GtkWidget *hpaned = NULL;$/;"	v
hpet	include/nautilus/nautilus.h	/^    struct hpet_dev * hpet;$/;"	m	struct:sys_info	typeref:struct:sys_info::hpet_dev
hpet_cmp_int_type_t	include/dev/hpet.h	/^typedef enum {TIMER_EDGE, TIMER_LEVEl} hpet_cmp_int_type_t;$/;"	t	typeref:enum:__anon74
hpet_cmp_run	src/dev/hpet.c	/^hpet_cmp_run (struct hpet_comparator * cmp)$/;"	f	file:
hpet_cmp_size_t	include/dev/hpet.h	/^typedef enum {TIMER_SIZE_32, TIMER_SIZE_64} hpet_cmp_size_t;$/;"	t	typeref:enum:__anon73
hpet_cmp_stat_t	include/dev/hpet.h	/^typedef enum {TIMER_DISABLED, TIMER_RUNNING} hpet_cmp_stat_t;$/;"	t	typeref:enum:__anon75
hpet_cmp_stop	src/dev/hpet.c	/^hpet_cmp_stop (struct hpet_comparator * cmp)$/;"	f	file:
hpet_cmp_type_t	include/dev/hpet.h	/^typedef enum {TIMER_TYPE_ONESHOT, TIMER_TYPE_PERIODIC} hpet_cmp_type_t;$/;"	t	typeref:enum:__anon72
hpet_cntr_halt	src/dev/hpet.c	/^hpet_cntr_halt (struct hpet_dev * hpet)$/;"	f	file:
hpet_cntr_run	src/dev/hpet.c	/^hpet_cntr_run (struct hpet_dev * hpet)$/;"	f	file:
hpet_comparator	include/dev/hpet.h	/^struct hpet_comparator {$/;"	s
hpet_dev	include/dev/hpet.h	/^struct hpet_dev {$/;"	s
hpet_get_cmp_stat	src/dev/hpet.c	/^hpet_get_cmp_stat (struct hpet_comparator * cmp)$/;"	f	file:
hpet_get_cntr_stat	src/dev/hpet.c	/^hpet_get_cntr_stat (struct hpet_dev * hpet)$/;"	f	file:
hpet_get_free_timer	src/dev/hpet.c	/^hpet_get_free_timer (struct hpet_dev * hpet)$/;"	f	file:
hpet_init_comparator	src/dev/hpet.c	/^hpet_init_comparator (struct hpet_dev * hpet,$/;"	f	file:
hpet_map_type_t	include/dev/hpet.h	/^typedef enum { HPET_MAP_STD, HPET_MAP_LEGACY } hpet_map_type_t;$/;"	t	typeref:enum:__anon76
hpet_read	include/dev/hpet.h	/^hpet_read (struct hpet_dev * hpet, uint32_t reg)$/;"	f
hpet_request_irq	src/dev/hpet.c	/^hpet_request_irq (struct hpet_comparator * cmp, uint32_t mask)$/;"	f	file:
hpet_set_oneshot	src/dev/hpet.c	/^hpet_set_oneshot (uint64_t ticks)$/;"	f
hpet_stat_t	include/dev/hpet.h	/^typedef enum { HPET_COUNTER_HALTED, HPET_COUNTER_RUNNING } hpet_stat_t;$/;"	t	typeref:enum:__anon77
hpet_write	include/dev/hpet.h	/^hpet_write (struct hpet_dev * hpet, uint32_t reg, uint64_t val)$/;"	f
hpet_write_cmp_val	src/dev/hpet.c	/^hpet_write_cmp_val (struct hpet_comparator * cmp, uint64_t val)$/;"	f	file:
hrt_ap_init	src/arch/hrt/init.c	/^hrt_ap_init (unsigned long mbd, $/;"	f
hrt_bsp_init	src/arch/hrt/init.c	/^hrt_bsp_init (unsigned long mbd, $/;"	f
hrt_core_sync	src/arch/hrt/init.c	/^static int hrt_core_sync = 0;$/;"	v	file:
hrt_flags	include/nautilus/multiboot2.h	/^  multiboot_uint64_t hrt_flags;$/;"	m	struct:multiboot_tag_hrt
hrt_info	include/nautilus/mb_utils.h	/^    struct multiboot_tag_hrt * hrt_info;$/;"	m	struct:multiboot_info	typeref:struct:multiboot_info::multiboot_tag_hrt
hrt_init_cpus	src/arch/hrt/hrt.c	/^hrt_init_cpus (struct sys_info * sys)$/;"	f
hrt_init_ioapics	src/arch/hrt/hrt.c	/^hrt_init_ioapics (struct sys_info * sys)$/;"	f
hrt_int_vec	include/nautilus/multiboot2.h	/^  multiboot_uint8_t  hrt_int_vec;$/;"	m	struct:multiboot_tag_hrt
hrt_print	src/arch/hrt/hrt.c	/^hrt_print (const char * s) $/;"	f
hrt_putchar	src/arch/hrt/hrt.c	/^hrt_putchar (char c)$/;"	f
hrt_puts	src/arch/hrt/hrt.c	/^hrt_puts (const char *s)$/;"	f
hscroll	scripts/kconfig/lxdialog/textbox.c	/^static int hscroll, fd, file_size, bytes_read;$/;"	v	file:
htable	include/nautilus/hashtable.h	/^    struct nk_hashtable * htable;$/;"	m	struct:nk_hashtable_iter	typeref:struct:nk_hashtable_iter::nk_hashtable
htt	include/nautilus/cpuid.h	/^            uint8_t htt      : 1; \/\/ max APIC IDs reserved field is valid$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
hurd1	src/fs/ext2/ext2fs.h	/^		} hurd1;$/;"	m	union:ext2_inode::__anon122	typeref:struct:ext2_inode::__anon122::__anon124
hurd2	src/fs/ext2/ext2fs.h	/^		} hurd2;$/;"	m	union:ext2_inode::__anon125	typeref:struct:ext2_inode::__anon125::__anon127
hvalue	include/lua/lobject.h	164;"	d
hvm_hcall	include/arch/hrt/hrt.h	/^hvm_hcall (uint64_t cmd, uint64_t a1, uint64_t a2, uint64_t a3,$/;"	f
hvm_hrt_init	src/arch/hrt/hrt.c	/^hvm_hrt_init (void)$/;"	f
hweight_long	include/lib/linux_bitops.h	/^static inline unsigned long hweight_long(unsigned long w)$/;"	f
i	src/legion_runtime/lowlevel.cc	/^      RegionInstance i;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceResp	file:
i	src/legion_runtime/lowlevel.cc	/^      RegionInstance i;$/;"	m	struct:LegionRuntime::LowLevel::DestroyInstanceArgs	file:
i8254_calib_tsc	src/dev/i8254.c	/^i8254_calib_tsc (void)$/;"	f
i8254_disable	src/dev/i8254.c	/^i8254_disable (void)$/;"	f	file:
i8254_init	src/dev/i8254.c	/^i8254_init (struct naut_info * naut)$/;"	f
iABC	include/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	include/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	include/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAx	include/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
i_atime	src/fs/ext2/ext2fs.h	/^	__u32	i_atime;	\/* Access time *\/$/;"	m	struct:ext2_inode
i_block	src/fs/ext2/ext2fs.h	/^	__u32	i_block[EXT2_N_BLOCKS];\/* Pointers to blocks *\/$/;"	m	struct:ext2_inode
i_blocks	src/fs/ext2/ext2fs.h	/^	__u32	i_blocks;	\/* Blocks count *\/$/;"	m	struct:ext2_inode
i_ci	include/lua/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo
i_ctime	src/fs/ext2/ext2fs.h	/^	__u32	i_ctime;	\/* Inode change time *\/$/;"	m	struct:ext2_inode
i_dtime	src/fs/ext2/ext2fs.h	/^	__u32	i_dtime;	\/* Deletion Time *\/$/;"	m	struct:ext2_inode
i_faddr	src/fs/ext2/ext2fs.h	/^	__u32	i_faddr;	\/* Fragment address *\/$/;"	m	struct:ext2_inode
i_file_acl	src/fs/ext2/ext2fs.h	/^	__u32	i_file_acl;	\/* File ACL *\/$/;"	m	struct:ext2_inode
i_flags	src/fs/ext2/ext2fs.h	/^	__u32	i_flags;	\/* File flags *\/$/;"	m	struct:ext2_inode
i_generation	src/fs/ext2/ext2fs.h	/^	__u32	i_generation;	\/* File version (for NFS) *\/$/;"	m	struct:ext2_inode
i_gid	src/fs/ext2/ext2fs.h	/^	__u16	i_gid;		\/* Low 16 bits of Group Id *\/$/;"	m	struct:ext2_inode
i_key	include/lua/lobject.h	/^  TKey i_key;$/;"	m	struct:Node
i_links_count	src/fs/ext2/ext2fs.h	/^	__u16	i_links_count;	\/* Links' count *\/$/;"	m	struct:ext2_inode
i_mode	src/fs/ext2/ext2fs.h	/^	__u16	i_mode;		\/* File mode *\/$/;"	m	struct:ext2_inode
i_mtime	src/fs/ext2/ext2fs.h	/^	__u32	i_mtime;	\/* Modification time *\/$/;"	m	struct:ext2_inode
i_size	src/fs/ext2/ext2fs.h	/^	__u32	i_size;		\/* Size in bytes *\/$/;"	m	struct:ext2_inode
i_size_high	src/fs/ext2/ext2fs.h	/^	__u32	i_size_high;	\/* Formerly i_dir_acl, directory ACL *\/$/;"	m	struct:ext2_inode
i_uid	src/fs/ext2/ext2fs.h	/^	__u16	i_uid;		\/* Low 16 bits of Owner Uid *\/$/;"	m	struct:ext2_inode
i_val	include/lua/lobject.h	/^  TValue i_val;$/;"	m	struct:Node
ibs	include/nautilus/cpuid.h	/^            uint8_t ibs         : 1; \/\/ instruction based sampling$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
id	include/acpi/actbl1.h	/^	uint8_t id;			\/* I\/O APIC ID *\/$/;"	m	struct:acpi_madt_io_apic
id	include/acpi/actbl1.h	/^	uint8_t id;			\/* I\/O SAPIC ID *\/$/;"	m	struct:acpi_madt_io_sapic
id	include/acpi/actbl1.h	/^	uint8_t id;			\/* Processor ID *\/$/;"	m	struct:acpi_cpep_polling
id	include/acpi/actbl1.h	/^	uint8_t id;			\/* Processor ID *\/$/;"	m	struct:acpi_madt_interrupt_source
id	include/acpi/actbl1.h	/^	uint8_t id;			\/* Processor's local APIC id *\/$/;"	m	struct:acpi_madt_local_apic
id	include/acpi/actbl1.h	/^	uint8_t id;			\/* SAPIC ID *\/$/;"	m	struct:acpi_madt_local_sapic
id	include/acpi/actbl1.h	/^	uint8_t id[1];		\/* Full namepath of the EC in the ACPI namespace *\/$/;"	m	struct:acpi_table_ecdt
id	include/acpi/actbl2.h	/^	uint16_t id;$/;"	m	struct:acpi_ivrs_de_header
id	include/acpi/actbl2.h	/^	uint32_t id;			\/* Hardware ID of event timer block *\/$/;"	m	struct:acpi_table_hpet
id	include/dev/apic.h	/^    uint_t   id;$/;"	m	struct:apic_dev
id	include/dev/hpet.h	/^    uint32_t id;$/;"	m	struct:hpet_dev
id	include/dev/ioapic.h	/^    uint8_t id;$/;"	m	struct:ioapic
id	include/nautilus/acpi.h	/^    uint8_t  id;$/;"	m	struct:mp_table_entry_ioapic
id	include/nautilus/nemo.h	/^	nemo_event_id_t id;$/;"	m	struct:nemo_event
id	include/nautilus/numa.h	/^    uint32_t id;$/;"	m	struct:numa_domain
id	include/nautilus/pmc.h	/^    uint8_t id;$/;"	m	struct:pmc_event
id	include/nautilus/smp.h	/^    cpu_id_t id;$/;"	m	struct:cpu
id	scripts/kconfig/zconf.tab.c	/^	struct kconf_id *id;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::kconf_id	file:
id	src/dev/ata.c	/^    uint8_t             id;      \/\/ 0\/1 on channel (master\/slave)$/;"	m	struct:ata_blkdev_state	file:
id	src/legion_runtime/legion.h	/^      FieldSpaceID id;$/;"	m	class:LegionRuntime::HighLevel::FieldSpace
id	src/legion_runtime/legion_logging.h	/^        unsigned id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyChannel
id	src/legion_runtime/lowlevel.cc	/^      int id, core_id;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
id	src/legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Event
id	src/legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace
id	src/legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Memory
id	src/legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Processor
id	src/legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance
id	src/legion_runtime/lowlevel.h	/^      id_t id;$/;"	m	class:LegionRuntime::LowLevel::Reservation
id	src/legion_runtime/lowlevel_impl.h	/^      IDType id(void) const { return value; }$/;"	f	class:LegionRuntime::LowLevel::ID
id	src/legion_runtime/shared_lowlevel.cc	/^                TriggerHandle id; \/\/ If it's not ready this is the trigger handle$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
id	src/legion_runtime/shared_lowlevel.cc	/^          TriggerHandle id;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
id	src/test/benchmark.c	/^	unsigned char id; \/* 0 or 1 *\/$/;"	m	struct:switch_cont	file:
id	src/test/saxpy_array.cc	/^  unsigned id;$/;"	m	struct:Block	file:
id_of_thread_str	src/acpi/acpica/aclocal.h	/^	char id_of_thread_str[11];$/;"	m	struct:acpi_db_method_info
id_t	src/legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Event
id_t	src/legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::IndexSpace
id_t	src/legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Memory
id_t	src/legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Processor
id_t	src/legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::RegionInstance
id_t	src/legion_runtime/lowlevel.h	/^      typedef IDType id_t;$/;"	t	class:LegionRuntime::LowLevel::Reservation
idempotent	src/legion_runtime/legion.h	/^      bool idempotent;$/;"	m	struct:LegionRuntime::HighLevel::TaskConfigOptions
idempotent	src/legion_runtime/legion.h	/^      const bool idempotent;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
idempotent	src/legion_runtime/legion_logging.h	/^        bool idempotent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
identifier	include/acpi/actbl2.h	/^	uint8_t identifier[16];	\/* UUID identifier *\/$/;"	m	struct:acpi_table_uefi
identity	src/legion_runtime/legion_utilities.h	/^      bool identity;$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
identity	src/legion_runtime/lowlevel.h	/^      static const RHS identity;$/;"	m	class:LegionRuntime::LowLevel::MyReductionOp
identity	src/test/circuit.h	/^  static const float identity;$/;"	m	class:AccumulateCharge
identity	src/test/circuit_cpu.cc	/^const float AccumulateCharge::identity = 0.0f;$/;"	m	class:AccumulateCharge	file:
identity	src/test/hpcg/dotprod-accumulate.h	/^    static const double identity;$/;"	m	class:lgncg::DotProdAccumulate
identity	src/test/hpcg/dotprod-accumulate.h	/^const double DotProdAccumulate::identity = 0.0;$/;"	m	class:lgncg::DotProdAccumulate
identity	src/test/saxpy_array.cc	/^  static const float identity = 0.0f;$/;"	m	struct:Add	file:
idle	src/nautilus/idle.c	/^idle (void * in, void ** out)$/;"	f
idle_delay	src/nautilus/idle.c	/^idle_delay (unsigned long long n)$/;"	f	file:
idle_procs	src/legion_runtime/lowlevel_impl.h	/^      std::set<Processor::Impl *> idle_procs;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
idle_task	src/legion_runtime/lowlevel.cc	/^      Task *idle_task;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
idle_task	src/legion_runtime/lowlevel_impl.h	/^      Task *idle_task;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
idle_task_enabled	src/legion_runtime/lowlevel.cc	/^      bool idle_task_enabled;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
idle_task_enabled	src/legion_runtime/lowlevel_gpu.cc	/^      bool idle_task_enabled;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
idle_task_enabled	src/legion_runtime/shared_lowlevel.cc	/^        bool idle_task_enabled;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
ids	include/acpi/actypes.h	/^	struct acpica_device_id ids[1];	\/* ID array *\/$/;"	m	struct:acpica_device_id_list	typeref:struct:acpica_device_id_list::acpica_device_id
ids_to_fns	src/legion_runtime/arrays.h	/^      std::vector<MappingDeserializerFn> ids_to_fns;$/;"	m	class:LegionRuntime::Arrays::MappingRegistry
idt_assign_entry	src/nautilus/idt.c	/^idt_assign_entry (ulong_t entry, ulong_t handler_addr)$/;"	f
idt_desc	include/nautilus/idt.h	/^struct idt_desc {$/;"	s
idt_descriptor	src/nautilus/idt.c	/^struct idt_desc idt_descriptor =$/;"	v	typeref:struct:idt_desc
idx	include/dev/hpet.h	/^    uint8_t idx; \/* which timer number am I *\/$/;"	m	struct:hpet_comparator
idx	include/lua/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc
idx	include/lua/lparser.h	/^      short idx;  \/* index (R\/K) *\/$/;"	m	struct:expdesc::__anon16::__anon17
idx	include/lua/lparser.h	/^  short idx;  \/* variable index in stack *\/$/;"	m	struct:Vardesc
idx	include/nautilus/fprintk.h	/^    unsigned idx;$/;"	m	struct:fprintk_state
idx	src/legion_runtime/region_tree.h	/^        unsigned idx;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
idx	src/legion_runtime/region_tree.h	/^      unsigned idx;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
idx1	src/legion_runtime/legion.h	/^        unsigned idx1;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
idx2	src/legion_runtime/legion.h	/^        unsigned idx2;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
ieee754dbl	src/nautilus/libccompat.c	/^union ieee754dbl {$/;"	u	file:
ien	src/dev/ata.c	/^	uint8_t ien:1;   \/\/ interrupt enable - ACTIVE LOW$/;"	m	struct:ata_cmd_reg::__anon136	file:
if_block	scripts/kconfig/zconf.y	/^if_block:$/;"	l
if_end	scripts/kconfig/zconf.y	/^if_end: end$/;"	l
if_entry	scripts/kconfig/zconf.y	/^if_entry: T_IF expr nl$/;"	l
if_expr	scripts/kconfig/zconf.y	/^if_expr:  \/* empty *\/			{ $$ = NULL; }$/;"	l
if_stmt	scripts/kconfig/zconf.y	/^if_stmt: if_entry if_block if_end$/;"	l
ifetch	include/nautilus/paging.h	/^            uint8_t ifetch  : 1;$/;"	m	struct:nk_pf_error::__anon56::__anon57
ifstat	src/lua_src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
ilog2	include/nautilus/math.h	58;"	d
image	src/legion_runtime/arrays.h	/^      Point<1> image(const Point<IDIM> p) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image	src/legion_runtime/arrays.h	/^      Point<DIM> image(const Point<DIM> p) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image	src/legion_runtime/arrays.h	/^      Point<ODIM> image(const Point<IDIM> p) const$/;"	f	class:LegionRuntime::Arrays::Translation
image	src/legion_runtime/arrays.h	/^      Rect<T::ODIM> image;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
image	src/legion_runtime/arrays.h	/^      virtual Point<ODIM> image(const Point<IDIM> p) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_convex	src/legion_runtime/arrays.h	/^      Rect<1> image_convex(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_convex	src/legion_runtime/arrays.h	/^      Rect<DIM> image_convex(const Rect<DIM> r) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_convex	src/legion_runtime/arrays.h	/^      Rect<ODIM> image_convex(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_convex	src/legion_runtime/arrays.h	/^      virtual Rect<ODIM> image_convex(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_dense_subrect	src/legion_runtime/arrays.h	/^      Rect<DIM> image_dense_subrect(const Rect<DIM> r, Rect<DIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_dense_subrect	src/legion_runtime/arrays.h	/^      Rect<ODIM> image_dense_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_dense_subrect	src/legion_runtime/arrays.h	/^      Rect<ODIM> image_dense_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_dense_subrect	src/legion_runtime/arrays.h	/^      virtual Rect<ODIM> image_dense_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_is_dense	src/legion_runtime/arrays.h	/^      bool image_is_dense(const Rect<DIM> r) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_is_dense	src/legion_runtime/arrays.h	/^      bool image_is_dense(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_is_dense	src/legion_runtime/arrays.h	/^      bool image_is_dense(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_is_dense	src/legion_runtime/arrays.h	/^      virtual bool image_is_dense(const Rect<IDIM> r) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_linear_subrect	src/legion_runtime/arrays.h	/^      Point<DIM> image_linear_subrect(const Rect<DIM> r, Rect<DIM>& subrect, Point<DIM> strides[DIM]) const$/;"	f	class:LegionRuntime::Arrays::Blockify
image_linear_subrect	src/legion_runtime/arrays.h	/^      Point<ODIM> image_linear_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect, Point<ODIM> strides[IDIM]) const$/;"	f	class:LegionRuntime::Arrays::Linearization
image_linear_subrect	src/legion_runtime/arrays.h	/^      Point<ODIM> image_linear_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect, Point<ODIM> strides[IDIM]) const$/;"	f	class:LegionRuntime::Arrays::Translation
image_linear_subrect	src/legion_runtime/arrays.h	/^      virtual Point<ODIM> image_linear_subrect(const Rect<IDIM> r, Rect<IDIM>& subrect, Point<ODIM> strides[IDIM]) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
image_lo	src/legion_runtime/arrays.h	/^      Point<T::ODIM> image_lo;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
image_pages	include/dev/vesa.h	/^    uint8_t image_pages;$/;"	m	struct:vesa_mode_info
imax	src/legion_runtime/arrays.h	/^static inline int imax(int a, int b) { return (a > b) ? a : b; }$/;"	f
imcr_begin_sym_io	src/nautilus/irq.c	/^imcr_begin_sym_io (void)$/;"	f
imin	src/legion_runtime/arrays.h	/^static inline int imin(int a, int b) { return (a < b) ? a : b; }$/;"	f
immov_lock	src/legion_runtime/legion_utilities.h	/^      ImmovableLock immov_lock;$/;"	m	class:LegionRuntime::HighLevel::AutoLock
impl	src/legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap
impl	src/legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::Future
impl	src/legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::FutureMap
impl	src/legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::Grant
impl	src/legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake
impl	src/legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion
impl	src/legion_runtime/legion.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::HighLevel::Predicate
impl	src/legion_runtime/lowlevel.cc	/^      Event::Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::PthreadCondWaiter	file:
impl	src/legion_runtime/lowlevel.cc	/^      RegionInstance::Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::DeferredInstDestroy	file:
impl	src/legion_runtime/lowlevel.cc	/^    Event::Impl *Event::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Event
impl	src/legion_runtime/lowlevel.cc	/^    IndexSpace::Impl *IndexSpace::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
impl	src/legion_runtime/lowlevel.cc	/^    Memory::Impl *Memory::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
impl	src/legion_runtime/lowlevel.cc	/^    Processor::Impl *Processor::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
impl	src/legion_runtime/lowlevel.cc	/^    RegionInstance::Impl *RegionInstance::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
impl	src/legion_runtime/lowlevel.cc	/^    Reservation::Impl *Reservation::impl(void) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
impl	src/legion_runtime/lowlevel.h	/^      Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator
impl	src/legion_runtime/region_tree.h	/^      TreeCloseImpl *impl;$/;"	m	class:LegionRuntime::HighLevel::TreeClose
impl	src/legion_runtime/shared_lowlevel.cc	/^      RegionInstance::Impl *impl;$/;"	m	class:LegionRuntime::LowLevel::DeferredInstDestroy	file:
impl_ptr	src/legion_runtime/lowlevel.h	/^      void *impl_ptr;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
imprecise_users	src/legion_runtime/field_tree.h	/^      std::list<UT> imprecise_users;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
in_handler	src/legion_runtime/activemsg.h	/^GASNETT_THREADKEY_DECLARE(in_handler);$/;"	v
in_handler	src/legion_runtime/lowlevel_impl.h	/^GASNETT_THREADKEY_DEFINE(in_handler);$/;"	v
in_idle_task	src/legion_runtime/lowlevel.cc	/^      bool in_idle_task;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
in_kick_interrupt	include/dev/apic.h	/^    int      in_kick_interrupt;$/;"	m	struct:apic_dev
in_progress	src/dev/vesa.c	/^static int in_progress = 0;$/;"	v	file:
in_progress	src/nautilus/realmode.c	/^static int in_progress = 0;$/;"	v	file:
in_timer_interrupt	include/dev/apic.h	/^    int      in_timer_interrupt;$/;"	m	struct:apic_dev
in_use	src/legion_runtime/activemsg.cc	/^  std::map<char *, size_t> in_use;$/;"	m	class:SrcDataPool	file:
in_use	src/legion_runtime/lowlevel_impl.h	/^      bool in_use;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
in_use	src/legion_runtime/shared_lowlevel.cc	/^	bool in_use;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
inactivedColorGroup	scripts/kconfig/qconf.h	/^	QColorGroup inactivedColorGroup;$/;"	m	class:ConfigList
inb	include/nautilus/cpu.h	/^inb (uint16_t port)$/;"	f
inclinenumber	src/lua_src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incoming	src/legion_runtime/legion_ops.h	/^      std::map<Operation*,GenerationID> incoming;$/;"	m	class:LegionRuntime::HighLevel::Operation
incomplete	src/lua_src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
incr_top	include/lua/ldo.h	20;"	d
increment_active_contexts	src/legion_runtime/runtime.cc	/^    void ProcessorManager::increment_active_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
increment_outstanding	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::increment_outstanding(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
increment_pending	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::increment_pending(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
increment_utility	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::increment_utility(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
incstep	src/lua_src/lgc.c	/^static void incstep (lua_State *L) {$/;"	f	file:
ind	include/lua/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon16	typeref:struct:expdesc::__anon16::__anon17
indent	scripts/kconfig/conf.c	/^static int indent = 1;$/;"	v	file:
indent	scripts/kconfig/gconf.c	/^static gint indent;$/;"	v	file:
indent	scripts/kconfig/mconf.c	/^static int indent;$/;"	v	file:
index	include/acpi/acrestyp.h	/^	uint8_t index;$/;"	m	struct:acpi_resource_source
index	include/acpi/actbl2.h	/^	uint8_t index;$/;"	m	struct:acpi_ibft_header
index	include/nautilus/hashtable.h	/^    uint_t index;$/;"	m	struct:nk_hashtable_iter
index	src/acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u16 index;$/;"	m	struct:acpi_pkg_state
index	src/acpi/acpica/aclocal.h	/^	u32 index;$/;"	m	struct:acpi_gpe_device_info
index	src/legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
index	src/legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
index	src/legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
index	src/legion_runtime/legion_logging.h	/^        unsigned index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
index	src/legion_runtime/legion_utilities.h	/^      off_t index;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
index	src/legion_runtime/legion_utilities.h	/^      off_t index;$/;"	m	class:LegionRuntime::HighLevel::Serializer
index	src/legion_runtime/lowlevel_impl.h	/^      IDType index(void) const { return (value & ((((IDType)1) << INDEX_BITS) - 1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
index	src/legion_runtime/region_tree.h	/^      const unsigned index;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
index	src/legion_runtime/shared_lowlevel.cc	/^	const EventIndex index;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
index	src/legion_runtime/shared_lowlevel.cc	/^	const int index;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
index	src/legion_runtime/shared_lowlevel.cc	/^	const int index;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
index	src/legion_runtime/shared_lowlevel.cc	/^	int index;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
index	src/legion_runtime/utilities.h	/^      int index;$/;"	m	class:LegionRuntime::Logger::Category
index	src/nautilus/printk.c	/^	unsigned int index;$/;"	m	struct:printk_state	file:
index2addr	src/lua_src/lapi.c	/^static TValue *index2addr (lua_State *L, int idx) {$/;"	f	file:
indexFor	src/nautilus/hashtable.c	/^indexFor (uint_t table_length, uint_t hash_value) $/;"	f	file:
indexSpaceID	src/test/hpcg/vector.h	/^    id_t indexSpaceID;$/;"	m	struct:lgncg::Vector
index_complete	src/legion_runtime/legion_tasks.h	/^      Event index_complete;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
index_component	src/legion_runtime/legion_logging.h	/^        unsigned index_component;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
index_deleted	src/legion_runtime/legion_tasks.h	/^      std::vector<bool> index_deleted;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
index_domain	src/legion_runtime/legion.h	/^      Domain                              index_domain;$/;"	m	class:LegionRuntime::HighLevel::Task
index_h	src/legion_runtime/lowlevel_impl.h	/^      IDType index_h(void) const { return ((value >> INDEX_L_BITS) & ((((IDType)1) << INDEX_H_BITS)-1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
index_handle	src/legion_runtime/legion_logging.h	/^        IndexSpace index_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
index_handle	src/legion_runtime/legion_logging.h	/^        IndexSpace index_handle;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
index_id	src/legion_runtime/legion_logging.h	/^        UniqueID index_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSlice
index_l	src/legion_runtime/lowlevel_impl.h	/^      IDType index_l(void) const { return (value & ((((IDType)1) << INDEX_L_BITS) - 1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
index_nodes	src/legion_runtime/region_tree.h	/^      std::map<IndexSpace,IndexSpaceNode*>     index_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
index_of_thread_str	src/acpi/acpica/aclocal.h	/^	char index_of_thread_str[11];$/;"	m	struct:acpi_db_method_info
index_owner	src/legion_runtime/legion_tasks.h	/^      IndexTask *index_owner;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
index_part	src/legion_runtime/legion_ops.h	/^      IndexPartition index_part;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
index_partition	src/legion_runtime/legion.h	/^      IndexPartition index_partition;$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
index_parts	src/legion_runtime/region_tree.h	/^      std::map<IndexPartition,IndexPartNode*>  index_parts;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
index_point	src/legion_runtime/legion.h	/^      DomainPoint                         index_point;$/;"	m	class:LegionRuntime::HighLevel::Task
index_requirements	src/legion_runtime/legion.h	/^      std::vector<IndexSpaceRequirement> index_requirements;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
index_requirements	src/legion_runtime/legion.h	/^      std::vector<IndexSpaceRequirement> index_requirements;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
index_space	src/legion_runtime/legion.h	/^        bool index_space; \/**< supports index tasks*\/$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
index_space	src/legion_runtime/legion.h	/^      IndexSpace index_space;$/;"	m	class:LegionRuntime::HighLevel::IndexAllocator
index_space	src/legion_runtime/legion.h	/^      IndexSpace index_space;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
index_space	src/legion_runtime/legion_ops.h	/^      IndexSpace index_space;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
index_space_task	src/test/index_tasks.cc	/^int index_space_task(const Task *task,$/;"	f
index_spaces	src/legion_runtime/lowlevel_impl.h	/^      DynamicTable<IndexSpaceTableAllocator> index_spaces;$/;"	m	struct:Node
index_task	src/legion_runtime/legion_logging.h	/^        bool index_task;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
index_task_lock	src/legion_runtime/runtime.h	/^      Reservation index_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
index_tasks	src/legion_runtime/legion.h	/^      std::vector<IndexLauncher> index_tasks;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
index_tasks	src/legion_runtime/legion_ops.h	/^      std::vector<IndexTask*>             index_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
index_triggered	src/legion_runtime/legion_ops.h	/^      std::vector<bool>                   index_triggered;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
indexes	src/legion_runtime/legion.h	/^      std::vector<IndexSpaceRequirement>  indexes;$/;"	m	class:LegionRuntime::HighLevel::Task
indirect_domain	src/legion_runtime/legion_logging.h	/^        Domain indirect_domain;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
indiv_tasks	src/legion_runtime/legion_ops.h	/^      std::vector<IndividualTask*>        indiv_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
indiv_triggered	src/legion_runtime/legion_ops.h	/^      std::vector<bool>                   indiv_triggered;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
individual_task_lock	src/legion_runtime/runtime.h	/^      Reservation individual_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
info	include/acpi/actbl2.h	/^	uint16_t info;		\/* MSI number and unit ID *\/$/;"	m	struct:acpi_ivrs_hardware
info	include/acpi/actbl2.h	/^	uint32_t info;		\/* Common virtualization info *\/$/;"	m	struct:acpi_table_ivrs
info	include/lua/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon16
info	src/acpi/acpica/aclocal.h	/^	struct acpi_name_info info;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_name_info
info	src/legion_runtime/region_tree.h	/^      MappableInfo *const info;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
info	src/legion_runtime/region_tree.h	/^      MappableInfo *const info;$/;"	m	class:LegionRuntime::HighLevel::PremapTraverser
info	src/legion_runtime/region_tree.h	/^      MappableInfo *const info;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
info	src/legion_runtime/utilities.h	/^      inline void info(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
info_size	include/acpi/actypes.h	/^	uint32_t info_size;		\/* Size of info, including ID strings *\/$/;"	m	struct:acpi_device_info
init	scripts/kconfig/qconf.cc	/^void ConfigItem::init(void)$/;"	f	class:ConfigItem
init	src/arch/k1om/init.c	/^init (unsigned long mbd, unsigned long magic) $/;"	f
init	src/arch/x64/init.c	/^init (unsigned long mbd,$/;"	f
init	src/legion_runtime/lowlevel.cc	/^    void ElementMask::init(int _first_element, int _num_elements, Memory _memory, off_t _offset)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
init	src/legion_runtime/lowlevel.cc	/^    void Event::Impl::init(Event _me, unsigned _init_owner)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
init	src/legion_runtime/lowlevel.cc	/^    void IndexSpace::Impl::init(IndexSpace _me, IndexSpace _parent,$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
init	src/legion_runtime/lowlevel.cc	/^    void IndexSpace::Impl::init(IndexSpace _me, unsigned _init_owner)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
init	src/legion_runtime/lowlevel.cc	/^    void ProcessorGroup::init(Processor _me, int _owner)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
init	src/legion_runtime/lowlevel.cc	/^    void Reservation::Impl::init(Reservation _me, unsigned _init_owner,$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
init	src/legion_runtime/lowlevel.h	/^      virtual void init(void *ptr, size_t count) const$/;"	f	class:LegionRuntime::LowLevel::ReductionOp
init	src/legion_runtime/utilities.h	/^    static void init(int argc, const char *argv[])$/;"	f	class:LegionRuntime::Logger
init	src/legion_runtime/utilities.h	/^    void init(void) {$/;"	f	class:LegionRuntime::ImmovableLock
init	src/lua_src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon141	file:
init	src/test/hpcg/cg.h	/^init(void)$/;"	f	namespace:lgncg::cg
init	src/test/hpcg/hpcg-main.cc	/^init(void)$/;"	f	namespace:__anon117
init	src/test/hpcg/hpcg-problem.cc	/^Problem::init(void)$/;"	f	class:Problem
init	src/test/hpcg/lgncg.cc	/^init(void)$/;"	f	namespace:lgncg
init_ap_area	src/nautilus/smp.c	/^init_ap_area (struct ap_init_area * ap_area, $/;"	f	file:
init_args	src/acpi/acpica/aclocal.h	/^	char init_args;$/;"	m	struct:acpi_db_method_info
init_bar	src/legion_runtime/shared_lowlevel.cc	/^        nk_barrier_t *init_bar;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
init_colors	xeon_phi/linux_usr/phi_console.c	/^init_colors (void)$/;"	f	file:
init_count	include/nautilus/barrier.h	/^    unsigned init_count;$/;"	m	struct:nk_barrier
init_deferred_frees	src/legion_runtime/activemsg.cc	/^void init_deferred_frees(void)$/;"	f
init_dialog	scripts/kconfig/lxdialog/util.c	/^void init_dialog(void)$/;"	f
init_done	src/legion_runtime/lowlevel.cc	/^      bool init_done, shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
init_endpoints	src/legion_runtime/activemsg.cc	/^void init_endpoints(gasnet_handlerentry_t *handlers, int hcount,$/;"	f
init_exp	src/lua_src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_field_task	src/test/custom_mapper.cc	/^void init_field_task(const Task *task,$/;"	f
init_field_task	src/test/multiple_partitions.cc	/^void init_field_task(const Task *task,$/;"	f
init_field_task	src/test/partitioning.cc	/^void init_field_task(const Task *task,$/;"	f
init_field_task	src/test/privileges.cc	/^void init_field_task(const Task *task,$/;"	f
init_global_state	src/nautilus/scheduler.c	/^static int init_global_state()$/;"	f	file:
init_left_tree	scripts/kconfig/gconf.c	/^void init_left_tree(void)$/;"	f
init_local_state	src/nautilus/scheduler.c	/^static struct nk_sched_percpu_state *init_local_state(struct nk_sched_config *cfg)$/;"	f	file:
init_main_window	scripts/kconfig/gconf.c	/^void init_main_window(const gchar * glade_file)$/;"	f
init_registry	src/lua_src/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
init_right_tree	scripts/kconfig/gconf.c	/^void init_right_tree(void)$/;"	f
init_time	src/legion_runtime/legion.cc	/^      unsigned long long init_time;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
init_time	src/legion_runtime/legion_profiling.h	/^        unsigned long long init_time;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
init_time	src/legion_runtime/runtime.cc	/^    \/*static*\/ const long long Runtime::init_time = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
init_time	src/legion_runtime/runtime.h	/^      static const long long init_time;$/;"	m	class:LegionRuntime::HighLevel::Runtime
init_trace	src/legion_runtime/utilities.h	/^      static void init_trace(size_t block_size, double exp_arrv_rate)$/;"	f	class:LegionRuntime::LowLevel::Tracer
init_tree_model	scripts/kconfig/gconf.c	/^void init_tree_model(void)$/;"	f
init_vectors_all_task	src/test/saxpy_array.cc	/^void init_vectors_all_task(const void *args, size_t arglen,$/;"	f
init_vectors_task	src/test/saxpy_array.cc	/^void init_vectors_task(const void *global_args, size_t global_arglen,$/;"	f
init_wsize	scripts/kconfig/mconf.c	/^static void init_wsize(void)$/;"	f	file:
init_xcall	src/nautilus/smp.c	/^init_xcall (struct nk_xcall * x, void * arg, nk_xcall_func_t fun)$/;"	f	file:
initb	include/lua/lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer
initial_placement	src/nautilus/scheduler.c	/^static int initial_placement(nk_thread_t *t)$/;"	f	file:
initial_tables	src/acpi/tables.c	/^static struct acpi_table_desc initial_tables[ACPI_MAX_TABLES];$/;"	v	typeref:struct:acpi_table_desc	file:
initialize	src/legion_runtime/legion_ops.cc	/^    FutureMap MustEpochOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
initialize	src/legion_runtime/legion_ops.cc	/^    PhysicalRegion MapOp::initialize(SingleTask *ctx, $/;"	f	class:LegionRuntime::HighLevel::MapOp
initialize	src/legion_runtime/legion_ops.cc	/^    PhysicalRegion MapOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::MapOp
initialize	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::initialize(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::AcquireOp
initialize	src/legion_runtime/legion_ops.cc	/^    void AndPredOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
initialize	src/legion_runtime/legion_ops.cc	/^    void CloseOp::initialize(SingleTask *ctx, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::CloseOp
initialize	src/legion_runtime/legion_ops.cc	/^    void CopyOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::CopyOp
initialize	src/legion_runtime/legion_ops.cc	/^    void FenceOp::initialize(SingleTask *ctx, bool mapping)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
initialize	src/legion_runtime/legion_ops.cc	/^    void FuturePredOp::initialize(SingleTask *ctx, Future f)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
initialize	src/legion_runtime/legion_ops.cc	/^    void MapOp::initialize(SingleTask *ctx, const PhysicalRegion &reg)$/;"	f	class:LegionRuntime::HighLevel::MapOp
initialize	src/legion_runtime/legion_ops.cc	/^    void NotPredOp::initialize(SingleTask *ctx, const Predicate &p)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
initialize	src/legion_runtime/legion_ops.cc	/^    void OrPredOp::initialize(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
initialize	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::initialize(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
initialize	src/legion_runtime/region_tree.cc	/^    void RegionTreePath::initialize(unsigned min, unsigned max)$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
initialize_base_task	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::initialize_base_task(SingleTask *ctx, bool track, $/;"	f	class:LegionRuntime::HighLevel::TaskOp
initialize_capture	src/legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::initialize_capture(SingleTask *ctx)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
initialize_complete	src/legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::initialize_complete(SingleTask *ctx)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
initialize_field_deletion	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_field_deletion(SingleTask *ctx, $/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_field_deletions	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_field_deletions(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_field_space_deletion	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_field_space_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_index_part_deletion	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_index_part_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_index_space_deletion	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_index_space_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_inline_task	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::initialize_inline_task(SingleTask *enc, TaskOp *clone)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
initialize_legion_logging	src/legion_runtime/legion_logging.h	/^      static void initialize_legion_logging(AddressSpaceID sid,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
initialize_logical_context	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_logical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_logical_partition_deletion	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_logical_partition_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_logical_region_deletion	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::initialize_logical_region_deletion(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
initialize_logical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::initialize_logical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
initialize_mapping_fields	src/legion_runtime/legion.cc	/^    void RegionRequirement::initialize_mapping_fields(void)$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
initialize_mapping_path	src/legion_runtime/legion_ops.cc	/^    void Operation::initialize_mapping_path(RegionTreePath &path,$/;"	f	class:LegionRuntime::HighLevel::Operation
initialize_mapping_paths	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::initialize_mapping_paths(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
initialize_memory	src/legion_runtime/legion_profiling.h	/^      static inline void initialize_memory(Memory mem, Memory::Kind kind)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
initialize_operation	src/legion_runtime/legion_ops.cc	/^    void Operation::initialize_operation(SingleTask *ctx, bool track, $/;"	f	class:LegionRuntime::HighLevel::Operation
initialize_path	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexPartition child, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexPartition child,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexSpace child, IndexSpace parent,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexSpace child,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_path	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::initialize_path(IndexTreeNode *child,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_paths	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::initialize_paths(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialize_paths	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::initialize_paths(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
initialize_physical_context	src/legion_runtime/region_tree.cc	/^    InstanceRef RegionTreeForest::initialize_physical_context($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
initialize_physical_contexts	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::initialize_physical_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
initialize_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::initialize_physical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
initialize_point	src/legion_runtime/legion_tasks.cc	/^    void PointTask::initialize_point(SliceTask *owner)$/;"	f	class:LegionRuntime::HighLevel::PointTask
initialize_predicate	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::initialize_predicate(const Future &pred_future,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialize_privilege_path	src/legion_runtime/legion_ops.cc	/^    void Operation::initialize_privilege_path(RegionTreePath &path,$/;"	f	class:LegionRuntime::HighLevel::Operation
initialize_processor	src/legion_runtime/legion_profiling.h	/^      static inline void initialize_processor(Processor proc, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
initialize_reduction_state	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::initialize_reduction_state(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
initialize_region_tree_contexts	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::initialize_region_tree_contexts($/;"	f	class:LegionRuntime::HighLevel::SingleTask
initialize_remote	src/legion_runtime/legion_tasks.cc	/^    void RemoteTask::initialize_remote(UniqueID uid)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
initialize_runtime	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::initialize_runtime($/;"	f	class:LegionRuntime::HighLevel::Runtime
initialize_speculation	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::initialize_speculation(SingleTask *ctx, bool track,$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
initialize_state	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::initialize_state(size_t stacksize)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
initialize_task	src/legion_runtime/legion_tasks.cc	/^    Future IndexTask::initialize_task(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialize_task	src/legion_runtime/legion_tasks.cc	/^    Future IndividualTask::initialize_task(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
initialize_task	src/legion_runtime/legion_tasks.cc	/^    FutureMap IndexTask::initialize_task(SingleTask *ctx,$/;"	f	class:LegionRuntime::HighLevel::IndexTask
initialized	src/acpi/acpica/aclocal.h	/^	u8 initialized;         \/* TRUE if this block is initialized *\/$/;"	m	struct:acpi_gpe_block_info
initialized	src/legion_runtime/lowlevel_gpu.cc	/^      bool initialized;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
initiate_runtime_shutdown	src/legion_runtime/runtime.cc	/^    void Runtime::initiate_runtime_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
initiating_node	src/legion_runtime/lowlevel.cc	/^      int initiating_node;$/;"	m	struct:LegionRuntime::LowLevel::MachineShutdownRequestArgs	file:
initiator_offset	include/acpi/actbl2.h	/^	uint16_t initiator_offset;$/;"	m	struct:acpi_ibft_control
inl	include/nautilus/cpu.h	/^inl (uint16_t port)$/;"	f
inline	include/acpi/platform/acgcc.h	68;"	d
inline_child_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::inline_child_task(TaskOp *child)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
inline_regions	src/legion_runtime/legion_tasks.h	/^                                                   inline_regions;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
inline_task	src/legion_runtime/legion.h	/^      bool                                inline_task;$/;"	m	class:LegionRuntime::HighLevel::Task
inline_task_lock	src/legion_runtime/runtime.h	/^      Reservation inline_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
inline_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::inline_task_wrapper(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
inline_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::inline_task_wrapper(const Task *task,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
inline_tasks	src/legion_runtime/legion_tasks.h	/^      LegionContainer<InlineTask*,TASK_INLINE_ALLOC>::deque inline_tasks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
inline_udt_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::inline_udt_task_wrapper(const Task *task,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
inner	src/legion_runtime/legion.h	/^        bool inner;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
inner	src/legion_runtime/legion.h	/^      bool inner;$/;"	m	struct:LegionRuntime::HighLevel::TaskConfigOptions
inner_cond	src/legion_runtime/utilities.h	/^      pthread_cond_t inner_cond;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
inner_lock	src/legion_runtime/utilities.h	/^      pthread_mutex_t inner_lock;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
inode	src/fs/ext2/ext2fs.h	/^	__u32	inode;			\/* Inode number *\/$/;"	m	struct:ext2_dir_entry
inode	src/fs/ext2/ext2fs.h	/^	__u32	inode;			\/* Inode number *\/$/;"	m	struct:ext2_dir_entry_2
inode_has_mode	src/fs/ext2/ext2.c	/^static int inode_has_mode(struct ext2_inode *inode, int mode) $/;"	f	file:
inodes_per_group	src/fs/ext2/ext2_access.c	138;"	d	file:
input	include/nautilus/thread.h	/^    void * input;$/;"	m	struct:nk_thread
input	scripts/kconfig/zconf.y	/^input: stmt_list;$/;"	l
input_buf	scripts/kconfig/mconf.c	/^static char input_buf[4096];$/;"	v	file:
input_mode	scripts/kconfig/conf.c	/^} input_mode = ask_all;$/;"	v	typeref:enum:__anon2
inputbox_attr	scripts/kconfig/lxdialog/dialog.h	103;"	d
inputbox_border_attr	scripts/kconfig/lxdialog/dialog.h	104;"	d
inputbox_instructions_hex	scripts/kconfig/mconf.c	/^inputbox_instructions_hex[] = N_($/;"	v	file:
inputbox_instructions_int	scripts/kconfig/mconf.c	/^inputbox_instructions_int[] = N_($/;"	v	file:
inputbox_instructions_string	scripts/kconfig/mconf.c	/^inputbox_instructions_string[] = N_($/;"	v	file:
insert	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::insert(const UT &user, bool recurse\/*=true*\/)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
insert	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::insert($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
insert	src/legion_runtime/interval_tree.h	/^    void IntervalTree<T,DISCRETE>::insert(T left, T right)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
insert	src/legion_runtime/lowlevel_impl.h	/^    void JobQueue<JOBTYPE>::insert(JOBTYPE *job, int priority)$/;"	f	class:LegionRuntime::LowLevel::JobQueue
insert_filtered_users	src/legion_runtime/region_tree.cc	/^    void PhysicalDepAnalyzer<FILTER>::insert_filtered_users($/;"	f	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
insert_local	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::insert_local($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
insert_real_symbols_in_table	scripts/kallsyms.c	/^static void insert_real_symbols_in_table(void)$/;"	f	file:
insert_recurse	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::insert_recurse(const UT &user)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
insert_single	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::insert_single(unsigned index, const UT &user)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
inside	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::inside($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
inside_mapper_call	src/legion_runtime/runtime.h	/^      std::vector<bool> inside_mapper_call;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
inspectstat	src/lua_src/lauxlib.c	240;"	d	file:
inspectstat	src/lua_src/lauxlib.c	246;"	d	file:
inst	src/legion_runtime/lowlevel.h	/^	RegionInstance inst;$/;"	m	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
inst_id	src/legion_runtime/legion_profiling.h	/^        unsigned inst_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
inst_lock	src/legion_runtime/region_tree.h	/^      Reservation inst_lock;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
inst_lock_event	src/legion_runtime/lowlevel_dma.cc	/^      Event inst_lock_event;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
inst_lock_needed	src/legion_runtime/lowlevel_dma.cc	/^      bool inst_lock_needed;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
inst_offset	src/legion_runtime/lowlevel.cc	/^      off_t inst_offset;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceResp	file:
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
inst_pair	src/legion_runtime/lowlevel_dma.cc	/^      virtual InstPairCopier *inst_pair(RegionInstance src_inst, RegionInstance dst_inst,$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
instack	include/lua/lobject.h	/^  lu_byte instack;  \/* whether it is in stack *\/$/;"	m	struct:Upvaldesc
instance	include/acpi/actbl2.h	/^	uint8_t instance;$/;"	m	struct:acpi_asf_alert_data
instance	src/legion_runtime/legion_logging.h	/^        PhysicalInstance instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
instance	src/legion_runtime/legion_logging.h	/^        PhysicalInstance instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
instance	src/legion_runtime/region_tree.h	/^      PhysicalInstance instance;$/;"	m	class:LegionRuntime::HighLevel::PhysicalManager
instance_fields	src/legion_runtime/legion.h	/^      std::vector<FieldID> instance_fields; \/**< physical instance fields*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
instance_lock	src/legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         instance_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
instances	src/legion_runtime/lowlevel_impl.h	/^      std::vector<RegionInstance::Impl *> instances;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
instances	src/legion_runtime/shared_lowlevel.cc	/^	std::set<RegionInstance> instances;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
instances	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<RegionInstance::Impl*> instances;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
instr_active	src/nautilus/instrument.c	/^static uint8_t instr_active = 0;$/;"	v	file:
instr_calibrate	src/nautilus/instrument.c	/^instr_calibrate (void)$/;"	f	file:
instr_data	include/nautilus/smp.h	/^    struct nk_instr_data * instr_data;$/;"	m	struct:cpu	typeref:struct:cpu::nk_instr_data
instr_end_count	src/nautilus/instrument.c	/^static uint64_t instr_end_count = 0;$/;"	v	file:
instr_eq_fn	src/nautilus/instrument.c	/^instr_eq_fn (addr_t key1, addr_t key2) {$/;"	f	file:
instr_hash_fn	src/nautilus/instrument.c	/^instr_hash_fn(addr_t key) {$/;"	f	file:
instr_start_count	src/nautilus/instrument.c	/^static uint64_t instr_start_count = 0;$/;"	v	file:
instruction	include/acpi/actbl1.h	/^	uint8_t instruction;$/;"	m	struct:acpi_whea_header
instruction	include/acpi/actbl2.h	/^	uint8_t instruction;$/;"	m	struct:acpi_wdat_entry
int80_end	src/test/benchmark.c	/^static uint64_t int80_end = 0;$/;"	v	file:
int80_handler	src/test/benchmark.c	/^int80_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
int_curr_symbol	include/lua/llocale.h	/^    char *int_curr_symbol;    $/;"	m	struct:lconv
int_curr_symbol	src/nautilus/libccompat.c	/^    char *int_curr_symbol;$/;"	m	struct:lconv	file:
int_enable	include/nautilus/pmc.h	/^            uint8_t int_enable    : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
int_flags	include/nautilus/acpi.h	/^    uint16_t int_flags;$/;"	m	struct:mp_table_entry_ioint
int_flags	include/nautilus/acpi.h	/^    uint16_t int_flags;$/;"	m	struct:mp_table_entry_lint
int_frac_digits	include/lua/llocale.h	/^    char int_frac_digits;     $/;"	m	struct:lconv
int_frac_digits	src/nautilus/libccompat.c	/^    char int_frac_digits;$/;"	m	struct:lconv	file:
int_info	include/nautilus/nautilus.h	/^    struct nk_int_info int_info;$/;"	m	struct:sys_info	typeref:struct:sys_info::nk_int_info
int_list	include/nautilus/nautilus.h	/^    struct list_head int_list; \/* list of interrupts from MP spec *\/$/;"	m	struct:nk_int_info	typeref:struct:nk_int_info::list_head
int_n_cs_precedes	include/lua/llocale.h	/^    char int_n_cs_precedes;   $/;"	m	struct:lconv
int_n_cs_precedes	src/nautilus/libccompat.c	/^    char int_n_cs_precedes;$/;"	m	struct:lconv	file:
int_n_sep_by_space	include/lua/llocale.h	/^    char int_n_sep_by_space;  $/;"	m	struct:lconv
int_n_sep_by_space	src/nautilus/libccompat.c	/^    char int_n_sep_by_space;$/;"	m	struct:lconv	file:
int_n_sign_posn	include/lua/llocale.h	/^    char int_n_sign_posn;   $/;"	m	struct:lconv
int_n_sign_posn	src/nautilus/libccompat.c	/^    char int_n_sign_posn;$/;"	m	struct:lconv	file:
int_p_cs_precedes	include/lua/llocale.h	/^    char int_p_cs_precedes;   $/;"	m	struct:lconv
int_p_cs_precedes	src/nautilus/libccompat.c	/^    char int_p_cs_precedes;$/;"	m	struct:lconv	file:
int_p_sep_by_space	include/lua/llocale.h	/^    char int_p_sep_by_space;  $/;"	m	struct:lconv
int_p_sep_by_space	src/nautilus/libccompat.c	/^    char int_p_sep_by_space;$/;"	m	struct:lconv	file:
int_p_sign_posn	include/lua/llocale.h	/^    char int_p_sign_posn;     $/;"	m	struct:lconv
int_p_sign_posn	src/nautilus/libccompat.c	/^    char int_p_sign_posn;$/;"	m	struct:lconv	file:
int_pol_t	include/nautilus/irq.h	/^typedef enum { INT_POL_BUS, INT_POL_ACTHI, INT_POL_RSVD, INT_POL_ACTLO } int_pol_t;$/;"	t	typeref:enum:__anon33
int_route	include/dev/hpet.h	/^    uint8_t int_route;        \/* which IOAPIC pin *am* I mapped to? *\/$/;"	m	struct:hpet_comparator
int_route_cap	include/dev/hpet.h	/^    uint32_t int_route_cap;   \/* which IOAPIC pins can I be mapped to? *\/$/;"	m	struct:hpet_comparator
int_trig_t	include/nautilus/irq.h	/^typedef enum { INT_TRIG_BUS, INT_TRIG_EDGE, INT_TRIG_RSVD, INT_TRIG_LEVEL } int_trig_t;$/;"	t	typeref:enum:__anon34
int_type	include/dev/hpet.h	/^    hpet_cmp_int_type_t int_type; \/* edge or level? *\/$/;"	m	struct:hpet_comparator
int_type	include/nautilus/acpi.h	/^    uint8_t  int_type;$/;"	m	struct:mp_table_entry_ioint
int_type	include/nautilus/acpi.h	/^    uint8_t  int_type;$/;"	m	struct:mp_table_entry_lint
int_type_t	include/nautilus/irq.h	/^typedef enum { INT_TYPE_INT, INT_TYPE_NMI, INT_TYPE_SMI, INT_TYPE_EXT } int_type_t;$/;"	t	typeref:enum:__anon32
integer	include/acpi/actbl.h	/^	uint32_t integer;$/;"	m	union:acpi_name_union
integer	include/acpi/actypes.h	/^	} integer;$/;"	m	union:acpi_object	typeref:struct:acpi_object::__anon20
integer	src/acpi/acpica/aclocal.h	/^	u64 integer;		\/* Integer constant (Up to 64 bits) *\/$/;"	m	union:acpi_parse_value
intel_fpu_init	src/nautilus/fpu.c	/^intel_fpu_init (struct naut_info * naut)$/;"	f	file:
intel_get_topo_secondary	src/nautilus/numa.c	/^intel_get_topo_secondary (struct nk_topo_params * tp)$/;"	f	file:
intel_probe_with_leafb	src/nautilus/numa.c	/^intel_probe_with_leafb (struct nk_topo_params *tp)$/;"	f	file:
intel_probe_with_leaves14	src/nautilus/numa.c	/^intel_probe_with_leaves14 (struct nk_topo_params * tp)$/;"	f	file:
inter	src/dev/ata.c	/^static struct nk_block_dev_int inter = $/;"	v	typeref:struct:nk_block_dev_int	file:
inter	src/dev/ramdisk.c	/^static struct nk_block_dev_int inter = $/;"	v	typeref:struct:nk_block_dev_int	file:
interface	include/nautilus/dev.h	/^    struct nk_dev_int *interface;$/;"	m	struct:nk_dev	typeref:struct:nk_dev::nk_dev_int
interface	include/nautilus/fs.h	/^    struct nk_fs_int *interface;$/;"	m	struct:nk_fs	typeref:struct:nk_fs::nk_fs_int
interface_type	include/acpi/actbl2.h	/^	uint8_t interface_type;	\/* 0=full 16550, 1=subset of 16550 *\/$/;"	m	struct:acpi_table_spcr
interface_type	include/acpi/actbl2.h	/^	uint8_t interface_type;$/;"	m	struct:acpi_table_mchi
interface_type	include/acpi/actbl2.h	/^	uint8_t interface_type;$/;"	m	struct:acpi_table_spmi
internal	src/legion_runtime/accessor.h	/^	  void *internal;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
internal	src/legion_runtime/lowlevel_gpu.h	/^      GPUProcessor::Internal *internal;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
internal_data	src/legion_runtime/lowlevel.h	/^      void *internal_data;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
internal_name	src/acpi/acpica/aclocal.h	/^	char *internal_name;$/;"	m	struct:acpi_namestring_info
internalfunctions	scripts/basic/docproc.c	/^FILEONLY *internalfunctions;$/;"	v
internshrstr	src/lua_src/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
interrupt	include/acpi/actbl2.h	/^	uint32_t interrupt;$/;"	m	struct:acpi_table_spcr
interrupt	include/acpi/actbl2.h	/^	uint32_t interrupt;$/;"	m	struct:acpi_table_spmi
interrupt	src/nautilus/scheduler.c	/^static void interrupt(void *in, void **out)$/;"	f	file:
interrupt_count	include/acpi/acrestyp.h	/^	uint8_t interrupt_count;$/;"	m	struct:acpi_resource_extended_irq
interrupt_count	include/acpi/acrestyp.h	/^	uint8_t interrupt_count;$/;"	m	struct:acpi_resource_irq
interrupt_number	src/acpi/acpica/aclocal.h	/^	u32 interrupt_number;	\/* System interrupt number *\/$/;"	m	struct:acpi_gpe_xrupt_info
interrupt_priority_class	include/nautilus/scheduler.h	/^    uint8_t                    interrupt_priority_class; $/;"	m	struct:nk_sched_constraints
interrupt_type	include/acpi/actbl2.h	/^	uint8_t interrupt_type;$/;"	m	struct:acpi_table_mchi
interrupt_type	include/acpi/actbl2.h	/^	uint8_t interrupt_type;$/;"	m	struct:acpi_table_spcr
interrupt_type	include/acpi/actbl2.h	/^	uint8_t interrupt_type;$/;"	m	struct:acpi_table_spmi
interrupts	include/acpi/acrestyp.h	/^	uint32_t interrupts[1];$/;"	m	struct:acpi_resource_extended_irq
interrupts	include/acpi/acrestyp.h	/^	uint8_t interrupts[1];$/;"	m	struct:acpi_resource_irq
intersection	src/legion_runtime/arrays.h	/^      Rect<DIM> intersection(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
intersections	src/legion_runtime/region_tree.h	/^        std::set<Domain> intersections;$/;"	m	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
intersections	src/legion_runtime/region_tree.h	/^        std::set<Domain> intersections;$/;"	m	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
intersections	src/legion_runtime/region_tree.h	/^      std::map<IndexTreeNode*,IntersectInfo> intersections;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
intersects	src/legion_runtime/interval_tree.h	/^    bool IntervalTree<T,DISCRETE>::intersects(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
intersects	src/legion_runtime/interval_tree.h	/^    bool IntervalTreeNode<T,DISCRETE>::intersects(T left, T right) const$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
intersects	src/legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::intersects(const Segment<T> &other) const$/;"	f	class:LegionRuntime::HighLevel::Segment
intersects_with	src/legion_runtime/region_tree.cc	/^    bool CompositeNode::intersects_with(RegionTreeNode *dst)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
intersects_with	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::intersects_with(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
intersects_with	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::intersects_with(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
intersects_with	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::intersects_with(IndexPartNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
intersects_with	src/legion_runtime/region_tree.cc	/^    bool IndexSpaceNode::intersects_with(IndexSpaceNode *other)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
intersects_with	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::intersects_with(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
intersects_with	src/legion_runtime/region_tree.cc	/^    bool RegionNode::intersects_with(RegionTreeNode *other)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
interval	include/acpi/actbl1.h	/^	uint32_t interval;		\/* Polling interval (msec) *\/$/;"	m	struct:acpi_cpep_polling
intfunc	scripts/basic/docproc.c	/^void intfunc(char * filename) {	docfunctions(filename, NOFUNCTION); }$/;"	f
inti_flags	include/acpi/actbl1.h	/^	uint16_t inti_flags;$/;"	m	struct:acpi_madt_interrupt_override
inti_flags	include/acpi/actbl1.h	/^	uint16_t inti_flags;$/;"	m	struct:acpi_madt_interrupt_source
inti_flags	include/acpi/actbl1.h	/^	uint16_t inti_flags;$/;"	m	struct:acpi_madt_local_apic_nmi
inti_flags	include/acpi/actbl1.h	/^	uint16_t inti_flags;$/;"	m	struct:acpi_madt_local_x2apic_nmi
inti_flags	include/acpi/actbl1.h	/^	uint16_t inti_flags;$/;"	m	struct:acpi_madt_nmi_source
intmax_t	src/nautilus/fmtout.c	/^typedef long intmax_t;$/;"	t	file:
intr_line	include/dev/pci.h	/^            uint8_t  intr_line;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
intr_line	include/dev/pci.h	/^            uint8_t  intr_line;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
intr_line	include/dev/pci.h	/^            uint8_t  intr_line;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
intr_pin	include/dev/pci.h	/^            uint8_t  intr_pin;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
intr_pin	include/dev/pci.h	/^            uint8_t  intr_pin;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
intr_pin	include/dev/pci.h	/^            uint8_t  intr_pin;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
intr_vec	include/dev/virtio_pci.h	/^  uint8_t   intr_vec;  \/\/ number we will see$/;"	m	struct:virtio_pci_dev
ints_as_breaks	src/arch/hrt/mwait.c	/^    uint8_t ints_as_breaks;$/;"	m	struct:mwait_info	file:
ints_as_breaks	src/arch/x64/mwait.c	/^    uint8_t ints_as_breaks;$/;"	m	struct:mwait_info	file:
inv	include/nautilus/pmc.h	/^            uint8_t inv           : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
invalid_mask	src/legion_runtime/region_tree.h	/^      const FieldMask invalid_mask;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
invalidate	src/legion_runtime/region_tree.h	/^      const bool invalidate;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
invalidate	src/legion_runtime/region_tree.h	/^      const bool invalidate;$/;"	m	class:LegionRuntime::HighLevel::StateSender
invalidateTMcache	include/lua/ltable.h	18;"	d
invalidate_instance_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_instance_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_logical_context	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::invalidate_logical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
invalidate_logical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_logical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_physical_context	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::invalidate_physical_context(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
invalidate_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_physical_state(ContextID ctx)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_physical_state(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_reduction_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::invalidate_reduction_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
invalidate_region_tree_contexts	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::invalidate_region_tree_contexts(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
invertjump	src/lua_src/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
invlpg	include/nautilus/cpu.h	/^invlpg (unsigned long addr)$/;"	f
invoke_mapper_failed_mapping	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_failed_mapping(Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_failed_mapping	src/legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_failed_mapping(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_get_tunable_value	src/legion_runtime/runtime.cc	/^    int ProcessorManager::invoke_mapper_get_tunable_value(TaskOp *task,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_handle_message	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_handle_message(MapperID map_id,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_handle_message	src/legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_handle_message(Processor target,MapperID map_id,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_copy	src/legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_copy(Copy *op)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_copy	src/legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_copy(Processor proc, Copy *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_inline	src/legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_inline(Inline *op)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_inline	src/legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_inline(Processor proc, Inline *op)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_must_epoch	src/legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_must_epoch($/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_must_epoch	src/legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_must_epoch(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_map_task	src/legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_map_task(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_map_task	src/legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_map_task(Processor proc, SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_notify_profiling	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_notify_profiling(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_notify_profiling	src/legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_notify_profiling(Processor proc, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_notify_result	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_notify_result(Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_notify_result	src/legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_notify_result(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_pre_map_task	src/legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_pre_map_task(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_pre_map_task	src/legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_pre_map_task(Processor proc, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_rank_copy_sources	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_rank_copy_sources(Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_rank_copy_sources	src/legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_rank_copy_sources(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_rank_copy_targets	src/legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_rank_copy_targets(Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_rank_copy_targets	src/legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_rank_copy_targets(Processor proc,$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_select_variant	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_select_variant(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_select_variant	src/legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_select_variant(Processor proc, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_set_task_options	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_set_task_options(TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_slice_domain	src/legion_runtime/runtime.cc	/^    void ProcessorManager::invoke_mapper_slice_domain(TaskOp *task,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_slice_domain	src/legion_runtime/runtime.cc	/^    void Runtime::invoke_mapper_slice_domain(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::Runtime
invoke_mapper_speculate	src/legion_runtime/runtime.cc	/^    bool ProcessorManager::invoke_mapper_speculate(Mappable *op, bool &value)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
invoke_mapper_speculate	src/legion_runtime/runtime.cc	/^    bool Runtime::invoke_mapper_speculate(Processor proc, $/;"	f	class:LegionRuntime::HighLevel::Runtime
invpcid	include/nautilus/cpuid.h	/^            uint8_t invpcid             : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
inw	include/nautilus/cpu.h	/^inw (uint16_t port)$/;"	f
io	include/acpi/acrestyp.h	/^	struct acpi_io_attribute io;$/;"	m	union:acpi_resource_attribute	typeref:struct:acpi_resource_attribute::acpi_io_attribute
io	include/acpi/acrestyp.h	/^	struct acpi_resource_io io;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_io
io_base	include/dev/pci.h	/^            uint8_t  io_base;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
io_base0	include/dev/pci.h	/^            uint32_t io_base0;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
io_base1	include/dev/pci.h	/^            uint32_t io_base1;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
io_base_upper	include/dev/pci.h	/^            uint16_t io_base_upper;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
io_close	src/lua_src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_decode	include/acpi/acrestyp.h	/^	uint8_t io_decode;$/;"	m	struct:acpi_resource_io
io_delay	include/nautilus/cpu.h	/^static inline void io_delay(void)$/;"	f
io_fclose	src/lua_src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	src/lua_src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_input	src/lua_src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_limit	include/dev/pci.h	/^            uint8_t  io_limit;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
io_limit0	include/dev/pci.h	/^            uint32_t io_limit0;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
io_limit1	include/dev/pci.h	/^            uint32_t io_limit1;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
io_limit_upper	include/dev/pci.h	/^            uint16_t io_limit_upper;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
io_lines	src/lua_src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	src/lua_src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	src/lua_src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	src/lua_src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	src/lua_src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	src/lua_src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	src/lua_src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	src/lua_src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_sapic_vector	include/acpi/actbl1.h	/^	uint8_t io_sapic_vector;	\/* Vector value for PMI interrupts *\/$/;"	m	struct:acpi_madt_interrupt_source
io_tmpfile	src/lua_src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	src/lua_src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	src/lua_src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
ioapic	include/dev/ioapic.h	/^struct ioapic {$/;"	s
ioapic	include/nautilus/acpi.h	/^        struct mp_table_entry_ioapic ioapic;$/;"	m	union:mp_table_entry::__anon35	typeref:struct:mp_table_entry::__anon35::mp_table_entry_ioapic
ioapic	include/nautilus/nautilus.h	/^    struct ioapic * ioapic;$/;"	m	struct:irq_mapping	typeref:struct:irq_mapping::ioapic
ioapic_assign_irq	src/dev/ioapic.c	/^ioapic_assign_irq (struct ioapic * ioapic,$/;"	f	file:
ioapic_dump	src/dev/ioapic.c	/^ioapic_dump (struct ioapic * ioapic)$/;"	f	file:
ioapic_get_id	src/dev/ioapic.c	/^ioapic_get_id (struct ioapic * ioapic)$/;"	f	file:
ioapic_get_max_entry	src/dev/ioapic.c	/^ioapic_get_max_entry (struct ioapic * ioapic)$/;"	f	file:
ioapic_get_version	src/dev/ioapic.c	/^ioapic_get_version (struct ioapic * ioapic)$/;"	f	file:
ioapic_init	src/dev/ioapic.c	/^ioapic_init (struct sys_info * sys)$/;"	f
ioapic_mask_irq	src/dev/ioapic.c	/^ioapic_mask_irq (struct ioapic * ioapic, uint8_t irq)$/;"	f
ioapic_read_irq_entry	src/dev/ioapic.c	/^ioapic_read_irq_entry (struct ioapic * ioapic, uint8_t irq)$/;"	f	file:
ioapic_read_reg	include/dev/ioapic.h	/^ioapic_read_reg (struct ioapic * ioapic,$/;"	f
ioapic_unmask_irq	src/dev/ioapic.c	/^ioapic_unmask_irq (struct ioapic * ioapic, uint8_t irq)$/;"	f
ioapic_write_irq_entry	src/dev/ioapic.c	/^ioapic_write_irq_entry (struct ioapic * ioapic, uint8_t irq, uint64_t val)$/;"	f	file:
ioapic_write_reg	include/dev/ioapic.h	/^ioapic_write_reg (struct ioapic * ioapic, $/;"	f
ioapics	include/nautilus/nautilus.h	/^    struct ioapic * ioapics[NAUT_CONFIG_MAX_IOAPICS];$/;"	m	struct:sys_info	typeref:struct:sys_info::ioapic
ioctl	src/nautilus/libccompat.c	/^int ioctl (int d, unsigned long request, ...)$/;"	f
iolib	src/lua_src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ioport_end	include/dev/virtio_pci.h	/^  uint16_t  ioport_end;  $/;"	m	struct:virtio_pci_dev
ioport_start	include/dev/virtio_pci.h	/^  uint16_t  ioport_start;$/;"	m	struct:virtio_pci_dev
iored_entry	include/dev/ioapic.h	/^struct iored_entry {$/;"	s
ios_org	scripts/kconfig/mconf.c	/^static struct termios ios_org;$/;"	v	typeref:struct:termios	file:
ip4_addr_string	src/nautilus/printk.c	/^static char *ip4_addr_string(char *buf, char *end, const uint8_t *addr,$/;"	f	file:
ip4_string	src/nautilus/printk.c	/^static char *ip4_string(char *p, const uint8_t *addr, bool_t leading_zeros)$/;"	f	file:
ip6_addr_string	src/nautilus/printk.c	/^static char *ip6_addr_string(char *buf, char *end, const uint8_t *addr,$/;"	f	file:
ip6_string	src/nautilus/printk.c	/^static char *ip6_string(char *p, const char *addr, const char *fmt)$/;"	f	file:
ip_address	include/acpi/actbl2.h	/^	uint8_t ip_address[16];$/;"	m	struct:acpi_ibft_nic
ipairsaux	src/lua_src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
ipart	src/test/saxpy_array.cc	/^  IndexPartition ipart;$/;"	m	struct:MainArgs	file:
ipi_broadcast	src/test/ipi.c	/^ipi_broadcast (ipi_exp_data_t * data)$/;"	f	file:
ipi_dst_type_t	include/test/ipi.h	/^} ipi_dst_type_t;$/;"	t	typeref:enum:__anon30
ipi_exp_cleanup	src/test/ipi.c	/^ipi_exp_cleanup (ipi_exp_data_t * data)$/;"	f	file:
ipi_exp_data	include/test/ipi.h	/^typedef struct ipi_exp_data {$/;"	s
ipi_exp_data_t	include/test/ipi.h	/^} ipi_exp_data_t;$/;"	t	typeref:struct:ipi_exp_data
ipi_exp_setup	src/test/ipi.c	/^ipi_exp_setup (ipi_exp_data_t * data)$/;"	f	file:
ipi_exp_type_t	include/test/ipi.h	/^} ipi_exp_type_t;$/;"	t	typeref:enum:__anon28
ipi_measure_broadcast_ata	src/test/ipi.c	/^ipi_measure_broadcast_ata (ipi_exp_data_t * data)$/;"	f	file:
ipi_measure_broadcast_ota	src/test/ipi.c	/^ipi_measure_broadcast_ota (ipi_exp_data_t * data)$/;"	f	file:
ipi_measure_pairwise_ata	src/test/ipi.c	/^ipi_measure_pairwise_ata (ipi_exp_data_t * data)$/;"	f	file:
ipi_measure_pairwise_ato	src/test/ipi.c	/^ipi_measure_pairwise_ato (ipi_exp_data_t * data)$/;"	f	file:
ipi_measure_pairwise_ota	src/test/ipi.c	/^ipi_measure_pairwise_ota (ipi_exp_data_t * data)$/;"	f	file:
ipi_measure_pairwise_oto	src/test/ipi.c	/^ipi_measure_pairwise_oto (ipi_exp_data_t * data)$/;"	f	file:
ipi_measurement_dispatch	src/test/ipi.c	/^ipi_measurement_dispatch (ipi_exp_data_t * data)$/;"	f	file:
ipi_oneway_end	src/test/ipi.c	/^static uint64_t ipi_oneway_end = 0;$/;"	v	file:
ipi_pairwise	src/test/ipi.c	/^ipi_pairwise (ipi_exp_data_t * data) $/;"	f	file:
ipi_print_parms	src/test/ipi.c	/^ipi_print_parms (ipi_exp_data_t * data) $/;"	f	file:
ipi_run_exps	src/test/ipi.c	/^ipi_run_exps (ipi_exp_data_t * data)$/;"	f
ipi_src_type_t	include/test/ipi.h	/^} ipi_src_type_t;$/;"	t	typeref:enum:__anon29
ipmi_register	include/acpi/actbl2.h	/^	struct acpi_generic_address ipmi_register;$/;"	m	struct:acpi_table_spmi	typeref:struct:acpi_table_spmi::acpi_generic_address
ipx	src/test/hpcg/geometry.h	/^    int64_t ipx;$/;"	m	struct:lgncg::Geometry
ipy	src/test/hpcg/geometry.h	/^    int64_t ipy;$/;"	m	struct:lgncg::Geometry
ipz	src/test/hpcg/geometry.h	/^    int64_t ipz;$/;"	m	struct:lgncg::Geometry
irq	include/acpi/acrestyp.h	/^	struct acpi_resource_irq irq;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_irq
irq	include/nautilus/sfi.h	/^    uint32_t irq; \/\/ IRQ number for this timer$/;"	m	struct:sfi_m_timer_entry
irq	include/nautilus/sfi.h	/^    uint32_t irq;$/;"	m	struct:sfi_m_rtc_entry
irq_data	include/nautilus/instrument.h	/^struct irq_data {$/;"	s
irq_disable_save	include/nautilus/irq.h	/^irq_disable_save (void)$/;"	f
irq_enable_restore	include/nautilus/irq.h	/^irq_enable_restore (uint8_t iflag)$/;"	f
irq_err	src/asm/excp_early.S	/^irq_err:$/;"	l
irq_err_str	src/asm/excp_early.S	/^irq_err_str:$/;"	l
irq_map	include/nautilus/nautilus.h	/^    struct irq_mapping irq_map[256];$/;"	m	struct:nk_int_info	typeref:struct:nk_int_info::irq_mapping
irq_mapping	include/nautilus/nautilus.h	/^struct irq_mapping {$/;"	s
irq_to_vec	src/nautilus/irq.c	/^irq_to_vec (uint8_t irq)$/;"	f
irqmap_set_ioapic	src/nautilus/irq.c	/^irqmap_set_ioapic (uint8_t irq, struct ioapic * ioapic)$/;"	f
irqs_enabled	src/nautilus/irq.c	/^irqs_enabled (void)$/;"	f
irqstat	include/nautilus/instrument.h	/^    struct irq_data irqstat;$/;"	m	struct:nk_instr_data	typeref:struct:nk_instr_data::irq_data
is	src/legion_runtime/lowlevel.cc	/^      IndexSpace is;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskDataArgs	file:
is	src/legion_runtime/lowlevel.cc	/^      IndexSpace is;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskRequestArgs	file:
is	src/legion_runtime/lowlevel_impl.h	/^	IndexSpace is;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
is	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::IndexSpace is;$/;"	m	struct:lgncg::Vector
isIndividual	src/legion_runtime/legion_logging.h	/^        bool isIndividual;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
isLfunction	include/lua/lobject.h	535;"	d
isLua	include/lua/lstate.h	106;"	d
is_arm_mapping_symbol	scripts/kallsyms.c	/^static inline int is_arm_mapping_symbol(const char *str)$/;"	f	file:
is_available	src/nautilus/mm/buddy.c	/^is_available (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
is_bsp	include/nautilus/acpi.h	/^   uint8_t  is_bsp      : 1;$/;"	m	struct:mp_table_entry_cpu
is_bsp	include/nautilus/smp.h	/^    uint8_t is_bsp;$/;"	m	struct:cpu
is_complete	src/legion_runtime/region_tree.cc	/^    bool IndexPartNode::is_complete(void)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
is_complete	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::is_complete(void)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
is_complete	src/legion_runtime/region_tree.cc	/^    bool RegionNode::is_complete(void)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
is_composite_view	src/legion_runtime/region_tree.cc	/^    bool CompositeView::is_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
is_composite_view	src/legion_runtime/region_tree.cc	/^    bool MaterializedView::is_composite_view(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
is_defined_config	scripts/basic/fixdep.c	/^int is_defined_config(const char * name, int len)$/;"	f
is_disjoint	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_disjoint(IndexPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_disjoint	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_disjoint(LogicalPartition handle)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_dominated	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_dominated(IndexSpace src, IndexSpace dst)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_empty	src/legion_runtime/legion.cc	/^    bool Future::is_empty(bool block \/*= true*\/)$/;"	f	class:LegionRuntime::HighLevel::Future
is_empty	src/legion_runtime/legion_utilities.h	/^    bool Fraction<T>::is_empty(void) const$/;"	f	class:LegionRuntime::HighLevel::Fraction
is_empty	src/legion_runtime/runtime.cc	/^    bool Future::Impl::is_empty(bool block)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
is_finished	src/legion_runtime/lowlevel_gpu.cc	/^      virtual bool is_finished(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
is_finished	src/legion_runtime/lowlevel_gpu.cc	/^    bool GPUTask::is_finished(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
is_fixed	src/legion_runtime/legion_trace.h	/^      inline bool is_fixed(void) const { return fixed; }$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
is_foldable	src/legion_runtime/lowlevel.h	/^      bool is_foldable;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
is_foldable	src/legion_runtime/region_tree.cc	/^    bool FoldReductionManager::is_foldable(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
is_foldable	src/legion_runtime/region_tree.cc	/^    bool ListReductionManager::is_foldable(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
is_id	src/legion_runtime/lowlevel.h	/^      IDType is_id;$/;"	m	class:LegionRuntime::LowLevel::Domain
is_identity	src/legion_runtime/legion_utilities.h	/^    inline bool BitPermutation<BITMASK,LOG2MAX>::is_identity(bool retest)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
is_idle	include/nautilus/thread.h	/^    uint8_t is_idle;$/;"	m	struct:nk_thread
is_idle_task_enabled	src/legion_runtime/lowlevel.cc	/^      virtual bool is_idle_task_enabled(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
is_idle_task_enabled	src/legion_runtime/lowlevel_impl.h	/^      virtual bool is_idle_task_enabled(void) { return(false); }$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
is_impl	src/legion_runtime/lowlevel.cc	/^      IndexSpace::Impl *is_impl;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl	file:
is_impl	src/legion_runtime/shared_lowlevel.cc	/^      IndexSpace::Impl *is_impl;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl	file:
is_index_partition_disjoint	src/legion_runtime/legion.cc	/^    bool HighLevelRuntime::is_index_partition_disjoint(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
is_index_partition_disjoint	src/legion_runtime/legion.cc	/^    bool Mapper::is_index_partition_disjoint(IndexPartition p) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
is_index_partition_disjoint	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::is_index_partition_disjoint(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
is_index_partition_disjoint	src/legion_runtime/runtime.cc	/^    bool Runtime::is_index_partition_disjoint(Context ctx, IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
is_index_partition_disjoint	src/legion_runtime/runtime.cc	/^    bool Runtime::is_index_partition_disjoint(IndexPartition p)$/;"	f	class:LegionRuntime::HighLevel::Runtime
is_index_space	src/legion_runtime/legion.h	/^      bool                                is_index_space;$/;"	m	class:LegionRuntime::HighLevel::Task
is_inner	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::is_inner(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
is_intr	src/nautilus/scheduler.c	/^    int      is_intr;      \/\/ this is an interrupt thread$/;"	m	struct:nk_sched_thread_state	file:
is_leaf	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::is_leaf(void) const$/;"	f	class:LegionRuntime::HighLevel::SingleTask
is_list_manager	src/legion_runtime/region_tree.cc	/^    bool FoldReductionManager::is_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
is_list_manager	src/legion_runtime/region_tree.cc	/^    bool ListReductionManager::is_list_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
is_list_reduction	src/legion_runtime/shared_lowlevel.cc	/^        bool is_list_reduction(void) const { return list; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
is_local	src/legion_runtime/runtime.cc	/^    bool Runtime::is_local(Processor proc) const$/;"	f	class:LegionRuntime::HighLevel::Runtime
is_locally_mapped	src/legion_runtime/legion_tasks.h	/^      inline bool is_locally_mapped(void) const { return map_locally; }$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_locked	src/legion_runtime/lowlevel.cc	/^    bool Reservation::Impl::is_locked(unsigned check_mode, bool excl_ok)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
is_low	src/legion_runtime/legion_utilities.h	/^      const bool is_low;$/;"	m	class:LegionRuntime::HighLevel::AutoLock
is_mapped	src/legion_runtime/legion.h	/^    inline bool PhysicalRegion::is_mapped(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
is_mapped	src/legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::is_mapped(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
is_null	src/legion_runtime/common.h	/^  inline bool is_null(void) const { return (value == ((unsigned)-1)); }$/;"	f	struct:ptr_t
is_null	src/legion_runtime/lowlevel.h	/^      bool is_null(void) const { return (dim > -1); }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
is_operation_committed	src/legion_runtime/legion_ops.cc	/^    bool Operation::is_operation_committed(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
is_parent_of	src/legion_runtime/lowlevel.cc	/^    bool IndexSpace::Impl::is_parent_of(IndexSpace other)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
is_persistent	src/legion_runtime/region_tree.cc	/^    bool CompositeView::is_persistent(void) const$/;"	f	class:LegionRuntime::HighLevel::CompositeView
is_persistent	src/legion_runtime/region_tree.cc	/^    bool InstanceManager::is_persistent(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
is_persistent	src/legion_runtime/region_tree.cc	/^    bool MaterializedView::is_persistent(void) const$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
is_power_of_2	include/nautilus/math.h	36;"	d
is_predicated	src/legion_runtime/legion_ops.cc	/^    bool SpeculativeOp::is_predicated(void) const$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
is_premapped	src/legion_runtime/legion_tasks.h	/^      inline bool is_premapped(void) const { return premapped; }$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_queue_empty	src/nautilus/vc.c	/^static inline int is_queue_empty(struct nk_virtual_console *vc) $/;"	f	file:
is_queue_full	src/nautilus/vc.c	/^static inline int is_queue_full(struct nk_virtual_console *vc) $/;"	f	file:
is_reduction	src/legion_runtime/shared_lowlevel.cc	/^        bool is_reduction(void) const { return reduction; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
is_reduction_manager	src/legion_runtime/region_tree.cc	/^    bool InstanceManager::is_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
is_reduction_manager	src/legion_runtime/region_tree.cc	/^    bool ReductionManager::is_reduction_manager(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
is_reduction_view	src/legion_runtime/region_tree.cc	/^    bool InstanceView::is_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::InstanceView
is_reduction_view	src/legion_runtime/region_tree.cc	/^    bool ReductionView::is_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionView
is_reduction_view	src/legion_runtime/region_tree.h	/^      inline bool is_reduction_view(void) const$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
is_region	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::is_region(void) const$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
is_region	src/legion_runtime/region_tree.cc	/^    bool RegionNode::is_region(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionNode
is_region_mapped	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::is_region_mapped(unsigned idx)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
is_registered	src/legion_runtime/activemsg.cc	/^static bool is_registered(void *ptr)$/;"	f	file:
is_remote	src/legion_runtime/legion_tasks.h	/^      inline bool is_remote(void) const { return !runtime->is_local(orig_proc);}$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_set	src/legion_runtime/activemsg.h	/^  bool is_set(void) const { return valid; }$/;"	f	struct:HandlerReplyFuture
is_set	src/legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
is_set	src/legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
is_set	src/legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
is_set	src/legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
is_set	src/legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
is_set	src/legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::is_set(unsigned bit) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
is_set	src/legion_runtime/lowlevel.cc	/^    bool ElementMask::is_set(int ptr) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
is_set	src/legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::is_set(int ptr) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
is_sliced	src/legion_runtime/legion_tasks.cc	/^    bool MultiTask::is_sliced(void) const$/;"	f	class:LegionRuntime::HighLevel::MultiTask
is_stealable	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::IndexTask
is_stealable	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
is_stealable	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::PointTask
is_stealable	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::SliceTask
is_stealable	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::is_stealable(void) const$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
is_stolen	src/legion_runtime/legion_tasks.h	/^      inline bool is_stolen(void) const { return (steal_count > 0); }$/;"	f	class:LegionRuntime::HighLevel::TaskOp
is_tracing	src/legion_runtime/legion_ops.h	/^      inline bool is_tracing(void) const { return tracing; }$/;"	f	class:LegionRuntime::HighLevel::Operation
is_usable_ram	src/nautilus/mm/boot_mm.c	/^static int is_usable_ram(uint64_t start, uint64_t len)$/;"	f	file:
is_utility_proc	src/legion_runtime/shared_lowlevel.cc	/^        const bool is_utility_proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
is_valid	src/legion_runtime/legion.cc	/^    bool PhysicalRegion::is_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
is_valid	src/legion_runtime/runtime.cc	/^    bool PhysicalRegion::Impl::is_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
is_vararg	include/lua/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
is_whole	src/legion_runtime/legion_utilities.h	/^    bool Fraction<T>::is_whole(void) const$/;"	f	class:LegionRuntime::HighLevel::Fraction
isalnum	include/nautilus/naut_string.h	47;"	d
isalpha	include/nautilus/naut_string.h	48;"	d
isascii	include/nautilus/naut_string.h	59;"	d
isblack	include/lua/lgc.h	100;"	d
ischar	src/nautilus/libccompat.c	/^int ischar(unsigned char *str)$/;"	f
iscleared	src/lua_src/lgc.c	/^static int iscleared (global_State *g, const TValue *o) {$/;"	f	file:
isclosed	src/lua_src/liolib.c	130;"	d	file:
iscntrl	include/nautilus/naut_string.h	49;"	d
iscollectable	include/lua/lobject.h	173;"	d
isdead	include/lua/lgc.h	112;"	d
isdeadm	include/lua/lgc.h	111;"	d
isdigit	include/nautilus/naut_string.h	50;"	d
isdummy	src/lua_src/ltable.c	70;"	d	file:
isfinalized	src/lua_src/lgc.c	66;"	d	file:
isgenerational	include/lua/lgc.h	50;"	d
isgraph	include/nautilus/naut_string.h	51;"	d
isgray	include/lua/lgc.h	101;"	d
isinstack	src/lua_src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isloop	src/lua_src/lparser.c	/^  lu_byte isloop;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
islower	include/nautilus/naut_string.h	52;"	d
isnan	include/nautilus/math.h	/^isnan (float x)$/;"	f
isnan	src/test/circuit_cpu.cc	/^isnan (float x)$/;"	f	file:
isneg	src/lua_src/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
isnumeral	src/lua_src/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
isold	include/lua/lgc.h	104;"	d
ispace	src/legion_runtime/legion_logging.h	/^        IndexSpace ispace;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
ispace	src/test/saxpy_array.cc	/^  IndexSpace ispace;$/;"	m	struct:MainArgs	file:
isprint	include/nautilus/naut_string.h	53;"	d
ispseudo	src/lua_src/lapi.c	44;"	d	file:
ispunct	include/nautilus/naut_string.h	54;"	d
isreserved	include/lua/lstring.h	28;"	d
isspace	include/nautilus/naut_string.h	55;"	d
isstackindex	src/lua_src/lapi.c	47;"	d	file:
issue_acquire	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_acquire(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_acquire	src/legion_runtime/runtime.cc	/^    void Runtime::issue_acquire(Context ctx, const AcquireLauncher &launcher)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_across_copies	src/legion_runtime/region_tree.cc	/^    void CompositeNode::issue_across_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
issue_advertisements	src/legion_runtime/runtime.cc	/^    void ProcessorManager::issue_advertisements(MapperID map_id)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
issue_composite_copies	src/legion_runtime/region_tree.cc	/^    void CompositeView::issue_composite_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
issue_composite_copies_across	src/legion_runtime/region_tree.cc	/^    void CompositeView::issue_composite_copies_across(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
issue_copy_operation	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_copy_operation(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_copy_operation	src/legion_runtime/runtime.cc	/^    void Runtime::issue_copy_operation(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_execution_fence	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_execution_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_execution_fence	src/legion_runtime/runtime.cc	/^    void Runtime::issue_execution_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_grouped_copies	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionTreeNode::issue_grouped_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
issue_mapping_fence	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_mapping_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_mapping_fence	src/legion_runtime/runtime.cc	/^    void Runtime::issue_mapping_fence(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_reduction	src/legion_runtime/region_tree.cc	/^    Event FoldReductionManager::issue_reduction($/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
issue_reduction	src/legion_runtime/region_tree.cc	/^    Event ListReductionManager::issue_reduction($/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
issue_release	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::issue_release(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
issue_release	src/legion_runtime/runtime.cc	/^    void Runtime::issue_release(Context ctx, const ReleaseLauncher &launcher)$/;"	f	class:LegionRuntime::HighLevel::Runtime
issue_update_copies	src/legion_runtime/region_tree.cc	/^    void CompositeNode::issue_update_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
issue_update_copies	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::issue_update_copies(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
issue_update_reductions	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::issue_update_reductions(LogicalView *target,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
issweepphase	include/lua/lgc.h	47;"	d
ist	include/nautilus/idt.h	/^            uint8_t  ist   : 5;$/;"	m	struct:gate_desc64::__anon61::__anon63
istailcall	include/lua/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug
isupper	include/nautilus/naut_string.h	56;"	d
isvalid	src/lua_src/lapi.c	41;"	d	file:
isvararg	include/lua/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug
iswhite	include/lua/lgc.h	99;"	d
isxdigit	include/nautilus/naut_string.h	57;"	d
item	scripts/kconfig/qconf.h	/^	ConfigItem *item;$/;"	m	class:ConfigLineEdit
item_attr	scripts/kconfig/lxdialog/dialog.h	111;"	d
item_selected_attr	scripts/kconfig/lxdialog/dialog.h	112;"	d
item_x	scripts/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	file:
item_x	scripts/kconfig/lxdialog/menubox.c	/^static int menu_width, item_x;$/;"	v	file:
items	src/legion_runtime/utilities.h	/^	ITEM *items;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
iterator	src/legion_runtime/lowlevel.h	/^	void *iterator;$/;"	m	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
j_infobox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_infobox(const char *t, int ac, const char *const *av)$/;"	f
j_infobox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_msgbox, j_infobox;$/;"	v
j_inputbox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_inputbox(const char *t, int ac, const char *const *av)$/;"	f
j_inputbox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v
j_menu	scripts/kconfig/lxdialog/lxdialog.c	/^int j_menu(const char *t, int ac, const char *const *av)$/;"	f
j_menu	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v
j_msgbox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_msgbox(const char *t, int ac, const char *const *av)$/;"	f
j_msgbox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_msgbox, j_infobox;$/;"	v
j_radiolist	scripts/kconfig/lxdialog/lxdialog.c	/^int j_radiolist(const char *t, int ac, const char *const *av)$/;"	f
j_radiolist	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v
j_textbox	scripts/kconfig/lxdialog/lxdialog.c	/^int j_textbox(const char *t, int ac, const char *const *av)$/;"	f
j_textbox	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v
j_yesno	scripts/kconfig/lxdialog/lxdialog.c	/^int j_yesno(const char *t, int ac, const char *const *av)$/;"	f
j_yesno	scripts/kconfig/lxdialog/lxdialog.c	/^jumperFn j_menu, j_radiolist, j_yesno, j_textbox, j_inputbox;$/;"	v
jmp_buf	include/nautilus/setjmp.h	/^typedef struct __jmp_buf_tag jmp_buf[1];$/;"	t	typeref:struct:__jmp_buf_tag
jmp_buf	src/include/nautilus/setjmp.h	/^typedef struct __jmp_buf_tag jmp_buf[1];$/;"	t	typeref:struct:__jmp_buf_tag
jpc	include/lua/lparser.h	/^  int jpc;  \/* list of pending jumps to `pc' *\/$/;"	m	struct:FuncState
jumper	scripts/kconfig/lxdialog/lxdialog.c	/^	jumperFn *jumper;$/;"	m	struct:Mode	file:
jumperFn	scripts/kconfig/lxdialog/lxdialog.c	/^typedef int (jumperFn) (const char *title, int argc, const char *const *argv);$/;"	t	file:
jumponcond	src/lua_src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
k	include/lua/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	include/lua/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	include/lua/lstate.h	/^      lua_CFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon11::__anon13
k_queue	src/nautilus/vc.c	/^    nk_keycode_t k_queue[Keycode_QUEUE_SIZE];$/;"	m	union:nk_virtual_console::queue	file:
kbd_deinit	src/dev/kbd.c	/^int kbd_deinit()$/;"	f
kbd_handler	src/dev/kbd.c	/^kbd_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
kbd_init	src/dev/kbd.c	/^kbd_init (struct naut_info * naut)$/;"	f
kbd_reset	src/dev/kbd.c	/^int kbd_reset()$/;"	f
kbd_translate	src/dev/kbd.c	/^nk_keycode_t kbd_translate(nk_scancode_t scan)$/;"	f
kconf_id	scripts/kconfig/lkc.h	/^struct kconf_id {$/;"	s
kconf_id_hash	scripts/kconfig/zconf.hash.c	/^kconf_id_hash (register const char *str, register unsigned int len)$/;"	f	file:
kconf_id_lookup	scripts/kconfig/zconf.hash.c	/^kconf_id_lookup (register const char *str, register unsigned int len)$/;"	f
kconf_id_strings	scripts/kconfig/zconf.hash.c	155;"	d	file:
kconf_id_strings_contents	scripts/kconfig/zconf.hash.c	/^static struct kconf_id_strings_t kconf_id_strings_contents =$/;"	v	typeref:struct:kconf_id_strings_t	file:
kconf_id_strings_str10	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str10[sizeof("range")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str11	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str11[sizeof("string")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str12	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str12[sizeof("default")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str13	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str13[sizeof("def_bool")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str14	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str14[sizeof("menu")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str16	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str16[sizeof("def_boolean")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str17	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str17[sizeof("def_tristate")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str18	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str18[sizeof("mainmenu")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str2	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str2[sizeof("if")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str20	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str20[sizeof("menuconfig")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str21	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str21[sizeof("config")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str22	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str22[sizeof("on")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str23	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str23[sizeof("hex")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str26	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str26[sizeof("source")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str27	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str27[sizeof("depends")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str28	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str28[sizeof("optional")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str3	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str3[sizeof("int")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str31	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str31[sizeof("enable")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str32	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str32[sizeof("comment")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str33	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str33[sizeof("requires")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str34	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str34[sizeof("bool")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str37	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str37[sizeof("boolean")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str4	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str4[sizeof("help")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str41	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str41[sizeof("choice")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str46	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str46[sizeof("prompt")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str5	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str5[sizeof("endif")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str6	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str6[sizeof("select")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str7	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str7[sizeof("endmenu")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str8	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str8[sizeof("tristate")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_str9	scripts/kconfig/zconf.hash.c	/^    char kconf_id_strings_str9[sizeof("endchoice")];$/;"	m	struct:kconf_id_strings_t	file:
kconf_id_strings_t	scripts/kconfig/zconf.hash.c	/^struct kconf_id_strings_t$/;"	s	file:
kconfig_load	scripts/kconfig/kconfig_load.c	/^void kconfig_load(void)$/;"	f
keepinvariant	include/lua/lgc.h	61;"	d
keepinvariantout	include/lua/lgc.h	68;"	d
kern_ident_map	src/nautilus/paging.c	/^kern_ident_map (struct nk_mem_info * mem, ulong_t mbd)$/;"	f	file:
key	src/nautilus/hashtable.c	/^    addr_t key;$/;"	m	struct:nk_hash_entry	file:
keyPressEvent	scripts/kconfig/qconf.cc	/^void ConfigLineEdit::keyPressEvent(QKeyEvent* e)$/;"	f	class:ConfigLineEdit
keyPressEvent	scripts/kconfig/qconf.cc	/^void ConfigList::keyPressEvent(QKeyEvent* ev)$/;"	f	class:ConfigList
key_type	include/acpi/actbl2.h	/^	uint8_t key_type;$/;"	m	struct:acpi_slic_key
keyboard_queue	src/nautilus/vc.c	/^  } keyboard_queue;$/;"	m	struct:nk_virtual_console	typeref:union:nk_virtual_console::queue	file:
keyfromval	include/lua/ltable.h	21;"	d
kind	src/legion_runtime/legion_logging.h	/^        LogMsgOperationKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
kind	src/legion_runtime/legion_logging.h	/^        Memory::Kind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
kind	src/legion_runtime/legion_logging.h	/^        TimingKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
kind	src/legion_runtime/legion_logging.h	/^        TimingKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
kind	src/legion_runtime/legion_logging.h	/^        WaitKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
kind	src/legion_runtime/legion_logging.h	/^        WaitKind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
kind	src/legion_runtime/legion_ops.h	/^      DeletionKind kind;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
kind	src/legion_runtime/legion_profiling.h	/^        Processor::Kind kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
kind	src/legion_runtime/legion_profiling.h	/^        unsigned kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
kind	src/legion_runtime/lowlevel_gpu.cc	/^      cudaMemcpyKind kind;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy	file:
kind	src/legion_runtime/lowlevel_impl.h	/^      MemoryKind kind;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
kind	src/legion_runtime/lowlevel_impl.h	/^      Processor::Kind kind;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
kind	src/legion_runtime/region_tree.h	/^        int kind;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
kind	src/legion_runtime/region_tree.h	/^        int kind;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
kind	src/legion_runtime/region_tree.h	/^      int kind;$/;"	m	class:LegionRuntime::HighLevel::PerfTracer
kind	src/legion_runtime/shared_lowlevel.cc	/^        const Memory::Kind kind;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
kmem	include/nautilus/smp.h	/^    struct kmem_data kmem;$/;"	m	struct:cpu	typeref:struct:cpu::kmem_data
kmem_add_memory	src/nautilus/mm/kmem.c	/^kmem_add_memory (struct mem_region * mem, $/;"	f
kmem_block_hdr	src/nautilus/mm/kmem.c	/^struct kmem_block_hdr {$/;"	s	file:
kmem_bytes_allocated	src/nautilus/mm/kmem.c	/^static unsigned long kmem_bytes_allocated = 0;$/;"	v	file:
kmem_bytes_managed	src/nautilus/mm/kmem.c	/^static unsigned long kmem_bytes_managed;$/;"	v	file:
kmem_data	include/nautilus/mm.h	/^struct kmem_data {$/;"	s
kmem_get_base_zone	src/nautilus/mm/kmem.c	/^kmem_get_base_zone (void)$/;"	f
kmem_get_region_by_addr	src/nautilus/mm/kmem.c	/^kmem_get_region_by_addr (ulong_t addr)$/;"	f
kname	src/lua_src/ldebug.c	/^static void kname (Proto *p, int pc, int c, const char **name) {$/;"	f	file:
known_nodes	src/legion_runtime/region_tree.h	/^      NodeMask known_nodes;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
kxgettext-objs	scripts/kconfig/Makefile	/^kxgettext-objs	:= kxgettext.o zconf.tab.o$/;"	m
l	include/lua/lobject.h	/^    } l;$/;"	m	union:UpVal::__anon7	typeref:struct:UpVal::__anon7::__anon8
l	include/lua/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	include/lua/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon11	typeref:struct:CallInfo::__anon11::__anon12
l	src/lua_src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	src/lua_src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l0	src/asm/smpboot.S	/^    l0:$/;"	l
l2gTab	src/test/hpcg/hpcg-problem-generator.h	/^    int64_t *l2gTab;$/;"	m	struct:ProblemGenerator
lDom	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::Domain lDom;$/;"	m	struct:lgncg::PVecItem
lDom	src/test/hpcg/vector.h	/^    lDom(size_t index = 0) const$/;"	f	struct:lgncg::Vector
lPart	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::LogicalPartition lPart;$/;"	m	struct:lgncg::PVecItem
l_G	include/lua/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_alloc	src/lua_src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_d	include/lua/llimits.h	/^union luai_Cast { double l_d; LUA_INT32 l_p[2]; };$/;"	m	union:luai_Cast
l_fseek	src/lua_src/liolib.c	102;"	d	file:
l_fseek	src/lua_src/liolib.c	112;"	d	file:
l_fseek	src/lua_src/liolib.c	94;"	d	file:
l_ftell	src/lua_src/liolib.c	103;"	d	file:
l_ftell	src/lua_src/liolib.c	113;"	d	file:
l_ftell	src/lua_src/liolib.c	95;"	d	file:
l_gmtime	src/lua_src/loslib.c	72;"	d	file:
l_gmtime	src/lua_src/loslib.c	77;"	d	file:
l_i_blocks_hi	src/fs/ext2/ext2fs.h	/^			__u16	l_i_blocks_hi;$/;"	m	struct:ext2_inode::__anon125::__anon126
l_i_checksum_lo	src/fs/ext2/ext2fs.h	/^			__u16	l_i_checksum_lo; \/* crc32c(uuid+inum+inode) *\/$/;"	m	struct:ext2_inode::__anon125::__anon126
l_i_file_acl_high	src/fs/ext2/ext2fs.h	/^			__u16	l_i_file_acl_high;$/;"	m	struct:ext2_inode::__anon125::__anon126
l_i_gid_high	src/fs/ext2/ext2fs.h	/^			__u16	l_i_gid_high;	\/* were reserved2[0] *\/$/;"	m	struct:ext2_inode::__anon125::__anon126
l_i_reserved	src/fs/ext2/ext2fs.h	/^			__u16	l_i_reserved;$/;"	m	struct:ext2_inode::__anon125::__anon126
l_i_uid_high	src/fs/ext2/ext2fs.h	/^			__u16	l_i_uid_high;	\/* these 2 fields    *\/$/;"	m	struct:ext2_inode::__anon125::__anon126
l_i_version	src/fs/ext2/ext2fs.h	/^			__u32	l_i_version; \/* was l_i_reserved1 *\/$/;"	m	struct:ext2_inode::__anon122::__anon123
l_isfalse	include/lua/lobject.h	170;"	d
l_localtime	src/lua_src/loslib.c	73;"	d	file:
l_localtime	src/lua_src/loslib.c	78;"	d	file:
l_mathop	include/lua/luaconf.h	411;"	d
l_mem	include/lua/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_message	src/lua_src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_noret	include/lua/llimits.h	105;"	d
l_noret	include/lua/llimits.h	107;"	d
l_noret	include/lua/llimits.h	109;"	d
l_p	include/lua/llimits.h	/^union luai_Cast { double l_d; LUA_INT32 l_p[2]; };$/;"	m	union:luai_Cast
l_registry	include/lua/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_seeknum	src/lua_src/liolib.c	104;"	d	file:
l_seeknum	src/lua_src/liolib.c	114;"	d	file:
l_seeknum	src/lua_src/liolib.c	96;"	d	file:
l_setbit	include/lua/lgc.h	81;"	d
l_strcmp	src/lua_src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_uacNumber	include/lua/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
label	include/lua/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata
labelstat	src/lua_src/lparser.c	/^static void labelstat (LexState *ls, TString *label, int line) {$/;"	f	file:
laction	src/lua_src/lua.c	/^static void laction (int i) {$/;"	f	file:
lahfsahf	include/nautilus/cpuid.h	/^            uint8_t lahfsahf    : 1; \/\/ LAHF & SAHF instr support in long mode$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
lapi_c	src/lua_src/lapi.c	11;"	d	file:
lapi_h	include/lua/lapi.h	8;"	d
lapic_addr	include/nautilus/acpi.h	/^    uint32_t lapic_addr;$/;"	m	struct:mp_table
lapic_flags	include/acpi/actbl1.h	/^	uint32_t lapic_flags;$/;"	m	struct:acpi_madt_local_apic
lapic_flags	include/acpi/actbl1.h	/^	uint32_t lapic_flags;$/;"	m	struct:acpi_madt_local_sapic
lapic_flags	include/acpi/actbl1.h	/^	uint32_t lapic_flags;$/;"	m	struct:acpi_madt_local_x2apic
lapic_id	include/nautilus/acpi.h	/^   uint8_t  lapic_id;$/;"	m	struct:mp_table_entry_cpu
lapic_id	include/nautilus/smp.h	/^    uint32_t lapic_id;   $/;"	m	struct:cpu
lapic_version	include/nautilus/acpi.h	/^   uint8_t  lapic_version;$/;"	m	struct:mp_table_entry_cpu
largest_page_size	src/nautilus/paging.c	/^largest_page_size (void)$/;"	f	file:
last_elmt	src/legion_runtime/lowlevel.h	/^      size_t last_elmt;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
last_elmt	src/legion_runtime/lowlevel_impl.h	/^        size_t first_elmt, last_elmt;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
last_enabled	src/legion_runtime/lowlevel.h	/^      int last_enabled(void) const { return last_enabled_elmt; }$/;"	f	class:LegionRuntime::LowLevel::ElementMask
last_enabled_elmt	src/legion_runtime/lowlevel.h	/^      int first_enabled_elmt, last_enabled_elmt;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
last_entry_ptr	scripts/kconfig/menu.c	/^static struct menu **last_entry_ptr;$/;"	v	typeref:struct:menu	file:
last_index	src/legion_runtime/lowlevel_impl.h	/^      IT first_index, last_index;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
last_message_event	src/legion_runtime/runtime.h	/^      Event last_message_event;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
last_offset	include/nautilus/mm.h	/^    ulong_t   last_offset;$/;"	m	struct:boot_mem_info
last_pfn	include/nautilus/mm.h	/^    uint32_t last_pfn;$/;"	m	struct:mmap_info
last_pos	include/nautilus/mm.h	/^    ulong_t   last_pos;$/;"	m	struct:boot_mem_info
last_success	include/nautilus/mm.h	/^    ulong_t   last_success;$/;"	m	struct:boot_mem_info
last_ts	scripts/kconfig/lex.zconf.c	/^static int last_ts, first_ts;$/;"	v	file:
last_ts	src/legion_runtime/lowlevel.cc	/^        Barrier::timestamp_t last_ts;$/;"	m	struct:LegionRuntime::LowLevel::Event::Impl::PendingUpdates::PerNodeUpdates	file:
lastfree	include/lua/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastline	include/lua/llex.h	/^  int lastline;  \/* line of last token `consumed' *\/$/;"	m	struct:LexState
lastlinedefined	include/lua/lobject.h	/^  int lastlinedefined;$/;"	m	struct:Proto
lastlinedefined	include/lua/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	src/lua_src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lasttarget	include/lua/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState
lat_timer	include/dev/pci.h	/^    uint8_t  lat_timer;$/;"	m	struct:pci_cfg_space
latency	src/legion_runtime/legion_logging.h	/^        size_t latency;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
latency	src/legion_runtime/legion_logging.h	/^        size_t latency;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
latency	src/legion_runtime/lowlevel.h	/^	unsigned latency;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
latency	src/legion_runtime/lowlevel.h	/^	unsigned latency;$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
launch	src/legion_runtime/runtime.cc	/^    void GarbageCollectionEpoch::launch(Processor utility, int priority)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
launch_check_fields	src/test/circuit_cpu.cc	/^bool CalcNewCurrentsTask::launch_check_fields(Context ctx, HighLevelRuntime *runtime)$/;"	f	class:CalcNewCurrentsTask
launch_check_fields	src/test/circuit_cpu.cc	/^bool DistributeChargeTask::launch_check_fields(Context ctx, HighLevelRuntime *runtime)$/;"	f	class:DistributeChargeTask
launch_check_fields	src/test/circuit_cpu.cc	/^bool UpdateVoltagesTask::launch_check_fields(Context ctx, HighLevelRuntime *runtime)$/;"	f	class:UpdateVoltagesTask
launch_domain	src/legion_runtime/legion.h	/^      Domain                             launch_domain;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
launch_task	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::launch_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
launch_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::launch_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
launch_task	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::launch_task(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
launch_task_scheduler	src/legion_runtime/runtime.cc	/^    void ProcessorManager::launch_task_scheduler(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
launch_top_level_task	src/legion_runtime/runtime.cc	/^    void Runtime::launch_top_level_task(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::Runtime
launch_vmm_environment	src/arch/x64/init.c	/^static int launch_vmm_environment()$/;"	f	file:
lauxlib_c	src/lua_src/lauxlib.c	26;"	d	file:
lauxlib_h	include/lua/lauxlib.h	9;"	d
layout	src/legion_runtime/region_tree.h	/^      LayoutDescription *const layout;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
layouts	src/legion_runtime/region_tree.h	/^                          LAYOUT_DESCRIPTION_ALLOC>::deque> layouts;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
lbaselib_c	src/lua_src/lbaselib.c	14;"	d	file:
lbitlib_c	src/lua_src/lbitlib.c	7;"	d	file:
lcode_c	src/lua_src/lcode.c	10;"	d	file:
lcode_h	include/lua/lcode.h	8;"	d
lconfig_h	include/lua/luaconf.h	9;"	d
lconv	include/lua/llocale.h	/^struct lconv {$/;"	s
lconv	src/nautilus/libccompat.c	/^struct lconv {$/;"	s	file:
lcorolib_c	src/lua_src/lcorolib.c	11;"	d	file:
lctype_c	src/lua_src/lctype.c	7;"	d	file:
lctype_h	include/lua/lctype.h	8;"	d
ldblib_c	src/lua_src/ldblib.c	13;"	d	file:
ldebug_c	src/lua_src/ldebug.c	13;"	d	file:
ldebug_h	include/lua/ldebug.h	8;"	d
ldexp	src/nautilus/libccompat.c	/^double ldexp(double x, int exp){$/;"	f
ldflags	scripts/kconfig/lxdialog/check-lxdialog.sh	/^ldflags()$/;"	f
ldo_c	src/lua_src/ldo.c	12;"	d	file:
ldo_h	include/lua/ldo.h	8;"	d
ldump_c	src/lua_src/ldump.c	9;"	d	file:
leaf	src/legion_runtime/legion.h	/^        bool leaf;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
leaf	src/legion_runtime/legion.h	/^      bool leaf;$/;"	m	struct:LegionRuntime::HighLevel::TaskConfigOptions
leaf	src/legion_runtime/legion_logging.h	/^        bool leaf;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
leaf_region	src/legion_runtime/runtime.h	/^      const bool leaf_region;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
leaq	src/asm/thread_lowlevel.S	/^leaq 8(%rsp), %rsp ;                            \/\/ This instruction must not affect CCs$/;"	l
learn_symbol	scripts/kallsyms.c	/^static void learn_symbol(unsigned char *symbol, int len)$/;"	f	file:
leave_open	src/legion_runtime/region_tree.h	/^      const bool leave_open;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
leaveblock	src/lua_src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	src/lua_src/lparser.c	340;"	d	file:
left	scripts/kconfig/expr.h	/^	union expr_data left, right;$/;"	m	struct:expr	typeref:union:expr::expr_data
left	src/legion_runtime/legion_ops.h	/^      PredicateOp *left;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
left	src/legion_runtime/legion_ops.h	/^      PredicateOp *left;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
left	src/legion_runtime/region_tree.h	/^        IndexPartNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
left	src/legion_runtime/region_tree.h	/^        IndexSpaceNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
left	src/lua_src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon143	file:
left_bound	src/legion_runtime/interval_tree.h	/^      T left_bound, right_bound;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
left_child	src/nautilus/scheduler.c	1207;"	d	file:
left_child	src/nautilus/scheduler.c	1211;"	d	file:
left_node	src/legion_runtime/interval_tree.h	/^      IntervalTreeNode<T, DISCRETE> *left_node, *right_node;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
left_spaces	src/legion_runtime/region_tree.h	/^        std::vector<IndexSpaceNode*> left_spaces, right_spaces;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
left_valid	src/legion_runtime/legion_ops.h	/^      bool left_valid;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
left_valid	src/legion_runtime/legion_ops.h	/^      bool left_valid;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
left_value	src/legion_runtime/legion_ops.h	/^      bool left_value;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
left_value	src/legion_runtime/legion_ops.h	/^      bool left_value;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
leftover_procs	src/legion_runtime/lowlevel_impl.h	/^      cpu_set_t leftover_procs;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
leg_rep	include/dev/hpet.h	/^    uint8_t leg_rep;   \/* can use legacy replacement mapping *\/$/;"	m	struct:hpet_dev
legacy_base	include/dev/pci.h	/^            uint32_t legacy_base;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
legion_backtrace	src/legion_runtime/shared_lowlevel.cc	/^    static void legion_backtrace(int signal)$/;"	f	namespace:LegionRuntime::LowLevel
legion_buffer_size	src/legion_runtime/legion.cc	/^    size_t ColoringSerializer::legion_buffer_size(void) const$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
legion_buffer_size	src/legion_runtime/legion.cc	/^    size_t DomainColoringSerializer::legion_buffer_size(void) const$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
legion_count	src/legion_runtime/runtime.h	/^      int mpi_count, legion_count;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_delete	src/legion_runtime/legion_allocation.h	/^    inline void legion_delete(T *to_free)$/;"	f	namespace:LegionRuntime::HighLevel
legion_deserialize	src/legion_runtime/legion.cc	/^    size_t ColoringSerializer::legion_deserialize(const void *buffer)$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
legion_deserialize	src/legion_runtime/legion.cc	/^    size_t DomainColoringSerializer::legion_deserialize(const void *buffer)$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
legion_free	src/legion_runtime/legion_allocation.h	/^    inline void legion_free(AllocationType a, void *ptr, size_t size)$/;"	f	namespace:LegionRuntime::HighLevel
legion_handoff_to_mpi	src/legion_runtime/legion.cc	/^    void MPILegionHandshake::legion_handoff_to_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
legion_handoff_to_mpi	src/legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::legion_handoff_to_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_main_id	src/legion_runtime/runtime.cc	/^    \/*static*\/ Processor::TaskFuncID Runtime::legion_main_id = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
legion_main_id	src/legion_runtime/runtime.h	/^      static Processor::TaskFuncID legion_main_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
legion_malloc	src/legion_runtime/legion_allocation.h	/^    inline void* legion_malloc(AllocationType a, size_t size)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	src/legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	src/legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1, const T2 &arg2)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	src/legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1, const T2 &arg2, const T3 &arg3)$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	src/legion_runtime/legion_allocation.h	/^    inline T* legion_new(const T1 &arg1, const T2 &arg2,$/;"	f	namespace:LegionRuntime::HighLevel
legion_new	src/legion_runtime/legion_allocation.h	/^    inline T* legion_new(void)$/;"	f	namespace:LegionRuntime::HighLevel
legion_participants	src/legion_runtime/runtime.h	/^      const int legion_participants;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_prof_table	src/legion_runtime/legion.cc	/^      ProcessorProfiler *legion_prof_table = $/;"	m	namespace:LegionRuntime::HighLevel::LegionProf	file:
legion_ready	src/legion_runtime/runtime.h	/^      UserEvent mpi_ready, legion_ready;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
legion_realloc	src/legion_runtime/legion_allocation.h	/^    inline void* legion_realloc(AllocationType a, void *ptr, $/;"	f	namespace:LegionRuntime::HighLevel
legion_serialize	src/legion_runtime/legion.cc	/^    size_t ColoringSerializer::legion_serialize(void *buffer) const$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
legion_serialize	src/legion_runtime/legion.cc	/^    size_t DomainColoringSerializer::legion_serialize(void *buffer) const$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
legion_spy_start	src/legion_runtime/legion_tasks.h	/^      Event legion_spy_start;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
legion_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::legion_task_wrapper(const void *args, $/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
legion_test_thread_func	src/test/test_legion.c	/^legion_test_thread_func (void * in, void ** out)$/;"	f	file:
legion_udt_task_wrapper	src/legion_runtime/legion.h	/^    void LegionTaskWrapper::legion_udt_task_wrapper(const void *args,$/;"	f	class:LegionRuntime::HighLevel::LegionTaskWrapper
legion_wait_on_mpi	src/legion_runtime/legion.cc	/^    void MPILegionHandshake::legion_wait_on_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
legion_wait_on_mpi	src/legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::legion_wait_on_mpi(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
len	include/lua/lobject.h	/^    size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata::__anon6
len	include/lua/lobject.h	/^    size_t len;  \/* number of characters in string *\/$/;"	m	struct:TString::__anon5
len	include/nautilus/acpi.h	/^    uint16_t len;          \/* base table length *\/$/;"	m	struct:mp_table
len	include/nautilus/acpi.h	/^    uint8_t  len;$/;"	m	struct:mp_float_ptr_struct
len	include/nautilus/mm.h	/^    uint64_t len;$/;"	m	struct:mem_map_entry
len	include/nautilus/multiboot2.h	/^  multiboot_uint64_t len;$/;"	m	struct:multiboot_mmap_entry
len	include/nautilus/numa.h	/^    uint64_t len;$/;"	m	struct:mem_region
len	include/nautilus/sfi.h	/^    uint32_t len;$/;"	m	struct:sfi_common_hdr
len	scripts/kallsyms.c	/^	unsigned int len;$/;"	m	struct:sym_entry	file:
len	scripts/kconfig/lkc.h	/^	size_t len;$/;"	m	struct:gstr
len	src/dev/ramdisk.c	/^    uint64_t len;$/;"	m	struct:ramdisk_state	file:
len	src/lua_src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon141	file:
len	src/test/hpcg/vector.h	/^    int64_t len;$/;"	m	struct:lgncg::Vector
len_config	scripts/basic/fixdep.c	/^int    len_config  = 0;$/;"	v
length	include/acpi/acrestyp.h	/^	uint32_t length;$/;"	m	struct:acpi_pci_routing_table
length	include/acpi/acrestyp.h	/^	uint32_t length;$/;"	m	struct:acpi_resource
length	include/acpi/actbl.h	/^	uint32_t length;		\/* Length fixed at 32 bits *\/$/;"	m	struct:acpi_table_desc
length	include/acpi/actbl.h	/^	uint32_t length;		\/* Length of structure, in bytes *\/$/;"	m	struct:acpi_table_facs
length	include/acpi/actbl.h	/^	uint32_t length;		\/* Length of table in bytes, including this header *\/$/;"	m	struct:acpi_table_header
length	include/acpi/actbl.h	/^	uint32_t length;		\/* Table length in bytes, including header (ACPI 2.0+) *\/$/;"	m	struct:acpi_table_rsdp
length	include/acpi/actbl1.h	/^	uint64_t length;$/;"	m	struct:acpi_srat_mem_affinity
length	include/acpi/actbl1.h	/^	uint8_t length;$/;"	m	struct:acpi_hest_notify
length	include/acpi/actbl1.h	/^	uint8_t length;$/;"	m	struct:acpi_msct_proximity
length	include/acpi/actbl1.h	/^	uint8_t length;$/;"	m	struct:acpi_subtable_header
length	include/acpi/actbl2.h	/^	uint16_t length;		\/* Subtable length *\/$/;"	m	struct:acpi_ivrs_header
length	include/acpi/actbl2.h	/^	uint16_t length;$/;"	m	struct:acpi_asf_header
length	include/acpi/actbl2.h	/^	uint16_t length;$/;"	m	struct:acpi_dmar_header
length	include/acpi/actbl2.h	/^	uint16_t length;$/;"	m	struct:acpi_ibft_header
length	include/acpi/actbl2.h	/^	uint32_t length;$/;"	m	struct:acpi_slic_header
length	include/acpi/actbl2.h	/^	uint8_t length;$/;"	m	struct:acpi_dmar_device_scope
length	include/acpi/actypes.h	/^		uint32_t length;	\/* # of bytes in buffer *\/$/;"	m	struct:acpi_object::__anon22
length	include/acpi/actypes.h	/^		uint32_t length;	\/* # of bytes in string, excluding trailing null *\/$/;"	m	struct:acpi_object::__anon21
length	include/acpi/actypes.h	/^	acpi_size length;	\/* Length in bytes of the buffer *\/$/;"	m	struct:acpi_buffer
length	include/acpi/actypes.h	/^	uint32_t length;		\/* Length of string + null *\/$/;"	m	struct:acpica_device_id
length	include/acpi/actypes.h	/^	uint32_t length;$/;"	m	struct:acpi_mem_space_context
length	include/nautilus/paging.h	/^    uint64_t length;$/;"	m	struct:nk_mem_zone
length	src/acpi/acpica/aclocal.h	/^	u32 length;		\/* AML length *\/$/;"	m	struct:acpi_parse_obj_named
length	src/acpi/acpica/aclocal.h	/^	u32 length;$/;"	m	struct:acpi_namespace_node
length	src/acpi/acpica/aclocal.h	/^	u32 length;$/;"	m	struct:acpi_namestring_info
length	src/legion_runtime/runtime.h	/^        size_t length;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
lev_lapic_pref_order	src/legion_runtime/shared_lowlevel.cc	/^static uint8_t lev_lapic_pref_order[64] = {$/;"	v	file:
level	src/legion_runtime/lowlevel_impl.h	/^      int level;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
level	src/lua_src/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	src/lua_src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lfb	include/dev/vesa.h	/^    int      lfb;    \/\/ has linear framebuffer$/;"	m	struct:vesa_mode_request
lfunc_c	src/lua_src/lfunc.c	10;"	d	file:
lfunc_h	include/lua/lfunc.h	8;"	d
lgc_c	src/lua_src/lgc.c	9;"	d	file:
lgc_h	include/lua/lgc.h	8;"	d
lgdt32	include/nautilus/gdt.h	/^lgdt32 (const struct gdt_desc32 * g)$/;"	f
lgdt64	include/nautilus/gdt.h	/^lgdt64 (const struct gdt_desc64 * g) $/;"	f
lgncg	src/test/hpcg/cg-data.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/cg.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/comp-dotprod.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/comp-mg.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/comp-prolongation.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/comp-restriction.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/comp-spmv.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/comp-symgs.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/comp-waxpby.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/dotprod-accumulate.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/geometry.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/lgncg.cc	/^namespace lgncg {$/;"	n	file:
lgncg	src/test/hpcg/lgncg.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/mg-data.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/setup-halo.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/sparsemat.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/tids.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/utils.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/vec-zero.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/veccp.h	/^namespace lgncg {$/;"	n
lgncg	src/test/hpcg/vector.h	/^namespace lgncg {$/;"	n
libs-y	Makefile	/^libs-y		    := lib\/ $/;"	m
libs-y	Makefile	/^libs-y		:= $(patsubst %\/, %\/built-in.o, $(libs-y))$/;"	m
libsize	src/lua_src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
lidt	include/nautilus/idt.h	/^lidt (const struct idt_desc * d) $/;"	f
likely	include/nautilus/intrinsics.h	42;"	d
limit	include/nautilus/gdt.h	/^    uint16_t limit;$/;"	m	struct:gdt_desc32
limit	include/nautilus/gdt.h	/^    uint16_t limit;$/;"	m	struct:gdt_desc64
line	include/lua/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc
line	scripts/kconfig/conf.c	/^static char line[128];$/;"	v	file:
line	xeon_phi/linux_usr/phi_console.c	/^    uint16_t          line[PHI_FB_WIDTH];$/;"	m	struct:line_elm	file:
lineEdit	scripts/kconfig/qconf.h	/^	ConfigLineEdit* lineEdit;$/;"	m	class:ConfigView
line_count	src/legion_runtime/activemsg.cc	/^  size_t line_size, line_count;$/;"	m	class:TwoDPayload	file:
line_elm	xeon_phi/linux_usr/phi_console.c	/^struct line_elm {$/;"	s	file:
line_hist	xeon_phi/linux_usr/phi_console.c	/^    struct line_elm * line_hist;$/;"	m	struct:__anon79	typeref:struct:__anon79::line_elm	file:
line_idx	xeon_phi/linux_usr/phi_console.c	/^    int line_idx; \/\/ 0 is pointing at top of framebuffer, > 0 is pointing at hist buff$/;"	m	struct:__anon79	file:
line_number	src/acpi/acpica/aclocal.h	/^	u32 line_number;$/;"	m	struct:acpi_parse_obj_asl
line_size	src/legion_runtime/activemsg.cc	/^  size_t line_size, line_count;$/;"	m	class:TwoDPayload	file:
line_stride	src/legion_runtime/activemsg.cc	/^  ptrdiff_t line_stride;$/;"	m	class:TwoDPayload	file:
linearization	src/legion_runtime/lowlevel_impl.h	/^      DomainLinearization linearization;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
linearization	src/legion_runtime/shared_lowlevel.cc	/^        DomainLinearization linearization;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
linearization_bits	src/legion_runtime/lowlevel.cc	/^      int linearization_bits[RegionInstance::Impl::MAX_LINEARIZATION_LEN];$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
linearization_bits	src/legion_runtime/lowlevel_impl.h	/^	int linearization_bits[MAX_LINEARIZATION_LEN];$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
linedefined	include/lua/lobject.h	/^  int linedefined;$/;"	m	struct:Proto
linedefined	include/lua/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	include/lua/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines (debug information) *\/$/;"	m	struct:Proto
lineno	scripts/kconfig/expr.h	/^	int lineno;$/;"	m	struct:file
lineno	scripts/kconfig/expr.h	/^	int lineno;$/;"	m	struct:menu
lineno	scripts/kconfig/expr.h	/^	int lineno;$/;"	m	struct:property
lineno	scripts/kconfig/kxgettext.c	/^	int		 lineno;$/;"	m	struct:file_line	file:
lineno	scripts/kconfig/lex.zconf.c	/^	int lineno;$/;"	m	struct:__anon1	file:
linenumber	include/lua/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
lines	src/legion_runtime/lowlevel_gpu.cc	/^      size_t bytes, lines;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
linit_c	src/lua_src/linit.c	16;"	d	file:
link	src/nautilus/mm/buddy.c	/^    struct list_head link;$/;"	m	struct:block	typeref:struct:block::list_head	file:
link_offset	include/acpi/actypes.h	/^	uint16_t link_offset;$/;"	m	struct:acpi_memory_list
linktable	src/lua_src/lgc.c	100;"	d	file:
lint	include/acpi/actbl1.h	/^	uint8_t lint;		\/* LINTn to which NMI is connected *\/$/;"	m	struct:acpi_madt_local_apic_nmi
lint	include/acpi/actbl1.h	/^	uint8_t lint;		\/* LINTn to which NMI is connected *\/$/;"	m	struct:acpi_madt_local_x2apic_nmi
linux1	src/fs/ext2/ext2fs.h	/^		} linux1;$/;"	m	union:ext2_inode::__anon122	typeref:struct:ext2_inode::__anon122::__anon123
linux2	src/fs/ext2/ext2fs.h	/^		} linux2;$/;"	m	union:ext2_inode::__anon125	typeref:struct:ext2_inode::__anon125::__anon126
liolib_c	src/lua_src/liolib.c	25;"	d	file:
lisdigit	include/lua/lctype.h	59;"	d
lisdigit	include/lua/lctype.h	85;"	d
lislalnum	include/lua/lctype.h	58;"	d
lislalnum	include/lua/lctype.h	84;"	d
lislalpha	include/lua/lctype.h	57;"	d
lislalpha	include/lua/lctype.h	83;"	d
lisprint	include/lua/lctype.h	61;"	d
lisprint	include/lua/lctype.h	87;"	d
lisspace	include/lua/lctype.h	60;"	d
lisspace	include/lua/lctype.h	86;"	d
list	scripts/kconfig/expr.h	/^	struct menu *list;$/;"	m	struct:menu	typeref:struct:menu::menu
list	scripts/kconfig/qconf.h	/^	ConfigList* list;$/;"	m	class:ConfigView
list	src/acpi/acpica/aclocal.h	/^	acpi_handle *list;$/;"	m	struct:acpi_find_context
list	src/legion_runtime/legion_allocation.h	/^      typedef std::list<T, LegionAllocator<T, A> > list;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
list	src/legion_runtime/shared_lowlevel.cc	/^        bool list; \/\/ reduction list$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
list	src/nautilus/vc.c	/^static void list(void *in, void **out)$/;"	f	file:
listFocusChanged	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::listFocusChanged(void)$/;"	f	class:ConfigMainWindow
listMode	scripts/kconfig/qconf.h	/^enum listMode {$/;"	g
listView	scripts/kconfig/qconf.h	/^	ConfigList* listView() const$/;"	f	class:ConfigItem
listView	scripts/kconfig/qconf.h	/^	ConfigList* listView()$/;"	f	class:ConfigList
list_add	include/nautilus/list.h	/^static inline void list_add(struct list_head *nelm, struct list_head *head)$/;"	f
list_add_tail	include/nautilus/list.h	/^static inline void list_add_tail(struct list_head *nelm, struct list_head *head)$/;"	f
list_del	include/nautilus/list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	include/nautilus/list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_empty	include/nautilus/list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_empty_careful	include/nautilus/list.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f
list_ent	include/nautilus/numa.h	/^    struct list_head list_ent;$/;"	m	struct:domain_adj_entry	typeref:struct:domain_adj_entry::list_head
list_entry	include/nautilus/list.h	252;"	d
list_first_entry	include/nautilus/list.h	275;"	d
list_for_each	include/nautilus/list.h	307;"	d
list_for_each_entry	include/nautilus/list.h	349;"	d
list_for_each_entry_continue	include/nautilus/list.h	382;"	d
list_for_each_entry_from	include/nautilus/list.h	394;"	d
list_for_each_entry_reverse	include/nautilus/list.h	360;"	d
list_for_each_entry_safe	include/nautilus/list.h	405;"	d
list_for_each_entry_safe_continue	include/nautilus/list.h	419;"	d
list_for_each_entry_safe_from	include/nautilus/list.h	433;"	d
list_for_each_entry_safe_reverse	include/nautilus/list.h	446;"	d
list_for_each_prev	include/nautilus/list.h	329;"	d
list_for_each_safe	include/nautilus/list.h	339;"	d
list_head	include/acpi/actypes.h	/^	void *list_head;$/;"	m	struct:acpi_memory_list
list_head	include/nautilus/list.h	/^struct list_head {$/;"	s
list_move	include/nautilus/list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	include/nautilus/list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_name	include/acpi/actypes.h	/^	char *list_name;$/;"	m	struct:acpi_memory_list
list_next_entry	include/nautilus/list.h	292;"	d
list_prepare_entry	include/nautilus/list.h	372;"	d
list_size	include/acpi/actypes.h	/^	uint32_t list_size;		\/* Size of list, including ID strings *\/$/;"	m	struct:acpica_device_id_list
list_size	src/legion_runtime/lowlevel.cc	/^      off_t list_size;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
list_splice	include/nautilus/list.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	include/nautilus/list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
list_tail_entry	include/nautilus/list.h	261;"	d
list_tid	src/nautilus/vc.c	/^static nk_thread_id_t list_tid;$/;"	v	file:
list_vc	src/nautilus/vc.c	/^static struct nk_virtual_console *list_vc = NULL; $/;"	v	typeref:struct:nk_virtual_console	file:
list_width	scripts/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	file:
listfield	src/lua_src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
lisxdigit	include/lua/lctype.h	62;"	d
lisxdigit	include/lua/lctype.h	88;"	d
ll_addtoclib	src/lua_src/loadlib.c	/^static void ll_addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
ll_checkclib	src/lua_src/loadlib.c	/^static void *ll_checkclib (lua_State *L, const char *path) {$/;"	f	file:
ll_funcs	src/lua_src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	src/lua_src/loadlib.c	/^static void *ll_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
ll_loadfunc	src/lua_src/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	src/lua_src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	src/lua_src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_require	src/lua_src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	src/lua_src/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
ll_seeall	src/lua_src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	src/lua_src/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	src/lua_src/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llex	src/lua_src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	src/lua_src/llex.c	11;"	d	file:
llex_h	include/lua/llex.h	8;"	d
llimits_h	include/lua/llimits.h	8;"	d
lm	include/nautilus/cpuid.h	/^            uint8_t lm          : 1; \/\/ Long Mode$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
lmathlib_c	src/lua_src/lmathlib.c	17;"	d	file:
lmathlib_c	src/lua_src/lnautlib.c	4;"	d	file:
lmb_r_bases	src/legion_runtime/activemsg.cc	/^  char **lmb_r_bases; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmb_r_counts	src/legion_runtime/activemsg.cc	/^  int *lmb_r_counts; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmb_size	src/legion_runtime/activemsg.cc	/^static size_t lmb_size = 1 << 20; \/\/ 1 MB$/;"	v	file:
lmb_w_avail	src/legion_runtime/activemsg.cc	/^  bool *lmb_w_avail; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmb_w_bases	src/legion_runtime/activemsg.cc	/^  char **lmb_w_bases; \/\/ [num_lmbs]$/;"	m	class:ActiveMessageEndpoint	file:
lmem_c	src/lua_src/lmem.c	10;"	d	file:
lmem_h	include/lua/lmem.h	8;"	d
lmemfind	src/lua_src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	include/lua/lobject.h	576;"	d
lo	src/legion_runtime/arrays.h	/^      Point<DIM> lo, hi;$/;"	m	class:LegionRuntime::Arrays::Rect
loadConfig	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::loadConfig(void)$/;"	f	class:ConfigMainWindow
load_addr	include/nautilus/multiboot2.h	/^  multiboot_uint32_t load_addr;$/;"	m	struct:multiboot_header_tag_address
load_aux	src/lua_src/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
load_circuit	src/test/circuit.cc	/^Partitions load_circuit(Circuit &ckt, std::vector<CircuitPiece> &pieces, Context ctx,$/;"	f
load_config_help	scripts/kconfig/mconf.c	/^load_config_help[] = N_($/;"	v	file:
load_config_text	scripts/kconfig/mconf.c	/^load_config_text[] = N_($/;"	v	file:
load_end_addr	include/nautilus/multiboot2.h	/^  multiboot_uint32_t load_end_addr;$/;"	m	struct:multiboot_header_tag_address
load_factors	src/nautilus/hashtable.c	/^static const uint_t load_factors[] = $/;"	v	file:
load_filename	scripts/kconfig/gconf.c	/^load_filename(GtkFileSelection * file_selector, gpointer user_data)$/;"	f	file:
load_limit	src/nautilus/hashtable.c	/^    uint_t load_limit;$/;"	m	struct:nk_hashtable	file:
loadedlibs	src/lua_src/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	src/lua_src/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib_c	src/lua_src/loadlib.c	24;"	d	file:
loadline	src/lua_src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	src/lua_src/lobject.c	12;"	d	file:
lobject_h	include/lua/lobject.h	9;"	d
local	src/legion_runtime/legion_logging.h	/^        bool local;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFieldCreation
local	src/legion_runtime/region_tree.h	/^        bool local;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceNode::FieldInfo
localSysMem	src/test/hpcg/cg-mapper.h	/^    LegionRuntime::HighLevel::Memory localSysMem;$/;"	m	class:CGMapper
local_address_space	src/legion_runtime/runtime.h	/^      const AddressSpaceID local_address_space;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
local_apic_id	include/acpi/actbl1.h	/^	uint32_t local_apic_id;	\/* Processor x2APIC ID  *\/$/;"	m	struct:acpi_madt_local_x2apic
local_arglen	src/legion_runtime/legion.h	/^      size_t                              local_arglen;$/;"	m	class:LegionRuntime::HighLevel::Task
local_args	src/legion_runtime/legion.h	/^      void                               *local_args;$/;"	m	class:LegionRuntime::HighLevel::Task
local_closing_mask	src/legion_runtime/region_tree.h	/^      FieldMask local_closing_mask;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
local_color	src/legion_runtime/region_tree.h	/^      const int local_color;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
local_color	src/legion_runtime/region_tree.h	/^      const int local_color;$/;"	m	class:LegionRuntime::HighLevel::WARAnalyzer
local_cpus	src/legion_runtime/lowlevel.cc	/^    static std::vector<LocalProcessor *> local_cpus;$/;"	m	namespace:LegionRuntime::LowLevel	file:
local_data	src/legion_runtime/lowlevel_impl.h	/^      void *local_data;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
local_data_size	src/legion_runtime/lowlevel_impl.h	/^      size_t local_data_size;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
local_event_free_list	src/legion_runtime/lowlevel_impl.h	/^      EventTableAllocator::FreeList *local_event_free_list;$/;"	m	class:Runtime
local_fields	src/legion_runtime/legion_tasks.h	/^                                                                 local_fields;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
local_futures	src/legion_runtime/runtime.h	/^                     RUNTIME_FUTURE_ALLOC>::map local_futures;$/;"	m	class:LegionRuntime::HighLevel::Runtime
local_gpus	src/legion_runtime/lowlevel.cc	/^    static std::vector<GPUProcessor *> local_gpus;$/;"	m	namespace:LegionRuntime::LowLevel	file:
local_id	src/legion_runtime/lowlevel.cc	/^    IDType Memory::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
local_id	src/legion_runtime/lowlevel.cc	/^    IDType Processor::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
local_id	src/legion_runtime/lowlevel.cc	/^    IDType RegionInstance::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
local_id	src/legion_runtime/shared_lowlevel.cc	/^    IDType Memory::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Memory
local_id	src/legion_runtime/shared_lowlevel.cc	/^    IDType Processor::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::Processor
local_id	src/legion_runtime/shared_lowlevel.cc	/^    IDType RegionInstance::local_id(void) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
local_index_space_free_list	src/legion_runtime/lowlevel_impl.h	/^      IndexSpaceTableAllocator::FreeList *local_index_space_free_list;$/;"	m	class:Runtime
local_instances	src/legion_runtime/legion_tasks.h	/^                                                    local_instances;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
local_kind	src/legion_runtime/default_mapper.h	/^      const Processor::Kind local_kind;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
local_mask	src/legion_runtime/field_tree.h	/^      FieldMask local_mask;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
local_proc	src/legion_runtime/default_mapper.h	/^      const Processor local_proc;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
local_proc	src/legion_runtime/region_tree.h	/^      const Processor local_proc;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
local_proc	src/legion_runtime/region_tree.h	/^      const Processor local_proc;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
local_proc	src/legion_runtime/runtime.h	/^      const Processor local_proc;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
local_proc_assignments	src/legion_runtime/lowlevel_impl.h	/^      std::vector<int> local_proc_assignments;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
local_proc_group_free_list	src/legion_runtime/lowlevel_impl.h	/^      ProcessorGroupTableAllocator::FreeList *local_proc_group_free_list;$/;"	m	class:Runtime
local_proc_key	src/legion_runtime/shared_lowlevel.cc	/^nk_tls_key_t local_proc_key;$/;"	v
local_procs	src/legion_runtime/runtime.h	/^      const std::set<Processor> local_procs;$/;"	m	class:LegionRuntime::HighLevel::Runtime
local_queue_lock	src/legion_runtime/runtime.h	/^      Reservation local_queue_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
local_reservation_free_list	src/legion_runtime/lowlevel_impl.h	/^      ReservationTableAllocator::FreeList *local_reservation_free_list;$/;"	m	class:Runtime
local_sapic_eid	include/acpi/actbl1.h	/^	uint8_t local_sapic_eid;$/;"	m	struct:acpi_srat_cpu_affinity
local_scheduler_preconditions	src/legion_runtime/runtime.h	/^      std::vector<Event> local_scheduler_preconditions;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
local_space	src/legion_runtime/garbage_collection.h	/^      const AddressSpaceID local_space;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
local_stream	src/legion_runtime/lowlevel_gpu.cc	/^      CUstream local_stream;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy	file:
local_util_procs	src/legion_runtime/lowlevel.cc	/^    static std::vector<UtilityProcessor *> local_util_procs;$/;"	m	namespace:LegionRuntime::LowLevel	file:
local_waiters	src/legion_runtime/lowlevel_impl.h	/^      std::map<Event::gen_t, std::vector<EventWaiter *> > local_waiters; \/\/ set of local threads that are waiting on event (keyed by generation)$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
local_waiters	src/legion_runtime/lowlevel_impl.h	/^      std::map<unsigned, std::deque<Event> > local_waiters;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
locale_t	include/nautilus/libccompat.h	/^typedef void* locale_t;$/;"	t
locale_t	src/lua_src/lnautlib.c	/^typedef void * locale_t;$/;"	t	file:
localfunc	src/lua_src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
locality_count	include/acpi/actbl1.h	/^	uint64_t locality_count;$/;"	m	struct:acpi_table_slit
locality_info	include/nautilus/nautilus.h	/^    struct nk_locality_info locality_info;$/;"	m	struct:sys_info	typeref:struct:sys_info::nk_locality_info
localize_region_requirement	src/legion_runtime/legion_ops.cc	/^    \/*static*\/ void Operation::localize_region_requirement(RegionRequirement &r)$/;"	f	class:LegionRuntime::HighLevel::Operation
locally_mapped	src/legion_runtime/legion_tasks.h	/^      bool locally_mapped;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
locally_mapped	src/legion_runtime/legion_tasks.h	/^      std::vector<bool> locally_mapped;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
localstat	src/lua_src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
localtime	src/nautilus/libccompat.c	/^struct tm *localtime(const time_t *timer)$/;"	f
lock	include/nautilus/barrier.h	/^    spinlock_t lock; \/* SLOW *\/$/;"	m	struct:nk_barrier
lock	include/nautilus/buddy.h	/^    spinlock_t lock;$/;"	m	struct:buddy_mempool
lock	include/nautilus/condvar.h	/^    NK_LOCK_T lock;$/;"	m	struct:nk_condvar
lock	include/nautilus/queue.h	/^    spinlock_t lock;$/;"	m	struct:nk_queue
lock	include/nautilus/random.h	/^    spinlock_t lock;$/;"	m	struct:nk_rand_info
lock	include/nautilus/rwlock.h	/^    spinlock_t lock;$/;"	m	struct:nk_rwlock
lock	include/nautilus/smp.h	/^    spinlock_t lock;$/;"	m	struct:cpu
lock	include/nautilus/thread.h	/^    int lock;$/;"	m	struct:nk_thread
lock	include/nautilus/ticketlock.h	/^    } lock;$/;"	m	union:nk_ticket_lock	typeref:struct:nk_ticket_lock::__anon55
lock	src/arch/k1om/xeon_phi.c	/^  spinlock_t lock;$/;"	m	struct:__anon128	file:
lock	src/dev/ata.c	/^    spinlock_t lock;$/;"	m	struct:ata_blkdev_state	file:
lock	src/dev/ramdisk.c	/^    spinlock_t lock;$/;"	m	struct:ramdisk_state	file:
lock	src/legion_runtime/legion.h	/^      Lock lock;$/;"	m	struct:LegionRuntime::HighLevel::LockRequest
lock	src/legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockDestruction	file:
lock	src/legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
lock	src/legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	class:LegionRuntime::LowLevel::DeferredUnlockRequest	file:
lock	src/legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	struct:LegionRuntime::LowLevel::LockGrantArgs	file:
lock	src/legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	struct:LegionRuntime::LowLevel::LockReleaseArgs	file:
lock	src/legion_runtime/lowlevel.cc	/^      Reservation lock;$/;"	m	struct:LegionRuntime::LowLevel::LockRequestArgs	file:
lock	src/legion_runtime/lowlevel_impl.h	/^      GASNetHSL lock;$/;"	m	class:LegionRuntime::LowLevel::DynamicTable
lock	src/legion_runtime/lowlevel_impl.h	/^      GASNetHSL lock;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
lock	src/legion_runtime/lowlevel_impl.h	/^      LT lock;$/;"	m	struct:LegionRuntime::LowLevel::DynamicTableNodeBase
lock	src/legion_runtime/lowlevel_impl.h	/^      Reservation::Impl *lock;$/;"	m	class:LegionRuntime::LowLevel::ExclusiveAccess
lock	src/legion_runtime/lowlevel_impl.h	/^      Reservation::Impl *lock;$/;"	m	class:LegionRuntime::LowLevel::SharedAccess
lock	src/legion_runtime/lowlevel_impl.h	/^      Reservation::Impl lock;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
lock	src/legion_runtime/lowlevel_impl.h	/^      Reservation::Impl lock;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
lock	src/legion_runtime/lowlevel_impl.h	/^      Reservation::Impl lock;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
lock	src/legion_runtime/lowlevel_impl.h	/^      void lock(void) { gasnet_hsl_lock(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
lock	src/legion_runtime/runtime.h	/^      Reservation lock;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
lock	src/legion_runtime/utilities.h	/^    void lock(void) {$/;"	f	class:LegionRuntime::ImmovableLock
lock	src/nautilus/fs.c	/^    spinlock_t lock;$/;"	m	struct:nk_fs_open_file_state	file:
lock	src/nautilus/scheduler.c	/^    spinlock_t             lock;$/;"	m	struct:nk_sched_percpu_state	file:
lock	src/nautilus/scheduler.c	/^    spinlock_t          lock;$/;"	m	struct:nk_sched_global_state	file:
lock	src/test/benchmark.c	/^	MUTEX_T lock;$/;"	m	struct:container	file:
lock_id	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
lock_trace_file	src/legion_runtime/lowlevel.cc	/^    static char *lock_trace_file = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
locked	include/nautilus/mcslock.h	/^    int locked;$/;"	m	struct:nk_mcs_lock
locked_data	src/legion_runtime/lowlevel_impl.h	/^      CoherentData locked_data;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
locked_data	src/legion_runtime/lowlevel_impl.h	/^      } locked_data;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	typeref:struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
locvars	include/lua/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto
log	src/legion_runtime/legion_logging.cc	/^    void TreeStateLogger::log(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
log	src/legion_runtime/legion_spy.cc	/^    void TreeStateLogger::log(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
log	src/legion_runtime/utilities.h	/^    static inline void log(LogLevel level, int category, const char *fmt, ...)$/;"	f	class:LegionRuntime::Logger
log	src/nautilus/libccompat.c	/^double log(double x)$/;"	f
log10	src/nautilus/libccompat.c	/^double log10(double x)$/;"	f
log_address	include/acpi/actbl2.h	/^	uint64_t log_address;	\/* Address of the event log area *\/$/;"	m	struct:acpi_table_tcpa
log_close_operation	src/legion_runtime/legion_logging.h	/^      static inline void log_close_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_close_operation	src/legion_runtime/legion_spy.h	/^      static inline void log_close_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_copy_operation	src/legion_runtime/legion_logging.h	/^      static inline void log_copy_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_copy_operation	src/legion_runtime/legion_spy.h	/^      static inline void log_copy_operation(IDType src_inst,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_copy_operation	src/legion_runtime/legion_spy.h	/^      static inline void log_copy_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_deletion_operation	src/legion_runtime/legion_logging.h	/^      static inline void log_deletion_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_deletion_operation	src/legion_runtime/legion_spy.h	/^      static inline void log_deletion_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_event_dependence	src/legion_runtime/legion_logging.h	/^      static inline void log_event_dependence(Processor p, $/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_event_dependence	src/legion_runtime/legion_spy.h	/^      static inline void log_event_dependence(Event one, Event two)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_event_dependences	src/legion_runtime/legion_logging.h	/^      static inline void log_event_dependences(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_event_dependences	src/legion_runtime/legion_spy.h	/^      static inline void log_event_dependences($/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_fence_operation	src/legion_runtime/legion_logging.h	/^      static inline void log_fence_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_fence_operation	src/legion_runtime/legion_spy.h	/^      static inline void log_fence_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_field_creation	src/legion_runtime/legion_logging.h	/^      static inline void log_field_creation(Processor p, FieldSpace handle, $/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_field_creation	src/legion_runtime/legion_spy.h	/^      static inline void log_field_creation(unsigned unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_field_space	src/legion_runtime/legion_logging.h	/^      static inline void log_field_space(Processor p, FieldSpace handle)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_field_space	src/legion_runtime/legion_spy.h	/^      static inline void log_field_space(unsigned unique_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_future_nowait	src/legion_runtime/legion_logging.h	/^      static inline void log_future_nowait(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_future_wait_begin	src/legion_runtime/legion_logging.h	/^      static inline void log_future_wait_begin(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_future_wait_end	src/legion_runtime/legion_logging.h	/^      static inline void log_future_wait_end(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_implicit_dependence	src/legion_runtime/legion_spy.h	/^      static inline void log_implicit_dependence(Event one, Event two)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_partition	src/legion_runtime/legion_logging.h	/^      static inline void log_index_partition(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_partition	src/legion_runtime/legion_spy.h	/^      static inline void log_index_partition(IDType parent_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_slice	src/legion_runtime/legion_logging.h	/^      static inline void log_index_slice(Processor p, UniqueID index_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_slice	src/legion_runtime/legion_spy.h	/^      static inline void log_index_slice(UniqueID index_id, UniqueID slice_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_space_task	src/legion_runtime/legion_logging.h	/^      static inline void log_index_space_task(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_subspace	src/legion_runtime/legion_logging.h	/^      static inline void log_index_subspace(Processor p, IndexPartition parent,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_index_subspace	src/legion_runtime/legion_spy.h	/^      static inline void log_index_subspace(IDType parent_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_index_task	src/legion_runtime/legion_spy.h	/^      static inline void log_index_task(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_individual_task	src/legion_runtime/legion_logging.h	/^      static inline void log_individual_task(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_individual_task	src/legion_runtime/legion_spy.h	/^      static inline void log_individual_task(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_inline_nowait	src/legion_runtime/legion_logging.h	/^      static inline void log_inline_nowait(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_inline_wait_begin	src/legion_runtime/legion_logging.h	/^      static inline void log_inline_wait_begin(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_inline_wait_end	src/legion_runtime/legion_logging.h	/^      static inline void log_inline_wait_end(Processor p, UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_logical_requirement	src/legion_runtime/legion_logging.h	/^      static inline void log_logical_requirement(Processor p, $/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_logical_requirement	src/legion_runtime/legion_spy.h	/^      static inline void log_logical_requirement(UniqueID unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_lowlevel_copy	src/legion_runtime/legion_logging.h	/^      static inline void log_lowlevel_copy(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_lowlevel_copy_association	src/legion_runtime/legion_logging.h	/^      static inline void log_lowlevel_copy_association(Event highlevel_end_event,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_lowlevel_copy_channel	src/legion_runtime/legion_logging.h	/^      static inline void log_lowlevel_copy_channel(unsigned id, const char* name)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_machine	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::log_machine(Machine *machine)$/;"	f	class:LegionRuntime::HighLevel::Runtime
log_mapping_dependence	src/legion_runtime/legion_logging.h	/^      static inline void log_mapping_dependence(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_mapping_dependence	src/legion_runtime/legion_spy.h	/^      static inline void log_mapping_dependence(UniqueID context, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_mapping_operation	src/legion_runtime/legion_logging.h	/^      static inline void log_mapping_operation(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_mapping_operation	src/legion_runtime/legion_spy.h	/^      static inline void log_mapping_operation(UniqueID context,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_mem_mem_affinity	src/legion_runtime/legion_logging.h	/^      static void log_mem_mem_affinity(Memory mem1, Memory mem2,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_mem_mem_affinity	src/legion_runtime/legion_spy.h	/^      static inline void log_mem_mem_affinity(IDType mem1, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_memory	src/legion_runtime/legion_logging.h	/^      static void log_memory(Memory mem, Memory::Kind kind,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_memory	src/legion_runtime/legion_spy.h	/^      static inline void log_memory(IDType unique_id, size_t capacity)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_op_events	src/legion_runtime/legion_spy.h	/^      static inline void log_op_events(UniqueID uid, Event start_event,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_op_user	src/legion_runtime/legion_spy.h	/^      static inline void log_op_user(UniqueID user,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_operation_events	src/legion_runtime/legion_logging.h	/^      static inline void log_operation_events(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_physical_instance	src/legion_runtime/legion_logging.h	/^      static inline void log_physical_instance(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_physical_instance	src/legion_runtime/legion_spy.h	/^      static inline void log_physical_instance(IDType inst_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_physical_reduction	src/legion_runtime/legion_spy.h	/^      static inline void log_physical_reduction(IDType inst_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_physical_user	src/legion_runtime/legion_logging.h	/^      static inline void log_physical_user(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_point_point	src/legion_runtime/legion_logging.h	/^      static inline void log_point_point(Processor p, UniqueID orig_point,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_point_point	src/legion_runtime/legion_spy.h	/^      static inline void log_point_point(UniqueID p1, UniqueID p2)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_proc_mem_affinity	src/legion_runtime/legion_logging.h	/^      static void log_proc_mem_affinity(Processor proc, Memory mem,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_proc_mem_affinity	src/legion_runtime/legion_spy.h	/^      static inline void log_proc_mem_affinity(IDType proc_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_processor	src/legion_runtime/legion_logging.h	/^      static void log_processor(Processor proc, Processor utility,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_processor	src/legion_runtime/legion_spy.h	/^      static inline void log_processor(IDType unique_id, IDType util_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_requirement	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::log_requirement(UniqueID uid, unsigned idx,$/;"	f	class:LegionRuntime::HighLevel::TaskOp
log_requirement_fields	src/legion_runtime/legion_spy.h	/^      static inline void log_requirement_fields(UniqueID unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_slice_point	src/legion_runtime/legion_logging.h	/^      static inline void log_slice_point(Processor p, UniqueID slice_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_slice_point	src/legion_runtime/legion_spy.h	/^      static inline void log_slice_point(UniqueID slice_id, UniqueID point_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_slice_slice	src/legion_runtime/legion_logging.h	/^      static inline void log_slice_slice(Processor p, UniqueID slice_parent,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_slice_slice	src/legion_runtime/legion_spy.h	/^      static inline void log_slice_slice(UniqueID slice_one, UniqueID slice_two)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_task_collection	src/legion_runtime/legion_logging.h	/^      static inline void log_task_collection(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_task_instance_requirement	src/legion_runtime/legion_logging.h	/^      static inline void log_task_instance_requirement(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_task_instance_requirement	src/legion_runtime/legion_spy.h	/^      static inline void log_task_instance_requirement(UniqueID unique_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_task_instance_variant	src/legion_runtime/legion_logging.h	/^      static inline void log_task_instance_variant(Processor p,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_task_variant	src/legion_runtime/legion_logging.h	/^      static inline void log_task_variant(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_timing_event	src/legion_runtime/legion_logging.h	/^      static inline void log_timing_event(Processor p, Event event,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_timing_event	src/legion_runtime/legion_logging.h	/^      static inline void log_timing_event(Processor p, UniqueID unique_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_index_space	src/legion_runtime/legion_logging.h	/^      static inline void log_top_index_space(Processor p, IndexSpace space)$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_index_space	src/legion_runtime/legion_spy.h	/^      static inline void log_top_index_space(IDType unique_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_top_level_task	src/legion_runtime/legion_logging.h	/^      static inline void log_top_level_task(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_level_task	src/legion_runtime/legion_spy.h	/^      static inline void log_top_level_task(Processor::TaskFuncID task_id,$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_top_region	src/legion_runtime/legion_logging.h	/^      static inline void log_top_region(Processor p, IndexSpace ispace,$/;"	f	namespace:LegionRuntime::HighLevel::LegionLogging
log_top_region	src/legion_runtime/legion_spy.h	/^      static inline void log_top_region(IDType index_space, $/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_utility_processor	src/legion_runtime/legion_spy.h	/^      static inline void log_utility_processor(IDType unique_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionSpy
log_vc	src/nautilus/vc.c	/^static struct nk_virtual_console *log_vc = NULL;$/;"	v	typeref:struct:nk_virtual_console	file:
logger_lock	src/legion_runtime/legion_spy.h	/^      Reservation logger_lock;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
logging_buffer_size	src/legion_runtime/utilities.h	/^    static const int logging_buffer_size = (1 << 20);$/;"	m	class:LegionRuntime::Logger
logging_region_tree_state	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::logging_region_tree_state = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
logging_region_tree_state	src/legion_runtime/runtime.h	/^      static bool logging_region_tree_state;$/;"	m	class:LegionRuntime::HighLevel::Runtime
logical_byte_offset	src/acpi/acpica/aclocal.h	/^	u32 logical_byte_offset;$/;"	m	struct:acpi_parse_obj_asl
logical_fields	src/legion_runtime/legion_logging.h	/^        const std::set<FieldID> &logical_fields;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
logical_line_number	src/acpi/acpica/aclocal.h	/^	u32 logical_line_number;$/;"	m	struct:acpi_parse_obj_asl
logical_logging_only	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::logical_logging_only = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
logical_logging_only	src/legion_runtime/runtime.h	/^      static bool logical_logging_only;$/;"	m	class:LegionRuntime::HighLevel::Runtime
logical_node	src/legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
logical_node	src/legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::LogicalView
logical_node	src/legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
logical_node	src/legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
logical_node	src/legion_runtime/region_tree.h	/^      RegionTreeNode *const logical_node;$/;"	m	class:LegionRuntime::HighLevel::WARAnalyzer
logical_nodes	src/legion_runtime/region_tree.h	/^      std::set<PartitionNode*> logical_nodes;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
logical_nodes	src/legion_runtime/region_tree.h	/^      std::set<RegionNode*> logical_nodes;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
logical_nodes	src/legion_runtime/region_tree.h	/^      std::set<RegionNode*> logical_nodes;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
logical_only	src/legion_runtime/legion_spy.h	/^      const bool logical_only;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
logical_part	src/legion_runtime/legion_ops.h	/^      LogicalPartition logical_part;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
logical_region	src/legion_runtime/legion.h	/^      LogicalRegion                     logical_region;$/;"	m	class:LegionRuntime::HighLevel::Acquire
logical_region	src/legion_runtime/legion.h	/^      LogicalRegion                     logical_region;$/;"	m	class:LegionRuntime::HighLevel::Release
logical_region	src/legion_runtime/legion.h	/^      LogicalRegion                   logical_region;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
logical_region	src/legion_runtime/legion.h	/^      LogicalRegion                   logical_region;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
logical_region	src/legion_runtime/legion_ops.h	/^      LogicalRegion logical_region;$/;"	m	class:LegionRuntime::HighLevel::DeletionOp
logical_state_size	src/legion_runtime/region_tree.h	/^      size_t logical_state_size;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
logical_states	src/legion_runtime/region_tree.h	/^      LegionStack<LogicalState,MAX_CONTEXTS,DEFAULT_CONTEXTS> logical_states;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
logvprintf	src/legion_runtime/lowlevel.cc	/^  \/*static*\/ void Logger::logvprintf(LogLevel level, int category, const char *fmt, va_list args)$/;"	f	class:LegionRuntime::Logger
logvprintf	src/legion_runtime/shared_lowlevel.cc	/^  \/*static*\/ void Logger::logvprintf(LogLevel level, int category, const char *fmt, va_list args)$/;"	f	class:LegionRuntime::Logger
lookahead	include/lua/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookup_entry	src/legion_runtime/lowlevel_impl.h	/^    typename DynamicTable<ALLOCATOR>::ET *DynamicTable<ALLOCATOR>::lookup_entry(IT index, int owner, typename ALLOCATOR::FreeList *free_list \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
lookup_lock	src/legion_runtime/region_tree.h	/^      Reservation lookup_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
loop	src/asm/thread_lowlevel.S	/^loop:$/;"	l
loop1	src/asm/excp_early.S	/^loop1:$/;"	l
loop_count	src/acpi/acpica/aclocal.h	/^	u32 loop_count;		\/* While() loop counter *\/$/;"	m	struct:acpi_control_state
lopcodes_c	src/lua_src/lopcodes.c	8;"	d	file:
lopcodes_h	include/lua/lopcodes.h	8;"	d
loslib_c	src/lua_src/loslib.c	16;"	d	file:
lottery_get_next_aperiodic	src/nautilus/scheduler.c	/^static inline rt_thread *lottery_get_next_aperiodic(rt_scheduler *s)$/;"	f	file:
lottery_put_aperiodic	src/nautilus/scheduler.c	/^static inline int lottery_put_aperiodic(rt_scheduler *s, rt_thread *t)$/;"	f	file:
lottery_remove_aperiodic	src/nautilus/scheduler.c	/^static inline rt_thread *lottery_remove_aperiodic(rt_scheduler *s, rt_thread *t)$/;"	f	file:
low_id	src/legion_runtime/legion.h	/^        Processor::TaskFuncID low_id;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
low_level	include/acpi/actbl1.h	/^	uint32_t low_level;$/;"	m	struct:acpi_table_sbst
low_lock	src/legion_runtime/legion_utilities.h	/^      Reservation low_lock;$/;"	m	class:LegionRuntime::HighLevel::AutoLock
lower	src/legion_runtime/rectangle_set.h	/^      Segment<T> *lower, *higher;$/;"	m	struct:LegionRuntime::HighLevel::SplitSegment
lower_targets	src/legion_runtime/region_tree.h	/^      std::vector<MaterializedView*> lower_targets;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
lower_x	src/legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
lower_y	src/legion_runtime/rectangle_set.h	/^      T lower_x, lower_y, higher_x, higher_y;$/;"	m	struct:LegionRuntime::HighLevel::RebuildRect
lowest_dstates	include/acpi/actypes.h	/^	uint8_t lowest_dstates[5];	\/* _sx_w values: 0xFF indicates not valid *\/$/;"	m	struct:acpi_device_info
lowlevel_end_event	src/legion_runtime/legion_logging.h	/^        Event lowlevel_end_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyAssoc
lowlevel_kind	src/legion_runtime/lowlevel_impl.h	/^      Kind lowlevel_kind;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
lp	src/test/hpcg/vector.h	/^    lp(size_t index = 0) const$/;"	f	struct:lgncg::Vector
lparser_c	src/lua_src/lparser.c	11;"	d	file:
lparser_h	include/lua/lparser.h	8;"	d
lptr	src/legion_runtime/lowlevel.h	/^	void *lptr;$/;"	m	class:LegionRuntime::LowLevel::DomainLinearization
lr	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::LogicalRegion lr;$/;"	m	struct:lgncg::Vector
lrand48	src/nautilus/libccompat.c	/^lrand48 (void)$/;"	f
ls	include/lua/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
lseek64	src/nautilus/libccompat.c	/^uint64_t lseek64 (int fd, uint64_t offset, int whence)$/;"	f
lsizenode	include/lua/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of `node' array *\/$/;"	m	struct:Table
lstate_c	src/lua_src/lstate.c	11;"	d	file:
lstate_c	src/lua_src/lua_open.c	11;"	d	file:
lstate_h	include/lua/lstate.h	8;"	d
lstop	src/lua_src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	src/lua_src/lstring.c	10;"	d	file:
lstring_h	include/lua/lstring.h	8;"	d
lstrlib_c	src/lua_src/lstrlib.c	14;"	d	file:
ltable_c	src/lua_src/ltable.c	23;"	d	file:
ltable_h	include/lua/ltable.h	8;"	d
ltablib_c	src/lua_src/ltablib.c	11;"	d	file:
ltm_c	src/lua_src/ltm.c	10;"	d	file:
ltm_h	include/lua/ltm.h	8;"	d
ltolower	include/lua/lctype.h	67;"	d
ltolower	include/lua/lctype.h	90;"	d
lu_byte	include/lua/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_int32	include/lua/llimits.h	/^typedef unsigned LUA_INT32 lu_int32;$/;"	t
lu_mem	include/lua/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
luaB_assert	src/lua_src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	src/lua_src/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	src/lua_src/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	src/lua_src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	src/lua_src/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	src/lua_src/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	src/lua_src/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	src/lua_src/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	src/lua_src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	src/lua_src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	src/lua_src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	src/lua_src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	src/lua_src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	src/lua_src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	src/lua_src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	src/lua_src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	src/lua_src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	src/lua_src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	src/lua_src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	src/lua_src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	src/lua_src/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	src/lua_src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	src/lua_src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	src/lua_src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	src/lua_src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	src/lua_src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	src/lua_src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_xpcall	src/lua_src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	src/lua_src/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrier	include/lua/lgc.h	127;"	d
luaC_barrier_	src/lua_src/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback	include/lua/lgc.h	130;"	d
luaC_barrierback_	src/lua_src/lgc.c	/^void luaC_barrierback_ (lua_State *L, GCObject *o) {$/;"	f
luaC_barrierproto	include/lua/lgc.h	140;"	d
luaC_barrierproto_	src/lua_src/lgc.c	/^LUAI_FUNC void luaC_barrierproto_ (lua_State *L, Proto *p, Closure *c) {$/;"	f
luaC_changemode	src/lua_src/lgc.c	/^void luaC_changemode (lua_State *L, int mode) {$/;"	f
luaC_checkGC	include/lua/lgc.h	124;"	d
luaC_checkfinalizer	src/lua_src/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_checkupvalcolor	src/lua_src/lgc.c	/^void luaC_checkupvalcolor (global_State *g, UpVal *uv) {$/;"	f
luaC_condGC	include/lua/lgc.h	122;"	d
luaC_forcestep	src/lua_src/lgc.c	/^void luaC_forcestep (lua_State *L) {$/;"	f
luaC_freeallobjects	src/lua_src/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	src/lua_src/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	src/lua_src/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz, GCObject **list,$/;"	f
luaC_objbarrier	include/lua/lgc.h	133;"	d
luaC_objbarrierback	include/lua/lgc.h	137;"	d
luaC_runtilstate	src/lua_src/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	src/lua_src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_white	include/lua/lgc.h	119;"	d
luaD_call	src/lua_src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults, int allowyield) {$/;"	f
luaD_checkstack	include/lua/ldo.h	16;"	d
luaD_growstack	src/lua_src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_hook	src/lua_src/ldo.c	/^void luaD_hook (lua_State *L, int event, int line) {$/;"	f
luaD_pcall	src/lua_src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	src/lua_src/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	src/lua_src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	src/lua_src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	src/lua_src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	src/lua_src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_shrinkstack	src/lua_src/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	src/lua_src/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_extendCI	src/lua_src/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	src/lua_src/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	src/lua_src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_setdebt	src/lua_src/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaF_close	src/lua_src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	src/lua_src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	src/lua_src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	src/lua_src/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	src/lua_src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	src/lua_src/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int n) {$/;"	f
luaF_newLclosure	src/lua_src/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int n) {$/;"	f
luaF_newproto	src/lua_src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	src/lua_src/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	src/lua_src/ldebug.c	/^l_noret luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_concaterror	src/lua_src/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	src/lua_src/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	src/lua_src/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	src/lua_src/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	src/lua_src/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	src/lua_src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	src/lua_src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	src/lua_src/ltable.c	/^const TValue *luaH_getint (Table *t, int key) {$/;"	f
luaH_getn	src/lua_src/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getstr	src/lua_src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	src/lua_src/ltable.c	/^int luaH_isdummy (Node *n) { return isdummy(n); }$/;"	f
luaH_mainposition	src/lua_src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	src/lua_src/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	src/lua_src/ltable.c	/^TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_next	src/lua_src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resize	src/lua_src/ltable.c	/^void luaH_resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f
luaH_resizearray	src/lua_src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	src/lua_src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setint	src/lua_src/ltable.c	/^void luaH_setint (lua_State *L, Table *t, int key, TValue *value) {$/;"	f
luaK_checkstack	src/lua_src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	src/lua_src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i) {$/;"	f	file:
luaK_codeABC	src/lua_src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	src/lua_src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	include/lua/lcode.h	41;"	d
luaK_codek	src/lua_src/lcode.c	/^int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f
luaK_concat	src/lua_src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	src/lua_src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	src/lua_src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	src/lua_src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	src/lua_src/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	src/lua_src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	src/lua_src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	src/lua_src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	src/lua_src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	src/lua_src/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	src/lua_src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	src/lua_src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	src/lua_src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	src/lua_src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_jumpto	include/lua/lcode.h	45;"	d
luaK_nil	src/lua_src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	src/lua_src/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchclose	src/lua_src/lcode.c	/^LUAI_FUNC void luaK_patchclose (FuncState *fs, int list, int level) {$/;"	f
luaK_patchlist	src/lua_src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	src/lua_src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	src/lua_src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op,$/;"	f
luaK_prefix	src/lua_src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f
luaK_reserveregs	src/lua_src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	src/lua_src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	src/lua_src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	src/lua_src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	include/lua/lcode.h	43;"	d
luaK_setoneret	src/lua_src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	src/lua_src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	src/lua_src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	src/lua_src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_Buffer	include/lua/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	include/lua/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	include/lua/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	include/lua/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Stream	include/lua/lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	include/lua/lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_addchar	include/lua/lauxlib.h	152;"	d
luaL_addlstring	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	include/lua/lauxlib.h	156;"	d
luaL_addstring	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	include/lua/lauxlib.h	113;"	d
luaL_argerror	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	src/lua_src/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_callmeta	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkint	include/lua/lauxlib.h	117;"	d
luaL_checkinteger	src/lua_src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklong	include/lua/lauxlib.h	119;"	d
luaL_checklstring	src/lua_src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	src/lua_src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checkstring	include/lua/lauxlib.h	115;"	d
luaL_checktype	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	src/lua_src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	src/lua_src/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_checkunsigned (lua_State *L, int narg) {$/;"	f
luaL_checkversion	include/lua/lauxlib.h	30;"	d
luaL_checkversion_	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver) {$/;"	f
luaL_dofile	include/lua/lauxlib.h	124;"	d
luaL_dostring	include/lua/lauxlib.h	127;"	d
luaL_error	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_findtable	src/lua_src/lauxlib.c	/^static const char *luaL_findtable (lua_State *L, int idx,$/;"	f	file:
luaL_getmetafield	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	include/lua/lauxlib.h	130;"	d
luaL_getsubtable	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	src/lua_src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_len	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbuffer	include/lua/lauxlib.h	134;"	d
luaL_loadbufferx	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	include/lua/lauxlib.h	78;"	d
luaL_loadfilex	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newlib	include/lua/lauxlib.h	111;"	d
luaL_newlibtable	include/lua/lauxlib.h	108;"	d
luaL_newmetatable	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	src/lua_src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlib	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_openlib (lua_State *L, const char *libname,$/;"	f
luaL_openlibs	src/lua_src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	include/lua/lauxlib.h	132;"	d
luaL_optint	include/lua/lauxlib.h	118;"	d
luaL_optinteger	src/lua_src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlong	include/lua/lauxlib.h	120;"	d
luaL_optlstring	src/lua_src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	src/lua_src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_optstring	include/lua/lauxlib.h	116;"	d
luaL_optunsigned	src/lua_src/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_optunsigned (lua_State *L, int narg,$/;"	f
luaL_prepbuffer	include/lua/lauxlib.h	167;"	d
luaL_prepbuffsize	src/lua_src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushmodule	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_pushmodule (lua_State *L, const char *modname,$/;"	f
luaL_pushresult	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	src/lua_src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_register	include/lua/lauxlib.h	205;"	d
luaL_requiref	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	src/lua_src/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	src/lua_src/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_typename	include/lua/lauxlib.h	122;"	d
luaL_unref	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	src/lua_src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_free	include/lua/lmem.h	30;"	d
luaM_freearray	include/lua/lmem.h	31;"	d
luaM_freemem	include/lua/lmem.h	29;"	d
luaM_growaux_	src/lua_src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_growvector	include/lua/lmem.h	40;"	d
luaM_malloc	include/lua/lmem.h	33;"	d
luaM_new	include/lua/lmem.h	34;"	d
luaM_newobject	include/lua/lmem.h	38;"	d
luaM_newvector	include/lua/lmem.h	35;"	d
luaM_realloc_	src/lua_src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocv	include/lua/lmem.h	24;"	d
luaM_reallocvector	include/lua/lmem.h	44;"	d
luaM_toobig	src/lua_src/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	src/lua_src/lobject.c	/^lua_Number luaO_arith (int op, lua_Number v1, lua_Number v2) {$/;"	f
luaO_ceillog2	src/lua_src/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	src/lua_src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	src/lua_src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_hexavalue	src/lua_src/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_int2fb	src/lua_src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_nilobject	include/lua/lobject.h	587;"	d
luaO_nilobject_	include/lua/lobject.h	/^LUAI_DDEC const TValue luaO_nilobject_;$/;"	v
luaO_nilobject_	src/lua_src/lobject.c	/^LUAI_DDEF const TValue luaO_nilobject_ = {NILCONSTANT};$/;"	v
luaO_pushfstring	src/lua_src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	src/lua_src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_str2d	src/lua_src/lobject.c	/^int luaO_str2d (const char *s, size_t len, lua_Number *result) {$/;"	f
luaP_opmodes	include/lua/lopcodes.h	/^LUAI_DDEC const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opmodes	src/lua_src/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opnames	include/lua/lopcodes.h	/^LUAI_DDEC const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaP_opnames	src/lua_src/lopcodes.c	/^LUAI_DDEF const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaS_eqlngstr	src/lua_src/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_eqstr	src/lua_src/lstring.c	/^int luaS_eqstr (TString *a, TString *b) {$/;"	f
luaS_fix	include/lua/lstring.h	22;"	d
luaS_hash	src/lua_src/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_new	src/lua_src/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newliteral	include/lua/lstring.h	19;"	d
luaS_newlstr	src/lua_src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	src/lua_src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	src/lua_src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_gettm	src/lua_src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	src/lua_src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	src/lua_src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames_	include/lua/ltm.h	/^LUAI_DDEC const char *const luaT_typenames_[LUA_TOTALTAGS];$/;"	v
luaT_typenames_	src/lua_src/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTAGS] = {$/;"	v
luaU_dump	src/lua_src/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	src/lua_src/lundump.c	/^void luaU_header (lu_byte* h)$/;"	f
luaU_undump	src/lua_src/lundump.c	/^Closure* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_arith	src/lua_src/lvm.c	/^void luaV_arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f
luaV_concat	src/lua_src/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_equalobj_	src/lua_src/lvm.c	/^int luaV_equalobj_ (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	src/lua_src/lvm.c	/^void luaV_execute (lua_State *L) {$/;"	f
luaV_finishOp	src/lua_src/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_gettable	src/lua_src/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessequal	src/lua_src/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	src/lua_src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_objlen	src/lua_src/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_rawequalobj	include/lua/lvm.h	22;"	d
luaV_settable	src/lua_src/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	src/lua_src/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	src/lua_src/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaX_init	src/lua_src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	src/lua_src/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	src/lua_src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	src/lua_src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	src/lua_src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	src/lua_src/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	src/lua_src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	src/lua_src/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_parser	src/lua_src/lparser.c	/^Closure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_buffer	include/lua/lzio.h	31;"	d
luaZ_bufflen	include/lua/lzio.h	33;"	d
luaZ_fill	src/lua_src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	include/lua/lzio.h	42;"	d
luaZ_init	src/lua_src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	include/lua/lzio.h	29;"	d
luaZ_openspace	src/lua_src/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	src/lua_src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	include/lua/lzio.h	35;"	d
luaZ_resizebuffer	include/lua/lzio.h	38;"	d
luaZ_sizebuffer	include/lua/lzio.h	32;"	d
lua_Alloc	include/lua/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	include/lua/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Debug	include/lua/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	include/lua/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	include/lua/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	include/lua/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Number	include/lua/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	include/lua/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	include/lua/lstate.h	/^struct lua_State {$/;"	s
lua_State	include/lua/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	include/lua/lobject.h	/^struct lua_TValue {$/;"	s
lua_Unsigned	include/lua/lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_Writer	include/lua/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_absindex	src/lua_src/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_arith	src/lua_src/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_assert	include/lua/llimits.h	66;"	d
lua_assert	include/lua/lualib.h	89;"	d
lua_atpanic	src/lua_src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	src/lua_src/lua.c	14;"	d	file:
lua_call	include/lua/lua.h	253;"	d
lua_callk	src/lua_src/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults, int ctx,$/;"	f
lua_checkmode	src/lua_src/liolib.c	42;"	d	file:
lua_checkstack	src/lua_src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_close	src/lua_src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_compare	src/lua_src/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	src/lua_src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	src/lua_src/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_cpcall	include/lua/luaconf.h	265;"	d
lua_createtable	src/lua_src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	src/lua_src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_equal	include/lua/luaconf.h	297;"	d
lua_error	src/lua_src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	src/lua_src/lua.c	75;"	d	file:
lua_freeline	src/lua_src/lua.c	83;"	d	file:
lua_gc	src/lua_src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	src/lua_src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getctx	src/lua_src/lapi.c	/^LUA_API int lua_getctx (lua_State *L, int *ctx) {$/;"	f
lua_getfield	src/lua_src/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	src/lua_src/lapi.c	/^LUA_API void lua_getglobal (lua_State *L, const char *var) {$/;"	f
lua_gethook	src/lua_src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	src/lua_src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	src/lua_src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	src/lua_src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	src/lua_src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	src/lua_src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	src/lua_src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	src/lua_src/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	src/lua_src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	src/lua_src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	src/lua_src/lapi.c	/^LUA_API void lua_getuservalue (lua_State *L, int idx) {$/;"	f
lua_h	include/lua/lua.h	10;"	d
lua_ident	src/lua_src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	src/lua_src/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_isboolean	include/lua/lua.h	335;"	d
lua_iscfunction	src/lua_src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	include/lua/lua.h	331;"	d
lua_islightuserdata	include/lua/lua.h	333;"	d
lua_isnil	include/lua/lua.h	334;"	d
lua_isnone	include/lua/lua.h	337;"	d
lua_isnoneornil	include/lua/lua.h	338;"	d
lua_isnumber	src/lua_src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	src/lua_src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	include/lua/lua.h	332;"	d
lua_isthread	include/lua/lua.h	336;"	d
lua_isuserdata	src/lua_src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_len	src/lua_src/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_lessthan	include/lua/luaconf.h	298;"	d
lua_load	src/lua_src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	include/lua/llimits.h	155;"	d
lua_longassert	include/lua/llimits.h	64;"	d
lua_longassert	include/lua/llimits.h	68;"	d
lua_longjmp	src/lua_src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_main	src/lua_src/lua.c	/^int lua_main (int argc, char **argv) {$/;"	f
lua_newstate	src/lua_src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newstate	src/lua_src/lua_open.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	include/lua/lua.h	325;"	d
lua_newthread	src/lua_src/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	src/lua_src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	src/lua_src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2int	include/lua/llimits.h	206;"	d
lua_number2int	include/lua/llimits.h	236;"	d
lua_number2int	include/lua/llimits.h	250;"	d
lua_number2int32	include/lua/llimits.h	227;"	d
lua_number2integer	include/lua/llimits.h	207;"	d
lua_number2integer	include/lua/llimits.h	241;"	d
lua_number2integer	include/lua/llimits.h	254;"	d
lua_number2str	include/lua/luaconf.h	404;"	d
lua_number2unsigned	include/lua/llimits.h	208;"	d
lua_number2unsigned	include/lua/llimits.h	237;"	d
lua_number2unsigned	include/lua/llimits.h	262;"	d
lua_number2unsigned	include/lua/llimits.h	265;"	d
lua_objlen	include/lua/luaconf.h	295;"	d
lua_panic	src/lua_src/lauxlib.c	/^static int lua_panic (lua_State *L) {$/;"	f	file:
lua_pcall	include/lua/lua.h	259;"	d
lua_pcallk	src/lua_src/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pclose	src/lua_src/liolib.c	62;"	d	file:
lua_pclose	src/lua_src/liolib.c	67;"	d	file:
lua_pclose	src/lua_src/liolib.c	74;"	d	file:
lua_pop	include/lua/lua.h	323;"	d
lua_popen	src/lua_src/liolib.c	61;"	d	file:
lua_popen	src/lua_src/liolib.c	66;"	d	file:
lua_popen	src/lua_src/liolib.c	72;"	d	file:
lua_pushboolean	src/lua_src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	src/lua_src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	include/lua/lua.h	329;"	d
lua_pushfstring	src/lua_src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushglobaltable	include/lua/lua.h	343;"	d
lua_pushinteger	src/lua_src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	src/lua_src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	include/lua/lua.h	340;"	d
lua_pushlstring	src/lua_src/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	src/lua_src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	src/lua_src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	src/lua_src/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	src/lua_src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	src/lua_src/lapi.c	/^LUA_API void lua_pushunsigned (lua_State *L, lua_Unsigned u) {$/;"	f
lua_pushvalue	src/lua_src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	src/lua_src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	src/lua_src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	src/lua_src/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	src/lua_src/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawgetp	src/lua_src/lapi.c	/^LUA_API void lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	src/lua_src/lapi.c	/^LUA_API size_t lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	src/lua_src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	src/lua_src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_rawsetp	src/lua_src/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	src/lua_src/lua.c	71;"	d	file:
lua_readline	src/lua_src/lua.c	79;"	d	file:
lua_register	include/lua/lua.h	327;"	d
lua_remove	src/lua_src/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_replace	src/lua_src/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_resume	src/lua_src/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs) {$/;"	f
lua_saveline	src/lua_src/lua.c	72;"	d	file:
lua_saveline	src/lua_src/lua.c	82;"	d	file:
lua_setallocf	src/lua_src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfield	src/lua_src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	src/lua_src/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *var) {$/;"	f
lua_sethook	src/lua_src/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlocal	src/lua_src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	src/lua_src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	src/lua_src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	src/lua_src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	src/lua_src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	src/lua_src/lapi.c	/^LUA_API void lua_setuservalue (lua_State *L, int idx) {$/;"	f
lua_status	src/lua_src/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	src/lua_src/lua.c	50;"	d	file:
lua_stdin_is_tty	src/lua_src/lua.c	54;"	d	file:
lua_stdin_is_tty	src/lua_src/lua.c	56;"	d	file:
lua_str2number	include/lua/luaconf.h	422;"	d
lua_strlen	include/lua/luaconf.h	293;"	d
lua_strx2number	include/lua/luaconf.h	425;"	d
lua_strx2number	src/lua_src/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_tmpnam	src/lua_src/loslib.c	52;"	d	file:
lua_tmpnam	src/lua_src/loslib.c	61;"	d	file:
lua_toboolean	src/lua_src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	src/lua_src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	include/lua/lua.h	320;"	d
lua_tointegerx	src/lua_src/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_tolstring	src/lua_src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	include/lua/lua.h	319;"	d
lua_tonumberx	src/lua_src/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_topointer	src/lua_src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	include/lua/lua.h	346;"	d
lua_tothread	src/lua_src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsigned	include/lua/lua.h	321;"	d
lua_tounsignedx	src/lua_src/lapi.c	/^LUA_API lua_Unsigned lua_tounsignedx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_touserdata	src/lua_src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	src/lua_src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	src/lua_src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	include/lua/llimits.h	156;"	d
lua_unsigned2number	include/lua/llimits.h	273;"	d
lua_upvalueid	src/lua_src/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvalueindex	include/lua/lua.h	41;"	d
lua_upvaluejoin	src/lua_src/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	src/lua_src/lapi.c	/^LUA_API const lua_Number *lua_version (lua_State *L) {$/;"	f
lua_xmove	src/lua_src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	include/lua/lua.h	273;"	d
lua_yieldk	src/lua_src/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, int ctx, lua_CFunction k) {$/;"	f
luai_Cast	include/lua/llimits.h	/^union luai_Cast { double l_d; LUA_INT32 l_p[2]; };$/;"	u
luai_apicheck	include/lua/llimits.h	78;"	d
luai_apicheck	include/lua/llimits.h	80;"	d
luai_checknum	include/lua/lobject.h	266;"	d
luai_checknum	include/lua/lobject.h	372;"	d
luai_checknum	include/lua/lobject.h	373;"	d
luai_ctype_	include/lua/lctype.h	/^LUAI_DDEC const lu_byte luai_ctype_[UCHAR_MAX + 2];$/;"	v
luai_ctype_	src/lua_src/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_hashnum	include/lua/llimits.h	232;"	d
luai_hashnum	include/lua/llimits.h	284;"	d
luai_jmpbuf	src/lua_src/ldo.c	58;"	d	file:
luai_jmpbuf	src/lua_src/ldo.c	64;"	d	file:
luai_jmpbuf	src/lua_src/ldo.c	70;"	d	file:
luai_makeseed	src/lua_src/lstate.c	51;"	d	file:
luai_numadd	include/lua/luaconf.h	442;"	d
luai_numdiv	include/lua/luaconf.h	445;"	d
luai_numeq	include/lua/luaconf.h	447;"	d
luai_numisnan	include/lua/luaconf.h	450;"	d
luai_numle	include/lua/luaconf.h	449;"	d
luai_numlt	include/lua/luaconf.h	448;"	d
luai_nummod	include/lua/luaconf.h	436;"	d
luai_nummul	include/lua/luaconf.h	444;"	d
luai_numpow	include/lua/luaconf.h	437;"	d
luai_numsub	include/lua/luaconf.h	443;"	d
luai_numunm	include/lua/luaconf.h	446;"	d
luai_runtimecheck	src/lua_src/lvm.c	490;"	d	file:
luai_threadyield	include/lua/llimits.h	160;"	d
luai_userstateclose	include/lua/llimits.h	174;"	d
luai_userstatefree	include/lua/llimits.h	182;"	d
luai_userstateopen	include/lua/llimits.h	170;"	d
luai_userstateresume	include/lua/llimits.h	186;"	d
luai_userstatethread	include/lua/llimits.h	178;"	d
luai_userstateyield	include/lua/llimits.h	190;"	d
luai_verifycode	src/lua_src/lundump.c	42;"	d	file:
luai_writeline	include/lua/luaconf.h	215;"	d
luai_writestring	include/lua/luaconf.h	214;"	d
luai_writestringerror	include/lua/luaconf.h	222;"	d
lualib_h	include/lua/lualib.h	9;"	d
luaopen_base	src/lua_src/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_bit32	src/lua_src/lbitlib.c	/^LUAMOD_API int luaopen_bit32 (lua_State *L) {$/;"	f
luaopen_coroutine	src/lua_src/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	src/lua_src/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	src/lua_src/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	src/lua_src/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_naut	src/lua_src/lnautlib.c	/^LUAMOD_API int luaopen_naut (lua_State *L) {$/;"	f
luaopen_os	src/lua_src/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	src/lua_src/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	src/lua_src/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	src/lua_src/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
lundump_c	src/lua_src/lundump.c	9;"	d	file:
lundump_h	include/lua/lundump.h	8;"	d
lvm_c	src/lua_src/lvm.c	12;"	d	file:
lvm_h	include/lua/lvm.h	8;"	d
lvt_stringify	src/dev/apic.c	/^lvt_stringify (uint32_t entry, char *buf)$/;"	f	file:
lwp	include/nautilus/cpuid.h	/^            uint8_t lwp         : 1; \/\/ lighweight profiling support$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
lxdialog-objs	scripts/kconfig/lxdialog/Makefile	/^lxdialog-objs := checklist.o menubox.o textbox.o yesno.o inputbox.o \\$/;"	m
lzio_c	src/lua_src/lzio.c	10;"	d	file:
lzio_h	include/lua/lzio.h	9;"	d
m	src/legion_runtime/lowlevel.cc	/^      Machine *m;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
m	src/legion_runtime/lowlevel.cc	/^      Memory m;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceArgs	file:
m	src/legion_runtime/lowlevel.cc	/^      Memory m;$/;"	m	struct:LegionRuntime::LowLevel::DestroyInstanceArgs	file:
m	src/legion_runtime/lowlevel.h	/^	Memory m;$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
m	src/legion_runtime/shared_lowlevel.cc	/^      Machine *m;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
m1	src/legion_runtime/lowlevel.h	/^	Memory m1, m2;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
m2	src/legion_runtime/lowlevel.h	/^	Memory m1, m2;$/;"	m	struct:LegionRuntime::LowLevel::Machine::MemoryMemoryAffinity
mIdxs	src/test/hpcg/sparsemat.h	/^    Vector mIdxs;$/;"	m	struct:lgncg::SparseMatrix
mac	include/nautilus/netdev.h	/^    uint8_t  mac[6];$/;"	m	struct:nk_net_dev_characteristics
mac_address	include/acpi/actbl2.h	/^	uint8_t mac_address[6];$/;"	m	struct:acpi_ibft_nic
mac_address_string	src/nautilus/printk.c	/^static char *mac_address_string(char *buf, char *end, uint8_t *addr,$/;"	f	file:
machine	src/legion_runtime/default_mapper.h	/^      Machine *const machine;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
machine	src/legion_runtime/mapping_utilities.h	/^        Machine *const machine;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
machine	src/legion_runtime/runtime.h	/^      Machine *const machine;$/;"	m	class:LegionRuntime::HighLevel::Runtime
machine	src/legion_runtime/shared_lowlevel.cc	/^      Machine *machine;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
machine_interface	src/legion_runtime/default_mapper.h	/^      MappingUtilities::MachineQueryInterface machine_interface;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
magic	include/acpi/actbl2.h	/^	char magic[4];$/;"	m	struct:acpi_slic_key
magic	include/nautilus/multiboot2.h	/^  multiboot_uint32_t magic;$/;"	m	struct:multiboot_header
main	scripts/basic/docproc.c	/^int main(int argc, char *argv[])$/;"	f
main	scripts/basic/fixdep.c	/^int main(int argc, char *argv[])$/;"	f
main	scripts/basic/split-include.c	/^int main(int argc, const char * argv [])$/;"	f
main	scripts/kallsyms.c	/^int main(int argc, char **argv)$/;"	f
main	scripts/kconfig/conf.c	/^int main(int ac, char **av)$/;"	f
main	scripts/kconfig/gconf.c	/^int main(int ac, char *av[])$/;"	f
main	scripts/kconfig/kxgettext.c	/^int main(int ac, char **av)$/;"	f
main	scripts/kconfig/lxdialog/lxdialog.c	/^int main(int argc, const char *const *argv)$/;"	f
main	scripts/kconfig/mconf.c	/^int main(int ac, char **av)$/;"	f
main	scripts/kconfig/qconf.cc	/^int main(int ac, char** av)$/;"	f
main	src/arch/hrt/main.c	/^main (unsigned long mbd, $/;"	f
main	src/arch/k1om/main.c	/^main (unsigned long mbd, unsigned long magic) $/;"	f
main	src/arch/x64/main.c	/^main (unsigned long mbd, $/;"	f
main	src/lua_src/test.c	/^int main()$/;"	f
main	src/test/benchmark.c	/^int main () {$/;"	f
main	xeon_phi/linux_usr/phi_console.c	/^main (int argc, char ** argv)$/;"	f
mainTask	src/test/hpcg/hpcg-main.cc	/^mainTask(const lrthl::Task *task,$/;"	f	namespace:__anon117
main_seq	include/nautilus/condvar.h	/^    unsigned long long main_seq;$/;"	m	struct:nk_condvar
main_task	src/test/saxpy_array.cc	/^void main_task(const void *args, size_t arglen,$/;"	f
main_thread_gate	src/acpi/acpica/aclocal.h	/^	acpi_handle main_thread_gate;$/;"	m	struct:acpi_db_method_info
main_wnd	scripts/kconfig/gconf.c	/^GtkWidget *main_wnd = NULL;$/;"	v
mainfunc	src/lua_src/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainposition	src/lua_src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
mainthread	include/lua/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
major	include/nautilus/multiboot2.h	/^  multiboot_uint8_t major;$/;"	m	struct:multiboot_tag_smbios
make_persistent	src/legion_runtime/legion.h	/^      bool make_persistent;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
make_persistent	src/legion_runtime/region_tree.cc	/^    void InstanceManager::make_persistent(AddressSpaceID origin)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
make_persistent	src/legion_runtime/region_tree.cc	/^    void MaterializedView::make_persistent(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
make_point	src/legion_runtime/arrays.h	/^    inline Point<1> make_point(int x)$/;"	f	namespace:LegionRuntime::Arrays
make_point	src/legion_runtime/arrays.h	/^    inline Point<2> make_point(int x, int y)$/;"	f	namespace:LegionRuntime::Arrays
make_point	src/legion_runtime/arrays.h	/^    inline Point<3> make_point(int x, int y, int z)$/;"	f	namespace:LegionRuntime::Arrays
makemask	src/lua_src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makeseed	src/lua_src/lstate.c	/^static unsigned int makeseed (lua_State *L) {$/;"	f	file:
makewhite	src/lua_src/lgc.c	59;"	d	file:
malloc	src/nautilus/mm/kmem.c	/^malloc (size_t size)$/;"	f
malloc_data	include/nautilus/instrument.h	/^struct malloc_data {$/;"	s
malloc_test	src/test/benchmark.c	/^malloc_test (void)$/;"	f
mallocstat	include/nautilus/instrument.h	/^    struct malloc_data mallocstat;$/;"	m	struct:nk_instr_data	typeref:struct:nk_instr_data::malloc_data
manager	src/legion_runtime/region_tree.h	/^      InstanceManager *const manager;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
manager	src/legion_runtime/region_tree.h	/^      ReductionManager *const manager;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
manager	src/legion_runtime/runtime.h	/^        ProcessorManager *manager;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::DeferredTriggerArgs
manager	src/legion_runtime/runtime.h	/^        ProcessorManager *manager;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerOpArgs
manager	src/legion_runtime/runtime.h	/^        ProcessorManager *manager;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerTaskArgs
manager_lock	src/legion_runtime/runtime.h	/^      Reservation manager_lock;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
managers	src/legion_runtime/region_tree.h	/^                     PHYSICAL_MANAGER_ALLOC>::map managers;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
mantissa0	src/nautilus/libccompat.c	/^        uint32_t mantissa0 : 20;$/;"	m	struct:ieee754dbl::__anon130	file:
mantissa1	src/nautilus/libccompat.c	/^        uint32_t mantissa1 : 32;$/;"	m	struct:ieee754dbl::__anon130	file:
map	src/legion_runtime/legion_allocation.h	/^                       LegionAllocator<std::pair<const T1, T2>, A> > map;$/;"	t	struct:LegionRuntime::HighLevel::LegionKeyValue
mapIdx	scripts/kconfig/qconf.h	/^	int mapIdx(colIdx idx)$/;"	f	class:ConfigList
map_all_regions	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::map_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
map_all_regions	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::map_all_regions(Processor target, Event user_event,$/;"	f	class:LegionRuntime::HighLevel::SingleTask
map_all_regions	src/legion_runtime/runtime.cc	/^    void Runtime::map_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
map_and_launch	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::map_and_launch(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
map_and_launch	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::map_and_launch(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
map_copy	src/legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_copy(Copy *copy)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_copy	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_copy(Copy *copy)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_copy	src/test/hpcg/cg-mapper.h	/^CGMapper::map_copy(LegionRuntime::HighLevel::Copy *copy)$/;"	f	class:CGMapper
map_id	src/legion_runtime/legion.h	/^      MapperID                            map_id;$/;"	m	class:LegionRuntime::HighLevel::Mappable
map_id	src/legion_runtime/legion.h	/^      MapperID                           map_id;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
map_id	src/legion_runtime/legion.h	/^      MapperID                           map_id;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
map_id	src/legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
map_id	src/legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
map_id	src/legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::InlineLauncher
map_id	src/legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
map_id	src/legion_runtime/legion.h	/^      MapperID                        map_id;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
map_id	src/legion_runtime/runtime.h	/^        MapperID map_id;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
map_id	src/legion_runtime/runtime.h	/^      const MapperID map_id;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
map_inline	src/legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_inline(Inline *inline_op)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_inline	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_inline(Inline *inline_op)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_inline	src/test/circuit_mapper.cc	/^bool CircuitMapper::map_inline(Inline *inline_operation)$/;"	f	class:CircuitMapper
map_inline	src/test/hpcg/cg-mapper.h	/^CGMapper::map_inline(LegionRuntime::HighLevel::Inline *inline_operation) {$/;"	f	class:CGMapper
map_locally	src/legion_runtime/legion.h	/^      bool                                map_locally;$/;"	m	class:LegionRuntime::HighLevel::Task
map_logical_to_physical_get	src/fs/ext2/ext2.c	372;"	d	file:
map_logical_to_physical_get_put	src/fs/ext2/ext2.c	/^static int map_logical_to_physical_get_put(struct ext2_state *fs, uint32_t inode_num, struct ext2_inode *their_inode, uint32_t logical_block, uint32_t *physical_block, int put)$/;"	f	file:
map_logical_to_physical_put	src/fs/ext2/ext2.c	374;"	d	file:
map_must_epoch	src/legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_must_epoch(const std::vector<Task*> &tasks,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_op_lock	src/legion_runtime/runtime.h	/^      Reservation map_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
map_over_open_files	src/nautilus/fs.c	/^static void map_over_open_files(void (*callback)(nk_fs_fd_t)) $/;"	f	file:
map_phi	xeon_phi/linux_usr/phi_console.c	/^map_phi (void)$/;"	f	file:
map_physical_region	src/legion_runtime/region_tree.cc	/^    MappingRef RegionTreeForest::map_physical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
map_physical_region	src/legion_runtime/region_tree.cc	/^    bool MappingTraverser::map_physical_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
map_reduction_region	src/legion_runtime/region_tree.cc	/^    bool MappingTraverser::map_reduction_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
map_region	src/legion_runtime/legion.cc	/^    PhysicalRegion HighLevelRuntime::map_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
map_region	src/legion_runtime/legion.cc	/^    PhysicalRegion HighLevelRuntime::map_region(Context ctx, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
map_region	src/legion_runtime/runtime.cc	/^    PhysicalRegion Runtime::map_region(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
map_region	src/legion_runtime/runtime.cc	/^    PhysicalRegion Runtime::map_region(Context ctx, unsigned idx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
map_region_virtually	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_region_virtually(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_task	src/legion_runtime/default_mapper.cc	/^    bool DefaultMapper::map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
map_task	src/legion_runtime/legion_ops.cc	/^    void MustEpochMapper::map_task(SingleTask *task)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
map_task	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_task	src/test/circuit_mapper.cc	/^bool CircuitMapper::map_task(Task *task)$/;"	f	class:CircuitMapper
map_task	src/test/custom_mapper.cc	/^bool AdversarialMapper::map_task(Task *task)$/;"	f	class:AdversarialMapper
map_task	src/test/hpcg/cg-mapper.h	/^CGMapper::map_task(LegionRuntime::HighLevel::Task *task)$/;"	f	class:CGMapper
map_task_locally	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_task_locally(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_task_region	src/legion_runtime/alt_mappers.cc	/^    bool DebugMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::DebugMapper
map_task_region	src/legion_runtime/alt_mappers.cc	/^    bool SequoiaMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
map_task_region	src/legion_runtime/alt_mappers.cc	/^    bool SharedMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::SharedMapper
map_task_region	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::map_task_region(const Task *task, Processor target, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
map_tasks	src/legion_runtime/legion_ops.cc	/^    bool MustEpochMapper::map_tasks(const std::set<SingleTask*> &single_tasks)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
map_to_gpus	src/test/circuit_mapper.h	/^  bool map_to_gpus;$/;"	m	class:CircuitMapper
mappable	src/legion_runtime/region_tree.h	/^      Mappable *const mappable;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
mapped	src/legion_runtime/legion_ops.h	/^      bool mapped;$/;"	m	class:LegionRuntime::HighLevel::Operation
mapped	src/legion_runtime/runtime.h	/^      bool mapped; \/\/ whether it is currently mapped$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
mapped_length	include/acpi/actypes.h	/^	acpi_size mapped_length;$/;"	m	struct:acpi_mem_space_context
mapped_logical_address	include/acpi/actypes.h	/^	uint8_t *mapped_logical_address;$/;"	m	struct:acpi_mem_space_context
mapped_physical_address	include/acpi/actypes.h	/^	acpi_physical_address mapped_physical_address;$/;"	m	struct:acpi_mem_space_context
mapped_points	src/legion_runtime/legion_tasks.h	/^      unsigned mapped_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
mapper	src/legion_runtime/legion_ops.h	/^        MustEpochMapper *mapper;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochMapper::MustEpochMapArgs
mapperRegistration	src/test/hpcg/cg-mapper.h	/^mapperRegistration(LegionRuntime::HighLevel::Machine *machine,$/;"	f
mapper_id	src/legion_runtime/legion_ops.h	/^      MapperID                     mapper_id;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
mapper_info_lock	src/legion_runtime/runtime.h	/^      Reservation mapper_info_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mapper_infos	src/legion_runtime/runtime.h	/^      std::map<Mapper*,MapperInfo> mapper_infos;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mapper_locks	src/legion_runtime/runtime.h	/^      std::vector<Reservation> mapper_locks;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
mapper_messages	src/legion_runtime/runtime.h	/^      std::vector<std::vector<MapperMessage> > mapper_messages;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
mapper_objects	src/legion_runtime/runtime.h	/^      std::vector<Mapper*> mapper_objects;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
mapper_registration	src/test/custom_mapper.cc	/^void mapper_registration(Machine *machine, HighLevelRuntime *rt,$/;"	f
mapper_tag	src/legion_runtime/legion_ops.h	/^      MappingTagID                 mapper_tag;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
mapping	src/legion_runtime/arrays.h	/^      const T& mapping;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
mapping	src/legion_runtime/arrays.h	/^      const T& mapping;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
mapping_failed	src/legion_runtime/legion.h	/^      bool mapping_failed;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
mapping_fence	src/legion_runtime/legion_ops.h	/^      bool mapping_fence;$/;"	m	class:LegionRuntime::HighLevel::FenceOp
mapping_index	src/legion_runtime/legion_tasks.h	/^      unsigned mapping_index;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
mapping_mode	include/dev/hpet.h	/^    hpet_map_type_t mapping_mode;$/;"	m	struct:hpet_dev
mapping_path	src/legion_runtime/legion_ops.h	/^      RegionTreePath    mapping_path;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
mapping_path	src/legion_runtime/legion_ops.h	/^      RegionTreePath    mapping_path;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
mapping_path	src/legion_runtime/legion_ops.h	/^      RegionTreePath mapping_path;$/;"	m	class:LegionRuntime::HighLevel::MapOp
mapping_paths	src/legion_runtime/legion_tasks.h	/^      std::vector<RegionTreePath> mapping_paths;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
mapping_tag	src/legion_runtime/legion.h	/^      MappingTagID               mapping_tag;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
mappings	src/legion_runtime/legion_profiling.h	/^        std::deque<OpInstance> mappings;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
mark_allocated	src/nautilus/mm/buddy.c	/^mark_allocated (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
mark_available	src/nautilus/mm/buddy.c	/^mark_available (struct buddy_mempool *mp, struct block *block)$/;"	f	file:
mark_sampled	src/legion_runtime/runtime.cc	/^    void Future::Impl::mark_sampled(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
mark_stolen	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::mark_stolen(Processor new_target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
mark_xcall_done	src/nautilus/smp.c	/^mark_xcall_done (struct nk_xcall * x) $/;"	f	file:
markbeingfnz	src/lua_src/lgc.c	/^static void markbeingfnz (global_State *g) {$/;"	f	file:
marklen	src/lua_src/lua.c	249;"	d	file:
markmt	src/lua_src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	src/lua_src/lgc.c	78;"	d	file:
markupval	src/lua_src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	src/lua_src/lgc.c	75;"	d	file:
mask	include/acpi/actbl1.h	/^	uint64_t mask;		\/* Bitmask required for this register instruction *\/$/;"	m	struct:acpi_whea_header
mask	include/acpi/actbl2.h	/^	uint32_t mask;		\/* Bitmask required for this register instruction *\/$/;"	m	struct:acpi_wdat_entry
mask	include/acpi/actbl2.h	/^	uint8_t mask;$/;"	m	struct:acpi_asf_alert_data
mask	src/legion_runtime/lowlevel.h	/^	const ElementMask& mask;$/;"	m	class:LegionRuntime::LowLevel::ElementMask::Enumerator
mask	src/legion_runtime/lowlevel_gpu.cc	/^      const ElementMask *mask;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
mask	src/legion_runtime/shared_lowlevel.cc	/^        ElementMask mask;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
mask	src/lua_src/lbitlib.c	29;"	d	file:
maskcolors	src/lua_src/lgc.c	58;"	d	file:
matDiag	src/test/hpcg/hpcg-problem-generator.h	/^    double  **matDiag;$/;"	m	struct:ProblemGenerator
match	src/lua_src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	src/lua_src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	src/lua_src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
match_instance	src/legion_runtime/region_tree.cc	/^    bool InstanceManager::match_instance(const std::vector<size_t> &field_sizes,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
match_instance	src/legion_runtime/region_tree.cc	/^    bool InstanceManager::match_instance(size_t field_size, $/;"	f	class:LegionRuntime::HighLevel::InstanceManager
match_layout	src/legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_layout(LayoutDescription *rhs) const$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_layout	src/legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_layout(const FieldMask &mask, const Domain &d,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_layout	src/legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_layout(const FieldMask &mask,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_shape	src/legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_shape(const size_t field_size) const$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
match_shape	src/legion_runtime/region_tree.cc	/^    bool LayoutDescription::match_shape(const std::vector<size_t> &field_sizes,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
matchbalance	src/lua_src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	src/lua_src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	src/lua_src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
math_abs	src/lua_src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	src/lua_src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	src/lua_src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	src/lua_src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	src/lua_src/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	src/lua_src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	src/lua_src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	src/lua_src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	src/lua_src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	src/lua_src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	src/lua_src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	src/lua_src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	src/lua_src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	src/lua_src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	src/lua_src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	src/lua_src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	src/lua_src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	src/lua_src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	src/lua_src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	src/lua_src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	src/lua_src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	src/lua_src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	src/lua_src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	src/lua_src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	src/lua_src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	src/lua_src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	src/lua_src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	src/lua_src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	src/lua_src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max	include/lib/bitops.h	47;"	d
max	src/legion_runtime/arrays.h	/^      static Point<DIM> max(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
max	src/test/benchmark.c	/^    uint64_t max;$/;"	m	struct:cv	file:
max	src/test/ipi.c	/^    uint64_t max;$/;"	m	struct:time_struct	file:
max3	include/lib/bitops.h	62;"	d
maxColNonZeros	src/test/hpcg/hpcg-problem.cc	/^    int64_t maxColNonZeros;$/;"	m	struct:__anon113::HPCGTaskArgs	file:
maxExponent	src/nautilus/libccompat.c	/^static int maxExponent = 511;	\/* Largest possible base 10 exponent.  Any$/;"	v	file:
maxIters	src/test/hpcg/hpcg-main.cc	/^    int64_t maxIters;$/;"	m	struct:__anon117::DriverParams	file:
max_active_threads	src/legion_runtime/lowlevel.cc	/^      int total_threads, active_thread_count, max_active_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
max_address	include/acpi/actbl1.h	/^	uint64_t max_address;	\/* Max physical address in system *\/$/;"	m	struct:acpi_table_msct
max_blocking_factor	src/legion_runtime/legion.h	/^      size_t max_blocking_factor;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
max_clock_domains	include/acpi/actbl1.h	/^	uint32_t max_clock_domains;	\/* Max number of clock domains *\/$/;"	m	struct:acpi_table_msct
max_count	include/acpi/actbl2.h	/^	uint16_t max_count;		\/* Maximum counter value supported *\/$/;"	m	struct:acpi_table_wddt
max_count	include/acpi/actbl2.h	/^	uint16_t max_count;		\/* Maximum counter value supported *\/$/;"	m	struct:acpi_table_wdrt
max_count	include/acpi/actbl2.h	/^	uint32_t max_count;		\/* Maximum counter value supported *\/$/;"	m	struct:acpi_table_wdat
max_depth	include/acpi/actypes.h	/^	uint16_t max_depth;$/;"	m	struct:acpi_memory_list
max_depth	src/legion_runtime/region_tree.h	/^      unsigned max_depth;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
max_entries	src/legion_runtime/lowlevel_impl.h	/^    size_t DynamicTable<ALLOCATOR>::max_entries(void) const$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
max_expand	src/lua_src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_failed_mappings	src/legion_runtime/default_mapper.h	/^      unsigned max_failed_mappings;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_filter_size	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::max_filter_size = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
max_filter_size	src/legion_runtime/runtime.h	/^      static unsigned max_filter_size;$/;"	m	class:LegionRuntime::HighLevel::Runtime
max_latency	include/dev/pci.h	/^            uint8_t  max_latency;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
max_latency	include/nautilus/instrument.h	/^    uint64_t max_latency;$/;"	m	struct:irq_data
max_latency	include/nautilus/instrument.h	/^    uint64_t max_latency;$/;"	m	struct:malloc_data
max_latency	include/nautilus/instrument.h	/^    uint64_t max_latency;$/;"	m	struct:thread_switch_data
max_line_size	src/arch/hrt/mwait.c	/^    uint16_t max_line_size;$/;"	m	struct:mwait_info	file:
max_line_size	src/arch/x64/mwait.c	/^    uint16_t max_line_size;$/;"	m	struct:mwait_info	file:
max_log_length	include/acpi/actbl2.h	/^	uint32_t max_log_length;	\/* Maximum length for the event log area *\/$/;"	m	struct:acpi_table_tcpa
max_mem_mapped	include/nautilus/multiboot2.h	/^  multiboot_uint64_t max_mem_mapped;$/;"	m	struct:multiboot_tag_hrt
max_message_size	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::max_message_size = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
max_message_size	src/legion_runtime/runtime.h	/^      static unsigned max_message_size;$/;"	m	class:LegionRuntime::HighLevel::Runtime
max_nsec	src/nautilus/instrument.c	/^    uint64_t max_nsec;$/;"	m	struct:func_data	file:
max_occupied	include/acpi/actypes.h	/^	uint32_t max_occupied;$/;"	m	struct:acpi_memory_list
max_outstanding_steals	src/legion_runtime/runtime.h	/^      const unsigned max_outstanding_steals;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
max_proximity_domains	include/acpi/actbl1.h	/^	uint32_t max_proximity_domains;	\/* Max number of proximity domains *\/$/;"	m	struct:acpi_table_msct
max_raw_data_length	include/acpi/actbl1.h	/^	uint32_t max_raw_data_length;$/;"	m	struct:acpi_hest_generic
max_raw_data_length	include/acpi/actbl1.h	/^	uint32_t max_raw_data_length;$/;"	m	struct:acpi_hest_ia_nmi
max_samples	src/legion_runtime/mapping_utilities.h	/^        unsigned max_samples; $/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
max_schedule_count	src/legion_runtime/default_mapper.h	/^      unsigned max_schedule_count;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_sections_per_record	include/acpi/actbl1.h	/^	uint32_t max_sections_per_record;$/;"	m	struct:acpi_hest_aer_common
max_sections_per_record	include/acpi/actbl1.h	/^	uint32_t max_sections_per_record;$/;"	m	struct:acpi_hest_generic
max_sections_per_record	include/acpi/actbl1.h	/^	uint32_t max_sections_per_record;$/;"	m	struct:acpi_hest_ia_corrected
max_sections_per_record	include/acpi/actbl1.h	/^	uint32_t max_sections_per_record;$/;"	m	struct:acpi_hest_ia_machine_check
max_sections_per_record	include/acpi/actbl1.h	/^	uint32_t max_sections_per_record;$/;"	m	struct:acpi_hest_ia_nmi
max_size	src/legion_runtime/legion_allocation.h	/^      inline size_type max_size(void) const {$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
max_size	src/legion_runtime/lowlevel.h	/^      size_t max_size;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
max_size	src/legion_runtime/shared_lowlevel.cc	/^	const size_t max_size;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
max_size	src/legion_runtime/utilities.h	/^	size_t max_size, cur_size;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
max_steal_count	src/legion_runtime/default_mapper.h	/^      unsigned max_steal_count;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_steals_per_theft	src/legion_runtime/default_mapper.h	/^      unsigned max_steals_per_theft;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
max_table_count	src/acpi/acpica/aclocal.h	/^	u32 max_table_count;	\/* Max tables array will hold *\/$/;"	m	struct:acpi_table_list
max_task_window_per_context	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::max_task_window_per_context = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
max_task_window_per_context	src/legion_runtime/runtime.h	/^      static unsigned max_task_window_per_context;$/;"	m	class:LegionRuntime::HighLevel::Runtime
max_time	src/legion_runtime/region_tree.h	/^        unsigned long long max_time;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
max_tu	include/nautilus/netdev.h	/^    uint64_t max_tu;$/;"	m	struct:nk_net_dev_characteristics
maximum	include/acpi/acrestyp.h	/^	uint16_t maximum;$/;"	m	struct:acpi_resource_address16
maximum	include/acpi/acrestyp.h	/^	uint16_t maximum;$/;"	m	struct:acpi_resource_io
maximum	include/acpi/acrestyp.h	/^	uint16_t maximum;$/;"	m	struct:acpi_resource_memory24
maximum	include/acpi/acrestyp.h	/^	uint32_t maximum;$/;"	m	struct:acpi_resource_address32
maximum	include/acpi/acrestyp.h	/^	uint32_t maximum;$/;"	m	struct:acpi_resource_memory32
maximum	include/acpi/acrestyp.h	/^	uint64_t maximum;$/;"	m	struct:acpi_resource_address64
maximum	include/acpi/acrestyp.h	/^	uint64_t maximum;$/;"	m	struct:acpi_resource_extended_address64
maxn	src/lua_src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
maxstacksize	include/lua/lobject.h	/^  lu_byte maxstacksize;  \/* maximum stack used by this function *\/$/;"	m	struct:Proto
mb_get_first_hrt_addr	src/nautilus/mb_utils.c	/^mb_get_first_hrt_addr (ulong_t mbd)$/;"	f
mb_info	include/nautilus/nautilus.h	/^    struct multiboot_info * mb_info;$/;"	m	struct:sys_info	typeref:struct:sys_info::multiboot_info
mb_is_hrt_environ	src/nautilus/mb_utils.c	/^mb_is_hrt_environ (ulong_t mbd)$/;"	f
mbarrier	include/nautilus/cpu.h	111;"	d
mbarrier	include/nautilus/cpu.h	113;"	d
mca	include/nautilus/cpuid.h	/^            uint8_t mca         : 1; \/\/ machine check architecture$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
mca	include/nautilus/cpuid.h	/^            uint8_t mca      : 1; \/\/ machine check architecture$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
mce	include/nautilus/cpuid.h	/^            uint8_t mce         : 1; \/\/ machine check exception$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
mce	include/nautilus/cpuid.h	/^            uint8_t mce      : 1; \/\/ machine check exception$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
mconf-objs	scripts/kconfig/Makefile	/^mconf-objs	:= mconf.o zconf.tab.o$/;"	m
mconf_readme	scripts/kconfig/mconf.c	/^static const char mconf_readme[] = N_($/;"	v	file:
me	src/legion_runtime/lowlevel_impl.h	/^      Event me;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
me	src/legion_runtime/lowlevel_impl.h	/^      IndexSpace me;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
me	src/legion_runtime/lowlevel_impl.h	/^      Memory me;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
me	src/legion_runtime/lowlevel_impl.h	/^      Processor me;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
me	src/legion_runtime/lowlevel_impl.h	/^      RegionInstance me;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
me	src/legion_runtime/lowlevel_impl.h	/^      Reservation me;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
measure_func	include/test/ipi.h	/^	nk_xcall_func_t measure_func; \/\/ the measurement function$/;"	m	struct:ipi_exp_data
mem	include/acpi/acrestyp.h	/^	struct acpi_memory_attribute mem;$/;"	m	union:acpi_resource_attribute	typeref:struct:acpi_resource_attribute::acpi_memory_attribute
mem	include/nautilus/nautilus.h	/^    struct nk_mem_info mem;$/;"	m	struct:sys_info	typeref:struct:sys_info::nk_mem_info
mem	include/nautilus/numa.h	/^    struct mem_region * mem;$/;"	m	struct:mem_reg_entry	typeref:struct:mem_reg_entry::mem_region
mem	src/legion_runtime/legion_logging.h	/^        Memory mem;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemory
mem	src/legion_runtime/legion_logging.h	/^        Memory mem;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
mem	src/legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteRedListArgs	file:
mem	src/legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
mem	src/legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
mem	src/legion_runtime/lowlevel.cc	/^      Memory mem;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
mem1	src/legion_runtime/legion_logging.h	/^        Memory mem1;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
mem2	src/legion_runtime/legion_logging.h	/^        Memory mem2;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMemMemAffinity
mem_base	include/dev/pci.h	/^            uint16_t mem_base;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
mem_base0	include/dev/pci.h	/^            uint32_t mem_base0;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
mem_base1	include/dev/pci.h	/^            uint32_t mem_base1;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
mem_end	include/dev/virtio_pci.h	/^  uint64_t  mem_end;$/;"	m	struct:virtio_pci_dev
mem_ent	include/nautilus/numa.h	/^    struct list_head mem_ent;$/;"	m	struct:mem_reg_entry	typeref:struct:mem_reg_entry::list_head
mem_events	src/legion_runtime/legion_profiling.h	/^        std::deque<MemoryEvent> mem_events;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
mem_kinds	src/legion_runtime/mapping_utilities.h	/^        std::map<Memory::Kind,std::set<Memory> > mem_kinds;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_limit	include/dev/pci.h	/^            uint16_t mem_limit;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
mem_limit0	include/dev/pci.h	/^            uint32_t mem_limit0;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
mem_limit1	include/dev/pci.h	/^            uint32_t mem_limit1;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
mem_lower	include/nautilus/multiboot2.h	/^  multiboot_uint32_t mem_lower;$/;"	m	struct:multiboot_tag_basic_meminfo
mem_map_entry	include/nautilus/mm.h	/^typedef struct mem_map_entry {$/;"	s
mem_map_entry_t	include/nautilus/mm.h	/^} mem_map_entry_t;$/;"	t	typeref:struct:mem_map_entry
mem_mem_affinities	src/legion_runtime/lowlevel.h	/^      std::vector<MemoryMemoryAffinity> mem_mem_affinities;$/;"	m	class:LegionRuntime::LowLevel::Machine
mem_mem_stacks	src/legion_runtime/mapping_utilities.h	/^        std::map<Memory,std::vector<Memory> > mem_mem_stacks;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_mem_table	src/legion_runtime/mapping_utilities.h	/^        std::map<std::pair<Memory,Memory::Kind>,Memory> mem_mem_table;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_proc_table	src/legion_runtime/mapping_utilities.h	/^        std::map<std::pair<Memory,Processor::Kind>,Processor> mem_proc_table;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
mem_reg_entry	include/nautilus/numa.h	/^struct mem_reg_entry {$/;"	s
mem_region	include/nautilus/numa.h	/^struct mem_region {$/;"	s
mem_region_types	src/nautilus/mm/boot_mm.c	/^char * mem_region_types[6] = {$/;"	v
mem_start	include/dev/virtio_pci.h	/^  uint64_t  mem_start;$/;"	m	struct:virtio_pci_dev
mem_upper	include/nautilus/multiboot2.h	/^  multiboot_uint32_t mem_upper;$/;"	m	struct:multiboot_tag_basic_meminfo
mem_zone_list	include/nautilus/paging.h	/^    struct list_head mem_zone_list;$/;"	m	struct:nk_mem_info	typeref:struct:nk_mem_info::list_head
mem_zone_type_t	include/nautilus/paging.h	/^} mem_zone_type_t;$/;"	t	typeref:enum:__anon58
members	src/legion_runtime/lowlevel_impl.h	/^      std::vector<Processor::Impl *> members;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
members	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<ProcessorImpl *> members;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup	file:
members_requested	src/legion_runtime/lowlevel_impl.h	/^      bool members_requested;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
members_valid	src/legion_runtime/lowlevel_impl.h	/^      bool members_valid;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
memchr	src/nautilus/libccompat.c	/^void *memchr(const void *str, int c, size_t n)$/;"	f
memcmp	include/nautilus/naut_string.h	152;"	d
memcmp	src/nautilus/naut_string.c	/^memcmp (const void * s1_, const void * s2_, size_t n) $/;"	f
memcpy	include/nautilus/naut_string.h	150;"	d
memcpy	src/nautilus/naut_string.c	/^memcpy (void * dst, const void * src, size_t n)$/;"	f
memerrmsg	include/lua/lstate.h	/^  TString *memerrmsg;  \/* memory-error message *\/$/;"	m	struct:global_State
memmove	src/nautilus/naut_string.c	/^memmove (void * dst, const void * src, size_t n)$/;"	f
memoized_offsets	src/legion_runtime/region_tree.h	/^      std::map<FIELD_TYPE,std::vector<OffsetEntry> > memoized_offsets;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
memoizer	src/legion_runtime/default_mapper.h	/^      MappingUtilities::MappingMemoizer memoizer;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
memories	src/legion_runtime/lowlevel.h	/^      std::set<Memory> memories;$/;"	m	class:LegionRuntime::LowLevel::Machine
memories	src/legion_runtime/lowlevel_impl.h	/^      std::vector<Memory::Impl *> memories;$/;"	m	struct:Node
memories	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<MemoryImpl*> memories;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
memory	src/legion_runtime/legion_logging.h	/^        Memory memory;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
memory	src/legion_runtime/legion_profiling.h	/^        unsigned memory;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
memory	src/legion_runtime/lowlevel.cc	/^      Memory memory;$/;"	m	struct:LegionRuntime::LowLevel::RemoteMemAllocArgs	file:
memory	src/legion_runtime/lowlevel.h	/^      Memory memory;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
memory	src/legion_runtime/lowlevel_impl.h	/^      Memory memory;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl
memory	src/legion_runtime/region_tree.h	/^      const Memory memory;$/;"	m	class:LegionRuntime::HighLevel::PhysicalManager
memory	src/legion_runtime/runtime.h	/^      const Memory memory;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
memory	src/legion_runtime/shared_lowlevel.cc	/^	Memory memory;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
memory24	include/acpi/acrestyp.h	/^	struct acpi_resource_memory24 memory24;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_memory24
memory32	include/acpi/acrestyp.h	/^	struct acpi_resource_memory32 memory32;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_memory32
memory_capacity	include/acpi/actbl1.h	/^	uint64_t memory_capacity;	\/* In bytes *\/$/;"	m	struct:acpi_msct_proximity
memory_length	include/acpi/actbl2.h	/^	uint64_t memory_length;$/;"	m	struct:acpi_ivrs_memory
memory_manager_lock	src/legion_runtime/runtime.h	/^      Reservation memory_manager_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
memory_managers	src/legion_runtime/runtime.h	/^      std::map<Memory,MemoryManager*> memory_managers;$/;"	m	class:LegionRuntime::HighLevel::Runtime
memory_map	src/nautilus/mm/boot_mm.c	/^static mem_map_entry_t memory_map[MAX_MMAP_ENTRIES];$/;"	v	file:
memory_model	include/dev/vesa.h	/^    uint8_t memory_model;$/;"	m	struct:vesa_mode_info
memory_stride	src/legion_runtime/lowlevel_impl.h	/^      off_t memory_stride;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
memory_type	include/acpi/actbl1.h	/^        uint32_t memory_type;	\/* See acpi_address_range_id *\/$/;"	m	struct:acpi_srat_mem_affinity
memset	include/nautilus/naut_string.h	151;"	d
memset	src/nautilus/naut_string.c	/^memset (void * dst, char c, size_t n)$/;"	f
memtype_efi2mb	src/arch/k1om/early_mem.c	/^memtype_efi2mb (efi_mem_type_t efi_type)$/;"	f	file:
menu	scripts/kconfig/expr.h	/^	struct menu *menu;$/;"	m	struct:property	typeref:struct:property::menu
menu	scripts/kconfig/expr.h	/^struct menu {$/;"	s
menu	scripts/kconfig/qconf.h	/^	struct menu *menu;$/;"	m	class:ConfigItem	typeref:struct:ConfigItem::menu
menu	scripts/kconfig/zconf.tab.c	/^	struct menu *menu;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::menu	file:
menu	scripts/kconfig/zconf.y	/^menu: T_MENU prompt T_EOL$/;"	l
menuBackPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	class:ConfigList
menuInvPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	class:ConfigList
menuList	scripts/kconfig/qconf.h	/^	ConfigList *menuList;$/;"	m	class:ConfigMainWindow
menuMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode$/;"	e	enum:listMode
menuPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	class:ConfigList
menuView	scripts/kconfig/qconf.h	/^	ConfigView *menuView;$/;"	m	class:ConfigMainWindow
menu__xgettext	scripts/kconfig/kxgettext.c	/^void menu__xgettext(void)$/;"	f
menu_add_dep	scripts/kconfig/menu.c	/^void menu_add_dep(struct expr *dep)$/;"	f
menu_add_entry	scripts/kconfig/menu.c	/^void menu_add_entry(struct symbol *sym)$/;"	f
menu_add_expr	scripts/kconfig/menu.c	/^void menu_add_expr(enum prop_type type, struct expr *expr, struct expr *dep)$/;"	f
menu_add_menu	scripts/kconfig/menu.c	/^struct menu *menu_add_menu(void)$/;"	f
menu_add_prompt	scripts/kconfig/menu.c	/^struct property *menu_add_prompt(enum prop_type type, char *prompt, struct expr *dep)$/;"	f
menu_add_prop	scripts/kconfig/menu.c	/^struct property *menu_add_prop(enum prop_type type, char *prompt, struct expr *expr, struct expr *dep)$/;"	f
menu_add_symbol	scripts/kconfig/menu.c	/^void menu_add_symbol(enum prop_type type, struct symbol *sym, struct expr *dep)$/;"	f
menu_backtitle	scripts/kconfig/mconf.c	/^static char menu_backtitle[128];$/;"	v	file:
menu_block	scripts/kconfig/zconf.y	/^menu_block:$/;"	l
menu_build_message_list	scripts/kconfig/kxgettext.c	/^void menu_build_message_list(struct menu *menu)$/;"	f
menu_check_dep	scripts/kconfig/menu.c	/^struct expr *menu_check_dep(struct expr *e)$/;"	f
menu_end	scripts/kconfig/zconf.y	/^menu_end: end$/;"	l
menu_end_entry	scripts/kconfig/menu.c	/^void menu_end_entry(void)$/;"	f
menu_end_menu	scripts/kconfig/menu.c	/^void menu_end_menu(void)$/;"	f
menu_entry	scripts/kconfig/zconf.y	/^menu_entry: menu depends_list$/;"	l
menu_finalize	scripts/kconfig/menu.c	/^void menu_finalize(struct menu *parent)$/;"	f
menu_get_parent_menu	scripts/kconfig/menu.c	/^struct menu *menu_get_parent_menu(struct menu *menu)$/;"	f
menu_get_prompt	scripts/kconfig/menu.c	/^const char *menu_get_prompt(struct menu *menu)$/;"	f
menu_get_root_menu	scripts/kconfig/menu.c	/^struct menu *menu_get_root_menu(struct menu *menu)$/;"	f
menu_init	scripts/kconfig/menu.c	/^void menu_init(void)$/;"	f
menu_instructions	scripts/kconfig/mconf.c	/^menu_instructions[] = N_($/;"	v	file:
menu_is_visible	scripts/kconfig/menu.c	/^bool menu_is_visible(struct menu *menu)$/;"	f
menu_range_valid_sym	scripts/kconfig/menu.c	/^static int menu_range_valid_sym(struct symbol *sym, struct symbol *sym2)$/;"	f	file:
menu_set_type	scripts/kconfig/menu.c	/^void menu_set_type(int type)$/;"	f
menu_stmt	scripts/kconfig/zconf.y	/^menu_stmt: menu_entry menu_block menu_end$/;"	l
menu_warn	scripts/kconfig/menu.c	/^static void menu_warn(struct menu *menu, const char *fmt, ...)$/;"	f	file:
menu_width	scripts/kconfig/lxdialog/menubox.c	/^static int menu_width, item_x;$/;"	v	file:
menubox_attr	scripts/kconfig/lxdialog/dialog.h	109;"	d
menubox_border_attr	scripts/kconfig/lxdialog/dialog.h	110;"	d
menuconfig_entry_start	scripts/kconfig/zconf.y	/^menuconfig_entry_start: T_MENUCONFIG T_WORD T_EOL$/;"	l
menuconfig_stmt	scripts/kconfig/zconf.y	/^menuconfig_stmt: menuconfig_entry_start config_option_list$/;"	l
merge	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::merge(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
merge	src/legion_runtime/region_tree.cc	/^    void FieldState::merge(const FieldState &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldState
merge_adjacent	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::merge_adjacent($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
merge_dominators	src/legion_runtime/field_tree.h	/^    inline FieldTree<UT>* FieldTree<UT>::merge_dominators($/;"	f	class:LegionRuntime::HighLevel::FieldTree
merge_events	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::Impl::merge_events(Event ev1, Event ev2,$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
merge_events	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::Impl::merge_events(const std::set<Event>& wait_for)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
merge_events	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::merge_events(Event ev1, Event ev2,$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Event Event::merge_events(const std::set<Event>& wait_for)$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	src/legion_runtime/shared_lowlevel.cc	/^    Event Event::merge_events(Event ev1, Event ev2, Event ev3,$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	src/legion_runtime/shared_lowlevel.cc	/^    Event Event::merge_events(const std::set<Event>& wait_for)$/;"	f	class:LegionRuntime::LowLevel::Event
merge_events	src/legion_runtime/shared_lowlevel.cc	/^    Event EventImpl::merge_events(const std::map<EventImpl*,Event> &wait_for)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
merge_new_field_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::merge_new_field_state(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
merge_new_field_states	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::merge_new_field_states(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
merge_node	src/legion_runtime/field_tree.h	/^      const bool merge_node;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
merge_segments	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ void RectangleSet<T,DISCRETE>::merge_segments($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
merge_with_ros_cr3	src/arch/hrt/hrt.c	/^merge_with_ros_cr3 (uint64_t ros_cr3)$/;"	f	file:
mesage__find	scripts/kconfig/kxgettext.c	/^static struct message *mesage__find(const char *msg)$/;"	f	file:
message	scripts/kconfig/kxgettext.c	/^struct message {$/;"	s	file:
message	src/legion_runtime/runtime.h	/^        void *message;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
message__add	scripts/kconfig/kxgettext.c	/^static int message__add(const char *msg, char *option, char *file, int lineno)$/;"	f	file:
message__add_file_line	scripts/kconfig/kxgettext.c	/^static int message__add_file_line(struct message *self, char *file, int lineno)$/;"	f	file:
message__list	scripts/kconfig/kxgettext.c	/^static struct message *message__list;$/;"	v	typeref:struct:message	file:
message__new	scripts/kconfig/kxgettext.c	/^static struct message *message__new(const char *msg, char *option, char *file, int lineno)$/;"	f	file:
message__print_file_lineno	scripts/kconfig/kxgettext.c	/^static void message__print_file_lineno(struct message *self)$/;"	f	file:
message__print_gettext_msgid_msgstr	scripts/kconfig/kxgettext.c	/^static void message__print_gettext_msgid_msgstr(struct message *self)$/;"	f	file:
message_chunks	src/legion_runtime/activemsg.h	/^  gasnet_handlerarg_t message_chunks;$/;"	m	struct:BaseMedium
message_id	src/legion_runtime/activemsg.h	/^  gasnet_handlerarg_t message_id;$/;"	m	struct:BaseMedium
message_lock	src/legion_runtime/runtime.h	/^      Reservation message_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
message_managers	src/legion_runtime/runtime.h	/^      std::map<AddressSpaceID,MessageManager*> message_managers;$/;"	m	class:LegionRuntime::HighLevel::Runtime
message_proc	src/legion_runtime/runtime.h	/^      const Processor message_proc;$/;"	m	class:LegionRuntime::HighLevel::Runtime
metadata_lock	src/legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         metadata_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
metadatas	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<IndexSpace::Impl*> metadatas;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
metatable	include/lua/lobject.h	/^    struct Table *metatable;$/;"	m	struct:Udata::__anon6	typeref:struct:Udata::__anon6::Table
metatable	include/lua/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
method_node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *method_node;	\/* Method node for this GPE level (saved) *\/$/;"	m	struct:acpi_gpe_handler_info	typeref:struct:acpi_gpe_handler_info::acpi_namespace_node
method_node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *method_node;	\/* Method node for this GPE level *\/$/;"	m	union:acpi_gpe_dispatch_info	typeref:struct:acpi_gpe_dispatch_info::acpi_namespace_node
mf_handler	src/nautilus/fpu.c	/^mf_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f
mfg_id	include/acpi/actbl2.h	/^	uint32_t mfg_id;$/;"	m	struct:acpi_asf_info
mg	src/test/hpcg/comp-mg.h	/^mg(SparseMatrix &A,$/;"	f	namespace:lgncg
mgData	src/test/hpcg/sparsemat.h	/^    MGData *mgData;$/;"	m	struct:lgncg::SparseMatrix
mgPrep	src/test/hpcg/comp-mg.h	/^mgPrep(SparseMatrix &A,$/;"	f	namespace:lgncg
mgmt_vm	src/arch/x64/init.c	/^static void *mgmt_vm;$/;"	v	file:
micnum	xeon_phi/linux_usr/phi_console.c	/^static char* micnum = "0";$/;"	v	file:
min	include/lib/bitops.h	41;"	d
min	src/legion_runtime/arrays.h	/^      static Point<DIM> min(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
min	src/legion_runtime/lowlevel_dma.cc	/^    static inline int min(int a, int b) { return (a < b) ? a : b; }$/;"	f	namespace:LegionRuntime::LowLevel
min	src/legion_runtime/lowlevel_dma.cc	/^    template <typename T> T min(T a, T b) { return (a < b) ? a : b; }$/;"	f	namespace:LegionRuntime::LowLevel
min	src/test/benchmark.c	/^    uint64_t min;$/;"	m	struct:cv	file:
min	src/test/ipi.c	/^    uint64_t min;$/;"	m	struct:time_struct	file:
min3	include/lib/bitops.h	53;"	d
min_count	include/acpi/actbl2.h	/^	uint16_t min_count;		\/* Minimum counter value supported *\/$/;"	m	struct:acpi_table_wddt
min_count	include/acpi/actbl2.h	/^	uint32_t min_count;		\/* Minimum counter value *\/$/;"	m	struct:acpi_table_wdat
min_depth	src/legion_runtime/region_tree.h	/^      unsigned min_depth;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
min_expand	src/lua_src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
min_grant	include/dev/pci.h	/^            uint8_t  min_grant;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
min_latency	include/nautilus/instrument.h	/^    uint64_t min_latency;$/;"	m	struct:irq_data
min_latency	include/nautilus/instrument.h	/^    uint64_t min_latency;$/;"	m	struct:malloc_data
min_latency	include/nautilus/instrument.h	/^    uint64_t min_latency;$/;"	m	struct:thread_switch_data
min_line_size	src/arch/hrt/mwait.c	/^    uint16_t min_line_size;$/;"	m	struct:mwait_info	file:
min_line_size	src/arch/x64/mwait.c	/^    uint16_t min_line_size;$/;"	m	struct:mwait_info	file:
min_nsec	src/nautilus/instrument.c	/^    uint64_t min_nsec;$/;"	m	struct:func_data	file:
min_order	include/nautilus/buddy.h	/^    ulong_t    min_order;    \/** minimum allocatable block size *\/$/;"	m	struct:buddy_mempool
min_outstanding	src/legion_runtime/runtime.h	/^      const unsigned min_outstanding;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
min_poll_interval	include/acpi/actbl2.h	/^	uint8_t min_poll_interval;$/;"	m	struct:acpi_asf_info
min_reset_value	include/acpi/actbl2.h	/^	uint8_t min_reset_value;$/;"	m	struct:acpi_asf_info
min_tasks_to_schedule	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::min_tasks_to_schedule = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
min_tasks_to_schedule	src/legion_runtime/runtime.h	/^      static unsigned min_tasks_to_schedule;$/;"	m	class:LegionRuntime::HighLevel::Runtime
min_tick	include/dev/hpet.h	/^    uint16_t min_tick;$/;"	m	struct:hpet_dev
min_time	src/legion_runtime/region_tree.h	/^        unsigned long long min_time;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
min_tu	include/nautilus/netdev.h	/^    uint64_t min_tu;$/;"	m	struct:nk_net_dev_characteristics
minimum	include/acpi/acrestyp.h	/^	uint16_t minimum;$/;"	m	struct:acpi_resource_address16
minimum	include/acpi/acrestyp.h	/^	uint16_t minimum;$/;"	m	struct:acpi_resource_io
minimum	include/acpi/acrestyp.h	/^	uint16_t minimum;$/;"	m	struct:acpi_resource_memory24
minimum	include/acpi/acrestyp.h	/^	uint32_t minimum;$/;"	m	struct:acpi_resource_address32
minimum	include/acpi/acrestyp.h	/^	uint32_t minimum;$/;"	m	struct:acpi_resource_memory32
minimum	include/acpi/acrestyp.h	/^	uint64_t minimum;$/;"	m	struct:acpi_resource_address64
minimum	include/acpi/acrestyp.h	/^	uint64_t minimum;$/;"	m	struct:acpi_resource_extended_address64
minimum_tick	include/acpi/actbl2.h	/^	uint16_t minimum_tick;	\/* Main counter min tick, periodic mode *\/$/;"	m	struct:acpi_table_hpet
minor	include/nautilus/multiboot2.h	/^  multiboot_uint8_t minor;$/;"	m	struct:multiboot_tag_smbios
misalignsse	include/nautilus/cpuid.h	/^            uint8_t misalignsse : 1; \/\/ misaligned SSE mode$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
misc_register	include/acpi/actbl1.h	/^	uint32_t misc_register;$/;"	m	struct:acpi_hest_ia_error_bank
miss_count	src/nautilus/scheduler.c	/^    uint64_t miss_count;      \/\/ number of deadline misses$/;"	m	struct:nk_sched_thread_state	file:
miss_time_sum	src/nautilus/scheduler.c	/^    uint64_t miss_time_sum;   \/\/ sum of missed time$/;"	m	struct:nk_sched_thread_state	file:
miss_time_sum2	src/nautilus/scheduler.c	/^    uint64_t miss_time_sum2;  \/\/ sum of squares of missed time$/;"	m	struct:nk_sched_thread_state	file:
mixed-targets	Makefile	/^                        mixed-targets := 1$/;"	m
mixed-targets	Makefile	/^mixed-targets  := 0$/;"	m
mktime	src/nautilus/libccompat.c	/^time_t mktime(struct tm *timeptr)$/;"	f
mm_boot_alloc	src/nautilus/mm/boot_mm.c	/^mm_boot_alloc (ulong_t size)$/;"	f
mm_boot_alloc_aligned	src/nautilus/mm/boot_mm.c	/^mm_boot_alloc_aligned (ulong_t size, ulong_t align)$/;"	f
mm_boot_free	src/nautilus/mm/boot_mm.c	/^mm_boot_free (void *addr, ulong_t size)$/;"	f
mm_boot_free_mem	src/nautilus/mm/boot_mm.c	/^mm_boot_free_mem (addr_t start, ulong_t size)$/;"	f
mm_boot_free_vmem	src/nautilus/mm/boot_mm.c	/^mm_boot_free_vmem (addr_t start, ulong_t size)$/;"	f
mm_boot_get_region	src/nautilus/mm/boot_mm.c	/^mm_boot_get_region (unsigned i) $/;"	f
mm_boot_init	src/nautilus/mm/boot_mm.c	/^mm_boot_init (ulong_t mbd)$/;"	f
mm_boot_kmem_cleanup	src/nautilus/mm/boot_mm.c	/^mm_boot_kmem_cleanup (void)$/;"	f
mm_boot_kmem_init	src/nautilus/mm/boot_mm.c	/^mm_boot_kmem_init (void)$/;"	f
mm_boot_last_pfn	src/nautilus/mm/boot_mm.c	/^mm_boot_last_pfn (void)$/;"	f
mm_boot_num_regions	src/nautilus/mm/boot_mm.c	/^mm_boot_num_regions (void) $/;"	f
mm_boot_reserve_mem	src/nautilus/mm/boot_mm.c	/^mm_boot_reserve_mem (addr_t start, ulong_t size)$/;"	f
mm_boot_reserve_vmem	src/nautilus/mm/boot_mm.c	/^mm_boot_reserve_vmem (addr_t start, ulong_t size)$/;"	f
mm_dump_page_map	src/nautilus/mm/boot_mm.c	/^mm_dump_page_map (void) $/;"	f
mm_get_all_mem	src/nautilus/mm/boot_mm.c	/^mm_get_all_mem (void)$/;"	f
mm_get_usable_ram	src/nautilus/mm/boot_mm.c	/^mm_get_usable_ram (void)$/;"	f
mm_info	src/nautilus/mm/boot_mm.c	/^static mmap_info_t mm_info;$/;"	v	file:
mm_state	include/nautilus/numa.h	/^    struct buddy_mempool * mm_state;$/;"	m	struct:mem_region	typeref:struct:mem_region::buddy_mempool
mmap	scripts/basic/fixdep.c	/^static void *mmap(void *start, size_t size, int prot, int flags, int fd, $/;"	f	file:
mmap	scripts/basic/fixdep.c	269;"	d	file:
mmap_info	include/nautilus/mm.h	/^typedef struct mmap_info {$/;"	s
mmap_info_t	include/nautilus/mm.h	/^} mmap_info_t;$/;"	t	typeref:struct:mmap_info
mmx	include/nautilus/cpuid.h	/^            uint8_t mmx         : 1; \/\/ MMX instructions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
mmx	include/nautilus/cpuid.h	/^            uint8_t mmx      : 1; \/\/ intel mmx technology$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
mmx_ext	include/nautilus/cpuid.h	/^            uint8_t mmx_ext     : 1; \/\/ AMD extensions to MMX instructions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
mod	scripts/kconfig/expr.h	/^	no, mod, yes$/;"	e	enum:tristate
modColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	enum:colIdx
mod_end	include/nautilus/multiboot2.h	/^  multiboot_uint32_t mod_end;$/;"	m	struct:multiboot_tag_module
mod_start	include/nautilus/multiboot2.h	/^  multiboot_uint32_t mod_start;$/;"	m	struct:multiboot_tag_module
mode	include/dev/apic.h	/^    apic_mode_t mode;$/;"	m	struct:apic_dev
mode	include/dev/hpet.h	/^    hpet_cmp_type_t mode;        \/* oneshot or periodic? *\/$/;"	m	struct:hpet_comparator
mode	scripts/kconfig/qconf.h	/^	enum listMode mode;$/;"	m	class:ConfigList	typeref:enum:ConfigList::listMode
mode	src/legion_runtime/activemsg.cc	/^  int mode;$/;"	m	class:ContiguousPayload	file:
mode	src/legion_runtime/activemsg.cc	/^  int mode;$/;"	m	class:SpanPayload	file:
mode	src/legion_runtime/activemsg.cc	/^  int mode;$/;"	m	class:TwoDPayload	file:
mode	src/legion_runtime/legion.h	/^      unsigned mode;$/;"	m	struct:LegionRuntime::HighLevel::LockRequest
mode	src/legion_runtime/lowlevel.cc	/^      unsigned mode;$/;"	m	class:LegionRuntime::LowLevel::DeferredLockRequest	file:
mode	src/legion_runtime/lowlevel.cc	/^      unsigned mode;$/;"	m	struct:LegionRuntime::LowLevel::LockGrantArgs	file:
mode	src/legion_runtime/lowlevel.cc	/^      unsigned mode;$/;"	m	struct:LegionRuntime::LowLevel::LockRequestArgs	file:
mode	src/legion_runtime/lowlevel_impl.h	/^      unsigned mode;  \/\/ lock mode$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
mode	src/legion_runtime/runtime.h	/^        unsigned mode;$/;"	m	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
mode	src/legion_runtime/shared_lowlevel.cc	/^		unsigned mode;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
mode	src/legion_runtime/shared_lowlevel.cc	/^	unsigned mode;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
mode	src/lua_src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
modePtr	scripts/kconfig/lxdialog/lxdialog.c	/^static struct Mode *modePtr;$/;"	v	typeref:struct:Mode	file:
model	include/acpi/actbl.h	/^	uint8_t model;		\/* System Interrupt Model (ACPI 1.0) - not used in ACPI 2.0+ *\/$/;"	m	struct:acpi_table_fadt
model1	scripts/kconfig/gconf.c	/^GtkTreeModel *model1, *model2;$/;"	v
model2	scripts/kconfig/gconf.c	/^GtkTreeModel *model1, *model2;$/;"	v
modes	scripts/kconfig/lxdialog/lxdialog.c	/^static struct Mode modes[] = {$/;"	v	typeref:struct:Mode	file:
modes_start	src/dev/vesa.c	/^static vesa_mode_t *modes_start=0;$/;"	v	file:
modf	src/nautilus/libccompat.c	/^double modf(double y, double *x){$/;"	f
modinit	src/lua_src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
modules_sym	scripts/kconfig/symbol.c	/^struct symbol *modules_sym;$/;"	v	typeref:struct:symbol
modules_val	scripts/kconfig/symbol.c	/^tristate modules_val;$/;"	v
modulus	include/acpi/actbl2.h	/^	uint8_t modulus[128];$/;"	m	struct:acpi_slic_key
mon_decimal_point	include/lua/llocale.h	/^    char *mon_decimal_point;  \/\/""           LC_MONETARY$/;"	m	struct:lconv
mon_decimal_point	src/nautilus/libccompat.c	/^    char *mon_decimal_point;  \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
mon_grouping	include/lua/llocale.h	/^    char *mon_grouping;       \/\/""           LC_MONETARY$/;"	m	struct:lconv
mon_grouping	src/nautilus/libccompat.c	/^    char *mon_grouping;       \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
mon_thousands_sep	include/lua/llocale.h	/^    char *mon_thousands_sep;  \/\/""           LC_MONETARY$/;"	m	struct:lconv
mon_thousands_sep	src/nautilus/libccompat.c	/^    char *mon_thousands_sep;  \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
monitor	include/nautilus/cpuid.h	/^            uint8_t monitor  : 1; \/\/ MONITOR\/MWAIT$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
month_alarm	include/acpi/actbl.h	/^	uint8_t month_alarm;		\/* Index to month-of-year alarm in RTC CMOS RAM *\/$/;"	m	struct:acpi_table_fadt
mount_path	include/nautilus/fs.h	/^    char              mount_path[MOUNT_PATH_LEN];  \/\/ for future mount point model, maybe... $/;"	m	struct:nk_fs
movbe	include/nautilus/cpuid.h	/^            uint8_t movbe    : 1; \/\/ MOVBE instruction$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
move_adjacent	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::move_adjacent(Segment<T> *target, T value)$/;"	f	class:LegionRuntime::HighLevel::Segment
move_degenerate	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::move_degenerate(Segment<T> *target)$/;"	f	class:LegionRuntime::HighLevel::Segment
move_degenerate	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::move_degenerate(Segment<T> *target,$/;"	f	class:LegionRuntime::HighLevel::Segment
movegotosout	src/lua_src/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveto	src/lua_src/lapi.c	/^static void moveto (lua_State *L, TValue *fr, int idx) {$/;"	f	file:
mp_cfg_ptr	include/nautilus/acpi.h	/^    uint32_t mp_cfg_ptr;$/;"	m	struct:mp_float_ptr_struct
mp_entry_lengths	src/arch/x64/smp.c	/^static uint8_t mp_entry_lengths[5] = {$/;"	v	file:
mp_feat1	include/nautilus/acpi.h	/^    uint8_t  mp_feat1;$/;"	m	struct:mp_float_ptr_struct
mp_feat2	include/nautilus/acpi.h	/^    uint8_t  mp_feat2;$/;"	m	struct:mp_float_ptr_struct
mp_feat3	include/nautilus/acpi.h	/^    uint8_t  mp_feat3;$/;"	m	struct:mp_float_ptr_struct
mp_feat4	include/nautilus/acpi.h	/^    uint8_t  mp_feat4;$/;"	m	struct:mp_float_ptr_struct
mp_feat5	include/nautilus/acpi.h	/^    uint8_t  mp_feat5;$/;"	m	struct:mp_float_ptr_struct
mp_float_ptr_struct	include/nautilus/acpi.h	/^struct mp_float_ptr_struct {$/;"	s
mp_table	include/nautilus/acpi.h	/^struct mp_table {$/;"	s
mp_table_entry	include/nautilus/acpi.h	/^struct mp_table_entry {$/;"	s
mp_table_entry_bus	include/nautilus/acpi.h	/^struct mp_table_entry_bus {$/;"	s
mp_table_entry_cpu	include/nautilus/acpi.h	/^struct mp_table_entry_cpu {$/;"	s
mp_table_entry_ioapic	include/nautilus/acpi.h	/^struct mp_table_entry_ioapic {$/;"	s
mp_table_entry_ioint	include/nautilus/acpi.h	/^struct mp_table_entry_ioint {$/;"	s
mp_table_entry_lint	include/nautilus/acpi.h	/^struct mp_table_entry_lint {$/;"	s
mpi_count	src/legion_runtime/runtime.h	/^      int mpi_count, legion_count;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_handoff_to_legion	src/legion_runtime/legion.cc	/^    void MPILegionHandshake::mpi_handoff_to_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
mpi_handoff_to_legion	src/legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::mpi_handoff_to_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_participants	src/legion_runtime/runtime.h	/^      const int mpi_participants;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_rank	src/legion_runtime/runtime.cc	/^    \/*static*\/ int Runtime::mpi_rank = -1;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
mpi_rank	src/legion_runtime/runtime.h	/^        int mpi_rank;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MPIRankArgs
mpi_rank	src/legion_runtime/runtime.h	/^      static int mpi_rank;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mpi_rank_event	src/legion_runtime/runtime.cc	/^    \/*static*\/ UserEvent Runtime::mpi_rank_event = UserEvent::NO_USER_EVENT;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
mpi_rank_event	src/legion_runtime/runtime.h	/^      static UserEvent mpi_rank_event;$/;"	m	class:LegionRuntime::HighLevel::Runtime
mpi_rank_table	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::mpi_rank_table[MAX_NUM_NODES];$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
mpi_rank_table	src/legion_runtime/runtime.h	/^      static unsigned mpi_rank_table[MAX_NUM_NODES];$/;"	m	class:LegionRuntime::HighLevel::Runtime
mpi_ready	src/legion_runtime/runtime.h	/^      UserEvent mpi_ready, legion_ready;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mpi_wait_on_legion	src/legion_runtime/legion.cc	/^    void MPILegionHandshake::mpi_wait_on_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
mpi_wait_on_legion	src/legion_runtime/runtime.cc	/^    void MPILegionHandshake::Impl::mpi_wait_on_legion(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
mps_inti_flags_polarity	src/acpi/tables.c	/^static char *mps_inti_flags_polarity[] = { "dfl", "high", "res", "low" };$/;"	v	file:
mps_inti_flags_trigger	src/acpi/tables.c	/^static char *mps_inti_flags_trigger[] = { "dfl", "edge", "res", "level" };$/;"	v	file:
mrproper-dirs	Makefile	/^mrproper-dirs      := $(addprefix _mrproper_, scripts)$/;"	m
msg	scripts/kconfig/kxgettext.c	/^	const char	 *msg;$/;"	m	struct:message	file:
msgid	src/legion_runtime/activemsg.cc	/^  unsigned msgid;$/;"	m	struct:OutgoingMessage	file:
msgs_event_dependency	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgEventDependency> msgs_event_dependency;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_event_timing	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgEventTiming> msgs_event_timing;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_field_creation	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgFieldCreation> msgs_field_creation;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_field_space	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgFieldSpace> msgs_field_space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_future_wait	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgFutureWait> msgs_future_wait;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_index_partition	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgIndexPartition> msgs_index_partition;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_index_slice	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgIndexSlice> msgs_index_slice;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_index_subspace	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgIndexSubspace> msgs_index_subspace;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_inline_wait	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgInlineWait> msgs_inline_wait;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_logical_requirement	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgLogicalRequirement> msgs_logical_requirement;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_lowlevel_copy	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgLowlevelCopy> msgs_lowlevel_copy;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_lowlevel_copy_assoc	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgLowlevelCopyAssoc> msgs_lowlevel_copy_assoc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_lowlevel_copy_channel	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgLowlevelCopyChannel> msgs_lowlevel_copy_channel;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_mapping_dependence	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgMappingDependence> msgs_mapping_dependence;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_mem_mem_affinity	src/legion_runtime/legion.cc	/^      std::deque<LogMsgMemMemAffinity> msgs_mem_mem_affinity;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_memory	src/legion_runtime/legion.cc	/^      std::deque<LogMsgMemory> msgs_memory;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_operation	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgOperation> msgs_operation;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_operation_events	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgOperationEvents> msgs_operation_events;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_operation_timing	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgOperationTiming> msgs_operation_timing;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_phyiscal_user	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgPhysicalUser> msgs_phyiscal_user;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_physical_instance	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgPhysicalInstance> msgs_physical_instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_point_point	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgPointPoint> msgs_point_point;  $/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_proc_mem_affinity	src/legion_runtime/legion.cc	/^      std::deque<LogMsgProcMemAffinity> msgs_proc_mem_affinity;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_processor	src/legion_runtime/legion.cc	/^      std::deque<LogMsgProcessor> msgs_processor;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_requirement_fields	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgRequirementFields> msgs_requirement_fields;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_slice_point	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgSlicePoint> msgs_slice_point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_slice_slice	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgSliceSlice> msgs_slice_slice;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_collection	src/legion_runtime/legion.cc	/^      std::deque<LogMsgTaskCollection> msgs_task_collection;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_task_instance_requirement	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgTaskInstanceRequirement> msgs_task_instance_requirement;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_instance_variant	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgTaskInstanceVariant> msgs_task_instance_variant;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_operation	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgTaskOperation> msgs_task_operation;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_task_variant	src/legion_runtime/legion.cc	/^      std::deque<LogMsgTaskVariant> msgs_task_variant;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_top_index_space	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgTopIndexSpace> msgs_top_index_space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msgs_top_level_task	src/legion_runtime/legion.cc	/^      std::deque<LogMsgTopLevelTask> msgs_top_level_task;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
msgs_top_region	src/legion_runtime/legion_logging.h	/^        std::deque<LogMsgTopRegion> msgs_top_region;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
msr	include/nautilus/cpuid.h	/^            uint8_t msr         : 1; \/\/ AMD model-specific registers$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
msr	include/nautilus/cpuid.h	/^            uint8_t msr      : 1; \/\/ model specific registers RDMSR and WRMSR instructions$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
msr_read	src/nautilus/msr.c	/^msr_read (uint32_t msr) $/;"	f
msr_write	src/nautilus/msr.c	/^msr_write (uint32_t msr, uint64_t data)$/;"	f
mt	include/lua/lstate.h	/^  struct Table *mt[LUA_NUMTAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
mtrr	include/nautilus/cpuid.h	/^            uint8_t mtrr        : 1; \/\/ memory-type range registers$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
mtrr	include/nautilus/cpuid.h	/^            uint8_t mtrr     : 1; \/\/ memory type range registers$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
mtxInd	src/test/hpcg/hpcg-problem-generator.h	/^    int64_t **mtxInd;$/;"	m	struct:ProblemGenerator
multiboot_color	include/nautilus/multiboot2.h	/^struct multiboot_color$/;"	s
multiboot_get_phys_mem	src/nautilus/mb_utils.c	/^multiboot_get_phys_mem (ulong_t mbd)$/;"	f
multiboot_get_size	src/nautilus/mb_utils.c	/^multiboot_get_size (ulong_t mbd)$/;"	f
multiboot_get_sys_ram	src/nautilus/mb_utils.c	/^multiboot_get_sys_ram (ulong_t mbd)$/;"	f
multiboot_hdr	src/arch/hrt/asm/boot.S	/^multiboot_hdr:$/;"	l
multiboot_hdr	src/arch/k1om/asm/boot.S	/^multiboot_hdr:$/;"	l
multiboot_hdr	src/arch/x64/asm/boot.S	/^multiboot_hdr:$/;"	l
multiboot_header	include/nautilus/multiboot2.h	/^struct multiboot_header$/;"	s
multiboot_header_tag	include/nautilus/multiboot2.h	/^struct multiboot_header_tag$/;"	s
multiboot_header_tag_address	include/nautilus/multiboot2.h	/^struct multiboot_header_tag_address$/;"	s
multiboot_header_tag_console_flags	include/nautilus/multiboot2.h	/^struct multiboot_header_tag_console_flags$/;"	s
multiboot_header_tag_entry_address	include/nautilus/multiboot2.h	/^struct multiboot_header_tag_entry_address$/;"	s
multiboot_header_tag_framebuffer	include/nautilus/multiboot2.h	/^struct multiboot_header_tag_framebuffer$/;"	s
multiboot_header_tag_information_request	include/nautilus/multiboot2.h	/^struct multiboot_header_tag_information_request$/;"	s
multiboot_header_tag_module_align	include/nautilus/multiboot2.h	/^struct multiboot_header_tag_module_align$/;"	s
multiboot_info	include/nautilus/mb_utils.h	/^struct multiboot_info {$/;"	s
multiboot_memory_map_t	include/nautilus/multiboot2.h	/^typedef struct multiboot_mmap_entry multiboot_memory_map_t;$/;"	t	typeref:struct:multiboot_mmap_entry
multiboot_mmap_entry	include/nautilus/multiboot2.h	/^struct multiboot_mmap_entry$/;"	s
multiboot_parse	src/nautilus/mb_utils.c	/^multiboot_parse (ulong_t mbd, ulong_t magic)$/;"	f
multiboot_tag	include/nautilus/multiboot2.h	/^struct multiboot_tag$/;"	s
multiboot_tag_apm	include/nautilus/multiboot2.h	/^struct multiboot_tag_apm$/;"	s
multiboot_tag_basic_meminfo	include/nautilus/multiboot2.h	/^struct multiboot_tag_basic_meminfo$/;"	s
multiboot_tag_bootdev	include/nautilus/multiboot2.h	/^struct multiboot_tag_bootdev$/;"	s
multiboot_tag_efi32	include/nautilus/multiboot2.h	/^struct multiboot_tag_efi32$/;"	s
multiboot_tag_efi64	include/nautilus/multiboot2.h	/^struct multiboot_tag_efi64$/;"	s
multiboot_tag_elf_sections	include/nautilus/multiboot2.h	/^struct multiboot_tag_elf_sections$/;"	s
multiboot_tag_framebuffer	include/nautilus/multiboot2.h	/^struct multiboot_tag_framebuffer$/;"	s
multiboot_tag_framebuffer_common	include/nautilus/multiboot2.h	/^struct multiboot_tag_framebuffer_common$/;"	s
multiboot_tag_hrt	include/nautilus/multiboot2.h	/^struct multiboot_tag_hrt$/;"	s
multiboot_tag_mmap	include/nautilus/multiboot2.h	/^struct multiboot_tag_mmap$/;"	s
multiboot_tag_module	include/nautilus/multiboot2.h	/^struct multiboot_tag_module$/;"	s
multiboot_tag_network	include/nautilus/multiboot2.h	/^struct multiboot_tag_network$/;"	s
multiboot_tag_new_acpi	include/nautilus/multiboot2.h	/^struct multiboot_tag_new_acpi$/;"	s
multiboot_tag_old_acpi	include/nautilus/multiboot2.h	/^struct multiboot_tag_old_acpi$/;"	s
multiboot_tag_smbios	include/nautilus/multiboot2.h	/^struct multiboot_tag_smbios$/;"	s
multiboot_tag_string	include/nautilus/multiboot2.h	/^struct multiboot_tag_string$/;"	s
multiboot_tag_vbe	include/nautilus/multiboot2.h	/^struct multiboot_tag_vbe$/;"	s
multiboot_uint16_t	include/nautilus/multiboot2.h	/^typedef unsigned short     multiboot_uint16_t;$/;"	t
multiboot_uint32_t	include/nautilus/multiboot2.h	/^typedef unsigned int       multiboot_uint32_t;$/;"	t
multiboot_uint64_t	include/nautilus/multiboot2.h	/^typedef unsigned long long multiboot_uint64_t;$/;"	t
multiboot_uint8_t	include/nautilus/multiboot2.h	/^typedef unsigned char      multiboot_uint8_t;$/;"	t
multiboot_vbe_info_block	include/nautilus/multiboot2.h	/^struct multiboot_vbe_info_block$/;"	s
multiboot_vbe_mode_info_block	include/nautilus/multiboot2.h	/^struct multiboot_vbe_mode_info_block$/;"	s
munmap	scripts/basic/fixdep.c	/^static int munmap(void *start, size_t length)$/;"	f	file:
munmap	scripts/basic/fixdep.c	270;"	d	file:
must_barrier	src/legion_runtime/legion_tasks.h	/^      Barrier must_barrier; \/\/ for must parallelism$/;"	m	class:LegionRuntime::HighLevel::MultiTask
must_early_map	src/legion_runtime/legion.h	/^      bool must_early_map;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
must_epoch	src/legion_runtime/legion_ops.h	/^        MustEpochOp *must_epoch;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
must_epoch	src/legion_runtime/legion_ops.h	/^      MustEpochOp *must_epoch;$/;"	m	class:LegionRuntime::HighLevel::Operation
must_epoch_gen	src/legion_runtime/legion_ops.h	/^        GenerationID must_epoch_gen;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
must_epoch_gen	src/legion_runtime/legion_ops.h	/^      GenerationID must_epoch_gen;$/;"	m	class:LegionRuntime::HighLevel::Operation
must_epoch_index	src/legion_runtime/legion_ops.h	/^      unsigned must_epoch_index;$/;"	m	class:LegionRuntime::HighLevel::Operation
must_parallelism	src/legion_runtime/legion.h	/^      bool                                must_parallelism; $/;"	m	class:LegionRuntime::HighLevel::Task
must_parallelism	src/legion_runtime/legion.h	/^      bool                               must_parallelism;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
mutex	src/acpi/acpica/aclocal.h	/^	acpi_mutex mutex;$/;"	m	struct:acpi_mutex_info
mutex	src/legion_runtime/activemsg.cc	/^  gasnet_hsl_t mutex;$/;"	m	class:ActiveMessageEndpoint	file:
mutex	src/legion_runtime/activemsg.cc	/^  gasnet_hsl_t mutex;$/;"	m	class:SrcDataPool	file:
mutex	src/legion_runtime/activemsg.h	/^  gasnet_hsl_t mutex;$/;"	m	struct:HandlerReplyFuture
mutex	src/legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
mutex	src/legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::EventMerger	file:
mutex	src/legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
mutex	src/legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
mutex	src/legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::ThreadImpl	file:
mutex	src/legion_runtime/lowlevel.cc	/^      gasnet_hsl_t mutex;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
mutex	src/legion_runtime/lowlevel_gpu.cc	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
mutex	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t *mutex; \/\/ controls which local thread has access to internal data (not runtime-visible event)$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
mutex	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t *mutex; \/\/ controls which local thread has access to internal data (not runtime-visible lock)$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
mutex	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex; \/\/ protection for resizing vectors$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
mutex	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::Atomic
mutex	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::GASNetHSL
mutex	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t mutex;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
mutex	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T *mutex;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^      NK_LOCK_T mutex;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
mutex	src/legion_runtime/shared_lowlevel.cc	/^    NK_LOCK_T *mutex;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
mutex	src/legion_runtime/utilities.h	/^        pthread_mutex_t mutex;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
mutex	src/legion_runtime/utilities.h	/^    pthread_mutex_t *mutex;$/;"	m	class:LegionRuntime::ImmovableLock
mutexp	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t *mutexp;$/;"	m	class:LegionRuntime::LowLevel::AutoHSLLock
mwait	src/arch/hrt/mwait.c	/^} mwait;$/;"	v	typeref:struct:mwait_info	file:
mwait	src/arch/x64/mwait.c	/^} mwait;$/;"	v	typeref:struct:mwait_info	file:
mwait_info	src/arch/hrt/mwait.c	/^static struct mwait_info {$/;"	s	file:
mwait_info	src/arch/x64/mwait.c	/^static struct mwait_info {$/;"	s	file:
my_cpu_id	include/nautilus/percpu.h	122;"	d
n	include/lua/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer
n	include/lua/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon18
n	include/lua/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist
n	include/lua/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	include/lua/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
n	include/nautilus/random.h	/^    uint64_t n;$/;"	m	struct:nk_rand_info
n	src/lua_src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
nCcalls	include/lua/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State
nCols	src/test/hpcg/comp-spmv.h	/^    int64_t nCols;$/;"	m	struct:__anon111::spmvTaskArgs
nCols	src/test/hpcg/sparsemat.h	/^    int64_t nRows, nCols;$/;"	m	struct:lgncg::SparseMatrix
nLocalRows	src/test/hpcg/hpcg-problem-generator.h	/^    int64_t nLocalRows;$/;"	m	struct:ProblemGenerator
nMGLevels	src/test/hpcg/hpcg-main.cc	/^    int64_t nMGLevels;$/;"	m	struct:__anon117::DriverParams	file:
nMatCols	src/test/hpcg/comp-symgs.h	/^    uint64_t nMatCols;$/;"	m	struct:__anon114::symgsTaskArgs
nParts	src/test/hpcg/sparsemat.h	/^    int64_t nParts;$/;"	m	struct:lgncg::SparseMatrix
nPostsmootherSteps	src/test/hpcg/mg-data.h	/^    int64_t nPostsmootherSteps;$/;"	m	struct:lgncg::MGData
nPresmootherSteps	src/test/hpcg/mg-data.h	/^    int64_t nPresmootherSteps;$/;"	m	struct:lgncg::MGData
nRows	src/test/hpcg/sparsemat.h	/^    int64_t nRows, nCols;$/;"	m	struct:lgncg::SparseMatrix
nSubRgns	src/test/hpcg/hpcg-main.cc	/^    int64_t nSubRgns;$/;"	m	struct:__anon117::DriverParams	file:
n_cs_precedes	include/lua/llocale.h	/^    char n_cs_precedes;       \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv
n_cs_precedes	src/nautilus/libccompat.c	/^    char n_cs_precedes;       \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
n_sep_by_space	include/lua/llocale.h	/^    char n_sep_by_space;      \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv
n_sep_by_space	src/nautilus/libccompat.c	/^    char n_sep_by_space;      \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
n_sign_posn	include/lua/llocale.h	/^    char n_sign_posn;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv
n_sign_posn	src/nautilus/libccompat.c	/^    char n_sign_posn;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
na	src/lua_src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	include/lua/lparser.h	/^  lu_byte nactvar;  \/* local level where it appears in current block *\/$/;"	m	struct:Labeldesc
nactvar	include/lua/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
nactvar	src/lua_src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
name	include/acpi/actypes.h	/^	char *name;$/;"	m	struct:acpi_predefined_names
name	include/acpi/actypes.h	/^	uint32_t name;		\/* ACPI object Name *\/$/;"	m	struct:acpi_device_info
name	include/lua/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	include/lua/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc
name	include/lua/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc
name	include/lua/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	include/nautilus/dev.h	/^    char name[DEV_NAME_LEN];$/;"	m	struct:nk_dev
name	include/nautilus/fs.h	/^    char              name[FS_NAME_LEN];           \/\/ colon-terminated name$/;"	m	struct:nk_fs
name	include/nautilus/pmc.h	/^    const char * name;$/;"	m	struct:event_prop
name	include/nautilus/thread.h	/^    char name[MAX_THREAD_NAME];$/;"	m	struct:nk_thread
name	scripts/basic/docproc.c	/^	char *name;$/;"	m	struct:symbols	file:
name	scripts/kconfig/expr.h	/^	char *name;$/;"	m	struct:file
name	scripts/kconfig/expr.h	/^	char *name;$/;"	m	struct:symbol
name	scripts/kconfig/lkc.h	/^	int name;$/;"	m	struct:kconf_id
name	scripts/kconfig/lxdialog/lxdialog.c	/^	char *name;$/;"	m	struct:Mode	file:
name	src/acpi/acpica/aclocal.h	/^	char *name;		\/* NULL terminated string *\/$/;"	m	union:acpi_parse_value
name	src/acpi/acpica/aclocal.h	/^	char *name;		\/* Opcode name (disassembler\/debug only) *\/$/;"	m	struct:acpi_opcode_info
name	src/acpi/acpica/aclocal.h	/^	char *name;$/;"	m	struct:acpi_db_method_info
name	src/acpi/acpica/aclocal.h	/^	char *name;$/;"	m	struct:acpi_interface_info
name	src/acpi/acpica/aclocal.h	/^	char *name;$/;"	m	struct:acpi_port_info
name	src/acpi/acpica/aclocal.h	/^	char name[ACPI_NAME_SIZE];$/;"	m	struct:acpi_name_info
name	src/acpi/acpica/aclocal.h	/^	u32 name;		\/* 4-byte name or zero if no name *\/$/;"	m	struct:acpi_parse_obj_named
name	src/acpi/acpica/aclocal.h	/^	union acpi_name_union name;	\/* ACPI Name, always 4 chars per ACPI spec *\/$/;"	m	struct:acpi_namespace_node	typeref:union:acpi_namespace_node::acpi_name_union
name	src/fs/ext2/ext2fs.h	/^	char	name[EXT2_NAME_LEN];	\/* File name *\/$/;"	m	struct:ext2_dir_entry
name	src/fs/ext2/ext2fs.h	/^	char	name[EXT2_NAME_LEN];	\/* File name *\/$/;"	m	struct:ext2_dir_entry_2
name	src/legion_runtime/legion.h	/^      const char *name;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
name	src/legion_runtime/legion_logging.h	/^        const char *name;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
name	src/legion_runtime/legion_logging.h	/^        const char* name;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopyChannel
name	src/lua_src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	src/lua_src/lundump.c	/^ const char* name;$/;"	m	struct:__anon142	file:
name	src/nautilus/vc.c	/^  char name[32];$/;"	m	struct:nk_virtual_console	file:
nameColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	enum:colIdx
name_len	src/fs/ext2/ext2fs.h	/^	__u16	name_len;		\/* Name length *\/$/;"	m	struct:ext2_dir_entry
name_len	src/fs/ext2/ext2fs.h	/^	__u8	name_len;		\/* Name length *\/$/;"	m	struct:ext2_dir_entry_2
name_length	include/acpi/actbl2.h	/^	uint16_t name_length;$/;"	m	struct:acpi_ibft_initiator
name_length	include/acpi/actbl2.h	/^	uint16_t name_length;$/;"	m	struct:acpi_ibft_nic
name_offset	include/acpi/actbl2.h	/^	uint16_t name_offset;$/;"	m	struct:acpi_ibft_initiator
name_offset	include/acpi/actbl2.h	/^	uint16_t name_offset;$/;"	m	struct:acpi_ibft_nic
name_seg	src/acpi/acpica/aclocal.h	/^	char name_seg[4];$/;"	m	struct:acpi_parse_obj_asl
named	src/acpi/acpica/aclocal.h	/^	struct acpi_parse_obj_named named;$/;"	m	union:acpi_parse_object	typeref:struct:acpi_parse_object::acpi_parse_obj_named
namepath	src/acpi/acpica/aclocal.h	/^	char *namepath;$/;"	m	struct:acpi_parse_obj_asl
namewhat	include/lua/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug
nanos_per_tick	include/dev/hpet.h	/^    unsigned long nanos_per_tick;$/;"	m	struct:hpet_dev
naut___assert_fail	src/lua_src/lnautlib.c	/^static int naut___assert_fail(lua_State *L){$/;"	f	file:
naut___ctype_b_loc	src/lua_src/lnautlib.c	/^static int naut___ctype_b_loc(lua_State *L){$/;"	f	file:
naut___ctype_get_mb_cur_max	src/lua_src/lnautlib.c	/^static int naut___ctype_get_mb_cur_max(lua_State *L){$/;"	f	file:
naut___ctype_tolower_loc	src/lua_src/lnautlib.c	/^static int naut___ctype_tolower_loc(lua_State *L){$/;"	f	file:
naut___ctype_toupper_loc	src/lua_src/lnautlib.c	/^static int naut___ctype_toupper_loc(lua_State *L){$/;"	f	file:
naut___do_backtrace	src/lua_src/lnautlib.c	/^static int naut___do_backtrace(lua_State *L){$/;"	f	file:
naut___duplocale	src/lua_src/lnautlib.c	/^static int naut___duplocale(lua_State *L){$/;"	f	file:
naut___errno_location	src/lua_src/lnautlib.c	/^static int naut___errno_location(lua_State *L){$/;"	f	file:
naut___freelocale	src/lua_src/lnautlib.c	/^static int naut___freelocale(lua_State *L){$/;"	f	file:
naut___fxstat64	src/lua_src/lnautlib.c	/^static int naut___fxstat64(lua_State *L){$/;"	f	file:
naut___get_cpu_features	src/lua_src/lnautlib.c	/^static int naut___get_cpu_features(lua_State *L){$/;"	f	file:
naut___iswctype_l	src/lua_src/lnautlib.c	/^static int naut___iswctype_l(lua_State *L){$/;"	f	file:
naut___kernel_standard	src/lua_src/lnautlib.c	/^static int naut___kernel_standard(lua_State *L){$/;"	f	file:
naut___mm_boot_alloc	src/lua_src/lnautlib.c	/^static int naut___mm_boot_alloc(lua_State *L){$/;"	f	file:
naut___newlocale	src/lua_src/lnautlib.c	/^static int naut___newlocale(lua_State *L){$/;"	f	file:
naut___nl_langinfo_l	src/lua_src/lnautlib.c	/^static int naut___nl_langinfo_l(lua_State *L){$/;"	f	file:
naut___popcountdi2	src/lua_src/lnautlib.c	/^static int naut___popcountdi2(lua_State *L){$/;"	f	file:
naut___stack_chk_fail	src/lua_src/lnautlib.c	/^static int naut___stack_chk_fail(lua_State *L){$/;"	f	file:
naut___strcoll_l	src/lua_src/lnautlib.c	/^static int naut___strcoll_l(lua_State *L){$/;"	f	file:
naut___strftime_l	src/lua_src/lnautlib.c	/^static int naut___strftime_l(lua_State *L){$/;"	f	file:
naut___strtod_l	src/lua_src/lnautlib.c	/^static int naut___strtod_l(lua_State *L){$/;"	f	file:
naut___strtof_l	src/lua_src/lnautlib.c	/^static int naut___strtof_l(lua_State *L){$/;"	f	file:
naut___strxfrm_l	src/lua_src/lnautlib.c	/^static int naut___strxfrm_l(lua_State *L){$/;"	f	file:
naut___thread_fork	src/lua_src/lnautlib.c	/^static int naut___thread_fork(lua_State *L){$/;"	f	file:
naut___towlower_l	src/lua_src/lnautlib.c	/^static int naut___towlower_l(lua_State *L){$/;"	f	file:
naut___towupper_l	src/lua_src/lnautlib.c	/^static int naut___towupper_l(lua_State *L){$/;"	f	file:
naut___uselocale	src/lua_src/lnautlib.c	/^static int naut___uselocale(lua_State *L){$/;"	f	file:
naut___wcscoll_l	src/lua_src/lnautlib.c	/^static int naut___wcscoll_l(lua_State *L){$/;"	f	file:
naut___wcsftime_l	src/lua_src/lnautlib.c	/^static int naut___wcsftime_l(lua_State *L){$/;"	f	file:
naut___wcsxfrm_l	src/lua_src/lnautlib.c	/^static int naut___wcsxfrm_l(lua_State *L){$/;"	f	file:
naut___wctype_l	src/lua_src/lnautlib.c	/^static int naut___wctype_l(lua_State *L){$/;"	f	file:
naut_abort	src/lua_src/lnautlib.c	/^static int naut_abort(lua_State *L){$/;"	f	file:
naut_abs	src/lua_src/lnautlib.c	/^static int naut_abs(lua_State *L){$/;"	f	file:
naut_acos	src/lua_src/lnautlib.c	/^static int naut_acos(lua_State *L){$/;"	f	file:
naut_acpi_reboot	src/lua_src/lnautlib.c	/^static int naut_acpi_reboot(lua_State *L){$/;"	f	file:
naut_acpi_shutdown	src/lua_src/lnautlib.c	/^static int naut_acpi_shutdown(lua_State *L){$/;"	f	file:
naut_apic_bcast_deinit_iipi	src/lua_src/lnautlib.c	/^static int naut_apic_bcast_deinit_iipi(lua_State *L){$/;"	f	file:
naut_apic_bcast_iipi	src/lua_src/lnautlib.c	/^static int naut_apic_bcast_iipi(lua_State *L){$/;"	f	file:
naut_apic_deinit_iipi	src/lua_src/lnautlib.c	/^static int naut_apic_deinit_iipi(lua_State *L){$/;"	f	file:
naut_apic_get_maxlvt	src/lua_src/lnautlib.c	/^static int naut_apic_get_maxlvt(lua_State *L){$/;"	f	file:
naut_apic_init	src/lua_src/lnautlib.c	/^static int naut_apic_init(lua_State *L){$/;"	f	file:
naut_apic_read_timer	src/lua_src/lnautlib.c	/^static int naut_apic_read_timer(lua_State *L){$/;"	f	file:
naut_apic_self_ipi	src/lua_src/lnautlib.c	/^static int naut_apic_self_ipi(lua_State *L){$/;"	f	file:
naut_apic_send_iipi	src/lua_src/lnautlib.c	/^static int naut_apic_send_iipi(lua_State *L){$/;"	f	file:
naut_apic_wait_for_send	src/lua_src/lnautlib.c	/^static int naut_apic_wait_for_send(lua_State *L){$/;"	f	file:
naut_arch_detect_mem_map	src/lua_src/lnautlib.c	/^static int naut_arch_detect_mem_map(lua_State *L){$/;"	f	file:
naut_arch_early_init	src/lua_src/lnautlib.c	/^static int naut_arch_early_init(lua_State *L){$/;"	f	file:
naut_arch_numa_init	src/lua_src/lnautlib.c	/^static int naut_arch_numa_init(lua_State *L){$/;"	f	file:
naut_arch_reserve_boot_regions	src/lua_src/lnautlib.c	/^static int naut_arch_reserve_boot_regions(lua_State *L){$/;"	f	file:
naut_asin	src/lua_src/lnautlib.c	/^static int naut_asin(lua_State *L){$/;"	f	file:
naut_atan	src/lua_src/lnautlib.c	/^static int naut_atan(lua_State *L){$/;"	f	file:
naut_atan2	src/lua_src/lnautlib.c	/^static int naut_atan2(lua_State *L){$/;"	f	file:
naut_atoi	src/lua_src/lnautlib.c	/^static int naut_atoi(lua_State *L){$/;"	f	file:
naut_atox	src/lua_src/lnautlib.c	/^static int naut_atox(lua_State *L){$/;"	f	file:
naut_bindtextdomain	src/lua_src/lnautlib.c	/^static int naut_bindtextdomain(lua_State *L){$/;"	f	file:
naut_btowc	src/lua_src/lnautlib.c	/^static int naut_btowc(lua_State *L){$/;"	f	file:
naut_buddy_alloc	src/lua_src/lnautlib.c	/^static int naut_buddy_alloc(lua_State *L){$/;"	f	file:
naut_buddy_dump_mempool	src/lua_src/lnautlib.c	/^static int naut_buddy_dump_mempool(lua_State *L){$/;"	f	file:
naut_buddy_free	src/lua_src/lnautlib.c	/^static int naut_buddy_free(lua_State *L){$/;"	f	file:
naut_buddy_init	src/lua_src/lnautlib.c	/^static int naut_buddy_init(lua_State *L){$/;"	f	file:
naut_ceil	src/lua_src/lnautlib.c	/^static int naut_ceil(lua_State *L){$/;"	f	file:
naut_clearerr	src/lua_src/lnautlib.c	/^static int naut_clearerr(lua_State *L){$/;"	f	file:
naut_clock	src/lua_src/lnautlib.c	/^static int naut_clock(lua_State *L){$/;"	f	file:
naut_clock_gettime	src/lua_src/lnautlib.c	/^static int naut_clock_gettime(lua_State *L){$/;"	f	file:
naut_cos	src/lua_src/lnautlib.c	/^static int naut_cos(lua_State *L){$/;"	f	file:
naut_cosh	src/lua_src/lnautlib.c	/^static int naut_cosh(lua_State *L){$/;"	f	file:
naut_detect_cpu	src/lua_src/lnautlib.c	/^static int naut_detect_cpu(lua_State *L){$/;"	f	file:
naut_difftime	src/lua_src/lnautlib.c	/^static int naut_difftime(lua_State *L){$/;"	f	file:
naut_disable_8259pic	src/lua_src/lnautlib.c	/^static int naut_disable_8259pic(lua_State *L){$/;"	f	file:
naut_disable_all_events	src/lua_src/lnautlib.c	/^static int naut_disable_all_events(lua_State *L){$/;"	f	file:
naut_disable_perf_event	src/lua_src/lnautlib.c	/^static int naut_disable_perf_event(lua_State *L){$/;"	f	file:
naut_drand48	src/lua_src/lnautlib.c	/^static int naut_drand48(lua_State *L){$/;"	f	file:
naut_enable_all_events	src/lua_src/lnautlib.c	/^static int naut_enable_all_events(lua_State *L){$/;"	f	file:
naut_enable_perf_event	src/lua_src/lnautlib.c	/^static int naut_enable_perf_event(lua_State *L){$/;"	f	file:
naut_exit	src/lua_src/lnautlib.c	/^static int naut_exit(lua_State *L){$/;"	f	file:
naut_exp	src/lua_src/lnautlib.c	/^static int naut_exp(lua_State *L){$/;"	f	file:
naut_fabs	src/lua_src/lnautlib.c	/^static int naut_fabs(lua_State *L){$/;"	f	file:
naut_fclose	src/lua_src/lnautlib.c	/^static int naut_fclose(lua_State *L){$/;"	f	file:
naut_fdopen	src/lua_src/lnautlib.c	/^static int naut_fdopen(lua_State *L){$/;"	f	file:
naut_feof	src/lua_src/lnautlib.c	/^static int naut_feof(lua_State *L){$/;"	f	file:
naut_ferror	src/lua_src/lnautlib.c	/^static int naut_ferror(lua_State *L){$/;"	f	file:
naut_fflush	src/lua_src/lnautlib.c	/^static int naut_fflush(lua_State *L){$/;"	f	file:
naut_fgets	src/lua_src/lnautlib.c	/^static int naut_fgets(lua_State *L){$/;"	f	file:
naut_fileno	src/lua_src/lnautlib.c	/^static int naut_fileno(lua_State *L){$/;"	f	file:
naut_floor	src/lua_src/lnautlib.c	/^static int naut_floor(lua_State *L){$/;"	f	file:
naut_fmod	src/lua_src/lnautlib.c	/^static int naut_fmod(lua_State *L){$/;"	f	file:
naut_fmodnew	src/lua_src/lnautlib.c	/^static int naut_fmodnew(lua_State *L){$/;"	f	file:
naut_fopen	src/lua_src/lnautlib.c	/^static int naut_fopen(lua_State *L){$/;"	f	file:
naut_fopen64	src/lua_src/lnautlib.c	/^static int naut_fopen64(lua_State *L){$/;"	f	file:
naut_fprintf	src/lua_src/lnautlib.c	/^static int naut_fprintf(lua_State *L){$/;"	f	file:
naut_fpu_init	src/lua_src/lnautlib.c	/^static int naut_fpu_init(lua_State *L){$/;"	f	file:
naut_fputc	src/lua_src/lnautlib.c	/^static int naut_fputc(lua_State *L){$/;"	f	file:
naut_fputs	src/lua_src/lnautlib.c	/^static int naut_fputs(lua_State *L){$/;"	f	file:
naut_fread	src/lua_src/lnautlib.c	/^static int naut_fread(lua_State *L){$/;"	f	file:
naut_free	src/lua_src/lnautlib.c	/^static int naut_free(lua_State *L){$/;"	f	file:
naut_freopen	src/lua_src/lnautlib.c	/^static int naut_freopen(lua_State *L){$/;"	f	file:
naut_frexp	src/lua_src/lnautlib.c	/^static int naut_frexp(lua_State *L){$/;"	f	file:
naut_fscanf	src/lua_src/lnautlib.c	/^static int naut_fscanf(lua_State *L){$/;"	f	file:
naut_fseek	src/lua_src/lnautlib.c	/^static int naut_fseek(lua_State *L){$/;"	f	file:
naut_fseeko64	src/lua_src/lnautlib.c	/^static int naut_fseeko64(lua_State *L){$/;"	f	file:
naut_ftell	src/lua_src/lnautlib.c	/^static int naut_ftell(lua_State *L){$/;"	f	file:
naut_ftello64	src/lua_src/lnautlib.c	/^static int naut_ftello64(lua_State *L){$/;"	f	file:
naut_getc	src/lua_src/lnautlib.c	/^static int naut_getc(lua_State *L){$/;"	f	file:
naut_getenv	src/lua_src/lnautlib.c	/^static int naut_getenv(lua_State *L){$/;"	f	file:
naut_gettext	src/lua_src/lnautlib.c	/^static int naut_gettext(lua_State *L){$/;"	f	file:
naut_getwc	src/lua_src/lnautlib.c	/^static int naut_getwc(lua_State *L){$/;"	f	file:
naut_gmtime	src/lua_src/lnautlib.c	/^static int naut_gmtime(lua_State *L){$/;"	f	file:
naut_i8254_calib_tsc	src/lua_src/lnautlib.c	/^static int naut_i8254_calib_tsc(lua_State *L){$/;"	f	file:
naut_i8254_init	src/lua_src/lnautlib.c	/^static int naut_i8254_init(lua_State *L){$/;"	f	file:
naut_idle	src/lua_src/lnautlib.c	/^static int naut_idle(lua_State *L){$/;"	f	file:
naut_imcr_begin_sym_io	src/lua_src/lnautlib.c	/^static int naut_imcr_begin_sym_io(lua_State *L){$/;"	f	file:
naut_info	include/nautilus/nautilus.h	/^struct naut_info {$/;"	s
naut_init	src/lua_src/lnautlib.c	/^static int naut_init(lua_State *L){$/;"	f	file:
naut_ioapic_init	src/lua_src/lnautlib.c	/^static int naut_ioapic_init(lua_State *L){$/;"	f	file:
naut_ioctl	src/lua_src/lnautlib.c	/^static int naut_ioctl(lua_State *L){$/;"	f	file:
naut_ischar	src/lua_src/lnautlib.c	/^static int naut_ischar(lua_State *L){$/;"	f	file:
naut_iswctype	src/lua_src/lnautlib.c	/^static int naut_iswctype(lua_State *L){$/;"	f	file:
naut_kbd_deinit	src/lua_src/lnautlib.c	/^static int naut_kbd_deinit(lua_State *L){$/;"	f	file:
naut_kbd_init	src/lua_src/lnautlib.c	/^static int naut_kbd_init(lua_State *L){$/;"	f	file:
naut_kbd_reset	src/lua_src/lnautlib.c	/^static int naut_kbd_reset(lua_State *L){$/;"	f	file:
naut_kbd_translate	src/lua_src/lnautlib.c	/^static int naut_kbd_translate(lua_State *L){$/;"	f	file:
naut_kmem_add_memory	src/lua_src/lnautlib.c	/^static int naut_kmem_add_memory(lua_State *L){$/;"	f	file:
naut_kmem_get_base_zone	src/lua_src/lnautlib.c	/^static int naut_kmem_get_base_zone(lua_State *L){$/;"	f	file:
naut_kmem_get_region_by_addr	src/lua_src/lnautlib.c	/^static int naut_kmem_get_region_by_addr(lua_State *L){$/;"	f	file:
naut_ldexp	src/lua_src/lnautlib.c	/^static int naut_ldexp(lua_State *L){$/;"	f	file:
naut_localtime	src/lua_src/lnautlib.c	/^static int naut_localtime(lua_State *L){$/;"	f	file:
naut_log	src/lua_src/lnautlib.c	/^static int naut_log(lua_State *L){$/;"	f	file:
naut_log10	src/lua_src/lnautlib.c	/^static int naut_log10(lua_State *L){$/;"	f	file:
naut_lrand48	src/lua_src/lnautlib.c	/^static int naut_lrand48(lua_State *L){$/;"	f	file:
naut_lseek64	src/lua_src/lnautlib.c	/^static int naut_lseek64(lua_State *L){$/;"	f	file:
naut_main	src/lua_src/lnautlib.c	/^static int naut_main(lua_State *L){$/;"	f	file:
naut_malloc	src/lua_src/lnautlib.c	/^static int naut_malloc(lua_State *L){$/;"	f	file:
naut_mb_get_first_hrt_addr	src/lua_src/lnautlib.c	/^static int naut_mb_get_first_hrt_addr(lua_State *L){$/;"	f	file:
naut_mb_is_hrt_environ	src/lua_src/lnautlib.c	/^static int naut_mb_is_hrt_environ(lua_State *L){$/;"	f	file:
naut_mbrtowc	src/lua_src/lnautlib.c	/^static int naut_mbrtowc(lua_State *L){$/;"	f	file:
naut_mbsnrtowcs	src/lua_src/lnautlib.c	/^static int naut_mbsnrtowcs(lua_State *L){$/;"	f	file:
naut_mbsrtowcs	src/lua_src/lnautlib.c	/^static int naut_mbsrtowcs(lua_State *L){$/;"	f	file:
naut_mf_handler	src/lua_src/lnautlib.c	/^static int naut_mf_handler(lua_State *L){$/;"	f	file:
naut_mktime	src/lua_src/lnautlib.c	/^static int naut_mktime(lua_State *L){$/;"	f	file:
naut_mm_boot_alloc	src/lua_src/lnautlib.c	/^static int naut_mm_boot_alloc(lua_State *L){$/;"	f	file:
naut_mm_boot_alloc_aligned	src/lua_src/lnautlib.c	/^static int naut_mm_boot_alloc_aligned(lua_State *L){$/;"	f	file:
naut_mm_boot_free	src/lua_src/lnautlib.c	/^static int naut_mm_boot_free(lua_State *L){$/;"	f	file:
naut_mm_boot_free_mem	src/lua_src/lnautlib.c	/^static int naut_mm_boot_free_mem(lua_State *L){$/;"	f	file:
naut_mm_boot_free_vmem	src/lua_src/lnautlib.c	/^static int naut_mm_boot_free_vmem(lua_State *L){$/;"	f	file:
naut_mm_boot_get_region	src/lua_src/lnautlib.c	/^static int naut_mm_boot_get_region(lua_State *L){$/;"	f	file:
naut_mm_boot_init	src/lua_src/lnautlib.c	/^static int naut_mm_boot_init(lua_State *L){$/;"	f	file:
naut_mm_boot_kmem_cleanup	src/lua_src/lnautlib.c	/^static int naut_mm_boot_kmem_cleanup(lua_State *L){$/;"	f	file:
naut_mm_boot_kmem_init	src/lua_src/lnautlib.c	/^static int naut_mm_boot_kmem_init(lua_State *L){$/;"	f	file:
naut_mm_boot_last_pfn	src/lua_src/lnautlib.c	/^static int naut_mm_boot_last_pfn(lua_State *L){$/;"	f	file:
naut_mm_boot_num_regions	src/lua_src/lnautlib.c	/^static int naut_mm_boot_num_regions(lua_State *L){$/;"	f	file:
naut_mm_boot_reserve_mem	src/lua_src/lnautlib.c	/^static int naut_mm_boot_reserve_mem(lua_State *L){$/;"	f	file:
naut_mm_boot_reserve_vmem	src/lua_src/lnautlib.c	/^static int naut_mm_boot_reserve_vmem(lua_State *L){$/;"	f	file:
naut_mm_dump_page_map	src/lua_src/lnautlib.c	/^static int naut_mm_dump_page_map(lua_State *L){$/;"	f	file:
naut_mm_get_all_mem	src/lua_src/lnautlib.c	/^static int naut_mm_get_all_mem(lua_State *L){$/;"	f	file:
naut_mm_get_usable_ram	src/lua_src/lnautlib.c	/^static int naut_mm_get_usable_ram(lua_State *L){$/;"	f	file:
naut_modf	src/lua_src/lnautlib.c	/^static int naut_modf(lua_State *L){$/;"	f	file:
naut_msr_read	src/lua_src/lnautlib.c	/^static int naut_msr_read(lua_State *L){$/;"	f	file:
naut_msr_write	src/lua_src/lnautlib.c	/^static int naut_msr_write(lua_State *L){$/;"	f	file:
naut_multiboot_get_phys_mem	src/lua_src/lnautlib.c	/^static int naut_multiboot_get_phys_mem(lua_State *L){$/;"	f	file:
naut_multiboot_get_size	src/lua_src/lnautlib.c	/^static int naut_multiboot_get_size(lua_State *L){$/;"	f	file:
naut_multiboot_get_sys_ram	src/lua_src/lnautlib.c	/^static int naut_multiboot_get_sys_ram(lua_State *L){$/;"	f	file:
naut_multiboot_parse	src/lua_src/lnautlib.c	/^static int naut_multiboot_parse(lua_State *L){$/;"	f	file:
naut_nemo_event_await	src/lua_src/lnautlib.c	/^static int naut_nemo_event_await(lua_State *L){$/;"	f	file:
naut_nemo_event_broadcast	src/lua_src/lnautlib.c	/^static int naut_nemo_event_broadcast(lua_State *L){$/;"	f	file:
naut_nemo_event_notify	src/lua_src/lnautlib.c	/^static int naut_nemo_event_notify(lua_State *L){$/;"	f	file:
naut_nemo_init	src/lua_src/lnautlib.c	/^static int naut_nemo_init(lua_State *L){$/;"	f	file:
naut_nemo_unregister_event_action	src/lua_src/lnautlib.c	/^static int naut_nemo_unregister_event_action(lua_State *L){$/;"	f	file:
naut_nk_acpi_init	src/lua_src/lnautlib.c	/^static int naut_nk_acpi_init(lua_State *L){$/;"	f	file:
naut_nk_barrier_destroy	src/lua_src/lnautlib.c	/^static int naut_nk_barrier_destroy(lua_State *L){$/;"	f	file:
naut_nk_barrier_init	src/lua_src/lnautlib.c	/^static int naut_nk_barrier_init(lua_State *L){$/;"	f	file:
naut_nk_barrier_test	src/lua_src/lnautlib.c	/^static int naut_nk_barrier_test(lua_State *L){$/;"	f	file:
naut_nk_barrier_wait	src/lua_src/lnautlib.c	/^static int naut_nk_barrier_wait(lua_State *L){$/;"	f	file:
naut_nk_bind_vc	src/lua_src/lnautlib.c	/^static int naut_nk_bind_vc(lua_State *L){$/;"	f	file:
naut_nk_condvar_bcast	src/lua_src/lnautlib.c	/^static int naut_nk_condvar_bcast(lua_State *L){$/;"	f	file:
naut_nk_condvar_destroy	src/lua_src/lnautlib.c	/^static int naut_nk_condvar_destroy(lua_State *L){$/;"	f	file:
naut_nk_condvar_init	src/lua_src/lnautlib.c	/^static int naut_nk_condvar_init(lua_State *L){$/;"	f	file:
naut_nk_condvar_test	src/lua_src/lnautlib.c	/^static int naut_nk_condvar_test(lua_State *L){$/;"	f	file:
naut_nk_core_barrier_arrive	src/lua_src/lnautlib.c	/^static int naut_nk_core_barrier_arrive(lua_State *L){$/;"	f	file:
naut_nk_core_barrier_lower	src/lua_src/lnautlib.c	/^static int naut_nk_core_barrier_lower(lua_State *L){$/;"	f	file:
naut_nk_core_barrier_raise	src/lua_src/lnautlib.c	/^static int naut_nk_core_barrier_raise(lua_State *L){$/;"	f	file:
naut_nk_core_barrier_wait	src/lua_src/lnautlib.c	/^static int naut_nk_core_barrier_wait(lua_State *L){$/;"	f	file:
naut_nk_cpu_topo_discover	src/lua_src/lnautlib.c	/^static int naut_nk_cpu_topo_discover(lua_State *L){$/;"	f	file:
naut_nk_create_htable_iter	src/lua_src/lnautlib.c	/^static int naut_nk_create_htable_iter(lua_State *L){$/;"	f	file:
naut_nk_dequeue_entry	src/lua_src/lnautlib.c	/^static int naut_nk_dequeue_entry(lua_State *L){$/;"	f	file:
naut_nk_dequeue_entry_atomic	src/lua_src/lnautlib.c	/^static int naut_nk_dequeue_entry_atomic(lua_State *L){$/;"	f	file:
naut_nk_dequeue_first	src/lua_src/lnautlib.c	/^static int naut_nk_dequeue_first(lua_State *L){$/;"	f	file:
naut_nk_dequeue_first_atomic	src/lua_src/lnautlib.c	/^static int naut_nk_dequeue_first_atomic(lua_State *L){$/;"	f	file:
naut_nk_dequeue_keycode	src/lua_src/lnautlib.c	/^static int naut_nk_dequeue_keycode(lua_State *L){$/;"	f	file:
naut_nk_dequeue_scancode	src/lua_src/lnautlib.c	/^static int naut_nk_dequeue_scancode(lua_State *L){$/;"	f	file:
naut_nk_destroy_htable_iter	src/lua_src/lnautlib.c	/^static int naut_nk_destroy_htable_iter(lua_State *L){$/;"	f	file:
naut_nk_destroy_vc	src/lua_src/lnautlib.c	/^static int naut_nk_destroy_vc(lua_State *L){$/;"	f	file:
naut_nk_detect_cpu_freq	src/lua_src/lnautlib.c	/^static int naut_nk_detect_cpu_freq(lua_State *L){$/;"	f	file:
naut_nk_dump_numa_info	src/lua_src/lnautlib.c	/^static int naut_nk_dump_numa_info(lua_State *L){$/;"	f	file:
naut_nk_enqueue_keycode	src/lua_src/lnautlib.c	/^static int naut_nk_enqueue_keycode(lua_State *L){$/;"	f	file:
naut_nk_enqueue_scancode	src/lua_src/lnautlib.c	/^static int naut_nk_enqueue_scancode(lua_State *L){$/;"	f	file:
naut_nk_free_htable	src/lua_src/lnautlib.c	/^static int naut_nk_free_htable(lua_State *L){$/;"	f	file:
naut_nk_get_base_region_by_cpu	src/lua_src/lnautlib.c	/^static int naut_nk_get_base_region_by_cpu(lua_State *L){$/;"	f	file:
naut_nk_get_base_region_by_num	src/lua_src/lnautlib.c	/^static int naut_nk_get_base_region_by_num(lua_State *L){$/;"	f	file:
naut_nk_get_num_domains	src/lua_src/lnautlib.c	/^static int naut_nk_get_num_domains(lua_State *L){$/;"	f	file:
naut_nk_get_parent_tid	src/lua_src/lnautlib.c	/^static int naut_nk_get_parent_tid(lua_State *L){$/;"	f	file:
naut_nk_get_rand_bytes	src/lua_src/lnautlib.c	/^static int naut_nk_get_rand_bytes(lua_State *L){$/;"	f	file:
naut_nk_get_tid	src/lua_src/lnautlib.c	/^static int naut_nk_get_tid(lua_State *L){$/;"	f	file:
naut_nk_hash_buffer	src/lua_src/lnautlib.c	/^static int naut_nk_hash_buffer(lua_State *L){$/;"	f	file:
naut_nk_hash_long	src/lua_src/lnautlib.c	/^static int naut_nk_hash_long(lua_State *L){$/;"	f	file:
naut_nk_htable_change	src/lua_src/lnautlib.c	/^static int naut_nk_htable_change(lua_State *L){$/;"	f	file:
naut_nk_htable_count	src/lua_src/lnautlib.c	/^static int naut_nk_htable_count(lua_State *L){$/;"	f	file:
naut_nk_htable_dec	src/lua_src/lnautlib.c	/^static int naut_nk_htable_dec(lua_State *L){$/;"	f	file:
naut_nk_htable_get_iter_key	src/lua_src/lnautlib.c	/^static int naut_nk_htable_get_iter_key(lua_State *L){$/;"	f	file:
naut_nk_htable_get_iter_value	src/lua_src/lnautlib.c	/^static int naut_nk_htable_get_iter_value(lua_State *L){$/;"	f	file:
naut_nk_htable_inc	src/lua_src/lnautlib.c	/^static int naut_nk_htable_inc(lua_State *L){$/;"	f	file:
naut_nk_htable_insert	src/lua_src/lnautlib.c	/^static int naut_nk_htable_insert(lua_State *L){$/;"	f	file:
naut_nk_htable_iter_advance	src/lua_src/lnautlib.c	/^static int naut_nk_htable_iter_advance(lua_State *L){$/;"	f	file:
naut_nk_htable_iter_remove	src/lua_src/lnautlib.c	/^static int naut_nk_htable_iter_remove(lua_State *L){$/;"	f	file:
naut_nk_htable_iter_search	src/lua_src/lnautlib.c	/^static int naut_nk_htable_iter_search(lua_State *L){$/;"	f	file:
naut_nk_htable_remove	src/lua_src/lnautlib.c	/^static int naut_nk_htable_remove(lua_State *L){$/;"	f	file:
naut_nk_htable_search	src/lua_src/lnautlib.c	/^static int naut_nk_htable_search(lua_State *L){$/;"	f	file:
naut_nk_int_init	src/lua_src/lnautlib.c	/^static int naut_nk_int_init(lua_State *L){$/;"	f	file:
naut_nk_join	src/lua_src/lnautlib.c	/^static int naut_nk_join(lua_State *L){$/;"	f	file:
naut_nk_kmem_init	src/lua_src/lnautlib.c	/^static int naut_nk_kmem_init(lua_State *L){$/;"	f	file:
naut_nk_launch_shell	src/lua_src/lnautlib.c	/^static int naut_nk_launch_shell(lua_State *L){$/;"	f	file:
naut_nk_mwait_init	src/lua_src/lnautlib.c	/^static int naut_nk_mwait_init(lua_State *L){$/;"	f	file:
naut_nk_my_numa_node	src/lua_src/lnautlib.c	/^static int naut_nk_my_numa_node(lua_State *L){$/;"	f	file:
naut_nk_numa_init	src/lua_src/lnautlib.c	/^static int naut_nk_numa_init(lua_State *L){$/;"	f	file:
naut_nk_paging_init	src/lua_src/lnautlib.c	/^static int naut_nk_paging_init(lua_State *L){$/;"	f	file:
naut_nk_pf_handler	src/lua_src/lnautlib.c	/^static int naut_nk_pf_handler(lua_State *L){$/;"	f	file:
naut_nk_print_regs	src/lua_src/lnautlib.c	/^static int naut_nk_print_regs(lua_State *L){$/;"	f	file:
naut_nk_queue_create	src/lua_src/lnautlib.c	/^static int naut_nk_queue_create(lua_State *L){$/;"	f	file:
naut_nk_rand_init	src/lua_src/lnautlib.c	/^static int naut_nk_rand_init(lua_State *L){$/;"	f	file:
naut_nk_rand_seed	src/lua_src/lnautlib.c	/^static int naut_nk_rand_seed(lua_State *L){$/;"	f	file:
naut_nk_rand_set_xi	src/lua_src/lnautlib.c	/^static int naut_nk_rand_set_xi(lua_State *L){$/;"	f	file:
naut_nk_rb_erase	src/lua_src/lnautlib.c	/^static int naut_nk_rb_erase(lua_State *L){$/;"	f	file:
naut_nk_rb_first	src/lua_src/lnautlib.c	/^static int naut_nk_rb_first(lua_State *L){$/;"	f	file:
naut_nk_rb_insert_color	src/lua_src/lnautlib.c	/^static int naut_nk_rb_insert_color(lua_State *L){$/;"	f	file:
naut_nk_rb_last	src/lua_src/lnautlib.c	/^static int naut_nk_rb_last(lua_State *L){$/;"	f	file:
naut_nk_rb_next	src/lua_src/lnautlib.c	/^static int naut_nk_rb_next(lua_State *L){$/;"	f	file:
naut_nk_rb_prev	src/lua_src/lnautlib.c	/^static int naut_nk_rb_prev(lua_State *L){$/;"	f	file:
naut_nk_rb_replace_node	src/lua_src/lnautlib.c	/^static int naut_nk_rb_replace_node(lua_State *L){$/;"	f	file:
naut_nk_release_vc	src/lua_src/lnautlib.c	/^static int naut_nk_release_vc(lua_State *L){$/;"	f	file:
naut_nk_rwlock_rd_lock	src/lua_src/lnautlib.c	/^static int naut_nk_rwlock_rd_lock(lua_State *L){$/;"	f	file:
naut_nk_rwlock_rd_unlock	src/lua_src/lnautlib.c	/^static int naut_nk_rwlock_rd_unlock(lua_State *L){$/;"	f	file:
naut_nk_rwlock_test	src/lua_src/lnautlib.c	/^static int naut_nk_rwlock_test(lua_State *L){$/;"	f	file:
naut_nk_rwlock_wr_lock	src/lua_src/lnautlib.c	/^static int naut_nk_rwlock_wr_lock(lua_State *L){$/;"	f	file:
naut_nk_rwlock_wr_unlock	src/lua_src/lnautlib.c	/^static int naut_nk_rwlock_wr_unlock(lua_State *L){$/;"	f	file:
naut_nk_sched_init	src/lua_src/lnautlib.c	/^static int naut_nk_sched_init(lua_State *L){$/;"	f	file:
naut_nk_sched_init_ap	src/lua_src/lnautlib.c	/^static int naut_nk_sched_init_ap(lua_State *L){$/;"	f	file:
naut_nk_set_thread_fork_output	src/lua_src/lnautlib.c	/^static int naut_nk_set_thread_fork_output(lua_State *L){$/;"	f	file:
naut_nk_sleep	src/lua_src/lnautlib.c	/^static int naut_nk_sleep(lua_State *L){$/;"	f	file:
naut_nk_stack_dump	src/lua_src/lnautlib.c	/^static int naut_nk_stack_dump(lua_State *L){$/;"	f	file:
naut_nk_switch_to_next_vc	src/lua_src/lnautlib.c	/^static int naut_nk_switch_to_next_vc(lua_State *L){$/;"	f	file:
naut_nk_switch_to_prev_vc	src/lua_src/lnautlib.c	/^static int naut_nk_switch_to_prev_vc(lua_State *L){$/;"	f	file:
naut_nk_switch_to_vc	src/lua_src/lnautlib.c	/^static int naut_nk_switch_to_vc(lua_State *L){$/;"	f	file:
naut_nk_switch_to_vc_list	src/lua_src/lnautlib.c	/^static int naut_nk_switch_to_vc_list(lua_State *L){$/;"	f	file:
naut_nk_thread_destroy	src/lua_src/lnautlib.c	/^static int naut_nk_thread_destroy(lua_State *L){$/;"	f	file:
naut_nk_thread_exit	src/lua_src/lnautlib.c	/^static int naut_nk_thread_exit(lua_State *L){$/;"	f	file:
naut_nk_thread_queue_sleep	src/lua_src/lnautlib.c	/^static int naut_nk_thread_queue_sleep(lua_State *L){$/;"	f	file:
naut_nk_thread_queue_wake_all	src/lua_src/lnautlib.c	/^static int naut_nk_thread_queue_wake_all(lua_State *L){$/;"	f	file:
naut_nk_thread_queue_wake_one	src/lua_src/lnautlib.c	/^static int naut_nk_thread_queue_wake_one(lua_State *L){$/;"	f	file:
naut_nk_thread_run	src/lua_src/lnautlib.c	/^static int naut_nk_thread_run(lua_State *L){$/;"	f	file:
naut_nk_timer_handler	src/lua_src/lnautlib.c	/^static int naut_nk_timer_handler(lua_State *L){$/;"	f	file:
naut_nk_timer_init	src/lua_src/lnautlib.c	/^static int naut_nk_timer_init(lua_State *L){$/;"	f	file:
naut_nk_tls_key_delete	src/lua_src/lnautlib.c	/^static int naut_nk_tls_key_delete(lua_State *L){$/;"	f	file:
naut_nk_tls_test	src/lua_src/lnautlib.c	/^static int naut_nk_tls_test(lua_State *L){$/;"	f	file:
naut_nk_vc_deinit	src/lua_src/lnautlib.c	/^static int naut_nk_vc_deinit(lua_State *L){$/;"	f	file:
naut_nk_vc_get_keycode	src/lua_src/lnautlib.c	/^static int naut_nk_vc_get_keycode(lua_State *L){$/;"	f	file:
naut_nk_vc_get_scancode	src/lua_src/lnautlib.c	/^static int naut_nk_vc_get_scancode(lua_State *L){$/;"	f	file:
naut_nk_vc_getchar_extended	src/lua_src/lnautlib.c	/^static int naut_nk_vc_getchar_extended(lua_State *L){$/;"	f	file:
naut_nk_vc_gets	src/lua_src/lnautlib.c	/^static int naut_nk_vc_gets(lua_State *L){$/;"	f	file:
naut_nk_vc_handle_input	src/lua_src/lnautlib.c	/^static int naut_nk_vc_handle_input(lua_State *L){$/;"	f	file:
naut_nk_vc_init	src/lua_src/lnautlib.c	/^static int naut_nk_vc_init(lua_State *L){$/;"	f	file:
naut_nk_vc_log	src/lua_src/lnautlib.c	/^static int naut_nk_vc_log(lua_State *L){$/;"	f	file:
naut_nk_vc_print	src/lua_src/lnautlib.c	/^static int naut_nk_vc_print(lua_State *L){$/;"	f	file:
naut_nk_vc_printf	src/lua_src/lnautlib.c	/^static int naut_nk_vc_printf(lua_State *L){$/;"	f	file:
naut_nk_vc_puts	src/lua_src/lnautlib.c	/^static int naut_nk_vc_puts(lua_State *L){$/;"	f	file:
naut_nk_vc_scrollup	src/lua_src/lnautlib.c	/^static int naut_nk_vc_scrollup(lua_State *L){$/;"	f	file:
naut_nk_vc_scrollup_specific	src/lua_src/lnautlib.c	/^static int naut_nk_vc_scrollup_specific(lua_State *L){$/;"	f	file:
naut_nk_vc_wait	src/lua_src/lnautlib.c	/^static int naut_nk_vc_wait(lua_State *L){$/;"	f	file:
naut_nk_wait	src/lua_src/lnautlib.c	/^static int naut_nk_wait(lua_State *L){$/;"	f	file:
naut_nk_yield	src/lua_src/lnautlib.c	/^static int naut_nk_yield(lua_State *L){$/;"	f	file:
naut_null_excp_handler	src/lua_src/lnautlib.c	/^static int naut_null_excp_handler(lua_State *L){$/;"	f	file:
naut_null_irq_handler	src/lua_src/lnautlib.c	/^static int naut_null_irq_handler(lua_State *L){$/;"	f	file:
naut_pci_init	src/lua_src/lnautlib.c	/^static int naut_pci_init(lua_State *L){$/;"	f	file:
naut_perf_report	src/lua_src/lnautlib.c	/^static int naut_perf_report(lua_State *L){$/;"	f	file:
naut_pmc_init	src/lua_src/lnautlib.c	/^static int naut_pmc_init(lua_State *L){$/;"	f	file:
naut_poll	src/lua_src/lnautlib.c	/^static int naut_poll(lua_State *L){$/;"	f	file:
naut_pow	src/lua_src/lnautlib.c	/^static int naut_pow(lua_State *L){$/;"	f	file:
naut_printf	src/lua_src/lnautlib.c	/^static int naut_printf(lua_State *L){$/;"	f	file:
naut_printk	src/lua_src/lnautlib.c	/^static int naut_printk(lua_State *L){$/;"	f	file:
naut_pthread_mutex_init	src/lua_src/lnautlib.c	/^static int naut_pthread_mutex_init(lua_State *L){$/;"	f	file:
naut_pthread_mutex_lock	src/lua_src/lnautlib.c	/^static int naut_pthread_mutex_lock(lua_State *L){$/;"	f	file:
naut_pthread_mutex_unlock	src/lua_src/lnautlib.c	/^static int naut_pthread_mutex_unlock(lua_State *L){$/;"	f	file:
naut_ptrout	src/lua_src/lnautlib.c	/^static int naut_ptrout(lua_State *L){$/;"	f	file:
naut_ptrtest	src/lua_src/lnautlib.c	/^static int naut_ptrtest(lua_State *L){$/;"	f	file:
naut_putc	src/lua_src/lnautlib.c	/^static int naut_putc(lua_State *L){$/;"	f	file:
naut_putwc	src/lua_src/lnautlib.c	/^static int naut_putwc(lua_State *L){$/;"	f	file:
naut_rand	src/lua_src/lnautlib.c	/^static int naut_rand(lua_State *L){$/;"	f	file:
naut_read	src/lua_src/lnautlib.c	/^static int naut_read(lua_State *L){$/;"	f	file:
naut_read_event_count	src/lua_src/lnautlib.c	/^static int naut_read_event_count(lua_State *L){$/;"	f	file:
naut_realloc	src/lua_src/lnautlib.c	/^static int naut_realloc(lua_State *L){$/;"	f	file:
naut_reboot	src/lua_src/lnautlib.c	/^static int naut_reboot(lua_State *L){$/;"	f	file:
naut_release_perf_event	src/lua_src/lnautlib.c	/^static int naut_release_perf_event(lua_State *L){$/;"	f	file:
naut_remove	src/lua_src/lnautlib.c	/^static int naut_remove(lua_State *L){$/;"	f	file:
naut_rename	src/lua_src/lnautlib.c	/^static int naut_rename(lua_State *L){$/;"	f	file:
naut_reset_all_counters	src/lua_src/lnautlib.c	/^static int naut_reset_all_counters(lua_State *L){$/;"	f	file:
naut_scnprintf	src/lua_src/lnautlib.c	/^static int naut_scnprintf(lua_State *L){$/;"	f	file:
naut_serial_init	src/lua_src/lnautlib.c	/^static int naut_serial_init(lua_State *L){$/;"	f	file:
naut_serial_mem_dump	src/lua_src/lnautlib.c	/^static int naut_serial_mem_dump(lua_State *L){$/;"	f	file:
naut_serial_print	src/lua_src/lnautlib.c	/^static int naut_serial_print(lua_State *L){$/;"	f	file:
naut_serial_printlevel	src/lua_src/lnautlib.c	/^static int naut_serial_printlevel(lua_State *L){$/;"	f	file:
naut_serial_putlnn	src/lua_src/lnautlib.c	/^static int naut_serial_putlnn(lua_State *L){$/;"	f	file:
naut_serial_puts	src/lua_src/lnautlib.c	/^static int naut_serial_puts(lua_State *L){$/;"	f	file:
naut_setlocale	src/lua_src/lnautlib.c	/^static int naut_setlocale(lua_State *L){$/;"	f	file:
naut_setup_idt	src/lua_src/lnautlib.c	/^static int naut_setup_idt(lua_State *L){$/;"	f	file:
naut_setvbuf	src/lua_src/lnautlib.c	/^static int naut_setvbuf(lua_State *L){$/;"	f	file:
naut_simple_strtoll	src/lua_src/lnautlib.c	/^static int naut_simple_strtoll(lua_State *L){$/;"	f	file:
naut_simple_strtoul	src/lua_src/lnautlib.c	/^static int naut_simple_strtoul(lua_State *L){$/;"	f	file:
naut_simple_strtoull	src/lua_src/lnautlib.c	/^static int naut_simple_strtoull(lua_State *L){$/;"	f	file:
naut_sin	src/lua_src/lnautlib.c	/^static int naut_sin(lua_State *L){$/;"	f	file:
naut_sinh	src/lua_src/lnautlib.c	/^static int naut_sinh(lua_State *L){$/;"	f	file:
naut_smp_ap_entry	src/lua_src/lnautlib.c	/^static int naut_smp_ap_entry(lua_State *L){$/;"	f	file:
naut_smp_bringup_aps	src/lua_src/lnautlib.c	/^static int naut_smp_bringup_aps(lua_State *L){$/;"	f	file:
naut_smp_early_init	src/lua_src/lnautlib.c	/^static int naut_smp_early_init(lua_State *L){$/;"	f	file:
naut_smp_setup_xcall_bsp	src/lua_src/lnautlib.c	/^static int naut_smp_setup_xcall_bsp(lua_State *L){$/;"	f	file:
naut_snprintf	src/lua_src/lnautlib.c	/^static int naut_snprintf(lua_State *L){$/;"	f	file:
naut_sprintf	src/lua_src/lnautlib.c	/^static int naut_sprintf(lua_State *L){$/;"	f	file:
naut_sqrt	src/lua_src/lnautlib.c	/^static int naut_sqrt(lua_State *L){$/;"	f	file:
naut_srand	src/lua_src/lnautlib.c	/^static int naut_srand(lua_State *L){$/;"	f	file:
naut_srand48	src/lua_src/lnautlib.c	/^static int naut_srand48(lua_State *L){$/;"	f	file:
naut_sscanf	src/lua_src/lnautlib.c	/^static int naut_sscanf(lua_State *L){$/;"	f	file:
naut_str_tolower	src/lua_src/lnautlib.c	/^static int naut_str_tolower(lua_State *L){$/;"	f	file:
naut_str_toupper	src/lua_src/lnautlib.c	/^static int naut_str_toupper(lua_State *L){$/;"	f	file:
naut_strcasecmp	src/lua_src/lnautlib.c	/^static int naut_strcasecmp(lua_State *L){$/;"	f	file:
naut_strcat	src/lua_src/lnautlib.c	/^static int naut_strcat(lua_State *L){$/;"	f	file:
naut_strchr	src/lua_src/lnautlib.c	/^static int naut_strchr(lua_State *L){$/;"	f	file:
naut_strcmp	src/lua_src/lnautlib.c	/^static int naut_strcmp(lua_State *L){$/;"	f	file:
naut_strcoll	src/lua_src/lnautlib.c	/^static int naut_strcoll(lua_State *L){$/;"	f	file:
naut_strcpy	src/lua_src/lnautlib.c	/^static int naut_strcpy(lua_State *L){$/;"	f	file:
naut_strcspn	src/lua_src/lnautlib.c	/^static int naut_strcspn(lua_State *L){$/;"	f	file:
naut_strdup	src/lua_src/lnautlib.c	/^static int naut_strdup(lua_State *L){$/;"	f	file:
naut_strerror	src/lua_src/lnautlib.c	/^static int naut_strerror(lua_State *L){$/;"	f	file:
naut_strftime	src/lua_src/lnautlib.c	/^static int naut_strftime(lua_State *L){$/;"	f	file:
naut_strict_strtol	src/lua_src/lnautlib.c	/^static int naut_strict_strtol(lua_State *L){$/;"	f	file:
naut_strict_strtoll	src/lua_src/lnautlib.c	/^static int naut_strict_strtoll(lua_State *L){$/;"	f	file:
naut_strict_strtoul	src/lua_src/lnautlib.c	/^static int naut_strict_strtoul(lua_State *L){$/;"	f	file:
naut_strict_strtoull	src/lua_src/lnautlib.c	/^static int naut_strict_strtoull(lua_State *L){$/;"	f	file:
naut_strncasecmp	src/lua_src/lnautlib.c	/^static int naut_strncasecmp(lua_State *L){$/;"	f	file:
naut_strncat	src/lua_src/lnautlib.c	/^static int naut_strncat(lua_State *L){$/;"	f	file:
naut_strncmp	src/lua_src/lnautlib.c	/^static int naut_strncmp(lua_State *L){$/;"	f	file:
naut_strncpy	src/lua_src/lnautlib.c	/^static int naut_strncpy(lua_State *L){$/;"	f	file:
naut_strnlen	src/lua_src/lnautlib.c	/^static int naut_strnlen(lua_State *L){$/;"	f	file:
naut_strrchr	src/lua_src/lnautlib.c	/^static int naut_strrchr(lua_State *L){$/;"	f	file:
naut_strsep	src/lua_src/lnautlib.c	/^static int naut_strsep(lua_State *L){$/;"	f	file:
naut_strspn	src/lua_src/lnautlib.c	/^static int naut_strspn(lua_State *L){$/;"	f	file:
naut_strstr	src/lua_src/lnautlib.c	/^static int naut_strstr(lua_State *L){$/;"	f	file:
naut_strtod	src/lua_src/lnautlib.c	/^static int naut_strtod(lua_State *L){$/;"	f	file:
naut_strtof	src/lua_src/lnautlib.c	/^static int naut_strtof(lua_State *L){$/;"	f	file:
naut_strtoi	src/lua_src/lnautlib.c	/^static int naut_strtoi(lua_State *L){$/;"	f	file:
naut_strtol	src/lua_src/lnautlib.c	/^static int naut_strtol(lua_State *L){$/;"	f	file:
naut_strtold	src/lua_src/lnautlib.c	/^static int naut_strtold(lua_State *L){$/;"	f	file:
naut_strtold_l	src/lua_src/lnautlib.c	/^static int naut_strtold_l(lua_State *L){$/;"	f	file:
naut_strtox	src/lua_src/lnautlib.c	/^static int naut_strtox(lua_State *L){$/;"	f	file:
naut_strxfrm	src/lua_src/lnautlib.c	/^static int naut_strxfrm(lua_State *L){$/;"	f	file:
naut_syscall	src/lua_src/lnautlib.c	/^static int naut_syscall(lua_State *L){$/;"	f	file:
naut_system	src/lua_src/lnautlib.c	/^static int naut_system(lua_State *L){$/;"	f	file:
naut_tan	src/lua_src/lnautlib.c	/^static int naut_tan(lua_State *L){$/;"	f	file:
naut_tanh	src/lua_src/lnautlib.c	/^static int naut_tanh(lua_State *L){$/;"	f	file:
naut_test_nemo	src/lua_src/lnautlib.c	/^static int naut_test_nemo(lua_State *L){$/;"	f	file:
naut_test_setlong	src/lua_src/lnautlib.c	/^static int naut_test_setlong(lua_State *L){$/;"	f	file:
naut_textdomain	src/lua_src/lnautlib.c	/^static int naut_textdomain(lua_State *L){$/;"	f	file:
naut_time	src/lua_src/lnautlib.c	/^static int naut_time(lua_State *L){$/;"	f	file:
naut_tmpfile	src/lua_src/lnautlib.c	/^static int naut_tmpfile(lua_State *L){$/;"	f	file:
naut_tmpnam	src/lua_src/lnautlib.c	/^static int naut_tmpnam(lua_State *L){$/;"	f	file:
naut_towlower	src/lua_src/lnautlib.c	/^static int naut_towlower(lua_State *L){$/;"	f	file:
naut_towupper	src/lua_src/lnautlib.c	/^static int naut_towupper(lua_State *L){$/;"	f	file:
naut_ungetc	src/lua_src/lnautlib.c	/^static int naut_ungetc(lua_State *L){$/;"	f	file:
naut_ungetwc	src/lua_src/lnautlib.c	/^static int naut_ungetwc(lua_State *L){$/;"	f	file:
naut_vga_get_cursor	src/lua_src/lnautlib.c	/^static int naut_vga_get_cursor(lua_State *L){$/;"	f	file:
naut_vga_init	src/lua_src/lnautlib.c	/^static int naut_vga_init(lua_State *L){$/;"	f	file:
naut_vga_init_screen	src/lua_src/lnautlib.c	/^static int naut_vga_init_screen(lua_State *L){$/;"	f	file:
naut_vga_puts	src/lua_src/lnautlib.c	/^static int naut_vga_puts(lua_State *L){$/;"	f	file:
naut_vga_scrollup	src/lua_src/lnautlib.c	/^static int naut_vga_scrollup(lua_State *L){$/;"	f	file:
naut_warn_slowpath	src/lua_src/lnautlib.c	/^static int naut_warn_slowpath(lua_State *L){$/;"	f	file:
naut_wcrtomb	src/lua_src/lnautlib.c	/^static int naut_wcrtomb(lua_State *L){$/;"	f	file:
naut_wcscmp	src/lua_src/lnautlib.c	/^static int naut_wcscmp(lua_State *L){$/;"	f	file:
naut_wcscoll	src/lua_src/lnautlib.c	/^static int naut_wcscoll(lua_State *L){$/;"	f	file:
naut_wcsftime	src/lua_src/lnautlib.c	/^static int naut_wcsftime(lua_State *L){$/;"	f	file:
naut_wcslen	src/lua_src/lnautlib.c	/^static int naut_wcslen(lua_State *L){$/;"	f	file:
naut_wcsnrtombs	src/lua_src/lnautlib.c	/^static int naut_wcsnrtombs(lua_State *L){$/;"	f	file:
naut_wcsxfrm	src/lua_src/lnautlib.c	/^static int naut_wcsxfrm(lua_State *L){$/;"	f	file:
naut_wctob	src/lua_src/lnautlib.c	/^static int naut_wctob(lua_State *L){$/;"	f	file:
naut_wctype	src/lua_src/lnautlib.c	/^static int naut_wctype(lua_State *L){$/;"	f	file:
naut_wmemchr	src/lua_src/lnautlib.c	/^static int naut_wmemchr(lua_State *L){$/;"	f	file:
naut_wmemcmp	src/lua_src/lnautlib.c	/^static int naut_wmemcmp(lua_State *L){$/;"	f	file:
naut_wmemcpy	src/lua_src/lnautlib.c	/^static int naut_wmemcpy(lua_State *L){$/;"	f	file:
naut_wmemmove	src/lua_src/lnautlib.c	/^static int naut_wmemmove(lua_State *L){$/;"	f	file:
naut_wmemset	src/lua_src/lnautlib.c	/^static int naut_wmemset(lua_State *L){$/;"	f	file:
naut_write	src/lua_src/lnautlib.c	/^static int naut_write(lua_State *L){$/;"	f	file:
naut_writev	src/lua_src/lnautlib.c	/^static int naut_writev(lua_State *L){$/;"	f	file:
naut_wru	src/lua_src/wru.c	/^void naut_wru(lua_State *L)$/;"	f
naut_xm_handler	src/lua_src/lnautlib.c	/^static int naut_xm_handler(lua_State *L){$/;"	f	file:
nautilus	Makefile	/^nautilus := $(core-y) $(libs-y) $/;"	m
nautilus-cleandirs	Makefile	/^nautilus-cleandirs := $(sort $(nautilus-dirs) $(patsubst %\/,%,$(filter %\/, \\$/;"	m
nautilus-dirs	Makefile	/^nautilus-dirs	:= $(patsubst %\/,%,$(filter %\/,  \\$/;"	m
nautilus_hrt_upcall_handler	src/arch/hrt/hrt.c	/^nautilus_hrt_upcall_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f
nautilus_info	include/nautilus/nautilus.h	/^struct naut_info nautilus_info;$/;"	v	typeref:struct:naut_info
nautlib	src/lua_src/lnautlib.c	/^static const luaL_Reg nautlib[] = { $/;"	v	file:
ndpc_rt_test	src/arch/hrt/init.c	/^void ndpc_rt_test()$/;"	f
ndpc_rt_test	src/arch/k1om/init.c	/^void ndpc_rt_test()$/;"	f
ndpc_rt_test	src/arch/x64/init.c	/^void ndpc_rt_test()$/;"	f
need_completion_trigger	src/legion_runtime/legion_ops.h	/^      bool need_completion_trigger;$/;"	m	class:LegionRuntime::HighLevel::Operation
need_value	src/lua_src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
needed	src/legion_runtime/shared_lowlevel.cc	/^            EventGeneration needed;$/;"	m	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo	file:
needed_fields	src/legion_runtime/region_tree.h	/^      FieldMask needed_fields;$/;"	m	class:LegionRuntime::HighLevel::MappingRef
needed_lock	src/legion_runtime/region_tree.h	/^      Reservation needed_lock;$/;"	m	class:LegionRuntime::HighLevel::InstanceRef
needed_managers	src/legion_runtime/region_tree.h	/^      std::set<PhysicalManager*> &needed_managers;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
needed_managers	src/legion_runtime/region_tree.h	/^      std::set<PhysicalManager*> &needed_managers;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
needed_managers	src/legion_runtime/region_tree.h	/^      std::set<PhysicalManager*> &needed_managers;$/;"	m	class:LegionRuntime::HighLevel::StateSender
needed_samples	src/legion_runtime/mapping_utilities.h	/^        unsigned needed_samples;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
needed_views	src/legion_runtime/region_tree.h	/^      std::map<LogicalView*,FieldMask> &needed_views;$/;"	m	class:LegionRuntime::HighLevel::StateSender
needs_state	src/legion_runtime/legion_tasks.h	/^      bool needs_state;$/;"	m	class:LegionRuntime::HighLevel::TaskOp
needs_targets	src/legion_runtime/region_tree.cc	/^    bool PhysicalCloser::needs_targets(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
negative_sign	include/lua/llocale.h	/^    char *negative_sign;      \/\/""           LC_MONETARY$/;"	m	struct:lconv
negative_sign	src/nautilus/libccompat.c	/^    char *negative_sign;      \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
nemo_action_t	include/nautilus/nemo.h	/^typedef void (*nemo_action_t)(void);$/;"	t
nemo_bcast_wakeup	src/test/benchmark.c	/^nemo_bcast_wakeup (void)$/;"	f	file:
nemo_done	src/test/benchmark.c	/^static volatile int nemo_done = 0;$/;"	v	file:
nemo_end	src/test/benchmark.c	/^static uint64_t nemo_end = 0;$/;"	v	file:
nemo_event	include/nautilus/nemo.h	/^typedef struct nemo_event {$/;"	s
nemo_event_await	src/nautilus/nemo.c	/^nemo_event_await (void)$/;"	f
nemo_event_broadcast	src/nautilus/nemo.c	/^nemo_event_broadcast (nemo_event_id_t eid)$/;"	f
nemo_event_id_t	include/nautilus/nemo.h	/^typedef int nemo_event_id_t;$/;"	t
nemo_event_id_t	src/lua_src/lnautlib.c	/^typedef int nemo_event_id_t;$/;"	t	file:
nemo_event_notify	src/nautilus/nemo.c	/^nemo_event_notify (nemo_event_id_t eid, int cpu)$/;"	f
nemo_event_t	include/nautilus/nemo.h	/^} nemo_event_t;$/;"	t	typeref:struct:nemo_event
nemo_init	src/nautilus/nemo.c	/^nemo_init (void)$/;"	f
nemo_ipi_event_recv	src/nautilus/nemo.c	/^nemo_ipi_event_recv (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
nemo_register_event_action	src/nautilus/nemo.c	/^nemo_register_event_action (void (*func)(void), void * priv_data)$/;"	f
nemo_unregister_event_action	src/nautilus/nemo.c	/^nemo_unregister_event_action (nemo_event_id_t id)$/;"	f
nemo_wakeup	src/test/benchmark.c	/^nemo_wakeup (void)$/;"	f	file:
new_dynamic_mapping	src/legion_runtime/arrays.h	/^      static Mapping<IDIM, ODIM> *new_dynamic_mapping(const T& _t)$/;"	f	class:LegionRuntime::Arrays::Mapping
new_localvar	src/lua_src/lparser.c	/^static void new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	src/lua_src/lparser.c	197;"	d	file:
new_localvarliteral_	src/lua_src/lparser.c	/^static void new_localvarliteral_ (LexState *ls, const char *name, size_t sz) {$/;"	f	file:
new_point	src/legion_runtime/legion_logging.h	/^        UniqueID new_point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPointPoint
new_string	scripts/kconfig/lex.zconf.c	/^void new_string(void)$/;"	f
new_tree_node	src/legion_runtime/lowlevel_impl.h	/^    typename DynamicTable<ALLOCATOR>::NodeBase *DynamicTable<ALLOCATOR>::new_tree_node(int level, IT first_index, IT last_index, int owner, typename ALLOCATOR::FreeList *free_list \/*= 0*\/)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
newfile	src/lua_src/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newlabelentry	src/lua_src/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newprefile	src/lua_src/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newshrstr	src/lua_src/lstring.c	/^static TString *newshrstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
newupvalue	src/lua_src/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
next	include/lua/lobject.h	/^      struct UpVal *next;$/;"	m	struct:UpVal::__anon7::__anon8	typeref:struct:UpVal::__anon7::__anon8::UpVal
next	include/lua/lobject.h	/^    struct Node *next;  \/* for chaining *\/$/;"	m	struct:TKey::__anon9	typeref:struct:TKey::__anon9::Node
next	include/lua/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::
next	include/nautilus/acpi.h	/^	struct acpi_pci_driver *next;$/;"	m	struct:acpi_pci_driver	typeref:struct:acpi_pci_driver::acpi_pci_driver
next	include/nautilus/list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next	include/nautilus/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	include/nautilus/mcslock.h	/^    struct nk_mcs_lock * next;$/;"	m	struct:nk_mcs_lock	typeref:struct:nk_mcs_lock::nk_mcs_lock
next	scripts/kconfig/expr.h	/^	struct file *next;$/;"	m	struct:file	typeref:struct:file::file
next	scripts/kconfig/expr.h	/^	struct menu *next;$/;"	m	struct:menu	typeref:struct:menu::menu
next	scripts/kconfig/expr.h	/^	struct property *next;$/;"	m	struct:property	typeref:struct:property::property
next	scripts/kconfig/expr.h	/^	struct symbol *next;$/;"	m	struct:symbol	typeref:struct:symbol::symbol
next	scripts/kconfig/kxgettext.c	/^	struct file_line *next;$/;"	m	struct:file_line	typeref:struct:file_line::file_line	file:
next	scripts/kconfig/kxgettext.c	/^	struct message	 *next;$/;"	m	struct:message	typeref:struct:message::message	file:
next	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *next;$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_block_info
next	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_notify_object *next;$/;"	m	struct:acpi_gpe_notify_object	typeref:struct:acpi_gpe_notify_object::acpi_gpe_notify_object
next	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_xrupt_info *next;$/;"	m	struct:acpi_gpe_xrupt_info	typeref:struct:acpi_gpe_xrupt_info::acpi_gpe_xrupt_info
next	src/acpi/acpica/aclocal.h	/^	struct acpi_interface_info *next;$/;"	m	struct:acpi_interface_info	typeref:struct:acpi_interface_info::acpi_interface_info
next	src/legion_runtime/legion.h	/^    inline ptr_t IndexIterator::next(void)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
next	src/legion_runtime/lowlevel.cc	/^	  EventStackEntry *next;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
next	src/legion_runtime/runtime.h	/^      Impl *next;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
next	src/legion_runtime/utilities.h	/^	TraceBlock *next;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
next	src/lua_src/llex.c	28;"	d	file:
next	src/nautilus/hashtable.c	/^    struct nk_hash_entry * next;$/;"	m	struct:nk_hash_entry	typeref:struct:nk_hash_entry::nk_hash_entry	file:
next	src/nautilus/scheduler.c	/^    struct rt_node *next;$/;"	m	struct:rt_node	typeref:struct:rt_node::rt_node	file:
next	xeon_phi/linux_usr/phi_console.c	/^    struct line_elm * next;$/;"	m	struct:line_elm	typeref:struct:line_elm::line_elm	file:
nextItem	scripts/kconfig/qconf.h	/^	ConfigItem* nextItem;$/;"	m	class:ConfigItem
nextSibling	scripts/kconfig/qconf.h	/^	ConfigItem* nextSibling() const$/;"	f	class:ConfigItem
nextView	scripts/kconfig/qconf.h	/^	ConfigView* nextView;$/;"	m	class:ConfigView
next_alloc	src/legion_runtime/lowlevel_impl.h	/^      IT volatile next_alloc;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
next_block_base_index	src/acpi/acpica/aclocal.h	/^	u32 next_block_base_index;$/;"	m	struct:acpi_gpe_device_info
next_child	src/legion_runtime/region_tree.h	/^      Color next_child;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
next_ci	src/lua_src/ldo.c	295;"	d	file:
next_entry	src/legion_runtime/accessor.h	/^	  ptr_t *next_entry;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
next_external_char	src/acpi/acpica/aclocal.h	/^	const char *next_external_char;$/;"	m	struct:acpi_namestring_info
next_free	src/legion_runtime/lowlevel_impl.h	/^      Event::Impl *next_free;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
next_free	src/legion_runtime/lowlevel_impl.h	/^      IndexSpace::Impl *next_free;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
next_free	src/legion_runtime/lowlevel_impl.h	/^      ProcessorGroup *next_free;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup
next_free	src/legion_runtime/lowlevel_impl.h	/^      Reservation::Impl *next_free;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
next_handle	src/legion_runtime/shared_lowlevel.cc	/^        TriggerHandle next_handle; \/\/ all numbers >0 are reservation requests, 0 is release trigger handle$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
next_handle	src/legion_runtime/shared_lowlevel.cc	/^        TriggerHandle next_handle;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
next_id	src/legion_runtime/legion_logging.h	/^        UniqueID next_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
next_idx	src/legion_runtime/legion_trace.h	/^        int next_idx;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
next_index	src/legion_runtime/legion_logging.h	/^        unsigned next_index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
next_index_on_queue	src/nautilus/vc.c	/^static inline int next_index_on_queue(enum nk_vc_type type, int index) $/;"	f	file:
next_local_index	src/legion_runtime/runtime.h	/^      unsigned next_local_index;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
next_outgoing_message_id	src/legion_runtime/activemsg.cc	/^  int next_outgoing_message_id;$/;"	m	class:ActiveMessageEndpoint	file:
next_point_id	src/legion_runtime/legion_spy.h	/^      static int next_point_id = 0;$/;"	m	namespace:LegionRuntime::HighLevel::LegionSpy
next_pow2	src/nautilus/numa.c	/^next_pow2 (uint32_t v)$/;"	f	file:
next_prime	src/nautilus/mm/kmem.c	/^static uint64_t next_prime(uint64_t n)$/;"	f	file:
next_processor_kind	src/legion_runtime/mapping_utilities.cc	/^      Processor::Kind MappingProfiler::next_processor_kind($/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
next_target	src/legion_runtime/shared_lowlevel.cc	/^      size_t next_target;$/;"	m	class:LegionRuntime::LowLevel::ProcessorGroup	file:
next_thread	src/legion_runtime/lowlevel_impl.h	/^      unsigned next_thread;$/;"	m	class:Runtime
next_tid	src/nautilus/thread.c	/^static unsigned long next_tid = 0;$/;"	v	file:
nfds_t	include/nautilus/libccompat.h	/^typedef unsigned long int nfds_t;$/;"	t
nfds_t	src/lua_src/lnautlib.c	/^typedef long unsigned int nfds_t;$/;"	t	file:
nh	src/lua_src/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nic0_offset	include/acpi/actbl2.h	/^	uint16_t nic0_offset;$/;"	m	struct:acpi_ibft_control
nic1_offset	include/acpi/actbl2.h	/^	uint16_t nic1_offset;$/;"	m	struct:acpi_ibft_control
nic_association	include/acpi/actbl2.h	/^	uint8_t nic_association;$/;"	m	struct:acpi_ibft_target
nil	src/legion_runtime/common.h	/^  static inline ptr_t nil(void) { ptr_t p; p.value = (unsigned)-1; return p; }$/;"	f	struct:ptr_t
nil	src/legion_runtime/common.h	/^  static inline ptr_t<T> nil(void) { ptr_t<T> p; p.value = (unsigned)-1; return p; }$/;"	f	struct:ptr_t
nil	src/legion_runtime/common.h	/^  static inline utptr_t nil(void) { utptr_t p; p.value = (unsigned)-1; return p; }$/;"	f	struct:utptr_t
nil	src/legion_runtime/lowlevel.h	/^      static DomainPoint nil(void) { DomainPoint p; p.dim = -1; return p; }$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
nilK	src/lua_src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nk	include/lua/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon9
nk	include/lua/lparser.h	/^  int nk;  \/* number of elements in `k' *\/$/;"	m	struct:FuncState
nk_acpi_init	src/nautilus/acpi.c	/^nk_acpi_init (void)$/;"	f
nk_add_bus_entry	src/nautilus/irq.c	/^nk_add_bus_entry (const uint8_t bus_id, const char * bus_type)$/;"	f
nk_add_int_entry	src/nautilus/irq.c	/^nk_add_int_entry (int_trig_t trig_mode,$/;"	f
nk_alloc_timer	src/nautilus/timer.c	/^struct nk_timer *nk_alloc_timer()$/;"	f
nk_ata_deinit	src/dev/ata.c	/^void nk_ata_deinit()$/;"	f
nk_ata_init	src/dev/ata.c	/^int nk_ata_init(struct naut_info *naut)$/;"	f
nk_barrier	include/nautilus/barrier.h	/^struct nk_barrier {$/;"	s
nk_barrier_destroy	src/nautilus/barrier.c	/^nk_barrier_destroy (nk_barrier_t * barrier)$/;"	f
nk_barrier_init	src/nautilus/barrier.c	/^nk_barrier_init (nk_barrier_t * barrier, uint32_t count) $/;"	f
nk_barrier_t	include/nautilus/barrier.h	/^typedef struct nk_barrier nk_barrier_t;$/;"	t	typeref:struct:nk_barrier
nk_barrier_test	src/nautilus/barrier.c	/^void nk_barrier_test(void)$/;"	f
nk_barrier_wait	src/nautilus/barrier.c	/^nk_barrier_wait (nk_barrier_t * barrier) $/;"	f
nk_bind_vc	src/nautilus/vc.c	/^int nk_bind_vc(nk_thread_t *thread, struct nk_virtual_console * cons)$/;"	f
nk_block_dev	include/nautilus/blkdev.h	/^struct nk_block_dev {$/;"	s
nk_block_dev_characteristics	include/nautilus/blkdev.h	/^struct nk_block_dev_characteristics {$/;"	s
nk_block_dev_deinit	src/nautilus/blkdev.c	/^int nk_block_dev_deinit()$/;"	f
nk_block_dev_find	src/nautilus/blkdev.c	/^struct nk_block_dev * nk_block_dev_find(char *name)$/;"	f
nk_block_dev_get_characteristics	src/nautilus/blkdev.c	/^int nk_block_dev_get_characteristics(struct nk_block_dev *dev, struct nk_block_dev_characteristics *c)$/;"	f
nk_block_dev_init	src/nautilus/blkdev.c	/^int nk_block_dev_init()$/;"	f
nk_block_dev_int	include/nautilus/blkdev.h	/^struct nk_block_dev_int {$/;"	s
nk_block_dev_read	src/nautilus/blkdev.c	/^int nk_block_dev_read(struct nk_block_dev *dev, $/;"	f
nk_block_dev_register	src/nautilus/blkdev.c	/^struct nk_block_dev * nk_block_dev_register(char *name, uint64_t flags, struct nk_block_dev_int *inter, void *state)$/;"	f
nk_block_dev_unregister	src/nautilus/blkdev.c	/^int                   nk_block_dev_unregister(struct nk_block_dev *d)$/;"	f
nk_block_dev_write	src/nautilus/blkdev.c	/^int nk_block_dev_write(struct nk_block_dev *dev, $/;"	f
nk_bus_entry	include/nautilus/irq.h	/^struct nk_bus_entry {$/;"	s
nk_cancel_timer	src/nautilus/timer.c	/^int nk_cancel_timer(struct nk_timer *t)$/;"	f
nk_char_dev	include/nautilus/chardev.h	/^struct nk_char_dev {$/;"	s
nk_char_dev_characteristics	include/nautilus/chardev.h	/^struct nk_char_dev_characteristics {$/;"	s
nk_char_dev_deinit	src/nautilus/chardev.c	/^int nk_char_dev_deinit()$/;"	f
nk_char_dev_find	src/nautilus/chardev.c	/^struct nk_char_dev * nk_char_dev_find(char *name)$/;"	f
nk_char_dev_get_characteristics	src/nautilus/chardev.c	/^int nk_char_dev_get_characteristics(struct nk_char_dev *dev, struct nk_char_dev_characteristics *c)$/;"	f
nk_char_dev_init	src/nautilus/chardev.c	/^int nk_char_dev_init()$/;"	f
nk_char_dev_int	include/nautilus/chardev.h	/^struct nk_char_dev_int {$/;"	s
nk_char_dev_read	src/nautilus/chardev.c	/^uint64_t nk_char_dev_read(struct nk_char_dev *dev, $/;"	f
nk_char_dev_register	src/nautilus/chardev.c	/^struct nk_char_dev * nk_char_dev_register(char *name, uint64_t flags, struct nk_char_dev_int *inter, void *state)$/;"	f
nk_char_dev_unregister	src/nautilus/chardev.c	/^int                   nk_char_dev_unregister(struct nk_char_dev *d)$/;"	f
nk_char_dev_write	src/nautilus/chardev.c	/^uint64_t nk_char_dev_write(struct nk_char_dev *dev, $/;"	f
nk_condvar	include/nautilus/condvar.h	/^typedef struct nk_condvar {$/;"	s
nk_condvar_bcast	src/nautilus/condvar.c	/^nk_condvar_bcast (nk_condvar_t * c)$/;"	f
nk_condvar_destroy	src/nautilus/condvar.c	/^nk_condvar_destroy (nk_condvar_t * c)$/;"	f
nk_condvar_init	src/nautilus/condvar.c	/^nk_condvar_init (nk_condvar_t * c)$/;"	f
nk_condvar_signal	src/nautilus/condvar.c	/^nk_condvar_signal (nk_condvar_t * c)$/;"	f
nk_condvar_t	include/nautilus/condvar.h	/^} nk_condvar_t;$/;"	t	typeref:struct:nk_condvar
nk_condvar_test	src/nautilus/condvar.c	/^nk_condvar_test (void)$/;"	f
nk_condvar_wait	src/nautilus/condvar.c	/^nk_condvar_wait (nk_condvar_t * c, NK_LOCK_T * l)$/;"	f
nk_core_barrier_arrive	src/nautilus/barrier.c	/^nk_core_barrier_arrive (void)$/;"	f
nk_core_barrier_lower	src/nautilus/barrier.c	/^nk_core_barrier_lower (void)$/;"	f
nk_core_barrier_raise	src/nautilus/barrier.c	/^nk_core_barrier_raise (void) $/;"	f
nk_core_barrier_wait	src/nautilus/barrier.c	/^nk_core_barrier_wait (void)$/;"	f
nk_cpu_coords	include/nautilus/numa.h	/^struct nk_cpu_coords {$/;"	s
nk_cpu_topo_discover	src/nautilus/numa.c	/^nk_cpu_topo_discover (struct cpu * me)$/;"	f
nk_create_htable	src/nautilus/hashtable.c	/^nk_create_htable (uint_t min_size,$/;"	f
nk_create_htable_iter	src/nautilus/hashtable.c	/^nk_create_htable_iter (struct nk_hashtable * htable) $/;"	f
nk_create_vc	src/nautilus/vc.c	/^struct nk_virtual_console *nk_create_vc(char *name, enum nk_vc_type new_vc_type, uint8_t attr, void (*callback)(nk_scancode_t, void *priv), void *priv_data) $/;"	f
nk_cxx_init	src/cxx/cxxinit.c	/^nk_cxx_init (void)$/;"	f
nk_deinit_fs	src/nautilus/fs.c	/^int nk_deinit_fs(void) $/;"	f
nk_delay	src/nautilus/timer.c	/^int nk_delay(uint64_t ns) { return _sleep(ns,1); }$/;"	f
nk_dequeue_entry	src/nautilus/queue.c	/^nk_dequeue_entry (nk_queue_entry_t * entry)$/;"	f
nk_dequeue_entry_atomic	src/nautilus/queue.c	/^nk_dequeue_entry_atomic (nk_queue_t * q, nk_queue_entry_t * entry)$/;"	f
nk_dequeue_first	src/nautilus/queue.c	/^nk_dequeue_first (nk_queue_t * q)$/;"	f
nk_dequeue_first_atomic	src/nautilus/queue.c	/^nk_dequeue_first_atomic (nk_queue_t * q)$/;"	f
nk_dequeue_keycode	src/nautilus/vc.c	/^nk_keycode_t nk_dequeue_keycode(struct nk_virtual_console *vc) $/;"	f
nk_dequeue_scancode	src/nautilus/vc.c	/^nk_scancode_t nk_dequeue_scancode(struct nk_virtual_console *vc) $/;"	f
nk_destroy_htable_iter	src/nautilus/hashtable.c	/^nk_destroy_htable_iter (struct nk_hashtable_iter * iter) $/;"	f
nk_destroy_vc	src/nautilus/vc.c	/^int nk_destroy_vc(struct nk_virtual_console *vc) $/;"	f
nk_detect_cpu_freq	src/nautilus/cpu.c	/^nk_detect_cpu_freq (uint32_t cpu) $/;"	f
nk_dev	include/nautilus/dev.h	/^struct nk_dev {$/;"	s
nk_dev_deinit	src/nautilus/dev.c	/^int nk_dev_deinit()$/;"	f
nk_dev_dump_devices	src/nautilus/dev.c	/^void nk_dev_dump_devices()$/;"	f
nk_dev_find	src/nautilus/dev.c	/^struct nk_dev *nk_dev_find(char *name)$/;"	f
nk_dev_init	src/nautilus/dev.c	/^int nk_dev_init()$/;"	f
nk_dev_int	include/nautilus/dev.h	/^struct nk_dev_int {$/;"	s
nk_dev_register	src/nautilus/dev.c	/^struct nk_dev *nk_dev_register(char *name, nk_dev_type_t type, uint64_t flags, struct nk_dev_int *inter, void *state)$/;"	f
nk_dev_request_type_t	include/nautilus/dev.h	/^typedef enum {NK_DEV_REQ_BLOCKING, NK_DEV_REQ_NONBLOCKING} nk_dev_request_type_t;$/;"	t	typeref:enum:__anon65
nk_dev_type_t	include/nautilus/dev.h	/^typedef enum {NK_DEV_CHAR, NK_DEV_BLK, NK_DEV_NET} nk_dev_type_t ; $/;"	t	typeref:enum:__anon64
nk_dev_unregister	src/nautilus/dev.c	/^int            nk_dev_unregister(struct nk_dev *d)$/;"	f
nk_dump_mem	src/nautilus/backtrace.c	/^nk_dump_mem (const void * addr, ulong_t n)$/;"	f
nk_dump_numa_info	src/nautilus/numa.c	/^nk_dump_numa_info (void)$/;"	f
nk_enqueue_entry	include/nautilus/queue.h	/^nk_enqueue_entry (nk_queue_t * q, nk_queue_entry_t * entry)$/;"	f
nk_enqueue_entry_atomic	include/nautilus/queue.h	/^nk_enqueue_entry_atomic (nk_queue_t * q, nk_queue_entry_t * entry)$/;"	f
nk_enqueue_keycode	src/nautilus/vc.c	/^int nk_enqueue_keycode(struct nk_virtual_console *vc, nk_keycode_t key) $/;"	f
nk_enqueue_scancode	src/nautilus/vc.c	/^int nk_enqueue_scancode(struct nk_virtual_console *vc, nk_scancode_t scan) $/;"	f
nk_find_thread_by_tid	src/nautilus/scheduler.c	/^struct nk_thread *nk_find_thread_by_tid(uint64_t tid)$/;"	f
nk_free_htable	src/nautilus/hashtable.c	/^nk_free_htable (struct nk_hashtable * htable, int free_values, int free_keys) $/;"	f
nk_free_timer	src/nautilus/timer.c	/^void nk_free_timer(struct nk_timer *t)$/;"	f
nk_fs	include/nautilus/fs.h	/^struct nk_fs {$/;"	s
nk_fs_close	src/nautilus/fs.c	/^int nk_fs_close(nk_fs_fd_t fd) $/;"	f
nk_fs_creat	src/nautilus/fs.c	/^nk_fs_fd_t nk_fs_creat(char *path, int mode) $/;"	f
nk_fs_dump_files	src/nautilus/fs.c	/^void nk_fs_dump_files()$/;"	f
nk_fs_dump_filesystems	src/nautilus/fs.c	/^void nk_fs_dump_filesystems()$/;"	f
nk_fs_ext2_attach	src/fs/ext2/ext2.c	/^int nk_fs_ext2_attach(char *devname, char *fsname, int readonly)$/;"	f
nk_fs_ext2_detach	src/fs/ext2/ext2.c	/^int nk_fs_ext2_detach(char *fsname)$/;"	f
nk_fs_fd_t	include/nautilus/fs.h	/^typedef struct nk_fs_open_file_state *nk_fs_fd_t;$/;"	t	typeref:struct:nk_fs_open_file_state
nk_fs_find	src/nautilus/fs.c	/^struct nk_fs *nk_fs_find(char *name)$/;"	f
nk_fs_fstat	src/nautilus/fs.c	/^int nk_fs_fstat(nk_fs_fd_t fd, struct nk_fs_stat *st)$/;"	f
nk_fs_ftruncate	src/nautilus/fs.c	/^int nk_fs_ftruncate(nk_fs_fd_t fd, off_t len)$/;"	f
nk_fs_init	src/nautilus/fs.c	/^int nk_fs_init(void) $/;"	f
nk_fs_int	include/nautilus/fs.h	/^struct nk_fs_int {$/;"	s
nk_fs_open	src/nautilus/fs.c	/^nk_fs_fd_t nk_fs_open(char *path, int flags, int mode) $/;"	f
nk_fs_open_file_state	src/nautilus/fs.c	/^struct nk_fs_open_file_state {$/;"	s	file:
nk_fs_read	src/nautilus/fs.c	/^ssize_t nk_fs_read(nk_fs_fd_t fd, void *buf, size_t num_bytes) $/;"	f
nk_fs_register	src/nautilus/fs.c	/^struct nk_fs *nk_fs_register(char *name, uint64_t flags, struct nk_fs_int *inter, void *state)$/;"	f
nk_fs_seek	src/nautilus/fs.c	/^off_t nk_fs_seek(nk_fs_fd_t fd, off_t offset, int whence) $/;"	f
nk_fs_stat	include/nautilus/fs.h	/^struct nk_fs_stat {$/;"	s
nk_fs_stat	src/nautilus/fs.c	/^int nk_fs_stat(char *path, struct nk_fs_stat *st)$/;"	f
nk_fs_tell	src/nautilus/fs.c	/^ssize_t nk_fs_tell(nk_fs_fd_t fd) $/;"	f
nk_fs_truncate	src/nautilus/fs.c	/^int nk_fs_truncate(char *path, off_t len)$/;"	f
nk_fs_unregister	src/nautilus/fs.c	/^int            nk_fs_unregister(struct nk_fs *f)$/;"	f
nk_fs_write	src/nautilus/fs.c	/^ssize_t nk_fs_write(nk_fs_fd_t fd, void *buf, size_t num_bytes) $/;"	f
nk_get_base_region_by_cpu	src/nautilus/numa.c	/^nk_get_base_region_by_cpu (cpu_id_t cpu)$/;"	f
nk_get_base_region_by_num	src/nautilus/numa.c	/^nk_get_base_region_by_num (unsigned num)$/;"	f
nk_get_cur_vc	src/nautilus/vc.c	/^struct nk_virtual_console * nk_get_cur_vc()$/;"	f
nk_get_nautilus_info	include/nautilus/nautilus.h	/^nk_get_nautilus_info (void)$/;"	f
nk_get_num_cpus	src/nautilus/smp.c	/^nk_get_num_cpus (void)$/;"	f
nk_get_num_domains	src/nautilus/numa.c	/^nk_get_num_domains (void)$/;"	f
nk_get_parent_tid	src/nautilus/thread.c	/^nk_get_parent_tid (void) $/;"	f
nk_get_rand_bytes	src/nautilus/random.c	/^nk_get_rand_bytes (uint8_t * buf, unsigned len)$/;"	f
nk_get_tid	src/nautilus/thread.c	/^nk_get_tid (void) $/;"	f
nk_hash_buffer	src/nautilus/hashtable.c	/^nk_hash_buffer (uchar_t * msg, uint_t length) $/;"	f
nk_hash_entry	src/nautilus/hashtable.c	/^struct nk_hash_entry {$/;"	s	file:
nk_hash_long	src/nautilus/hashtable.c	/^nk_hash_long (ulong_t val, uint_t bits) $/;"	f
nk_hashtable	src/nautilus/hashtable.c	/^struct nk_hashtable {$/;"	s	file:
nk_hashtable_iter	include/nautilus/hashtable.h	/^struct nk_hashtable_iter {$/;"	s
nk_hpet_get_cntr	src/dev/hpet.c	/^nk_hpet_get_cntr (void)$/;"	f
nk_hpet_get_freq	src/dev/hpet.c	/^nk_hpet_get_freq (void)$/;"	f
nk_hpet_init	src/dev/hpet.c	/^nk_hpet_init (void)$/;"	f
nk_hpet_nanos_per_tick	include/dev/hpet.h	/^nk_hpet_nanos_per_tick (void)$/;"	f
nk_htable_change	src/nautilus/hashtable.c	/^nk_htable_change (struct nk_hashtable * htable, $/;"	f
nk_htable_count	src/nautilus/hashtable.c	/^nk_htable_count (struct nk_hashtable * htable) $/;"	f
nk_htable_dec	src/nautilus/hashtable.c	/^nk_htable_dec (struct nk_hashtable * htable, addr_t key, addr_t value) $/;"	f
nk_htable_get_iter_key	src/nautilus/hashtable.c	/^nk_htable_get_iter_key (struct nk_hashtable_iter * iter) $/;"	f
nk_htable_get_iter_value	src/nautilus/hashtable.c	/^nk_htable_get_iter_value (struct nk_hashtable_iter * iter) $/;"	f
nk_htable_inc	src/nautilus/hashtable.c	/^nk_htable_inc (struct nk_hashtable * htable, $/;"	f
nk_htable_insert	src/nautilus/hashtable.c	/^nk_htable_insert (struct nk_hashtable * htable, $/;"	f
nk_htable_iter_advance	src/nautilus/hashtable.c	/^nk_htable_iter_advance (struct nk_hashtable_iter * iter) $/;"	f
nk_htable_iter_remove	src/nautilus/hashtable.c	/^nk_htable_iter_remove (struct nk_hashtable_iter * iter, int free_key) $/;"	f
nk_htable_iter_search	src/nautilus/hashtable.c	/^nk_htable_iter_search (struct nk_hashtable_iter * iter,$/;"	f
nk_htable_remove	src/nautilus/hashtable.c	/^nk_htable_remove(struct nk_hashtable * htable, addr_t key, int free_key) $/;"	f
nk_htable_search	src/nautilus/hashtable.c	/^nk_htable_search (struct nk_hashtable * htable, addr_t key) $/;"	f
nk_instr_data	include/nautilus/instrument.h	/^struct nk_instr_data {$/;"	s
nk_instrument_calibrate	src/nautilus/instrument.c	/^nk_instrument_calibrate (unsigned loops)$/;"	f
nk_instrument_end	src/nautilus/instrument.c	/^nk_instrument_end (void) $/;"	f
nk_instrument_init	src/nautilus/instrument.c	/^nk_instrument_init (void) $/;"	f
nk_instrument_query	src/nautilus/instrument.c	/^nk_instrument_query (void)$/;"	f
nk_instrument_start	src/nautilus/instrument.c	/^nk_instrument_start (void)$/;"	f
nk_int_entry	include/nautilus/irq.h	/^struct nk_int_entry {$/;"	s
nk_int_info	include/nautilus/nautilus.h	/^struct nk_int_info {$/;"	s
nk_int_init	src/nautilus/irq.c	/^nk_int_init (struct sys_info * sys)$/;"	f
nk_int_matches_bus	src/nautilus/irq.c	/^nk_int_matches_bus (struct nk_int_entry * entry, const char * bus_type, const uint8_t len)$/;"	f
nk_irq_is_assigned	src/nautilus/irq.c	/^nk_irq_is_assigned (uint8_t irq)$/;"	f
nk_irq_prof_enter	src/nautilus/instrument.c	/^nk_irq_prof_enter (void)$/;"	f
nk_irq_prof_exit	src/nautilus/instrument.c	/^nk_irq_prof_exit (void)$/;"	f
nk_is_amd	src/nautilus/cpu.c	/^nk_is_amd (void) $/;"	f
nk_is_intel	src/nautilus/cpu.c	/^nk_is_intel (void)$/;"	f
nk_join	src/nautilus/thread.c	/^nk_join (nk_thread_id_t t, void ** retval)$/;"	f
nk_join_all_children	src/nautilus/thread.c	/^nk_join_all_children (int (*func)(void * res)) $/;"	f
nk_keycode_t	include/dev/kbd.h	/^typedef uint16_t nk_keycode_t;$/;"	t
nk_keycode_t	src/lua_src/lnautlib.c	/^typedef short unsigned int nk_keycode_t;$/;"	t	file:
nk_kmem_init	src/nautilus/mm/kmem.c	/^nk_kmem_init (void)$/;"	f
nk_launch_shell	src/nautilus/shell.c	/^nk_thread_id_t nk_launch_shell(char *name, int cpu)$/;"	f
nk_locality_info	include/nautilus/numa.h	/^struct nk_locality_info {$/;"	s
nk_malloc_enter	src/nautilus/instrument.c	/^nk_malloc_enter (void)$/;"	f
nk_malloc_exit	src/nautilus/instrument.c	/^nk_malloc_exit (void)$/;"	f
nk_map_page	src/nautilus/paging.c	/^nk_map_page (addr_t vaddr, addr_t paddr, uint64_t flags, page_size_t ps)$/;"	f
nk_map_page_nocache	src/nautilus/paging.c	/^nk_map_page_nocache (addr_t paddr, uint64_t flags, page_size_t ps)$/;"	f
nk_mask_irq	src/nautilus/irq.c	/^nk_mask_irq (uint8_t irq)$/;"	f
nk_mcs_lock	include/nautilus/mcslock.h	/^nk_mcs_lock (nk_mcs_lock_t * l, nk_mcs_lock_t * me)$/;"	f
nk_mcs_lock	include/nautilus/mcslock.h	/^struct nk_mcs_lock {$/;"	s
nk_mcs_lock_t	include/nautilus/mcslock.h	/^typedef struct nk_mcs_lock nk_mcs_lock_t;$/;"	t	typeref:struct:nk_mcs_lock
nk_mcs_trylock	include/nautilus/mcslock.h	/^nk_mcs_trylock (nk_mcs_lock_t * l, nk_mcs_lock_t * me)$/;"	f
nk_mcs_unlock	include/nautilus/mcslock.h	/^nk_mcs_unlock (nk_mcs_lock_t * l, nk_mcs_lock_t * me)$/;"	f
nk_mem_info	include/nautilus/paging.h	/^struct nk_mem_info {$/;"	s
nk_mem_zone	include/nautilus/paging.h	/^struct nk_mem_zone {$/;"	s
nk_monitor	include/nautilus/mwait.h	/^nk_monitor (addr_t addr, uint32_t ecx, uint32_t edx)$/;"	f
nk_mwait	include/nautilus/mwait.h	/^nk_mwait (uint32_t eax, uint32_t ecx)$/;"	f
nk_mwait_init	src/arch/hrt/mwait.c	/^nk_mwait_init (void)$/;"	f
nk_mwait_init	src/arch/x64/mwait.c	/^nk_mwait_init (void)$/;"	f
nk_my_numa_node	src/nautilus/numa.c	/^nk_my_numa_node (void)$/;"	f
nk_net_dev	include/nautilus/netdev.h	/^struct nk_net_dev {$/;"	s
nk_net_dev_characteristics	include/nautilus/netdev.h	/^struct nk_net_dev_characteristics {$/;"	s
nk_net_dev_deinit	src/nautilus/netdev.c	/^int nk_net_dev_deinit()$/;"	f
nk_net_dev_find	src/nautilus/netdev.c	/^struct nk_net_dev * nk_net_dev_find(char *name)$/;"	f
nk_net_dev_get_characteristics	src/nautilus/netdev.c	/^int nk_net_dev_get_characteristics(struct nk_net_dev *dev, struct nk_net_dev_characteristics *c)$/;"	f
nk_net_dev_init	src/nautilus/netdev.c	/^int nk_net_dev_init()$/;"	f
nk_net_dev_int	include/nautilus/netdev.h	/^struct nk_net_dev_int {$/;"	s
nk_net_dev_receive_packet	src/nautilus/netdev.c	/^int nk_net_dev_receive_packet(struct nk_net_dev *dev, $/;"	f
nk_net_dev_register	src/nautilus/netdev.c	/^struct nk_net_dev * nk_net_dev_register(char *name, uint64_t flags, struct nk_net_dev_int *inter, void *state)$/;"	f
nk_net_dev_send_packet	src/nautilus/netdev.c	/^int nk_net_dev_send_packet(struct nk_net_dev *dev, $/;"	f
nk_net_dev_unregister	src/nautilus/netdev.c	/^int                   nk_net_dev_unregister(struct nk_net_dev *d)$/;"	f
nk_numa_init	src/nautilus/numa.c	/^nk_numa_init (void)$/;"	f
nk_paging_init	src/nautilus/paging.c	/^nk_paging_init (struct nk_mem_info * mem, ulong_t mbd)$/;"	f
nk_pf_err_t	include/nautilus/paging.h	/^typedef struct nk_pf_error nk_pf_err_t;$/;"	t	typeref:struct:nk_pf_error
nk_pf_error	include/nautilus/paging.h	/^struct nk_pf_error {$/;"	s
nk_pf_handler	src/nautilus/paging.c	/^nk_pf_handler (excp_entry_t * excp,$/;"	f
nk_print_regs	src/nautilus/backtrace.c	/^nk_print_regs (struct nk_regs * r)$/;"	f
nk_profile_func_enter	src/nautilus/instrument.c	/^nk_profile_func_enter (const char  *func)$/;"	f
nk_profile_func_exit	src/nautilus/instrument.c	/^nk_profile_func_exit (const char *func)$/;"	f
nk_queue	include/nautilus/queue.h	/^struct nk_queue {$/;"	s
nk_queue_create	src/nautilus/queue.c	/^nk_queue_create (void)$/;"	f
nk_queue_destroy	src/nautilus/queue.c	/^nk_queue_destroy (nk_queue_t * q, uint8_t free_entries)$/;"	f
nk_queue_empty	include/nautilus/queue.h	/^nk_queue_empty(nk_queue_t * q) $/;"	f
nk_queue_empty_atomic	src/nautilus/queue.c	/^nk_queue_empty_atomic (nk_queue_t * q)$/;"	f
nk_queue_entry	include/nautilus/queue.h	/^struct nk_queue_entry {$/;"	s
nk_queue_entry_t	include/nautilus/queue.h	/^typedef struct nk_queue_entry nk_queue_entry_t;$/;"	t	typeref:struct:nk_queue_entry
nk_queue_t	include/nautilus/queue.h	/^typedef struct nk_queue nk_queue_t;$/;"	t	typeref:struct:nk_queue
nk_ramdisk_deinit	src/dev/ramdisk.c	/^int nk_ramdisk_deinit()$/;"	f
nk_ramdisk_init	src/dev/ramdisk.c	/^int nk_ramdisk_init(struct naut_info *naut)$/;"	f
nk_rand_info	include/nautilus/random.h	/^struct nk_rand_info {$/;"	s
nk_rand_init	src/nautilus/random.c	/^nk_rand_init (struct cpu * cpu) $/;"	f
nk_rand_seed	src/nautilus/random.c	/^nk_rand_seed (uint64_t seed) {$/;"	f
nk_rand_set_xi	src/nautilus/random.c	/^nk_rand_set_xi (uint64_t xi) $/;"	f
nk_rb_erase	src/nautilus/rbtree.c	/^void nk_rb_erase(struct rb_node *node, struct rb_root *root)$/;"	f
nk_rb_first	src/nautilus/rbtree.c	/^struct rb_node *nk_rb_first(struct rb_root *root)$/;"	f
nk_rb_for_each_entry	include/nautilus/rbtree.h	171;"	d
nk_rb_insert_color	src/nautilus/rbtree.c	/^void nk_rb_insert_color(struct rb_node *node, struct rb_root *root)$/;"	f
nk_rb_last	src/nautilus/rbtree.c	/^struct rb_node *nk_rb_last(struct rb_root *root)$/;"	f
nk_rb_next	src/nautilus/rbtree.c	/^struct rb_node *nk_rb_next(struct rb_node *node)$/;"	f
nk_rb_prev	src/nautilus/rbtree.c	/^struct rb_node *nk_rb_prev(struct rb_node *node)$/;"	f
nk_rb_replace_node	src/nautilus/rbtree.c	/^void nk_rb_replace_node(struct rb_node *victim, struct rb_node *new,$/;"	f
nk_real_mode_deinit	src/nautilus/realmode.c	/^int nk_real_mode_deinit()$/;"	f
nk_real_mode_finish	src/nautilus/realmode.c	/^int nk_real_mode_finish()$/;"	f
nk_real_mode_init	src/nautilus/realmode.c	/^int nk_real_mode_init()$/;"	f
nk_real_mode_int	src/nautilus/realmode.c	/^int nk_real_mode_int(struct nk_real_mode_int_args *args)$/;"	f
nk_real_mode_int_args	include/nautilus/realmode.h	/^struct nk_real_mode_int_args {$/;"	s
nk_real_mode_set_arg_defaults	src/nautilus/realmode.c	/^void nk_real_mode_set_arg_defaults(struct nk_real_mode_int_args *args)$/;"	f
nk_real_mode_start	src/nautilus/realmode.c	/^int nk_real_mode_start()$/;"	f
nk_regs	include/nautilus/cpu.h	/^struct nk_regs {$/;"	s
nk_release_vc	src/nautilus/vc.c	/^int nk_release_vc(nk_thread_t *thread) $/;"	f
nk_rwlock	include/nautilus/rwlock.h	/^struct nk_rwlock {$/;"	s
nk_rwlock_init	src/nautilus/rwlock.c	/^nk_rwlock_init (nk_rwlock_t * l)$/;"	f
nk_rwlock_rd_lock	src/nautilus/rwlock.c	/^nk_rwlock_rd_lock (nk_rwlock_t * l)$/;"	f
nk_rwlock_rd_unlock	src/nautilus/rwlock.c	/^nk_rwlock_rd_unlock (nk_rwlock_t * l) $/;"	f
nk_rwlock_t	include/nautilus/rwlock.h	/^typedef struct nk_rwlock nk_rwlock_t;$/;"	t	typeref:struct:nk_rwlock
nk_rwlock_test	src/nautilus/rwlock.c	/^nk_rwlock_test (void) $/;"	f
nk_rwlock_wr_lock	src/nautilus/rwlock.c	/^nk_rwlock_wr_lock (nk_rwlock_t * l)$/;"	f
nk_rwlock_wr_lock_irq_save	src/nautilus/rwlock.c	/^nk_rwlock_wr_lock_irq_save (nk_rwlock_t * l)$/;"	f
nk_rwlock_wr_unlock	src/nautilus/rwlock.c	/^nk_rwlock_wr_unlock (nk_rwlock_t * l)$/;"	f
nk_rwlock_wr_unlock_irq_restore	src/nautilus/rwlock.c	/^nk_rwlock_wr_unlock_irq_restore (nk_rwlock_t * l, uint8_t flags)$/;"	f
nk_scancode_t	include/dev/kbd.h	/^typedef uint16_t nk_scancode_t;$/;"	t
nk_scancode_t	src/lua_src/lnautlib.c	/^typedef short unsigned int nk_scancode_t;$/;"	t	file:
nk_sched_aperiodic_constraints	include/nautilus/scheduler.h	/^struct nk_sched_aperiodic_constraints {$/;"	s
nk_sched_awaken	include/nautilus/scheduler.h	137;"	d
nk_sched_config	include/nautilus/scheduler.h	/^struct nk_sched_config {$/;"	s
nk_sched_constraint_type_t	include/nautilus/scheduler.h	/^typedef enum { APERIODIC = 0, SPORADIC = 1, PERIODIC = 2} nk_sched_constraint_type_t;$/;"	t	typeref:enum:__anon52
nk_sched_constraints	include/nautilus/scheduler.h	/^struct nk_sched_constraints {$/;"	s
nk_sched_cpu_mug	src/nautilus/scheduler.c	/^int nk_sched_cpu_mug(int old_cpu, uint64_t maxcount, uint64_t *actualcount)$/;"	f
nk_sched_dump_cores	src/nautilus/scheduler.c	/^void nk_sched_dump_cores(int cpu_arg)$/;"	f
nk_sched_dump_threads	src/nautilus/scheduler.c	/^void nk_sched_dump_threads(int cpu)$/;"	f
nk_sched_dump_time	src/nautilus/scheduler.c	/^void nk_sched_dump_time(int cpu_arg)$/;"	f
nk_sched_exit	src/nautilus/scheduler.c	/^void nk_sched_exit()$/;"	f
nk_sched_get_realtime	src/nautilus/scheduler.c	/^uint64_t nk_sched_get_realtime() $/;"	f
nk_sched_get_runtime	src/nautilus/scheduler.c	/^uint64_t nk_sched_get_runtime(struct nk_thread *t)$/;"	f
nk_sched_global_state	src/nautilus/scheduler.c	/^struct nk_sched_global_state {$/;"	s	file:
nk_sched_init	src/nautilus/scheduler.c	/^nk_sched_init(struct nk_sched_config *cfg) $/;"	f
nk_sched_init_ap	src/nautilus/scheduler.c	/^nk_sched_init_ap (struct nk_sched_config *cfg)$/;"	f
nk_sched_kick_cpu	src/nautilus/scheduler.c	/^void    nk_sched_kick_cpu(int cpu)$/;"	f
nk_sched_make_runnable	src/nautilus/scheduler.c	/^int nk_sched_make_runnable(struct nk_thread *thread, int cpu, int admit)$/;"	f
nk_sched_need_resched	src/nautilus/scheduler.c	/^struct nk_thread *nk_sched_need_resched()$/;"	f
nk_sched_percpu_state	src/nautilus/scheduler.c	/^typedef struct nk_sched_percpu_state {$/;"	s	file:
nk_sched_periodic_constraints	include/nautilus/scheduler.h	/^struct nk_sched_periodic_constraints {$/;"	s
nk_sched_reap	src/nautilus/scheduler.c	/^void nk_sched_reap()$/;"	f
nk_sched_schedule	include/nautilus/scheduler.h	141;"	d
nk_sched_sleep	src/nautilus/scheduler.c	/^nk_sched_sleep(void)$/;"	f
nk_sched_sporadic_constraints	include/nautilus/scheduler.h	/^struct nk_sched_sporadic_constraints {$/;"	s
nk_sched_thread_change_constraints	src/nautilus/scheduler.c	/^int nk_sched_thread_change_constraints(struct nk_sched_constraints *constraints)$/;"	f
nk_sched_thread_move	src/nautilus/scheduler.c	/^int nk_sched_thread_move(struct nk_thread *t, int new_cpu, int block)$/;"	f
nk_sched_thread_post_create	src/nautilus/scheduler.c	/^int nk_sched_thread_post_create(nk_thread_t * t)$/;"	f
nk_sched_thread_pre_destroy	src/nautilus/scheduler.c	/^int nk_sched_thread_pre_destroy(nk_thread_t * t)$/;"	f
nk_sched_thread_state	src/nautilus/scheduler.c	/^typedef struct nk_sched_thread_state {$/;"	s	file:
nk_sched_thread_state_deinit	src/nautilus/scheduler.c	/^void nk_sched_thread_state_deinit(struct nk_thread *thread)$/;"	f
nk_sched_thread_state_init	src/nautilus/scheduler.c	/^struct nk_sched_thread_state *nk_sched_thread_state_init(struct nk_thread *thread,$/;"	f
nk_sched_yield	src/nautilus/scheduler.c	/^nk_sched_yield(void)$/;"	f
nk_set_thread_fork_output	src/nautilus/thread.c	/^nk_set_thread_fork_output (void * result)$/;"	f
nk_set_timer	src/nautilus/timer.c	/^int nk_set_timer(struct nk_timer *t, $/;"	f
nk_simple_timing_loop	src/asm/timing_loops.S	/^nk_simple_timing_loop:$/;"	l
nk_sleep	src/nautilus/timer.c	/^int nk_sleep(uint64_t ns) { return _sleep(ns,0); }$/;"	f
nk_stack_dump	src/nautilus/backtrace.c	/^nk_stack_dump (ulong_t n)$/;"	f
nk_stack_size_t	include/nautilus/thread.h	/^typedef uint64_t nk_stack_size_t;$/;"	t
nk_switch_to_next_vc	src/nautilus/vc.c	/^int nk_switch_to_next_vc()$/;"	f
nk_switch_to_prev_vc	src/nautilus/vc.c	/^int nk_switch_to_prev_vc()$/;"	f
nk_switch_to_vc	src/nautilus/vc.c	/^int nk_switch_to_vc(struct nk_virtual_console *vc) $/;"	f
nk_switch_to_vc_list	src/nautilus/vc.c	/^int nk_switch_to_vc_list()$/;"	f
nk_thr_switch_prof_enter	src/nautilus/instrument.c	/^nk_thr_switch_prof_enter (void)$/;"	f
nk_thr_switch_prof_exit	src/nautilus/instrument.c	/^nk_thr_switch_prof_exit (void)$/;"	f
nk_thread	include/nautilus/thread.h	/^struct nk_thread {$/;"	s
nk_thread_create	src/nautilus/thread.c	/^nk_thread_create (nk_thread_fun_t fun, $/;"	f
nk_thread_destroy	src/nautilus/thread.c	/^nk_thread_destroy (nk_thread_id_t t)$/;"	f
nk_thread_exit	src/nautilus/thread.c	/^nk_thread_exit (void * retval) $/;"	f
nk_thread_fun_t	include/nautilus/thread.h	/^typedef void (*nk_thread_fun_t)(void * input, void ** output);$/;"	t
nk_thread_id_t	include/nautilus/thread.h	/^typedef void* nk_thread_id_t;$/;"	t
nk_thread_id_t	src/lua_src/lnautlib.c	/^typedef void * nk_thread_id_t;$/;"	t	file:
nk_thread_name	src/nautilus/thread.c	/^int nk_thread_name(nk_thread_id_t tid, char *name)$/;"	f
nk_thread_queue_create	src/nautilus/thread.c	/^nk_thread_queue_create (void) $/;"	f
nk_thread_queue_destroy	src/nautilus/thread.c	/^nk_thread_queue_destroy (nk_thread_queue_t * q)$/;"	f
nk_thread_queue_sleep	src/nautilus/thread.c	/^nk_thread_queue_sleep (nk_thread_queue_t * q)$/;"	f
nk_thread_queue_t	include/nautilus/thread.h	/^typedef struct nk_queue nk_thread_queue_t;$/;"	t	typeref:struct:nk_queue
nk_thread_queue_wake_all	src/nautilus/thread.c	/^nk_thread_queue_wake_all (nk_thread_queue_t * q)$/;"	f
nk_thread_queue_wake_one	src/nautilus/thread.c	/^nk_thread_queue_wake_one (nk_thread_queue_t * q)$/;"	f
nk_thread_run	src/nautilus/thread.c	/^int nk_thread_run(nk_thread_id_t t)$/;"	f
nk_thread_start	src/nautilus/thread.c	/^nk_thread_start (nk_thread_fun_t fun, $/;"	f
nk_thread_status_t	include/nautilus/thread.h	/^} nk_thread_status_t;$/;"	t	typeref:enum:__anon31
nk_thread_t	include/nautilus/thread.h	/^typedef struct nk_thread nk_thread_t;$/;"	t	typeref:struct:nk_thread
nk_ticket_lock	include/nautilus/ticketlock.h	/^union nk_ticket_lock {$/;"	u
nk_ticket_lock	src/nautilus/ticketlock.c	/^nk_ticket_lock (nk_ticket_lock_t * l) $/;"	f
nk_ticket_lock_deinit	src/nautilus/ticketlock.c	/^nk_ticket_lock_deinit (nk_ticket_lock_t * l)$/;"	f
nk_ticket_lock_init	src/nautilus/ticketlock.c	/^nk_ticket_lock_init (nk_ticket_lock_t * l)$/;"	f
nk_ticket_lock_t	include/nautilus/ticketlock.h	/^typedef union nk_ticket_lock nk_ticket_lock_t;$/;"	t	typeref:union:nk_ticket_lock
nk_ticket_trylock	src/nautilus/ticketlock.c	/^nk_ticket_trylock (nk_ticket_lock_t * l)$/;"	f
nk_ticket_unlock	src/nautilus/ticketlock.c	/^nk_ticket_unlock (nk_ticket_lock_t * l)$/;"	f
nk_timer	src/nautilus/timer.c	/^struct nk_timer {$/;"	s	file:
nk_timer_condition_t	include/dev/apic.h	/^typedef enum {UNCOND, IF_EARLIER, IF_LATER} nk_timer_condition_t;$/;"	t	typeref:enum:__anon71
nk_timer_deinit	src/nautilus/timer.c	/^void nk_timer_deinit()$/;"	f
nk_timer_handler	src/nautilus/timer.c	/^uint64_t nk_timer_handler (void)$/;"	f
nk_timer_init	src/nautilus/timer.c	/^int nk_timer_init()$/;"	f
nk_tls	include/nautilus/thread.h	/^struct nk_tls {$/;"	s
nk_tls_get	src/nautilus/thread.c	/^nk_tls_get (nk_tls_key_t key) $/;"	f
nk_tls_key_create	src/nautilus/thread.c	/^nk_tls_key_create (nk_tls_key_t * key, void (*destructor)(void*))$/;"	f
nk_tls_key_delete	src/nautilus/thread.c	/^nk_tls_key_delete (nk_tls_key_t key)$/;"	f
nk_tls_key_t	include/nautilus/thread.h	/^typedef unsigned int nk_tls_key_t; $/;"	t
nk_tls_key_t	src/lua_src/lnautlib.c	/^typedef unsigned int nk_tls_key_t;$/;"	t	file:
nk_tls_set	src/nautilus/thread.c	/^nk_tls_set (nk_tls_key_t key, const void * val)$/;"	f
nk_tls_test	src/nautilus/thread.c	/^nk_tls_test (void)$/;"	f
nk_topo_params	include/nautilus/numa.h	/^struct nk_topo_params {$/;"	s
nk_unmask_irq	src/nautilus/irq.c	/^nk_unmask_irq (uint8_t irq)$/;"	f
nk_vc_clear	src/nautilus/vc.c	/^int nk_vc_clear(uint8_t attr)$/;"	f
nk_vc_clear_specific	src/nautilus/vc.c	/^int nk_vc_clear_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f
nk_vc_deinit	src/nautilus/vc.c	/^int nk_vc_deinit()$/;"	f
nk_vc_display_char	src/nautilus/vc.c	/^int nk_vc_display_char(uint8_t c, uint8_t attr, uint8_t x, uint8_t y) $/;"	f
nk_vc_display_char_specific	src/nautilus/vc.c	/^int nk_vc_display_char_specific(struct nk_virtual_console *vc,$/;"	f
nk_vc_get_keycode	src/nautilus/vc.c	/^nk_keycode_t nk_vc_get_keycode(int wait) $/;"	f
nk_vc_get_scancode	src/nautilus/vc.c	/^nk_scancode_t nk_vc_get_scancode(int wait)$/;"	f
nk_vc_getchar	src/nautilus/vc.c	/^int nk_vc_getchar()$/;"	f
nk_vc_getchar_extended	src/nautilus/vc.c	/^int nk_vc_getchar_extended(int wait)$/;"	f
nk_vc_gets	src/nautilus/vc.c	/^int nk_vc_gets(char *buf, int n, int display)$/;"	f
nk_vc_handle_input	src/nautilus/vc.c	/^int nk_vc_handle_input(nk_scancode_t scan) $/;"	f
nk_vc_init	src/nautilus/vc.c	/^int nk_vc_init() $/;"	f
nk_vc_is_active	src/nautilus/vc.c	/^inline int nk_vc_is_active()$/;"	f
nk_vc_log	src/nautilus/vc.c	/^int nk_vc_log(char *fmt, ...)$/;"	f
nk_vc_log_wrap	include/nautilus/vc.h	102;"	d
nk_vc_print	src/nautilus/vc.c	/^int nk_vc_print(char *s)$/;"	f
nk_vc_printf	src/nautilus/vc.c	/^int nk_vc_printf(char *fmt, ...)$/;"	f
nk_vc_printf_specific	src/nautilus/vc.c	/^int nk_vc_printf_specific(struct nk_virtual_console *vc, char *fmt, ...)$/;"	f
nk_vc_printf_wrap	include/nautilus/vc.h	111;"	d
nk_vc_putchar	src/nautilus/vc.c	/^int nk_vc_putchar(uint8_t c) $/;"	f
nk_vc_puts	src/nautilus/vc.c	/^int nk_vc_puts(char *s)$/;"	f
nk_vc_scrollup	src/nautilus/vc.c	/^int nk_vc_scrollup()$/;"	f
nk_vc_scrollup_specific	src/nautilus/vc.c	/^int nk_vc_scrollup_specific(struct nk_virtual_console *vc) $/;"	f
nk_vc_setattr	src/nautilus/vc.c	/^int nk_vc_setattr(uint8_t attr)$/;"	f
nk_vc_setattr_specific	src/nautilus/vc.c	/^int nk_vc_setattr_specific(struct nk_virtual_console *vc, uint8_t attr)$/;"	f
nk_vc_setpos	src/nautilus/vc.c	/^int nk_vc_setpos(uint8_t x, uint8_t y) $/;"	f
nk_vc_setpos_specific	src/nautilus/vc.c	/^int nk_vc_setpos_specific(struct nk_virtual_console *vc, uint8_t x, uint8_t y) $/;"	f
nk_vc_type	include/nautilus/vc.h	/^enum nk_vc_type {RAW, COOKED, RAW_NOQUEUE};$/;"	g
nk_vc_wait	src/nautilus/vc.c	/^void nk_vc_wait()$/;"	f
nk_virtual_console	src/nautilus/vc.c	/^struct nk_virtual_console {$/;"	s	file:
nk_vmm_continue_vm	src/nautilus/vmm.c	/^int nk_vmm_continue_vm(void *vm)$/;"	f
nk_vmm_deinit	src/nautilus/vmm.c	/^int nk_vmm_deinit()$/;"	f
nk_vmm_free_vm	src/nautilus/vmm.c	/^int nk_vmm_free_vm(void *vm)$/;"	f
nk_vmm_init	src/nautilus/vmm.c	/^int nk_vmm_init()$/;"	f
nk_vmm_move_vm_core	src/nautilus/vmm.c	/^int nk_vmm_move_vm_core(void *vm, int vcore, int pcore)$/;"	f
nk_vmm_move_vm_mem	src/nautilus/vmm.c	/^int nk_vmm_move_vm_mem(void *vm, void *gpa, int pcore)$/;"	f
nk_vmm_pause_vm	src/nautilus/vmm.c	/^int nk_vmm_pause_vm(void *vm)$/;"	f
nk_vmm_reset_vm	src/nautilus/vmm.c	/^int nk_vmm_reset_vm(void *vm)$/;"	f
nk_vmm_start_vm	src/nautilus/vmm.c	/^void *nk_vmm_start_vm(char *name, void *image, unsigned int cpu_mask) $/;"	f
nk_vmm_stop_vm	src/nautilus/vmm.c	/^int nk_vmm_stop_vm(void *vm)$/;"	f
nk_wait	src/nautilus/thread.c	/^nk_wait (nk_thread_id_t t)$/;"	f
nk_wait_timer	src/nautilus/timer.c	/^int nk_wait_timer(struct nk_timer *t)$/;"	f
nk_wake_waiters	src/nautilus/thread.c	/^nk_wake_waiters (void)$/;"	f
nk_xcall	include/nautilus/smp.h	/^struct nk_xcall {$/;"	s
nk_xcall_func_t	include/nautilus/smp.h	/^typedef void (*nk_xcall_func_t)(void * arg);$/;"	t
nk_yield	src/nautilus/thread.c	/^void nk_yield()$/;"	f
nl	scripts/kconfig/zconf.y	/^nl:$/;"	l
nl_item	include/nautilus/libccompat.h	/^typedef int nl_item;$/;"	t
nl_item	src/lua_src/lnautlib.c	/^typedef int nl_item;$/;"	t	file:
nlocvars	include/lua/lparser.h	/^  short nlocvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState
nmgl	src/test/hpcg/hpcg-problem.h	/^    int64_t nmgl;$/;"	m	struct:Problem
nny	include/lua/lstate.h	/^  unsigned short nny;  \/* number of non-yieldable calls in stack *\/$/;"	m	struct:lua_State
no	scripts/kconfig/expr.h	/^	no, mod, yes$/;"	e	enum:tristate
no	src/legion_runtime/accessor.h	/^	typedef char no[1];$/;"	t	struct:LegionRuntime::Accessor::TemplateFu::IsAStruct
no	src/legion_runtime/legion.h	/^        typedef char no[1];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
no	src/legion_runtime/legion.h	/^        typedef char no[1];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::IsAStruct
no-dot-config-targets	Makefile	/^no-dot-config-targets := clean mrproper distclean \\$/;"	m
noColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	enum:colIdx
noLuaClosure	src/lua_src/ldebug.c	33;"	d	file:
no_pf	src/asm/excp_early.S	/^no_pf:$/;"	l
noaction	scripts/basic/docproc.c	/^void noaction(char * line)		   { line = line; }$/;"	f
noaction2	scripts/basic/docproc.c	/^void noaction2(char * file, char * line)   { file = file; line = line; }$/;"	f
node	include/lua/lobject.h	/^  Node *node;$/;"	m	struct:Table
node	include/nautilus/paging.h	/^    struct list_head node;$/;"	m	struct:nk_mem_zone	typeref:struct:nk_mem_zone::list_head
node	include/nautilus/queue.h	/^    struct list_head node;$/;"	m	struct:nk_queue_entry	typeref:struct:nk_queue_entry::list_head
node	src/acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON struct acpi_namespace_node *node;$/;"	m	struct:acpi_notify_info	typeref:struct:acpi_notify_info::acpi_namespace_node
node	src/acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON struct acpi_namespace_node *node;$/;"	m	struct:acpi_scope_state	typeref:struct:acpi_scope_state::acpi_namespace_node
node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *node;$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_namespace_node
node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *node;$/;"	m	struct:acpi_gpe_notify_object	typeref:struct:acpi_gpe_notify_object::acpi_namespace_node
node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *node;$/;"	m	struct:acpi_ns_search_data	typeref:struct:acpi_ns_search_data::acpi_namespace_node
node	src/legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::EventSubscribeArgs	file:
node	src/legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::EventTriggerArgs	file:
node	src/legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::LockReleaseArgs	file:
node	src/legion_runtime/lowlevel.cc	/^      gasnet_node_t node;$/;"	m	struct:LegionRuntime::LowLevel::LockRequestArgs	file:
node	src/legion_runtime/lowlevel_impl.h	/^      unsigned node(void) const { return ((value >> INDEX_BITS) & ((1U << NODE_BITS)-1)); }$/;"	f	class:LegionRuntime::LowLevel::ID
node	src/legion_runtime/region_tree.h	/^      RegionTreeNode *node;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
node	src/nautilus/timer.c	/^    struct list_head  node;     \/\/ global list of active timers$/;"	m	struct:nk_timer	typeref:struct:nk_timer::list_head	file:
node_announce_handler	src/legion_runtime/lowlevel.cc	/^    void node_announce_handler(Machine::NodeAnnounceData annc_data, const void *data, size_t datalen)$/;"	f	namespace:LegionRuntime::LowLevel
node_flags	src/acpi/acpica/aclocal.h	/^	u8 node_flags;$/;"	m	struct:acpi_predefined_data
node_gpus	src/legion_runtime/lowlevel_gpu.cc	/^      GPUProcessor **node_gpus;$/;"	m	struct:LegionRuntime::LowLevel::gpu_dma_args	file:
node_gpus	src/legion_runtime/lowlevel_gpu.cc	/^    \/*static*\/ GPUProcessor** GPUProcessor::node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor	file:
node_gpus	src/legion_runtime/lowlevel_gpu.h	/^      static GPUProcessor **node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
node_id	src/legion_runtime/lowlevel.cc	/^      gasnet_node_t node_id;$/;"	m	struct:LegionRuntime::LowLevel::Machine::NodeAnnounceData	file:
node_locations	src/test/circuit.h	/^  LogicalPartition node_locations;$/;"	m	struct:Partitions
node_locator	src/test/circuit.h	/^  LogicalRegion node_locator;$/;"	m	struct:Circuit
node_lock	src/legion_runtime/region_tree.h	/^      Reservation node_lock;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
node_lock	src/legion_runtime/region_tree.h	/^      Reservation node_lock;$/;"	m	class:LegionRuntime::HighLevel::IndexTreeNode
node_lock	src/legion_runtime/region_tree.h	/^      Reservation node_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
nodeid	include/nautilus/cpuid.h	/^            uint8_t nodeid      : 1; \/\/ Indicates support for MSRC001_100C [NodeID, NodesPerProcessor]$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
nodes	src/acpi/acpica/aclocal.h	/^	u32 nodes;$/;"	m	struct:acpi_integrity_info
nodes	src/legion_runtime/lowlevel_impl.h	/^      Node *nodes;$/;"	m	class:Runtime
noenv	src/lua_src/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
noextrachars	src/lua_src/lua.c	389;"	d	file:
nohelp_text	scripts/kconfig/conf.c	/^static char nohelp_text[] = N_("Sorry, no help available for this option yet.\\n");$/;"	v	file:
nohelp_text	scripts/kconfig/gconf.c	/^static char nohelp_text[] =$/;"	v	file:
nohelp_text	scripts/kconfig/mconf.c	/^nohelp_text[] = N_($/;"	v	file:
non0sInRow	src/test/hpcg/hpcg-problem-generator.h	/^    uint8_t *non0sInRow;$/;"	m	struct:ProblemGenerator
non_dominated	src/legion_runtime/region_tree.h	/^      FieldMask non_dominated;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
non_dominated	src/legion_runtime/region_tree.h	/^      FieldMask non_dominated;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
nonvolatile	include/nautilus/numa.h	/^    uint8_t  nonvolatile;$/;"	m	struct:mem_region
nospecials	src/lua_src/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
not_pred_op_lock	src/legion_runtime/runtime.h	/^      Reservation not_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
notify	include/acpi/actbl1.h	/^	struct acpi_hest_notify notify;$/;"	m	struct:acpi_hest_generic	typeref:struct:acpi_hest_generic::acpi_hest_notify
notify	include/acpi/actbl1.h	/^	struct acpi_hest_notify notify;$/;"	m	struct:acpi_hest_ia_corrected	typeref:struct:acpi_hest_ia_corrected::acpi_hest_notify
notify	include/nautilus/barrier.h	/^    volatile unsigned notify;$/;"	m	struct:nk_barrier
notify	src/acpi/acpica/aclocal.h	/^	struct acpi_notify_info notify;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_notify_info
notify_activate	src/legion_runtime/region_tree.cc	/^    void CompositeView::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
notify_activate	src/legion_runtime/region_tree.cc	/^    void MaterializedView::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
notify_activate	src/legion_runtime/region_tree.cc	/^    void PhysicalManager::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
notify_activate	src/legion_runtime/region_tree.cc	/^    void ReductionView::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
notify_activate	src/legion_runtime/runtime.cc	/^    void Future::Impl::notify_activate(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
notify_commit_dependence	src/legion_runtime/legion_ops.cc	/^    void Operation::notify_commit_dependence(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_failed_mapping	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_failed_mapping(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_invalid	src/legion_runtime/region_tree.cc	/^    void CompositeView::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
notify_invalid	src/legion_runtime/region_tree.cc	/^    void InstanceManager::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
notify_invalid	src/legion_runtime/region_tree.cc	/^    void MaterializedView::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
notify_invalid	src/legion_runtime/region_tree.cc	/^    void ReductionManager::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
notify_invalid	src/legion_runtime/region_tree.cc	/^    void ReductionView::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
notify_invalid	src/legion_runtime/runtime.cc	/^    void Future::Impl::notify_invalid(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
notify_mapping	src/legion_runtime/mapping_utilities.cc	/^      void MappingMemoizer::notify_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
notify_mapping_dependence	src/legion_runtime/legion_ops.cc	/^    void Operation::notify_mapping_dependence(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_mapping_failed	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::notify_mapping_failed(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
notify_mapping_failed	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_mapping_failed(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_mapping_failed	src/test/circuit_mapper.cc	/^void CircuitMapper::notify_mapping_failed(const Mappable *mappable)$/;"	f	class:CircuitMapper
notify_mapping_result	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::notify_mapping_result(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
notify_mapping_result	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_mapping_result(const Mappable *mappable)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_mapping_result	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_mapping_result(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_mapping_result	src/test/custom_mapper.cc	/^void AdversarialMapper::notify_mapping_result(const Mappable *mappable)$/;"	f	class:AdversarialMapper
notify_new_remote	src/legion_runtime/region_tree.cc	/^    void PhysicalManager::notify_new_remote(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
notify_new_remote	src/legion_runtime/runtime.cc	/^    void Future::Impl::notify_new_remote(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
notify_pending_shutdown	src/legion_runtime/runtime.cc	/^    void ProcessorManager::notify_pending_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
notify_predicate_value	src/legion_runtime/legion_ops.cc	/^    void AndPredOp::notify_predicate_value(GenerationID pred_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
notify_predicate_value	src/legion_runtime/legion_ops.cc	/^    void NotPredOp::notify_predicate_value(GenerationID prev_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
notify_predicate_value	src/legion_runtime/legion_ops.cc	/^    void OrPredOp::notify_predicate_value(GenerationID pred_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
notify_predicate_value	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::notify_predicate_value(GenerationID pred_gen,bool value)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
notify_profiling_info	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::notify_profiling_info(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
notify_profiling_info	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_profiling_info(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_profiling_info	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::notify_profiling_info(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
notify_regions_verified	src/legion_runtime/legion_ops.cc	/^    void Operation::notify_regions_verified(const std::set<unsigned> &regions,$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_speculation_dependence	src/legion_runtime/legion_ops.cc	/^    void Operation::notify_speculation_dependence(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
notify_subop_commit	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::notify_subop_commit(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
notify_subop_complete	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::notify_subop_complete(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
notify_valid	src/legion_runtime/region_tree.cc	/^    void CompositeView::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
notify_valid	src/legion_runtime/region_tree.cc	/^    void InstanceManager::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
notify_valid	src/legion_runtime/region_tree.cc	/^    void MaterializedView::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
notify_valid	src/legion_runtime/region_tree.cc	/^    void PhysicalManager::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
notify_valid	src/legion_runtime/region_tree.cc	/^    void ReductionView::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
notify_valid	src/legion_runtime/runtime.cc	/^    void Future::Impl::notify_valid(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
notused	include/nautilus/cpuid.h	/^            uint8_t notused  : 1; \/\/ always returns 0$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
novariant	include/lua/lobject.h	121;"	d
np	include/lua/lparser.h	/^  int np;  \/* number of elements in `p' *\/$/;"	m	struct:FuncState
npages	include/nautilus/mm.h	/^    ulong_t   npages;$/;"	m	struct:boot_mem_info
npages	include/nautilus/paging.h	/^    ulong_t   npages;$/;"	m	struct:nk_mem_info
nparams	include/lua/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug
npx	src/test/hpcg/geometry.h	/^    int64_t npx;$/;"	m	struct:lgncg::Geometry
npx	src/test/hpcg/hpcg-main.cc	/^    int64_t npx, npy, npz;$/;"	m	struct:__anon117::DriverParams	file:
npy	src/test/hpcg/geometry.h	/^    int64_t npy;$/;"	m	struct:lgncg::Geometry
npy	src/test/hpcg/hpcg-main.cc	/^    int64_t npx, npy, npz;$/;"	m	struct:__anon117::DriverParams	file:
npz	src/test/hpcg/geometry.h	/^    int64_t npz;$/;"	m	struct:lgncg::Geometry
npz	src/test/hpcg/hpcg-main.cc	/^    int64_t npx, npy, npz;$/;"	m	struct:__anon117::DriverParams	file:
nresults	include/lua/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
nresults	src/lua_src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
null_check	src/legion_runtime/lowlevel.cc	/^    inline T *null_check(T *ptr)$/;"	f	namespace:LegionRuntime::LowLevel
null_excp_handler	src/nautilus/idt.c	/^null_excp_handler (excp_entry_t * excp,$/;"	f
null_irq_handler	src/nautilus/idt.c	/^null_irq_handler (excp_entry_t * excp,$/;"	f
null_kick	src/dev/apic.c	/^null_kick (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
num	include/dev/pci.h	/^    uint32_t num;$/;"	m	struct:pci_bus
num	include/dev/pci.h	/^    uint32_t num;$/;"	m	struct:pci_dev
num	include/nautilus/multiboot2.h	/^  multiboot_uint32_t num;$/;"	m	struct:multiboot_tag_elf_sections
num_	include/lua/lobject.h	114;"	d
num_	include/lua/lobject.h	328;"	d
num_	include/lua/lobject.h	329;"	d
num_args	src/legion_runtime/activemsg.cc	/^  unsigned num_args;$/;"	m	struct:OutgoingMessage	file:
num_block_groups	src/fs/ext2/ext2_access.c	139;"	d	file:
num_blocks	include/nautilus/blkdev.h	/^    uint64_t num_blocks;$/;"	m	struct:nk_block_dev_characteristics
num_blocks	include/nautilus/buddy.h	/^    ulong_t    num_blocks;   \/** number of bits in tag_bits *\/$/;"	m	struct:buddy_mempool
num_blocks	src/dev/ata.c	/^    uint64_t            num_blocks;$/;"	m	struct:ata_blkdev_state	file:
num_blocks	src/dev/ramdisk.c	/^    uint64_t num_blocks;$/;"	m	struct:ramdisk_state	file:
num_blocks	src/test/saxpy_array.cc	/^  unsigned num_blocks;$/;"	m	struct:MainArgs	file:
num_buses	include/dev/pci.h	/^    uint32_t num_buses;$/;"	m	struct:pci_info
num_carats	src/acpi/acpica/aclocal.h	/^	u32 num_carats;$/;"	m	struct:acpi_namestring_info
num_cmps	include/dev/hpet.h	/^    uint8_t num_cmps; \/* how many comparators we have *\/$/;"	m	struct:hpet_dev
num_completed	src/acpi/acpica/aclocal.h	/^	u32 num_completed;$/;"	m	struct:acpi_db_method_info
num_cpus	include/nautilus/nautilus.h	/^    uint32_t num_cpus;$/;"	m	struct:sys_info
num_created	src/acpi/acpica/aclocal.h	/^	u32 num_created;$/;"	m	struct:acpi_db_method_info
num_dma_threads	src/legion_runtime/shared_lowlevel.cc	/^      const unsigned num_dma_threads;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
num_domains	include/nautilus/numa.h	/^    uint32_t  num_domains;$/;"	m	struct:nk_locality_info
num_elements	src/legion_runtime/lowlevel.h	/^      int num_elements;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
num_elems	src/test/saxpy_array.cc	/^  unsigned num_elems;$/;"	m	struct:MainArgs	file:
num_elmts	src/legion_runtime/lowlevel_impl.h	/^	size_t num_elmts;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
num_elmts	src/legion_runtime/shared_lowlevel.cc	/^	size_t num_elmts;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
num_elmts	src/legion_runtime/shared_lowlevel.cc	/^	size_t num_elmts;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
num_entries	include/dev/ioapic.h	/^    uint8_t num_entries;$/;"	m	struct:ioapic
num_fields	src/legion_runtime/lowlevel.cc	/^      size_t num_fields; \/\/ as long as it needs to be$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
num_hardware_banks	include/acpi/actbl1.h	/^	uint8_t num_hardware_banks;$/;"	m	struct:acpi_hest_ia_corrected
num_hardware_banks	include/acpi/actbl1.h	/^	uint8_t num_hardware_banks;$/;"	m	struct:acpi_hest_ia_machine_check
num_has	src/lua_src/lua.c	398;"	d	file:
num_idle_tasks	src/legion_runtime/shared_lowlevel.cc	/^        unsigned num_idle_tasks; \/\/ number of idle tasks enabled for the utility processor$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
num_ioapics	include/nautilus/nautilus.h	/^    uint32_t num_ioapics;$/;"	m	struct:sys_info
num_lmbs	src/legion_runtime/activemsg.cc	/^static int num_lmbs = 2;$/;"	v	file:
num_local_procs	src/legion_runtime/lowlevel_impl.h	/^      int num_local_procs;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
num_loops	src/acpi/acpica/aclocal.h	/^	u32 num_loops;$/;"	m	struct:acpi_db_method_info
num_memories	src/legion_runtime/lowlevel.cc	/^      unsigned num_memories;$/;"	m	struct:LegionRuntime::LowLevel::Machine::NodeAnnounceData	file:
num_node_gpus	src/legion_runtime/lowlevel_gpu.cc	/^      size_t num_node_gpus;$/;"	m	struct:LegionRuntime::LowLevel::gpu_dma_args	file:
num_node_gpus	src/legion_runtime/lowlevel_gpu.cc	/^    \/*static*\/ size_t GPUProcessor::num_node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor	file:
num_node_gpus	src/legion_runtime/lowlevel_gpu.h	/^      static size_t num_node_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
num_nodes	src/legion_runtime/lowlevel_impl.h	/^      int num_nodes;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
num_nodes	src/test/circuit.h	/^  unsigned      num_nodes;$/;"	m	struct:CircuitPiece
num_packages	src/acpi/acpica/aclocal.h	/^	u32 num_packages;$/;"	m	struct:acpi_pkg_state
num_pages	include/nautilus/sfi.h	/^    uint64_t num_pages;$/;"	m	struct:efi_mem_desc
num_polling_threads	src/legion_runtime/activemsg.cc	/^static int num_polling_threads = 0;$/;"	v	file:
num_procs	src/legion_runtime/lowlevel.cc	/^      unsigned num_procs;$/;"	m	struct:LegionRuntime::LowLevel::Machine::NodeAnnounceData	file:
num_profiling_nodes	src/legion_runtime/runtime.cc	/^    \/*static*\/ int Runtime::num_profiling_nodes = -1;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
num_profiling_nodes	src/legion_runtime/runtime.h	/^      static int num_profiling_nodes;$/;"	m	class:LegionRuntime::HighLevel::Runtime
num_readers	src/acpi/acpica/aclocal.h	/^	u32 num_readers;$/;"	m	struct:acpi_rw_lock
num_regions	include/nautilus/mm.h	/^    uint32_t num_regions;$/;"	m	struct:mmap_info
num_regions	include/nautilus/numa.h	/^    uint32_t num_regions;$/;"	m	struct:numa_domain
num_segments	src/acpi/acpica/aclocal.h	/^	u32 num_segments;$/;"	m	struct:acpi_namestring_info
num_sending_threads	src/legion_runtime/activemsg.cc	/^static int num_sending_threads = 0;$/;"	v	file:
num_thefts	src/nautilus/scheduler.c	/^    uint64_t num_thefts;   \/\/ how many threads I've successfully stolen$/;"	m	struct:nk_sched_percpu_state	file:
num_threads	src/acpi/acpica/aclocal.h	/^	u32 num_threads;$/;"	m	struct:acpi_db_method_info
num_threads	src/legion_runtime/lowlevel_dma.cc	/^    static int num_threads = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
num_threads	src/nautilus/scheduler.c	/^    uint64_t             num_threads;$/;"	m	struct:nk_sched_global_state	file:
num_threads	src/nautilus/vc.c	/^  uint32_t num_threads;$/;"	m	struct:nk_virtual_console	file:
num_threads_str	src/acpi/acpica/aclocal.h	/^	char num_threads_str[11];$/;"	m	struct:acpi_db_method_info
num_uncommitted_points	src/legion_runtime/legion_tasks.h	/^      unsigned num_uncommitted_points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
num_uncomplete_points	src/legion_runtime/legion_tasks.h	/^      unsigned num_uncomplete_points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
num_unmapped_points	src/legion_runtime/legion_tasks.h	/^      unsigned num_unmapped_points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
num_virtual_mappings	src/legion_runtime/legion_tasks.h	/^      unsigned num_virtual_mappings;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
num_vrings	include/dev/virtio_pci.h	/^  uint8_t num_vrings;$/;"	m	struct:virtio_pci_dev
num_wires	src/test/circuit.h	/^  unsigned      num_wires;$/;"	m	struct:CircuitPiece
num_worker_threads	src/legion_runtime/lowlevel_impl.h	/^      int num_worker_threads;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
num_writes	src/legion_runtime/lowlevel.cc	/^      unsigned num_writes;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
num_writes	src/legion_runtime/lowlevel_dma.cc	/^      unsigned sequence_id, num_writes;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
numa_current_task	src/test/circuit.cc	/^    void * numa_current_task[8] = {0,0,0,0,0,0,0,0};$/;"	m	namespace:TaskHelper	file:
numa_domain	include/nautilus/numa.h	/^struct numa_domain {$/;"	s
numa_matrix	include/nautilus/numa.h	/^    uint8_t * numa_matrix;$/;"	m	struct:nk_locality_info
number	src/nautilus/printk.c	/^static char *number(char *buf, char *end, unsigned long long num,$/;"	f	file:
numerator	src/legion_runtime/legion_utilities.h	/^      T numerator;$/;"	m	class:LegionRuntime::HighLevel::Fraction
numfield	include/lua/lobject.h	332;"	d
numfield	include/lua/lobject.h	333;"	d
numfield	include/lua/lobject.h	95;"	d
numparams	include/lua/lobject.h	/^  lu_byte numparams;  \/* number of fixed parameters *\/$/;"	m	struct:Proto
numusearray	src/lua_src/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	src/lua_src/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
nups	include/lua/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState
nups	include/lua/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	include/lua/lstate.h	/^  lu_int32 nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nval	include/lua/lparser.h	/^    lua_Number nval;  \/* for VKNUM *\/$/;"	m	union:expdesc::__anon16
nvalue	include/lua/lobject.h	153;"	d
nwaiters	include/nautilus/condvar.h	/^    unsigned nwaiters;$/;"	m	struct:nk_condvar
nx	include/nautilus/cpuid.h	/^            uint8_t nx          : 1; \/\/ no-execute page protection$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
nx	src/test/hpcg/geometry.h	/^    int64_t nx;$/;"	m	struct:lgncg::Geometry
nx	src/test/hpcg/hpcg-main.cc	/^    int64_t nx, ny, nz;$/;"	m	struct:__anon117::DriverParams	file:
ny	src/test/hpcg/geometry.h	/^    int64_t ny;$/;"	m	struct:lgncg::Geometry
ny	src/test/hpcg/hpcg-main.cc	/^    int64_t nx, ny, nz;$/;"	m	struct:__anon117::DriverParams	file:
nz	src/test/hpcg/geometry.h	/^    int64_t nz;$/;"	m	struct:lgncg::Geometry
nz	src/test/hpcg/hpcg-main.cc	/^    int64_t nx, ny, nz;$/;"	m	struct:__anon117::DriverParams	file:
nzir	src/test/hpcg/sparsemat.h	/^    Vector nzir;$/;"	m	struct:lgncg::SparseMatrix
oas_by_inst	src/legion_runtime/lowlevel_dma.cc	/^      OASByInst *oas_by_inst;$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
oas_vec	src/legion_runtime/lowlevel_dma.cc	/^      OASVec &oas_vec;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier	file:
oas_vec	src/legion_runtime/lowlevel_dma.cc	/^      OASVec &oas_vec;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
obj	Makefile	/^obj		:= $(objtree)$/;"	m
obj	src/lua_src/nt_lnautlib.c	/^}obj;$/;"	t	typeref:struct:test	file:
obj-y	lib/Makefile	/^obj-y := bitmap.o $/;"	m
obj2gco	include/lua/lstate.h	215;"	d
obj_desc	src/acpi/acpica/aclocal.h	/^	    union acpi_operand_object *obj_desc[ACPI_RESULTS_FRAME_OBJ_NUM];$/;"	m	struct:acpi_result_values	typeref:union:acpi_result_values::acpi_operand_object
obj_ptr	include/nautilus/cxxglue.h	/^    void *obj_ptr;$/;"	m	struct:atexit_func_entry_t
object	src/acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON union acpi_operand_object *object;$/;"	m	struct:acpi_update_state	typeref:union:acpi_update_state::acpi_operand_object
object	src/acpi/acpica/aclocal.h	/^	union acpi_operand_object *object;	\/* Interpreter object *\/$/;"	m	struct:acpi_namespace_node	typeref:union:acpi_namespace_node::acpi_operand_object
object_size	include/acpi/actypes.h	/^	uint16_t object_size;$/;"	m	struct:acpi_memory_list
object_type	src/acpi/acpica/aclocal.h	/^	u8 object_type;		\/* Corresponding internal object type *\/$/;"	m	struct:acpi_opcode_info
object_type	src/acpi/acpica/aclocal.h	/^	u8 object_type[2];$/;"	m	struct:acpi_package_info3
object_type	src/acpi/acpica/aclocal.h	/^	u8 object_type[4];$/;"	m	struct:acpi_package_info2
object_type1	src/acpi/acpica/aclocal.h	/^	u8 object_type1;$/;"	m	struct:acpi_package_info
object_type2	src/acpi/acpica/aclocal.h	/^	u8 object_type2;$/;"	m	struct:acpi_package_info
objects	src/acpi/acpica/aclocal.h	/^	u32 objects;$/;"	m	struct:acpi_integrity_info
objtree	Makefile	/^objtree		:= $(CURDIR)$/;"	m
objtypename	include/lua/ltm.h	47;"	d
observed	src/legion_runtime/region_tree.h	/^      FieldMask observed;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
observed_mask	src/legion_runtime/region_tree.h	/^      FieldMask observed_mask;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
observed_messages	src/legion_runtime/activemsg.cc	/^  std::map<int\/*message id*\/,ChunkInfo> observed_messages;$/;"	m	class:ActiveMessageEndpoint	file:
oeim_tbl_id	include/nautilus/sfi.h	/^    char     oeim_tbl_id[8];$/;"	m	struct:sfi_common_hdr
oem	include/dev/vesa.h	/^    uint32_t oem;           \/\/ segment:offset pointer to OEM$/;"	m	struct:vesa_adapter_info
oem_data	include/dev/vesa.h	/^    char oem_data[256];	    \/\/ OEM BIOSes store their strings in this area$/;"	m	struct:vesa_adapter_info
oem_id	include/acpi/actbl.h	/^	char oem_id[ACPI_OEM_ID_SIZE];	\/* ASCII OEM identification *\/$/;"	m	struct:acpi_table_header
oem_id	include/acpi/actbl.h	/^	char oem_id[ACPI_OEM_ID_SIZE];	\/* OEM identification *\/$/;"	m	struct:acpi_table_rsdp
oem_id	include/acpi/actbl2.h	/^	char oem_id[ACPI_OEM_ID_SIZE];	\/* ASCII OEM identification *\/$/;"	m	struct:acpi_slic_marker
oem_id	include/nautilus/acpi.h	/^    char     oem_id[8];$/;"	m	struct:mp_table
oem_id	include/nautilus/sfi.h	/^    char     oem_id[6];$/;"	m	struct:sfi_common_hdr
oem_parameters	include/acpi/actbl2.h	/^	uint16_t oem_parameters;$/;"	m	struct:acpi_asf_rmcp
oem_revision	include/acpi/actbl.h	/^	uint32_t oem_revision;	\/* OEM revision number *\/$/;"	m	struct:acpi_table_header
oem_table_id	include/acpi/actbl.h	/^	char oem_table_id[ACPI_OEM_TABLE_ID_SIZE];	\/* ASCII OEM table identification *\/$/;"	m	struct:acpi_table_header
oem_table_id	include/acpi/actbl2.h	/^	char oem_table_id[ACPI_OEM_TABLE_ID_SIZE];	\/* ASCII OEM table identification *\/$/;"	m	struct:acpi_slic_marker
oem_table_ptr	include/nautilus/acpi.h	/^    uint32_t oem_table_ptr;$/;"	m	struct:mp_table
oem_table_size	include/nautilus/acpi.h	/^    uint16_t oem_table_size;$/;"	m	struct:mp_table
off_screen_mem_off	include/dev/vesa.h	/^    uint32_t off_screen_mem_off;$/;"	m	struct:vesa_mode_info
off_screen_mem_size	include/dev/vesa.h	/^    uint16_t off_screen_mem_size;    \/\/ size of memory in the framebuffer but not being displayed on the screen$/;"	m	struct:vesa_mode_info
off_t	include/nautilus/libccompat.h	/^typedef uint64_t off_t;$/;"	t
off_t	include/nautilus/naut_types.h	/^typedef unsigned long off_t;$/;"	t
offset	include/acpi/actbl2.h	/^	uint8_t offset;$/;"	m	struct:acpi_asf_alert_data
offset	include/nautilus/multiboot2.h	/^  multiboot_uint32_t offset;$/;"	m	struct:multiboot_tag_apm
offset	src/legion_runtime/accessor.h	/^      int offset;$/;"	m	class:LegionRuntime::Accessor::ByteOffset
offset	src/legion_runtime/arrays.h	/^      Point<DIM> offset;$/;"	m	class:LegionRuntime::Arrays::Translation
offset	src/legion_runtime/arrays.h	/^      int offset;$/;"	m	class:LegionRuntime::Arrays::Linearization
offset	src/legion_runtime/lowlevel.cc	/^      off_t offset;$/;"	m	struct:LegionRuntime::LowLevel::RemoteRedListArgs	file:
offset	src/legion_runtime/lowlevel.cc	/^      off_t offset;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
offset	src/legion_runtime/lowlevel.cc	/^      off_t offset;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
offset	src/legion_runtime/lowlevel.h	/^	unsigned offset, size;$/;"	m	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
offset	src/legion_runtime/lowlevel.h	/^      off_t offset;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
offsetMismatch	src/test/hpcg/utils.h	/^offsetMismatch(int i,$/;"	f	namespace:lgncg
offset_lock	src/legion_runtime/region_tree.h	/^      Reservation offset_lock; $/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
offset_mask	src/legion_runtime/region_tree.h	/^        FieldMask offset_mask;$/;"	m	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
offset_mask	src/legion_runtime/region_tree.h	/^        FieldMask offset_mask;$/;"	m	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
offset_size_map	src/legion_runtime/region_tree.h	/^      std::map<unsigned\/*offset*\/,unsigned\/*size*\/> offset_size_map;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
offsetof	include/nautilus/list.h	32;"	d
offsetof	include/nautilus/list.h	33;"	d
offsetof	include/nautilus/rbtree.h	101;"	d
offsetof	include/nautilus/rbtree.h	102;"	d
offsets	src/legion_runtime/lowlevel_dma.cc	/^	std::vector<off_t> offsets;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
offsets	src/legion_runtime/lowlevel_dma.cc	/^	std::vector<off_t> offsets;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
offsets	src/legion_runtime/region_tree.h	/^        std::vector<Domain::CopySrcDstField> offsets;$/;"	m	struct:LegionRuntime::HighLevel::InstanceManager::OffsetEntry
offsets	src/legion_runtime/region_tree.h	/^        std::vector<Domain::CopySrcDstField> offsets;$/;"	m	struct:LegionRuntime::HighLevel::LayoutDescription::OffsetEntry
offsetsAreDense	src/test/hpcg/utils.h	/^offsetsAreDense(const Rect<DIM> &bounds,$/;"	f	namespace:lgncg
okRename	scripts/kconfig/qconf.cc	/^void ConfigItem::okRename(int col)$/;"	f	class:ConfigItem
old_allowhook	include/lua/lstate.h	/^      lu_byte old_allowhook;$/;"	m	struct:CallInfo::__anon11::__anon13
old_errfunc	include/lua/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon11::__anon13
oldpc	include/lua/lstate.h	/^  const Instruction *oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State
on_about1_activate	scripts/kconfig/gconf.c	/^void on_about1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_back_clicked	scripts/kconfig/gconf.c	/^void on_back_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_collapse_clicked	scripts/kconfig/gconf.c	/^void on_collapse_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_expand_clicked	scripts/kconfig/gconf.c	/^void on_expand_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_full_clicked	scripts/kconfig/gconf.c	/^void on_full_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_introduction1_activate	scripts/kconfig/gconf.c	/^void on_introduction1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_license1_activate	scripts/kconfig/gconf.c	/^void on_license1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_load1_activate	scripts/kconfig/gconf.c	/^void on_load1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_load_clicked	scripts/kconfig/gconf.c	/^void on_load_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_quit1_activate	scripts/kconfig/gconf.c	/^void on_quit1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_save1_activate	scripts/kconfig/gconf.c	/^void on_save1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_save_as1_activate	scripts/kconfig/gconf.c	/^void on_save_as1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_save_clicked	scripts/kconfig/gconf.c	/^void on_save_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_show_all_options1_activate	scripts/kconfig/gconf.c	/^on_show_all_options1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_show_data1_activate	scripts/kconfig/gconf.c	/^void on_show_data1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_show_debug_info1_activate	scripts/kconfig/gconf.c	/^on_show_debug_info1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_show_name1_activate	scripts/kconfig/gconf.c	/^void on_show_name1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_show_range1_activate	scripts/kconfig/gconf.c	/^void on_show_range1_activate(GtkMenuItem * menuitem, gpointer user_data)$/;"	f
on_single_clicked	scripts/kconfig/gconf.c	/^void on_single_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_split_clicked	scripts/kconfig/gconf.c	/^void on_split_clicked(GtkButton * button, gpointer user_data)$/;"	f
on_treeview1_button_press_event	scripts/kconfig/gconf.c	/^on_treeview1_button_press_event(GtkWidget * widget,$/;"	f
on_treeview2_button_press_event	scripts/kconfig/gconf.c	/^on_treeview2_button_press_event(GtkWidget * widget,$/;"	f
on_treeview2_cursor_changed	scripts/kconfig/gconf.c	/^on_treeview2_cursor_changed(GtkTreeView * treeview, gpointer user_data)$/;"	f
on_treeview2_key_press_event	scripts/kconfig/gconf.c	/^on_treeview2_key_press_event(GtkWidget * widget,$/;"	f
on_window1_delete_event	scripts/kconfig/gconf.c	/^gboolean on_window1_delete_event(GtkWidget * widget, GdkEvent * event,$/;"	f
on_window1_destroy	scripts/kconfig/gconf.c	/^void on_window1_destroy(GtkObject * object, gpointer user_data)$/;"	f
on_window1_size_request	scripts/kconfig/gconf.c	/^on_window1_size_request(GtkWidget * widget,$/;"	f
one	src/legion_runtime/legion_logging.h	/^        Event one;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventDependency
op	src/acpi/acpica/aclocal.h	/^	union acpi_parse_object *op;	\/* Current op being parsed *\/$/;"	m	struct:acpi_pscope_state	typeref:union:acpi_pscope_state::acpi_parse_object
op	src/acpi/acpica/aclocal.h	/^	union acpi_parse_object *op;$/;"	m	struct:acpi_namespace_node	typeref:union:acpi_namespace_node::acpi_parse_object
op	src/legion_runtime/region_tree.h	/^      Operation *const op;$/;"	m	class:LegionRuntime::HighLevel::LogicalOpAnalyzer
op	src/legion_runtime/region_tree.h	/^      Operation *const op;$/;"	m	class:LegionRuntime::HighLevel::LogicalPathRegistrar
op	src/legion_runtime/region_tree.h	/^      Operation *const op;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegistrar
op	src/legion_runtime/region_tree.h	/^      Operation *op;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
op	src/legion_runtime/region_tree.h	/^      const ReductionOp *const op;$/;"	m	class:LegionRuntime::HighLevel::ReductionManager
op	src/legion_runtime/runtime.h	/^        Operation *op;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::DeferredTriggerArgs
op	src/legion_runtime/runtime.h	/^        Operation *op;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerOpArgs
op	src/legion_runtime/runtime.h	/^        TaskOp *op;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::TriggerTaskArgs
op1_idx	src/legion_runtime/legion_ops.h	/^        unsigned op1_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
op2_idx	src/legion_runtime/legion_ops.h	/^        unsigned op2_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
op_lock	src/legion_runtime/legion_ops.h	/^      Reservation op_lock;$/;"	m	class:LegionRuntime::HighLevel::Operation
op_map	src/legion_runtime/legion_trace.h	/^      std::map<std::pair<Operation*,GenerationID>,unsigned> op_map;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
opcode	src/acpi/acpica/aclocal.h	/^	ACPI_STATE_COMMON u16 opcode;$/;"	m	struct:acpi_control_state
open	include/nautilus/dev.h	/^    int (*open)(void *state);$/;"	m	struct:nk_dev_int
open_children	src/legion_runtime/region_tree.h	/^      std::map<Color,FieldMask> open_children;$/;"	m	struct:LegionRuntime::HighLevel::ChildState
open_children	src/legion_runtime/region_tree.h	/^      std::map<CompositeNode*,ChildInfo> open_children;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
open_fields	src/legion_runtime/region_tree.h	/^        FieldMask open_fields;$/;"	m	struct:LegionRuntime::HighLevel::CompositeNode::ChildInfo
open_file	include/nautilus/fs.h	/^    void *(*open_file)(void *state, char *path);$/;"	m	struct:nk_fs_int
open_files	src/nautilus/fs.c	/^static struct list_head open_files;$/;"	v	typeref:struct:list_head	file:
open_func	src/lua_src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
open_logical_node	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::open_logical_node(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
open_state	src/legion_runtime/region_tree.h	/^      OpenState open_state;$/;"	m	struct:LegionRuntime::HighLevel::FieldState
opencheck	src/lua_src/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
openupval	include/lua/lstate.h	/^  GCObject *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
operation_idx	src/legion_runtime/legion_trace.h	/^        int operation_idx;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
operations	src/legion_runtime/legion_trace.h	/^      std::vector<std::pair<Operation*,GenerationID> > operations;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
operator !	src/legion_runtime/common.h	/^  inline bool operator!(void) const { return (value == (unsigned)-1); }$/;"	f	struct:ptr_t
operator !	src/legion_runtime/common.h	/^  inline bool operator!(void) const { return (value == (unsigned)-1); }$/;"	f	struct:utptr_t
operator !	src/legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator !	src/legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator !	src/legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator !	src/legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator !	src/legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator !	src/legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator!(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator !	src/legion_runtime/lowlevel.cc	/^    bool ElementMask::operator!(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator !	src/legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::operator!(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator !=	src/legion_runtime/accessor.h	/^      bool operator!=(const ByteOffset rhs) const { return offset != rhs.offset; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator !=	src/legion_runtime/arrays.h	/^      bool operator!=(const Point<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator !=	src/legion_runtime/arrays.h	/^      bool operator!=(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
operator !=	src/legion_runtime/common.h	/^  inline bool operator!=(const ptr_t &ptr) const { return (ptr.value != this->value); }$/;"	f	struct:ptr_t
operator !=	src/legion_runtime/common.h	/^  inline bool operator!=(const ptr_t<T> &ptr) const { return (ptr.value != this->value); }$/;"	f	struct:ptr_t
operator !=	src/legion_runtime/common.h	/^  inline bool operator!=(const utptr_t &ptr) const { return (ptr.value != this->value); }$/;"	f	struct:utptr_t
operator !=	src/legion_runtime/legion.h	/^    inline bool FieldSpace::operator!=(const FieldSpace &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator !=	src/legion_runtime/legion.h	/^    inline bool LogicalPartition::operator!=(const LogicalPartition &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator !=	src/legion_runtime/legion.h	/^    inline bool LogicalRegion::operator!=(const LogicalRegion &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator !=	src/legion_runtime/legion.h	/^    inline bool Predicate::operator!=(const Predicate &p) const$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator !=	src/legion_runtime/legion_allocation.h	/^      inline bool operator!=(LegionAllocator const& a) const$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
operator !=	src/legion_runtime/legion_utilities.h	/^      inline bool operator!=(const RegionUsage &rhs) const$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
operator !=	src/legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator!=(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator !=	src/legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator!=(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator !=	src/legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator!=(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator !=	src/legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator!=(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator !=	src/legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator!=(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator !=	src/legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator!=($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator !=	src/legion_runtime/lowlevel.cc	/^    bool ElementMask::operator!=(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const Domain &rhs) const { return !(*this == rhs); }$/;"	f	class:LegionRuntime::LowLevel::Domain
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const Event& rhs) const { return (id != rhs.id) || (gen != rhs.gen); }$/;"	f	class:LegionRuntime::LowLevel::Event
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const IndexSpace &rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const Memory &rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Memory
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const Processor& rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Processor
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const RegionInstance &rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const RegionInstanceAccessorUntyped<AccessorArray> &rhs) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
operator !=	src/legion_runtime/lowlevel.h	/^      bool operator!=(const Reservation& rhs) const { return id != rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
operator !=	src/legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::operator!=(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &	src/legion_runtime/legion.h	/^    inline AllocateMode operator&(AllocateMode left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &	src/legion_runtime/legion.h	/^    inline PrivilegeMode operator&(PrivilegeMode left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &	src/legion_runtime/legion.h	/^    inline RegionFlags operator&(RegionFlags left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &	src/legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator&(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator &	src/legion_runtime/legion_utilities.h	/^          TLBitMask<T,MAX,SHIFT,MASK>::operator&(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator &	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator &	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator &	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator &	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator&($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator &	src/legion_runtime/lowlevel.cc	/^    ElementMask ElementMask::operator&(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask ElementMask::operator&(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &=	src/legion_runtime/legion.h	/^    inline AllocateMode operator&=(AllocateMode &left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &=	src/legion_runtime/legion.h	/^    inline PrivilegeMode operator&=(PrivilegeMode &left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &=	src/legion_runtime/legion.h	/^    inline RegionFlags operator&=(RegionFlags &left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator &=	src/legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator&=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator &=	src/legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator&=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator &=	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator&=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator &=	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator&=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator &=	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator&=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator &=	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator&=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator &=	src/legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator&=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator &=	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator&=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ()	src/legion_runtime/arrays.h	/^	bool operator()(const Point<DIM>& a, const Point<DIM>& b) const$/;"	f	struct:LegionRuntime::Arrays::Point::STLComparator
operator ()	src/legion_runtime/legion_utilities.h	/^    inline __m128i& SSEBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ()	src/legion_runtime/legion_utilities.h	/^    inline __m128i& SSETLBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ()	src/legion_runtime/legion_utilities.h	/^    inline __m256i& AVXBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ()	src/legion_runtime/legion_utilities.h	/^    inline __m256i& AVXTLBitMask<MAX>::operator()(const unsigned int &idx)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ()	src/legion_runtime/legion_utilities.h	/^    inline const __m128i& SSEBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ()	src/legion_runtime/legion_utilities.h	/^    inline const __m128i& SSETLBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ()	src/legion_runtime/legion_utilities.h	/^    inline const __m256i& AVXBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ()	src/legion_runtime/legion_utilities.h	/^    inline const __m256i& AVXTLBitMask<MAX>::operator()($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ()	src/legion_runtime/lowlevel.h	/^	bool operator()(const DomainPoint& a, const DomainPoint& b) const$/;"	f	struct:LegionRuntime::LowLevel::DomainPoint::STLComparator
operator ()	src/legion_runtime/rectangle_set.h	/^      bool operator()(const Segment<T> *left, const Segment<T> *right)$/;"	f	class:LegionRuntime::HighLevel::SegmentComparator
operator ()	src/legion_runtime/rectangle_set.h	/^      bool operator()(const Segment<T> *left, const Segment<T> *right)$/;"	f	struct:LegionRuntime::HighLevel::MergeComparator
operator ()	src/legion_runtime/rectangle_set.h	/^      bool operator()(const Segment<T> *left, const Segment<T> *right)$/;"	f	struct:LegionRuntime::HighLevel::SplitComparator
operator ()	src/legion_runtime/utilities.h	/^      inline void operator()(int level, const char *fmt, ...) __attribute__((format (printf, 3, 4)))$/;"	f	class:LegionRuntime::Logger::Category
operator *	src/legion_runtime/accessor.h	/^      ByteOffset operator*(int scale) const { return ByteOffset(offset * scale); }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator *	src/legion_runtime/accessor.h	/^    inline ByteOffset operator*(int scale, const ByteOffset rhs) { return ByteOffset(scale * rhs.offset); }$/;"	f	namespace:LegionRuntime::Accessor
operator *	src/legion_runtime/arrays.h	/^      Point<DIM> operator*(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator *	src/legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator*(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator *	src/legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator*(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator *	src/legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator*(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator *	src/legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator*(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator *	src/legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator*(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator *	src/legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator*(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator *=	src/legion_runtime/accessor.h	/^      ByteOffset& operator*=(int scale) { offset *= scale; return *this; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator +	src/legion_runtime/accessor.h	/^      ByteOffset operator+(const ByteOffset rhs) const { return ByteOffset(offset + rhs.offset); }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator +	src/legion_runtime/accessor.h	/^    inline T* operator+(T *ptr, const ByteOffset offset) { return offset.add_to_pointer(ptr); }$/;"	f	namespace:LegionRuntime::Accessor
operator +	src/legion_runtime/arrays.h	/^      Point<DIM> operator+(const Point<DIM> other) const { return sum(*this, other); }$/;"	f	class:LegionRuntime::Arrays::Point
operator +	src/legion_runtime/arrays.h	/^      Point<DIM> operator+(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator +	src/legion_runtime/common.h	/^  inline ptr_t operator+(const ptr_t &ptr) const { return ptr_t(value + ptr.value); }$/;"	f	struct:ptr_t
operator +	src/legion_runtime/common.h	/^  inline ptr_t operator+(int offset) const { return ptr_t(value + offset); }$/;"	f	struct:ptr_t
operator +	src/legion_runtime/common.h	/^  inline ptr_t operator+(unsigned offset) const { return ptr_t(value + offset); }$/;"	f	struct:ptr_t
operator +	src/legion_runtime/common.h	/^  inline ptr_t<T> operator+(const ptr_t<T> &ptr) const { return ptr_t<T>(value + ptr.value); }$/;"	f	struct:ptr_t
operator +	src/legion_runtime/common.h	/^  inline ptr_t<T> operator+(const utptr_t &ptr) const { return ptr_t<T>(value + ptr.value); }$/;"	f	struct:ptr_t
operator +	src/legion_runtime/common.h	/^  inline ptr_t<T> operator+(int offset) const { return ptr_t<T>(value + offset); }$/;"	f	struct:ptr_t
operator +	src/legion_runtime/common.h	/^  inline ptr_t<T> operator+(unsigned offset) const { return ptr_t<T>(value + offset); }$/;"	f	struct:ptr_t
operator +	src/legion_runtime/common.h	/^  inline utptr_t operator+(const ptr_t<T> &ptr) const { return utptr_t(value + ptr.value); }$/;"	f	struct:utptr_t
operator +	src/legion_runtime/common.h	/^  inline utptr_t operator+(const utptr_t &ptr) const { return utptr_t(value + ptr.value); }$/;"	f	struct:utptr_t
operator +	src/legion_runtime/common.h	/^  inline utptr_t operator+(int offset) const { return utptr_t(value + offset); }$/;"	f	struct:utptr_t
operator +	src/legion_runtime/common.h	/^  inline utptr_t operator+(unsigned offset) const { return utptr_t(value + offset); }$/;"	f	struct:utptr_t
operator ++	src/legion_runtime/arrays.h	/^      GenericDenseSubrectIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
operator ++	src/legion_runtime/arrays.h	/^      GenericLinearSubrectIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
operator ++	src/legion_runtime/arrays.h	/^      GenericPointInRectIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
operator ++	src/legion_runtime/common.h	/^  inline ptr_t operator++(int) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	src/legion_runtime/common.h	/^  inline ptr_t& operator++(void) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	src/legion_runtime/common.h	/^  inline ptr_t<T> operator++(int) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	src/legion_runtime/common.h	/^  inline ptr_t<T>& operator++(void) { value++; return *this; }$/;"	f	struct:ptr_t
operator ++	src/legion_runtime/common.h	/^  inline utptr_t operator++(int) { value++; return *this; }$/;"	f	struct:utptr_t
operator ++	src/legion_runtime/common.h	/^  inline utptr_t& operator++(void) { value++; return *this; }$/;"	f	struct:utptr_t
operator ++	src/legion_runtime/lowlevel.h	/^	DomainPointIterator& operator++(int \/*i am postfix*\/) { step(); return *this; }$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
operator +=	src/legion_runtime/accessor.h	/^      ByteOffset& operator+=(ByteOffset rhs) { offset += rhs.offset; return *this; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator +=	src/legion_runtime/accessor.h	/^    inline T*& operator+=(T *&ptr, const ByteOffset offset) { ptr = offset.add_to_pointer(ptr); return ptr; }$/;"	f	namespace:LegionRuntime::Accessor
operator -	src/legion_runtime/arrays.h	/^      Point<DIM> operator-(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator -	src/legion_runtime/common.h	/^  inline ptr_t operator-(const ptr_t &ptr) const { return ptr_t(value - ptr.value); }$/;"	f	struct:ptr_t
operator -	src/legion_runtime/common.h	/^  inline ptr_t operator-(int offset) const { return ptr_t(value - offset); }$/;"	f	struct:ptr_t
operator -	src/legion_runtime/common.h	/^  inline ptr_t operator-(unsigned offset) const { return ptr_t(value - offset); }$/;"	f	struct:ptr_t
operator -	src/legion_runtime/common.h	/^  inline ptr_t<T> operator-(const ptr_t<T> &ptr) const { return ptr_t<T>(value - ptr.value); }$/;"	f	struct:ptr_t
operator -	src/legion_runtime/common.h	/^  inline ptr_t<T> operator-(const utptr_t &ptr) const { return ptr_t<T>(value - ptr.value); }$/;"	f	struct:ptr_t
operator -	src/legion_runtime/common.h	/^  inline ptr_t<T> operator-(int offset) const { return ptr_t<T>(value - offset); }$/;"	f	struct:ptr_t
operator -	src/legion_runtime/common.h	/^  inline ptr_t<T> operator-(unsigned offset) const { return ptr_t<T>(value - offset); }$/;"	f	struct:ptr_t
operator -	src/legion_runtime/common.h	/^  inline utptr_t operator-(const ptr_t<T> &ptr) const { return utptr_t(value - ptr.value); }$/;"	f	struct:utptr_t
operator -	src/legion_runtime/common.h	/^  inline utptr_t operator-(const utptr_t &ptr) const { return utptr_t(value - ptr.value); }$/;"	f	struct:utptr_t
operator -	src/legion_runtime/common.h	/^  inline utptr_t operator-(int offset) const { return utptr_t(value - offset); }$/;"	f	struct:utptr_t
operator -	src/legion_runtime/common.h	/^  inline utptr_t operator-(unsigned offset) const { return utptr_t(value - offset); }$/;"	f	struct:utptr_t
operator -	src/legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator-(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator -	src/legion_runtime/legion_utilities.h	/^            TLBitMask<T,MAX,SHIFT,MASK>::operator-(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator -	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator -	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator -	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator -	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator-($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator -	src/legion_runtime/lowlevel.cc	/^    ElementMask ElementMask::operator-(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator -	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask ElementMask::operator-(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator --	src/legion_runtime/common.h	/^  inline ptr_t operator--(int) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	src/legion_runtime/common.h	/^  inline ptr_t& operator--(void) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	src/legion_runtime/common.h	/^  inline ptr_t<T> operator--(int) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	src/legion_runtime/common.h	/^  inline ptr_t<T>& operator--(void) { value--; return *this; }$/;"	f	struct:ptr_t
operator --	src/legion_runtime/common.h	/^  inline utptr_t operator--(int) { value--; return *this; }$/;"	f	struct:utptr_t
operator --	src/legion_runtime/common.h	/^  inline utptr_t& operator--(void) { value--; return *this; }$/;"	f	struct:utptr_t
operator -=	src/legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator-=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator -=	src/legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator-=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator -=	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator-=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator -=	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator-=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator -=	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator-=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator -=	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator-=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator -=	src/legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator-=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator -=	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator-=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ->	src/legion_runtime/lowlevel_impl.h	/^      CoherentData *operator->(void) { return data; }$/;"	f	class:LegionRuntime::LowLevel::ExclusiveAccess
operator ->	src/legion_runtime/lowlevel_impl.h	/^      const CoherentData *operator->(void) { return data; }$/;"	f	class:LegionRuntime::LowLevel::SharedAccess
operator ->	src/legion_runtime/lowlevel_impl.h	/^      const StaticData *operator->(void) { return data; }$/;"	f	class:LegionRuntime::LowLevel::StaticAccess
operator /	src/legion_runtime/arrays.h	/^      Point<DIM> operator\/(const Point<DIM> other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator <	src/legion_runtime/common.h	/^  inline bool operator< (const ptr_t &ptr) const { return (ptr.value <  this->value); }$/;"	f	struct:ptr_t
operator <	src/legion_runtime/common.h	/^  inline bool operator< (const ptr_t<T> &ptr) const { return (ptr.value <  this->value); }$/;"	f	struct:ptr_t
operator <	src/legion_runtime/common.h	/^  inline bool operator< (const utptr_t &ptr) const { return (ptr.value <  this->value); }$/;"	f	struct:utptr_t
operator <	src/legion_runtime/legion.cc	/^    bool FieldSpaceRequirement::operator<($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
operator <	src/legion_runtime/legion.cc	/^    bool IndexSpaceRequirement::operator<($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
operator <	src/legion_runtime/legion.cc	/^    bool Lock::operator<(const Lock &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Lock
operator <	src/legion_runtime/legion.cc	/^    bool PhaseBarrier::operator<(const PhaseBarrier &rhs) const$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
operator <	src/legion_runtime/legion.cc	/^    bool RegionRequirement::operator<(const RegionRequirement &rhs) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
operator <	src/legion_runtime/legion.h	/^      bool operator<(const Future &f) const$/;"	f	class:LegionRuntime::HighLevel::Future
operator <	src/legion_runtime/legion.h	/^      bool operator<(const FutureMap &f) const$/;"	f	class:LegionRuntime::HighLevel::FutureMap
operator <	src/legion_runtime/legion.h	/^      bool operator<(const Grant &g) const$/;"	f	class:LegionRuntime::HighLevel::Grant
operator <	src/legion_runtime/legion.h	/^      bool operator<(const MPILegionHandshake &h) const$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
operator <	src/legion_runtime/legion.h	/^      inline bool operator<(const ArgumentMap &rhs) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
operator <	src/legion_runtime/legion.h	/^      inline bool operator<(const PhysicalRegion &reg) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
operator <	src/legion_runtime/legion.h	/^      inline bool operator<(const TaskArgument &arg) const$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
operator <	src/legion_runtime/legion.h	/^    inline bool FieldAllocator::operator<(const FieldAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
operator <	src/legion_runtime/legion.h	/^    inline bool FieldSpace::operator<(const FieldSpace &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator <	src/legion_runtime/legion.h	/^    inline bool IndexAllocator::operator<(const IndexAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
operator <	src/legion_runtime/legion.h	/^    inline bool LogicalPartition::operator<(const LogicalPartition &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator <	src/legion_runtime/legion.h	/^    inline bool LogicalRegion::operator<(const LogicalRegion &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator <	src/legion_runtime/legion.h	/^    inline bool Predicate::operator<(const Predicate &p) const$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator <	src/legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator<(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator <	src/legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator<(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator <	src/legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator<(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator <	src/legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator<(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator <	src/legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator<(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator <	src/legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator<(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator <	src/legion_runtime/lowlevel.cc	/^      bool operator<(const PartialWriteKey& rhs) const$/;"	f	struct:LegionRuntime::LowLevel::PartialWriteKey
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const Domain &rhs) const$/;"	f	class:LegionRuntime::LowLevel::Domain
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const Event& rhs) const $/;"	f	class:LegionRuntime::LowLevel::Event
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const IndexSpace &rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const Memory &rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Memory
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const Processor& rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Processor
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const RegionInstance &rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const RegionInstanceAccessorUntyped<AccessorArray> &rhs) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
operator <	src/legion_runtime/lowlevel.h	/^      bool operator<(const Reservation& rhs) const { return id < rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
operator <	src/legion_runtime/utilities.h	/^    bool operator<(const ImmovableLock &rhs) const$/;"	f	class:LegionRuntime::ImmovableLock
operator <<	src/legion_runtime/legion_utilities.h	/^                    BitMask<T,MAX,SHIFT,MASK>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator <<	src/legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator <<	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator <<	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator<<($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator <<	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator<<(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator <<	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator<<($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator <<	src/test/hpcg/lgncg.cc	/^operator<<(std::ostream &os, const I64Tuple &tup) {$/;"	f	namespace:lgncg
operator <<=	src/legion_runtime/legion_utilities.h	/^                        BitMask<T,MAX,SHIFT,MASK>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator <<=	src/legion_runtime/legion_utilities.h	/^                      TLBitMask<T,MAX,SHIFT,MASK>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator <<=	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator <<=	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator <<=	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator <<=	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator<<=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator <=	src/legion_runtime/arrays.h	/^      bool operator<=(const Point<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator =	src/legion_runtime/accessor.h	/^	  Typed &operator=(const Typed& rhs) {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
operator =	src/legion_runtime/arrays.h	/^      Point& operator=(const Point<1>& other) $/;"	f	class:LegionRuntime::Arrays::Point
operator =	src/legion_runtime/arrays.h	/^      Point& operator=(const Point<DIM>& other) $/;"	f	class:LegionRuntime::Arrays::Point
operator =	src/legion_runtime/arrays.h	/^      Rect& operator=(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
operator =	src/legion_runtime/common.h	/^  inline ptr_t& operator=(const ptr_t &ptr) { value = ptr.value; return *this; }$/;"	f	struct:ptr_t
operator =	src/legion_runtime/common.h	/^  inline ptr_t<T>& operator=(const ptr_t<T> &ptr) { value = ptr.value; return *this; }$/;"	f	struct:ptr_t
operator =	src/legion_runtime/common.h	/^  inline ptr_t<T>& operator=(const utptr_t &ptr)  { value = ptr.value; return *this; }$/;"	f	struct:ptr_t
operator =	src/legion_runtime/common.h	/^  inline utptr_t& operator=(const ptr_t<T> &ptr) { value = ptr.value; return *this; }$/;"	f	struct:utptr_t
operator =	src/legion_runtime/common.h	/^  inline utptr_t& operator=(const utptr_t &ptr) { value = ptr.value; return *this; }$/;"	f	struct:utptr_t
operator =	src/legion_runtime/default_mapper.cc	/^    DefaultMapper& DefaultMapper::operator=(const DefaultMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
operator =	src/legion_runtime/field_tree.h	/^    FieldTree<UT>& FieldTree<UT>::operator=(const FieldTree<UT> &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
operator =	src/legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>& IntervalTree<T,DISCRETE>::operator=($/;"	f	class:LegionRuntime::HighLevel::IntervalTree
operator =	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>& IntervalTreeNode<T,DISCRETE>::operator=($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
operator =	src/legion_runtime/legion.cc	/^    ArgumentMap& ArgumentMap::operator=(const ArgumentMap &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
operator =	src/legion_runtime/legion.cc	/^    FieldAllocator& FieldAllocator::operator=(const FieldAllocator &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
operator =	src/legion_runtime/legion.cc	/^    Future& Future::operator=(const Future &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future
operator =	src/legion_runtime/legion.cc	/^    FutureMap& FutureMap::operator=(const FutureMap &rhs)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
operator =	src/legion_runtime/legion.cc	/^    Grant& Grant::operator=(const Grant &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant
operator =	src/legion_runtime/legion.cc	/^    IndexAllocator& IndexAllocator::operator=(const IndexAllocator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
operator =	src/legion_runtime/legion.cc	/^    IndexIterator& IndexIterator::operator=(const IndexIterator &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
operator =	src/legion_runtime/legion.cc	/^    MPILegionHandshake& MPILegionHandshake::operator=($/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
operator =	src/legion_runtime/legion.cc	/^    PhysicalRegion& PhysicalRegion::operator=(const PhysicalRegion &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
operator =	src/legion_runtime/legion.cc	/^    Predicate& Predicate::operator=(const Predicate &rhs)$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator =	src/legion_runtime/legion.h	/^      inline TaskArgument& operator=(const TaskArgument &rhs)$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
operator =	src/legion_runtime/legion.h	/^    inline FieldSpace& FieldSpace::operator=(const FieldSpace &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator =	src/legion_runtime/legion.h	/^    inline LogicalPartition& LogicalPartition::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator =	src/legion_runtime/legion.h	/^    inline LogicalRegion& LogicalRegion::operator=(const LogicalRegion &rhs) $/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator =	src/legion_runtime/legion_logging.h	/^        ProcessorProfiler& operator=(const ProcessorProfiler& copy_from) {assert(false);}$/;"	f	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
operator =	src/legion_runtime/legion_ops.cc	/^    AcquireOp& AcquireOp::operator=(const AcquireOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
operator =	src/legion_runtime/legion_ops.cc	/^    AndPredOp& AndPredOp::operator=(const AndPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
operator =	src/legion_runtime/legion_ops.cc	/^    CloseOp& CloseOp::operator=(const CloseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
operator =	src/legion_runtime/legion_ops.cc	/^    CopyOp& CopyOp::operator=(const CopyOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
operator =	src/legion_runtime/legion_ops.cc	/^    DeletionOp& DeletionOp::operator=(const DeletionOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
operator =	src/legion_runtime/legion_ops.cc	/^    FenceOp& FenceOp::operator=(const FenceOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
operator =	src/legion_runtime/legion_ops.cc	/^    FuturePredOp& FuturePredOp::operator=(const FuturePredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
operator =	src/legion_runtime/legion_ops.cc	/^    MapOp& MapOp::operator=(const MapOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MapOp
operator =	src/legion_runtime/legion_ops.cc	/^    MustEpochDistributor& MustEpochDistributor::operator=($/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
operator =	src/legion_runtime/legion_ops.cc	/^    MustEpochMapper& MustEpochMapper::operator=(const MustEpochMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
operator =	src/legion_runtime/legion_ops.cc	/^    MustEpochOp& MustEpochOp::operator=(const MustEpochOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
operator =	src/legion_runtime/legion_ops.cc	/^    MustEpochTriggerer& MustEpochTriggerer::operator=($/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
operator =	src/legion_runtime/legion_ops.cc	/^    NotPredOp& NotPredOp::operator=(const NotPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
operator =	src/legion_runtime/legion_ops.cc	/^    OrPredOp& OrPredOp::operator=(const OrPredOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
operator =	src/legion_runtime/legion_ops.cc	/^    ReleaseOp& ReleaseOp::operator=(const ReleaseOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
operator =	src/legion_runtime/legion_profiling.h	/^	ProcessorProfiler& operator=(const ProcessorProfiler& copy_from) $/;"	f	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
operator =	src/legion_runtime/legion_tasks.cc	/^    DeferredSlicer& DeferredSlicer::operator=(const DeferredSlicer &rhs)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
operator =	src/legion_runtime/legion_tasks.cc	/^    IndexTask& IndexTask::operator=(const IndexTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
operator =	src/legion_runtime/legion_tasks.cc	/^    IndividualTask& IndividualTask::operator=(const IndividualTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
operator =	src/legion_runtime/legion_tasks.cc	/^    InlineTask& InlineTask::operator=(const InlineTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
operator =	src/legion_runtime/legion_tasks.cc	/^    PointTask& PointTask::operator=(const PointTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::PointTask
operator =	src/legion_runtime/legion_tasks.cc	/^    RemoteTask& RemoteTask::operator=(const RemoteTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
operator =	src/legion_runtime/legion_tasks.cc	/^    SliceTask& SliceTask::operator=(const SliceTask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
operator =	src/legion_runtime/legion_trace.cc	/^    LegionTrace& LegionTrace::operator=(const LegionTrace &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
operator =	src/legion_runtime/legion_trace.cc	/^    TraceCaptureOp& TraceCaptureOp::operator=(const TraceCaptureOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
operator =	src/legion_runtime/legion_trace.cc	/^    TraceCompleteOp& TraceCompleteOp::operator=(const TraceCompleteOp &rhs)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
operator =	src/legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator =	src/legion_runtime/legion_utilities.h	/^                  TLBitMask<T,MAX,SHIFT,MASK>::operator=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator =	src/legion_runtime/legion_utilities.h	/^      AutoLock& operator=(const AutoLock &rhs)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
operator =	src/legion_runtime/legion_utilities.h	/^      inline DerezCheck& operator=(const DerezCheck &rhs)$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
operator =	src/legion_runtime/legion_utilities.h	/^      inline RezCheck& operator=(const RezCheck &rhs)$/;"	f	class:LegionRuntime::HighLevel::RezCheck
operator =	src/legion_runtime/legion_utilities.h	/^    Fraction<T>& Fraction<T>::operator=(const Fraction<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Fraction
operator =	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator =	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator =	src/legion_runtime/legion_utilities.h	/^    inline Deserializer& Deserializer::operator=(const Deserializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
operator =	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator =	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator =	src/legion_runtime/legion_utilities.h	/^    inline Serializer& Serializer::operator=(const Serializer &rhs)$/;"	f	class:LegionRuntime::HighLevel::Serializer
operator =	src/legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator=(const ElementMask &rhs)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator =	src/legion_runtime/lowlevel.h	/^      Domain& operator=(const Domain& other)$/;"	f	class:LegionRuntime::LowLevel::Domain
operator =	src/legion_runtime/lowlevel.h	/^      DomainLinearization& operator=(const DomainLinearization& other)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
operator =	src/legion_runtime/lowlevel.h	/^      DomainPoint& operator=(const DomainPoint &rhs)$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
operator =	src/legion_runtime/rectangle_set.h	/^                    RectangleSet<T,DISCRETE>::operator=(const RectangleSet &rhs)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
operator =	src/legion_runtime/rectangle_set.h	/^    Segment<T>& Segment<T>::operator=(const Segment<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Segment
operator =	src/legion_runtime/region_tree.cc	/^                          operator=(const LegionStack<T,MAX_SIZE,INC_SIZE> &rhs)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
operator =	src/legion_runtime/region_tree.cc	/^    CompositeCloser& CompositeCloser::operator=(const CompositeCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
operator =	src/legion_runtime/region_tree.cc	/^    CompositeNode& CompositeNode::operator=(const CompositeNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
operator =	src/legion_runtime/region_tree.cc	/^    FieldSpaceNode& FieldSpaceNode::operator=(const FieldSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
operator =	src/legion_runtime/region_tree.cc	/^    FoldReductionManager& FoldReductionManager::operator=($/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
operator =	src/legion_runtime/region_tree.cc	/^    IndexPartNode& IndexPartNode::operator=(const IndexPartNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
operator =	src/legion_runtime/region_tree.cc	/^    IndexSpaceNode& IndexSpaceNode::operator=(const IndexSpaceNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
operator =	src/legion_runtime/region_tree.cc	/^    InstanceManager& InstanceManager::operator=(const InstanceManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
operator =	src/legion_runtime/region_tree.cc	/^    LayoutDescription& LayoutDescription::operator=($/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
operator =	src/legion_runtime/region_tree.cc	/^    ListReductionManager& ListReductionManager::operator=($/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
operator =	src/legion_runtime/region_tree.cc	/^    LogicalInitializer& LogicalInitializer::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
operator =	src/legion_runtime/region_tree.cc	/^    LogicalInvalidator& LogicalInvalidator::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
operator =	src/legion_runtime/region_tree.cc	/^    LogicalPathRegistrar& LogicalPathRegistrar::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
operator =	src/legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>& LogicalRegistrar<DOMINATE>::operator=($/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
operator =	src/legion_runtime/region_tree.cc	/^    LogicalState& LogicalState::operator=(const LogicalState &rhs)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
operator =	src/legion_runtime/region_tree.cc	/^    MappingRef& MappingRef::operator=(const MappingRef &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
operator =	src/legion_runtime/region_tree.cc	/^    MappingTraverser& MappingTraverser::operator=(const MappingTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
operator =	src/legion_runtime/region_tree.cc	/^    MaterializedView& MaterializedView::operator=(const MaterializedView &rhs)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
operator =	src/legion_runtime/region_tree.cc	/^    PartitionNode& PartitionNode::operator=(const PartitionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
operator =	src/legion_runtime/region_tree.cc	/^    PathReturner& PathReturner::operator=(const PathReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
operator =	src/legion_runtime/region_tree.cc	/^    PathTraverser& PathTraverser::operator=(const PathTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
operator =	src/legion_runtime/region_tree.cc	/^    PhysicalCloser& PhysicalCloser::operator=(const PhysicalCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
operator =	src/legion_runtime/region_tree.cc	/^    PhysicalInitializer& PhysicalInitializer::operator=($/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
operator =	src/legion_runtime/region_tree.cc	/^    PhysicalInvalidator& PhysicalInvalidator::operator=($/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
operator =	src/legion_runtime/region_tree.cc	/^    PremapTraverser& PremapTraverser::operator=(const PremapTraverser &rhs)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
operator =	src/legion_runtime/region_tree.cc	/^    ReductionCloser& ReductionCloser::operator=(const ReductionCloser &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
operator =	src/legion_runtime/region_tree.cc	/^    ReductionView& ReductionView::operator=(const ReductionView &rhs)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
operator =	src/legion_runtime/region_tree.cc	/^    RegionNode& RegionNode::operator=(const RegionNode &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
operator =	src/legion_runtime/region_tree.cc	/^    RegionTreeForest& RegionTreeForest::operator=(const RegionTreeForest &rhs)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
operator =	src/legion_runtime/region_tree.cc	/^    RestrictedTraverser& RestrictedTraverser::operator=($/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
operator =	src/legion_runtime/region_tree.cc	/^    StateReturner& StateReturner::operator=(const StateReturner &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
operator =	src/legion_runtime/region_tree.cc	/^    StateSender& StateSender::operator=(const StateSender &rhs)$/;"	f	class:LegionRuntime::HighLevel::StateSender
operator =	src/legion_runtime/region_tree.cc	/^    TreeClose& TreeClose::operator=(const TreeClose &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
operator =	src/legion_runtime/region_tree.cc	/^    TreeCloseImpl& TreeCloseImpl::operator=(const TreeCloseImpl &rhs)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
operator =	src/legion_runtime/region_tree.cc	/^    ViewHandle& ViewHandle::operator=(const ViewHandle &rhs)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
operator =	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl& ArgumentMap::Impl::operator=(const Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
operator =	src/legion_runtime/runtime.cc	/^    ArgumentMapStore& ArgumentMapStore::operator=(const ArgumentMapStore &rhs)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
operator =	src/legion_runtime/runtime.cc	/^    Future::Impl& Future::Impl::operator=(const Future::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
operator =	src/legion_runtime/runtime.cc	/^    FutureMap::Impl& FutureMap::Impl::operator=(const FutureMap::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
operator =	src/legion_runtime/runtime.cc	/^    GarbageCollectionEpoch& GarbageCollectionEpoch::operator=($/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
operator =	src/legion_runtime/runtime.cc	/^    Grant::Impl& Grant::Impl::operator=(const Grant::Impl &rhs)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
operator =	src/legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl& MPILegionHandshake::Impl::operator=($/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
operator =	src/legion_runtime/runtime.cc	/^    MemoryManager& MemoryManager::operator=(const MemoryManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
operator =	src/legion_runtime/runtime.cc	/^    MessageManager& MessageManager::operator=(const MessageManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
operator =	src/legion_runtime/runtime.cc	/^    PhysicalRegion::Impl& PhysicalRegion::Impl::operator=($/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
operator =	src/legion_runtime/runtime.cc	/^    ProcessorManager& ProcessorManager::operator=(const ProcessorManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
operator =	src/legion_runtime/runtime.cc	/^    Runtime& Runtime::operator=(const Runtime &rhs)$/;"	f	class:LegionRuntime::HighLevel::Runtime
operator =	src/legion_runtime/runtime.h	/^      AllocManager& operator=(const AllocManager &rhs)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
operator =	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator=(const ElementMask &rhs)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator =	src/legion_runtime/shim_mapper.cc	/^    ShimMapper& ShimMapper::operator=(const ShimMapper &rhs)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
operator =	src/legion_runtime/utilities.h	/^    ImmovableLock& operator=(const ImmovableLock &rhs)$/;"	f	class:LegionRuntime::ImmovableLock
operator ==	src/legion_runtime/accessor.h	/^      bool operator==(const ByteOffset rhs) const { return offset == rhs.offset; }$/;"	f	class:LegionRuntime::Accessor::ByteOffset
operator ==	src/legion_runtime/arrays.h	/^      bool operator==(const Point<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Point
operator ==	src/legion_runtime/arrays.h	/^      bool operator==(const Rect<DIM>& other)$/;"	f	class:LegionRuntime::Arrays::Rect
operator ==	src/legion_runtime/common.h	/^  inline bool operator==(const ptr_t &ptr) const { return (ptr.value == this->value); }$/;"	f	struct:ptr_t
operator ==	src/legion_runtime/common.h	/^  inline bool operator==(const ptr_t<T> &ptr) const { return (ptr.value == this->value); }$/;"	f	struct:ptr_t
operator ==	src/legion_runtime/common.h	/^  inline bool operator==(const utptr_t &ptr) const { return (ptr.value == this->value); }$/;"	f	struct:utptr_t
operator ==	src/legion_runtime/legion.cc	/^    bool FieldSpaceRequirement::operator==($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceRequirement
operator ==	src/legion_runtime/legion.cc	/^    bool IndexSpaceRequirement::operator==($/;"	f	class:LegionRuntime::HighLevel::IndexSpaceRequirement
operator ==	src/legion_runtime/legion.cc	/^    bool Lock::operator==(const Lock &rhs) const$/;"	f	class:LegionRuntime::HighLevel::Lock
operator ==	src/legion_runtime/legion.cc	/^    bool PhaseBarrier::operator==(const PhaseBarrier &rhs) const$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
operator ==	src/legion_runtime/legion.cc	/^    bool RegionRequirement::operator==(const RegionRequirement &rhs) const$/;"	f	class:LegionRuntime::HighLevel::RegionRequirement
operator ==	src/legion_runtime/legion.h	/^      bool operator==(const Future &f) const$/;"	f	class:LegionRuntime::HighLevel::Future
operator ==	src/legion_runtime/legion.h	/^      bool operator==(const FutureMap &f) const$/;"	f	class:LegionRuntime::HighLevel::FutureMap
operator ==	src/legion_runtime/legion.h	/^      bool operator==(const Grant &g) const$/;"	f	class:LegionRuntime::HighLevel::Grant
operator ==	src/legion_runtime/legion.h	/^      bool operator==(const MPILegionHandshake &h) const$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
operator ==	src/legion_runtime/legion.h	/^      inline bool operator==(const ArgumentMap &rhs) const$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
operator ==	src/legion_runtime/legion.h	/^      inline bool operator==(const PhysicalRegion &reg) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
operator ==	src/legion_runtime/legion.h	/^      inline bool operator==(const TaskArgument &arg) const$/;"	f	class:LegionRuntime::HighLevel::TaskArgument
operator ==	src/legion_runtime/legion.h	/^    inline bool FieldAllocator::operator==(const FieldAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
operator ==	src/legion_runtime/legion.h	/^    inline bool FieldSpace::operator==(const FieldSpace &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpace
operator ==	src/legion_runtime/legion.h	/^    inline bool IndexAllocator::operator==(const IndexAllocator &rhs) const$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
operator ==	src/legion_runtime/legion.h	/^    inline bool LogicalPartition::operator==(const LogicalPartition &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalPartition
operator ==	src/legion_runtime/legion.h	/^    inline bool LogicalRegion::operator==(const LogicalRegion &rhs) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegion
operator ==	src/legion_runtime/legion.h	/^    inline bool Predicate::operator==(const Predicate &p) const$/;"	f	class:LegionRuntime::HighLevel::Predicate
operator ==	src/legion_runtime/legion_allocation.h	/^      inline bool operator==(LegionAllocator const&) const { return true; }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
operator ==	src/legion_runtime/legion_utilities.h	/^      inline bool operator==(const RegionUsage &rhs) const$/;"	f	struct:LegionRuntime::HighLevel::RegionUsage
operator ==	src/legion_runtime/legion_utilities.h	/^    inline bool AVXBitMask<MAX>::operator==(const AVXBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ==	src/legion_runtime/legion_utilities.h	/^    inline bool AVXTLBitMask<MAX>::operator==(const AVXTLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ==	src/legion_runtime/legion_utilities.h	/^    inline bool BitMask<T,MAX,SHIFT,MASK>::operator==(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ==	src/legion_runtime/legion_utilities.h	/^    inline bool SSEBitMask<MAX>::operator==(const SSEBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ==	src/legion_runtime/legion_utilities.h	/^    inline bool SSETLBitMask<MAX>::operator==(const SSETLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ==	src/legion_runtime/legion_utilities.h	/^    inline bool TLBitMask<T,MAX,SHIFT,MASK>::operator==($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ==	src/legion_runtime/lowlevel.cc	/^    bool ElementMask::operator==(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const Domain &rhs) const$/;"	f	class:LegionRuntime::LowLevel::Domain
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const DomainPoint &rhs) const$/;"	f	class:LegionRuntime::LowLevel::DomainPoint
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const Event& rhs) const { return (id == rhs.id) && (gen == rhs.gen); }$/;"	f	class:LegionRuntime::LowLevel::Event
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const IndexSpace &rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::IndexSpace
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const Memory &rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Memory
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const Processor& rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Processor
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const RegionInstance &rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::RegionInstance
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const RegionInstanceAccessorUntyped<AccessorArray> &rhs) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
operator ==	src/legion_runtime/lowlevel.h	/^      bool operator==(const Reservation& rhs) const { return id == rhs.id; }$/;"	f	class:LegionRuntime::LowLevel::Reservation
operator ==	src/legion_runtime/shared_lowlevel.cc	/^    bool ElementMask::operator==(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ==	src/legion_runtime/utilities.h	/^    bool operator==(const ImmovableLock &rhs) const$/;"	f	class:LegionRuntime::ImmovableLock
operator >>	src/legion_runtime/legion_utilities.h	/^                    BitMask<T,MAX,SHIFT,MASK>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator >>	src/legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator >>	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator >>	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator>>($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator >>	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator>>(unsigned shift) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator >>	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator>>($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator >>=	src/legion_runtime/legion_utilities.h	/^                        BitMask<T,MAX,SHIFT,MASK>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator >>=	src/legion_runtime/legion_utilities.h	/^                      TLBitMask<T,MAX,SHIFT,MASK>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator >>=	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator >>=	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator >>=	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator >>=	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator>>=(unsigned shift)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator []	src/legion_runtime/arrays.h	/^      int operator[](unsigned idx) const { return x[idx]; }$/;"	f	class:LegionRuntime::Arrays::Point
operator []	src/legion_runtime/legion_utilities.h	/^    inline T& BitMask<T,MAX,SHIFT,MASK>::operator[](const unsigned &idx) $/;"	f	class:LegionRuntime::HighLevel::BitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline T& TLBitMask<T,MAX,SHIFT,MASK>::operator[](const unsigned &idx)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline const T& BitMask<T,MAX,SHIFT,MASK>::operator[]($/;"	f	class:LegionRuntime::HighLevel::BitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline const T& TLBitMask<T,MAX,SHIFT,MASK>::operator[]($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t& AVXBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t& AVXTLBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t& SSEBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline const uint64_t& SSETLBitMask<MAX>::operator[]($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline uint64_t& AVXBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline uint64_t& AVXTLBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline uint64_t& SSEBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator []	src/legion_runtime/legion_utilities.h	/^    inline uint64_t& SSETLBitMask<MAX>::operator[](const unsigned int &idx) $/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator []	src/legion_runtime/region_tree.cc	/^    T& LegionStack<T,MAX_SIZE,INC_SIZE>::operator[](unsigned int idx)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
operator ^	src/legion_runtime/legion.h	/^    inline AllocateMode operator^(AllocateMode left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^	src/legion_runtime/legion.h	/^    inline PrivilegeMode operator^(PrivilegeMode left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^	src/legion_runtime/legion.h	/^    inline RegionFlags operator^(RegionFlags left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^	src/legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator^(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ^	src/legion_runtime/legion_utilities.h	/^            TLBitMask<T,MAX,SHIFT,MASK>::operator^(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ^	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ^	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ^	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ^	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator^($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator ^=	src/legion_runtime/legion.h	/^    inline AllocateMode operator^=(AllocateMode &left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^=	src/legion_runtime/legion.h	/^    inline PrivilegeMode operator^=(PrivilegeMode &left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^=	src/legion_runtime/legion.h	/^    inline RegionFlags operator^=(RegionFlags &left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator ^=	src/legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator^=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ^=	src/legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator^=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ^=	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator^=(const AVXBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ^=	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator^=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ^=	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator^=(const SSEBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ^=	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator^=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator bool	src/legion_runtime/arrays.h	/^      operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
operator bool	src/legion_runtime/arrays.h	/^      operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
operator bool	src/legion_runtime/arrays.h	/^      operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
operator bool	src/legion_runtime/common.h	/^  inline operator bool(void) const { return (value != (unsigned)-1); }$/;"	f	struct:ptr_t
operator bool	src/legion_runtime/common.h	/^  inline operator bool(void) const { return (value != (unsigned)-1); }$/;"	f	struct:utptr_t
operator bool	src/legion_runtime/lowlevel.h	/^	operator bool(void) const { return any_left; }$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
operator delete	src/cxx/cxxglue.cc	/^void operator $/;"	f
operator delete[]	src/cxx/cxxglue.cc	/^void operator $/;"	f
operator int	src/legion_runtime/arrays.h	/^      operator int(void) const { return x[0]; }$/;"	f	class:LegionRuntime::Arrays::Point
operator int	src/legion_runtime/common.h	/^  inline operator int(void) const { return int(value); }$/;"	f	struct:ptr_t
operator int	src/legion_runtime/common.h	/^  inline operator int(void) const { return int(value); }$/;"	f	struct:utptr_t
operator int	src/legion_runtime/utilities.h	/^      operator int(void) const { return index; }$/;"	f	class:LegionRuntime::Logger::Category
operator new	src/cxx/cxxglue.cc	/^void *operator $/;"	f
operator new[]	src/cxx/cxxglue.cc	/^void *operator $/;"	f
operator unsigned	src/legion_runtime/common.h	/^  inline operator unsigned(void) const { return value; } $/;"	f	struct:ptr_t
operator unsigned	src/legion_runtime/common.h	/^  inline operator unsigned(void) const { return value; } $/;"	f	struct:utptr_t
operator utptr_t	src/legion_runtime/common.h	/^  inline operator utptr_t(void) const { utptr_t ptr; ptr.value = value; return ptr; }$/;"	f	struct:ptr_t
operator |	src/legion_runtime/legion.h	/^    inline AllocateMode operator|(AllocateMode left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |	src/legion_runtime/legion.h	/^    inline PrivilegeMode operator|(PrivilegeMode left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |	src/legion_runtime/legion.h	/^    inline RegionFlags operator|(RegionFlags left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |	src/legion_runtime/legion_utilities.h	/^                BitMask<T,MAX,SHIFT,MASK>::operator|(const BitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator |	src/legion_runtime/legion_utilities.h	/^            TLBitMask<T,MAX,SHIFT,MASK>::operator|(const TLBitMask &rhs) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator |	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator |	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator |	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator |	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator|($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator |	src/legion_runtime/lowlevel.cc	/^    ElementMask ElementMask::operator|(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator |	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask ElementMask::operator|(const ElementMask &other) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator |=	src/legion_runtime/legion.h	/^    inline AllocateMode operator|=(AllocateMode &left, AllocateMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |=	src/legion_runtime/legion.h	/^    inline PrivilegeMode operator|=(PrivilegeMode &left, PrivilegeMode right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |=	src/legion_runtime/legion.h	/^    inline RegionFlags operator|=(RegionFlags &left, RegionFlags right)$/;"	f	namespace:LegionRuntime::HighLevel
operator |=	src/legion_runtime/legion_utilities.h	/^                      BitMask<T,MAX,SHIFT,MASK>::operator|=(const BitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator |=	src/legion_runtime/legion_utilities.h	/^                 TLBitMask<T,MAX,SHIFT,MASK>::operator|=(const TLBitMask &rhs)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator |=	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX>& AVXBitMask<MAX>::operator|=(const AVXBitMask &rhs) $/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator |=	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX>& AVXTLBitMask<MAX>::operator|=($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator |=	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX>& SSEBitMask<MAX>::operator|=(const SSEBitMask &rhs) $/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator |=	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX>& SSETLBitMask<MAX>::operator|=($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
operator |=	src/legion_runtime/lowlevel.cc	/^    ElementMask& ElementMask::operator|=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator |=	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask& ElementMask::operator|=(const ElementMask &other)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
operator ~	src/legion_runtime/legion.h	/^    inline AllocateMode operator~(AllocateMode a)$/;"	f	namespace:LegionRuntime::HighLevel
operator ~	src/legion_runtime/legion.h	/^    inline PrivilegeMode operator~(PrivilegeMode p)$/;"	f	namespace:LegionRuntime::HighLevel
operator ~	src/legion_runtime/legion.h	/^    inline RegionFlags operator~(RegionFlags f)$/;"	f	namespace:LegionRuntime::HighLevel
operator ~	src/legion_runtime/legion_utilities.h	/^                              BitMask<T,MAX,SHIFT,MASK>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
operator ~	src/legion_runtime/legion_utilities.h	/^                            TLBitMask<T,MAX,SHIFT,MASK>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
operator ~	src/legion_runtime/legion_utilities.h	/^    inline AVXBitMask<MAX> AVXBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
operator ~	src/legion_runtime/legion_utilities.h	/^    inline AVXTLBitMask<MAX> AVXTLBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
operator ~	src/legion_runtime/legion_utilities.h	/^    inline SSEBitMask<MAX> SSEBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
operator ~	src/legion_runtime/legion_utilities.h	/^    inline SSETLBitMask<MAX> SSETLBitMask<MAX>::operator~(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
opmode	src/lua_src/lopcodes.c	62;"	d	file:
optimize_result	scripts/kallsyms.c	/^static void optimize_result(void)$/;"	f	file:
optimize_token_table	scripts/kallsyms.c	/^static void optimize_token_table(void)$/;"	f	file:
option	scripts/kconfig/kxgettext.c	/^	const char	 *option;$/;"	m	struct:message	file:
option_error	scripts/kconfig/zconf.y	/^option_error:$/;"	l
option_name	scripts/kconfig/zconf.y	/^option_name:$/;"	l
or_pred_op_lock	src/legion_runtime/runtime.h	/^      Reservation or_pred_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
order	src/nautilus/mm/buddy.c	/^    ulong_t    order;$/;"	m	struct:block	file:
order	src/nautilus/mm/kmem.c	/^    uint64_t order;  \/* order of the block allocated from buddy system *\/$/;"	m	struct:kmem_block_hdr	file:
ordered_regions	include/nautilus/mm.h	/^    struct list_head ordered_regions;$/;"	m	struct:kmem_data	typeref:struct:kmem_data::list_head
orig_mode	src/dev/vesa.c	/^static vesa_mode_t orig_mode;$/;"	v	file:
orig_point	src/legion_runtime/legion_logging.h	/^        UniqueID orig_point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPointPoint
orig_proc	src/legion_runtime/legion.h	/^      Processor                           orig_proc;$/;"	m	class:LegionRuntime::HighLevel::Task
orig_rect	src/legion_runtime/arrays.h	/^      Rect<T::IDIM> orig_rect;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
orig_rect	src/legion_runtime/arrays.h	/^      Rect<T::IDIM> orig_rect;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
orig_task	src/legion_runtime/legion_tasks.h	/^      IndividualTask *orig_task; \/\/ Not a valid pointer when remote$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
origin	include/acpi/actbl2.h	/^	uint8_t origin;$/;"	m	struct:acpi_ibft_nic
original_flags	src/acpi/acpica/aclocal.h	/^	u8 original_flags;      \/* Original (pre-handler) GPE info *\/$/;"	m	struct:acpi_gpe_handler_info
originally_enabled	src/acpi/acpica/aclocal.h	/^	u8 originally_enabled;  \/* True if GPE was originally enabled *\/$/;"	m	struct:acpi_gpe_handler_info
os	include/nautilus/pmc.h	/^            uint8_t os            : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
os_clock	src/lua_src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	src/lua_src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	src/lua_src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	src/lua_src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	src/lua_src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	src/lua_src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	src/lua_src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	src/lua_src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	src/lua_src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	src/lua_src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	src/lua_src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
osd1	src/fs/ext2/ext2fs.h	/^	} osd1;				\/* OS dependent 1 *\/$/;"	m	struct:ext2_inode	typeref:union:ext2_inode::__anon122
osd2	src/fs/ext2/ext2fs.h	/^	} osd2;				\/* OS dependent 2 *\/$/;"	m	struct:ext2_inode	typeref:union:ext2_inode::__anon125
osi_dependency	src/acpi/acpica/aclocal.h	/^	u8 osi_dependency;$/;"	m	struct:acpi_port_info
ospm_flags	include/acpi/actbl.h	/^	uint32_t ospm_flags;		\/* Flags to be set by OSPM (ACPI 4.0) *\/$/;"	m	struct:acpi_table_facs
osvw	include/nautilus/cpuid.h	/^            uint8_t osvw        : 1; \/\/ OS visible workaround$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
osxsave	include/nautilus/cpuid.h	/^            uint8_t osxsave  : 1; \/\/ OS has set CR4.OSXSAVE (bit 18) to enable the XSAVE feature set$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
other	src/legion_runtime/legion_allocation.h	/^        typedef LegionAllocator<U, A> other;$/;"	t	struct:LegionRuntime::HighLevel::LegionAllocator::rebind
otherwhite	include/lua/lgc.h	110;"	d
out_acquire_ops	src/legion_runtime/runtime.h	/^      std::set<AcquireOp*>      out_acquire_ops; $/;"	m	class:LegionRuntime::HighLevel::Runtime
out_index_tasks	src/legion_runtime/runtime.h	/^      std::set<IndexTask*>      out_index_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
out_individual_tasks	src/legion_runtime/runtime.h	/^      std::set<IndividualTask*> out_individual_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
out_long_hdrs	src/legion_runtime/activemsg.cc	/^  std::queue<OutgoingMessage *> out_long_hdrs;$/;"	m	class:ActiveMessageEndpoint	file:
out_point_tasks	src/legion_runtime/runtime.h	/^      std::set<PointTask*>      out_point_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
out_short_hdrs	src/legion_runtime/activemsg.cc	/^  std::queue<OutgoingMessage *> out_short_hdrs;$/;"	m	class:ActiveMessageEndpoint	file:
out_slice_tasks	src/legion_runtime/runtime.h	/^      std::set<SliceTask*>      out_slice_tasks;$/;"	m	class:LegionRuntime::HighLevel::Runtime
outb	include/nautilus/cpu.h	/^outb (uint8_t val, uint16_t port)$/;"	f
outgoing	src/legion_runtime/legion_ops.h	/^      std::map<Operation*,GenerationID> outgoing;$/;"	m	class:LegionRuntime::HighLevel::Operation
outl	include/nautilus/cpu.h	/^outl (uint32_t val, uint16_t port)$/;"	f
output	include/nautilus/thread.h	/^    void * output;$/;"	m	struct:nk_thread
output_label	scripts/kallsyms.c	/^static void output_label(char *label)$/;"	f	file:
outside	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ inline bool RectangleSet<T,DISCRETE>::outside($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
outstanding_commit_deps	src/legion_runtime/legion_ops.h	/^      unsigned outstanding_commit_deps;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_mapping_deps	src/legion_runtime/legion_ops.h	/^      unsigned outstanding_mapping_deps;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_mapping_references	src/legion_runtime/legion_ops.h	/^      unsigned outstanding_mapping_references;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_messages	src/legion_runtime/activemsg.cc	/^  int *outstanding_messages;$/;"	m	class:EndpointManager	file:
outstanding_speculation_deps	src/legion_runtime/legion_ops.h	/^      unsigned outstanding_speculation_deps;$/;"	m	class:LegionRuntime::HighLevel::Operation
outstanding_steal_requests	src/legion_runtime/runtime.h	/^      std::map<MapperID,std::set<Processor> > outstanding_steal_requests;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
outstanding_subtasks	src/legion_runtime/legion_tasks.h	/^      unsigned outstanding_subtasks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
outw	include/nautilus/cpu.h	/^outw (uint16_t val, uint16_t port)$/;"	f
overlaps	src/legion_runtime/arrays.h	/^      bool overlaps(const Rect<DIM>& other) const$/;"	f	class:LegionRuntime::Arrays::Rect
overlaps	src/legion_runtime/region_tree.cc	/^    bool FieldState::overlaps(const FieldState &rhs) const$/;"	f	class:LegionRuntime::HighLevel::FieldState
overlaps_with	src/legion_runtime/lowlevel.cc	/^    ElementMask::OverlapResult ElementMask::overlaps_with(const ElementMask& other,$/;"	f	class:LegionRuntime::LowLevel::ElementMask
overlaps_with	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::OverlapResult ElementMask::overlaps_with(const ElementMask &other,$/;"	f	class:LegionRuntime::LowLevel::ElementMask
own_intersections	src/legion_runtime/region_tree.h	/^        bool own_intersections;$/;"	m	struct:LegionRuntime::HighLevel::IndexTreeNode::IntersectInfo
own_local	src/legion_runtime/lowlevel_impl.h	/^      bool own_local;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
owned_tasks	src/legion_runtime/runtime.h	/^        unsigned owned_tasks;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::ContextState
owner	src/legion_runtime/garbage_collection.h	/^      const bool owner;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
owner	src/legion_runtime/legion_ops.h	/^      MustEpochOp *const owner;$/;"	m	class:LegionRuntime::HighLevel::MustEpochDistributor
owner	src/legion_runtime/legion_ops.h	/^      MustEpochOp *const owner;$/;"	m	class:LegionRuntime::HighLevel::MustEpochMapper
owner	src/legion_runtime/legion_ops.h	/^      MustEpochOp *const owner;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
owner	src/legion_runtime/legion_tasks.h	/^      MultiTask *const owner;$/;"	m	class:LegionRuntime::HighLevel::DeferredSlicer
owner	src/legion_runtime/lowlevel_impl.h	/^      int owner;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
owner	src/legion_runtime/lowlevel_impl.h	/^      unsigned owner; \/\/ which node owns the lock$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
owner	src/legion_runtime/lowlevel_impl.h	/^      unsigned owner;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
owner	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
owner	src/legion_runtime/region_tree.h	/^      FieldSpaceNode *const owner;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
owner_addr	src/legion_runtime/garbage_collection.h	/^      AddressSpaceID owner_addr;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
owner_did	src/legion_runtime/garbage_collection.h	/^      DistributedID owner_did;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
owner_id	include/acpi/actbl.h	/^	acpi_owner_id owner_id;$/;"	m	struct:acpi_table_desc
owner_id	src/acpi/acpica/aclocal.h	/^	acpi_owner_id owner_id;	\/* Node creator *\/$/;"	m	struct:acpi_namespace_node
owner_id	src/acpi/acpica/aclocal.h	/^	acpi_owner_id owner_id;$/;"	m	struct:acpi_gpe_walk_info
owner_space	src/legion_runtime/garbage_collection.h	/^      const AddressSpaceID owner_space;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
p	include/lua/lobject.h	/^	  void *p;         \/* light userdata *\/$/;"	m	union:Value
p	include/lua/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	include/lua/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	include/lua/lstate.h	/^  struct Proto p;$/;"	m	union:GCObject	typeref:struct:GCObject::Proto
p	include/lua/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p	include/nautilus/idt.h	/^            uint8_t  p     : 1;$/;"	m	struct:gate_desc64::__anon61::__anon63
p	include/nautilus/paging.h	/^            uint8_t p       : 1;$/;"	m	struct:nk_pf_error::__anon56::__anon57
p	src/legion_runtime/arrays.h	/^      Point<DIM> p;$/;"	m	class:LegionRuntime::Arrays::GenericPointInRectIterator
p	src/legion_runtime/legion_utilities.h	/^      BITMASK p[LOG2MAX];$/;"	m	class:LegionRuntime::HighLevel::BitPermutation
p	src/legion_runtime/lowlevel.h	/^	DomainPoint p;$/;"	m	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
p	src/legion_runtime/lowlevel.h	/^	Processor p;$/;"	m	struct:LegionRuntime::LowLevel::Machine::ProcessorMemoryAffinity
p	src/test/hpcg/cg-data.h	/^    Vector p;$/;"	m	struct:lgncg::CGData
p_cs_precedes	include/lua/llocale.h	/^    char p_cs_precedes;       \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv
p_cs_precedes	src/nautilus/libccompat.c	/^    char p_cs_precedes;       \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
p_ctrl	include/nautilus/sfi.h	/^    uint32_t p_ctrl; \/\/ value to write to PERF_CTL to enter this P-state$/;"	m	struct:sfi_freq_entry
p_end	src/lua_src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
p_sep_by_space	include/lua/llocale.h	/^    char p_sep_by_space;      \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv
p_sep_by_space	src/nautilus/libccompat.c	/^    char p_sep_by_space;      \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
p_sign_posn	include/lua/llocale.h	/^    char p_sign_posn;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv
p_sign_posn	src/nautilus/libccompat.c	/^    char p_sign_posn;         \/\/CHAR_MAX     LC_MONETARY$/;"	m	struct:lconv	file:
pa_to_va	include/nautilus/paging.h	/^pa_to_va (addr_t paddr)$/;"	f
pack	src/lua_src/ltablib.c	/^static int pack (lua_State *L) {$/;"	f	file:
pack_arguments	src/legion_runtime/runtime.cc	/^    void ArgumentMap::Impl::pack_arguments(Serializer &rez, const Domain &dom)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
pack_base_task	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::pack_base_task(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_composite_node	src/legion_runtime/region_tree.cc	/^    void CompositeNode::pack_composite_node(Serializer &rez, bool send_back, $/;"	f	class:LegionRuntime::HighLevel::CompositeNode
pack_composite_view	src/legion_runtime/region_tree.cc	/^    void CompositeView::pack_composite_view(Serializer &rez, bool send_back,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
pack_field_tree	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::pack_field_tree(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
pack_grant	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_grant(const Grant &grant, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_grant	src/legion_runtime/runtime.cc	/^    void Grant::Impl::pack_grant(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
pack_hex_byte	src/nautilus/printk.c	/^static inline char *pack_hex_byte(char *buf, uint8_t byte)$/;"	f	file:
pack_index_space_requirement	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_index_space_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_layout_description	src/legion_runtime/region_tree.cc	/^    void LayoutDescription::pack_layout_description(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
pack_manager	src/legion_runtime/region_tree.cc	/^    void InstanceManager::pack_manager(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
pack_manager	src/legion_runtime/region_tree.cc	/^    void ReductionManager::pack_manager(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
pack_materialized_view	src/legion_runtime/region_tree.cc	/^    void MaterializedView::pack_materialized_view(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
pack_multi_task	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::pack_multi_task(Serializer &rez, bool pack_args, $/;"	f	class:LegionRuntime::HighLevel::MultiTask
pack_parent_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::pack_parent_task(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
pack_phase_barrier	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_phase_barrier($/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_point	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_point(Serializer &rez, const DomainPoint &p)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_privilege_state	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::pack_privilege_state(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_reduction_view	src/legion_runtime/region_tree.cc	/^    void ReductionView::pack_reduction_view(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
pack_reference	src/legion_runtime/region_tree.cc	/^    void InstanceRef::pack_reference(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
pack_region_requirement	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::pack_region_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
pack_remote_commit	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::pack_remote_commit(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_remote_commit	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::pack_remote_commit(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_remote_complete	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::pack_remote_complete(Serializer &rez) $/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_remote_complete	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::pack_remote_complete(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_remote_mapped	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::pack_remote_mapped(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_remote_mapped	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::pack_remote_mapped(Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_send_back_state	src/legion_runtime/region_tree.cc	/^    bool RegionTreeNode::pack_send_back_state(ContextID ctx, Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
pack_send_state	src/legion_runtime/region_tree.cc	/^    bool RegionTreeNode::pack_send_state(ContextID ctx, Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
pack_single_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::pack_single_task(Serializer &rez, AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
pack_task	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
pack_task	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
pack_task	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::PointTask
pack_task	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
pack_task	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::pack_task(Serializer &rez, Processor target)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
package	include/acpi/actypes.h	/^	} package;$/;"	m	union:acpi_object	typeref:struct:acpi_object::__anon23
package-dir	Makefile	/^package-dir	:= $(srctree)\/scripts\/package$/;"	m
package_end	src/acpi/acpica/aclocal.h	/^	u8 *package_end;	\/* End of if\/while block *\/$/;"	m	struct:acpi_control_state
package_message	src/legion_runtime/runtime.cc	/^    void MessageManager::package_message(Serializer &rez, MessageKind k,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
packaged_messages	src/legion_runtime/runtime.h	/^      unsigned packaged_messages;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
pad	include/nautilus/barrier.h	/^    uint8_t pad[52];$/;"	m	struct:nk_barrier
pae	include/nautilus/cpuid.h	/^            uint8_t pae         : 1; \/\/ physical-address extensions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
pae	include/nautilus/cpuid.h	/^            uint8_t pae      : 1; \/\/ physical address extension$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
page	scripts/kconfig/lxdialog/textbox.c	/^static char *buf, *page;$/;"	v	file:
page_length	scripts/kconfig/lxdialog/textbox.c	/^static int begin_reached = 1, end_reached, page_length;$/;"	v	file:
page_map	include/nautilus/mm.h	/^    ulong_t * page_map;$/;"	m	struct:boot_mem_info
page_map	include/nautilus/paging.h	/^    ulong_t * page_map;$/;"	m	struct:nk_mem_info
page_size_t	include/nautilus/paging.h	/^} page_size_t;$/;"	t	typeref:enum:__anon59
paging_longmode_setup	src/arch/x64/asm/boot.S	/^paging_longmode_setup:$/;"	l
paging_setup	src/arch/k1om/asm/boot.S	/^paging_setup:$/;"	l
paintCell	scripts/kconfig/qconf.cc	/^void ConfigItem::paintCell(QPainter* p, const QColorGroup& cg, int column, int width, int align)$/;"	f	class:ConfigItem
pairsmeta	src/lua_src/lbaselib.c	/^static int pairsmeta (lua_State *L, const char *method, int iszero,$/;"	f	file:
panic	include/lua/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
panic	include/nautilus/nautilus.h	42;"	d
panic	src/nautilus/printk.c	/^panic (const char * fmt, ...)$/;"	f
panic_str	src/asm/thread_lowlevel.S	/^panic_str:$/;"	l
param_count	include/acpi/actypes.h	/^	uint8_t param_count;		\/* If a method, required parameter count *\/$/;"	m	struct:acpi_device_info
param_count	src/acpi/acpica/aclocal.h	/^	u8 param_count;$/;"	m	struct:acpi_name_info
parameter	include/acpi/actbl2.h	/^	uint16_t parameter;$/;"	m	struct:acpi_asf_rmcp
parent	include/dev/hpet.h	/^    struct hpet_dev * parent;$/;"	m	struct:hpet_comparator	typeref:struct:hpet_comparator::hpet_dev
parent	include/nautilus/hashtable.h	/^    struct nk_hash_entry * parent;$/;"	m	struct:nk_hashtable_iter	typeref:struct:nk_hashtable_iter::nk_hash_entry
parent	include/nautilus/thread.h	/^    struct nk_thread * parent;$/;"	m	struct:nk_thread	typeref:struct:nk_thread::nk_thread
parent	scripts/kconfig/expr.h	/^	struct file *parent;$/;"	m	struct:file	typeref:struct:file::file
parent	scripts/kconfig/expr.h	/^	struct menu *parent;$/;"	m	struct:menu	typeref:struct:menu::menu
parent	scripts/kconfig/lex.zconf.c	/^        struct buffer *parent;$/;"	m	struct:buffer	typeref:struct:buffer::buffer	file:
parent	scripts/kconfig/qconf.h	/^	ConfigView* parent(void) const$/;"	f	class:ConfigLineEdit
parent	scripts/kconfig/qconf.h	/^	ConfigView* parent(void) const$/;"	f	class:ConfigList
parent	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *parent;	\/* Parent node *\/$/;"	m	struct:acpi_namespace_node	typeref:struct:acpi_namespace_node::acpi_namespace_node
parent	src/legion_runtime/legion.h	/^      Context parent;$/;"	m	class:LegionRuntime::HighLevel::FieldAllocator
parent	src/legion_runtime/legion.h	/^      IndexSpace    parent;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
parent	src/legion_runtime/legion.h	/^      LogicalRegion parent; \/**< parent region to derive privileges from*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
parent	src/legion_runtime/legion_logging.h	/^        IndexPartition parent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSubspace
parent	src/legion_runtime/legion_logging.h	/^        IndexSpace parent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexPartition
parent	src/legion_runtime/lowlevel_impl.h	/^	IndexSpace parent;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
parent	src/legion_runtime/region_tree.h	/^        IndexPartNode *parent;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
parent	src/legion_runtime/region_tree.h	/^        IndexSpaceNode *parent;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
parent	src/legion_runtime/region_tree.h	/^      CompositeNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
parent	src/legion_runtime/region_tree.h	/^      CompositeView *const parent;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
parent	src/legion_runtime/region_tree.h	/^      IndexPartNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
parent	src/legion_runtime/region_tree.h	/^      IndexSpaceNode *parent;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
parent	src/legion_runtime/region_tree.h	/^      MaterializedView *const parent;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
parent	src/legion_runtime/region_tree.h	/^      PartitionNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
parent	src/legion_runtime/region_tree.h	/^      RegionNode *const parent;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
parent	src/legion_runtime/shared_lowlevel.cc	/^        IndexSpace::Impl *parent;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
parent	src/nautilus/scheduler.c	1206;"	d	file:
parent	src/nautilus/scheduler.c	1210;"	d	file:
parent_condvar	src/legion_runtime/lowlevel_gpu.cc	/^      gasnett_cond_t parent_condvar, worker_condvar;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
parent_context	src/legion_runtime/legion_logging.h	/^        UniqueID parent_context;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
parent_ctx	src/legion_runtime/legion_ops.h	/^      SingleTask *parent_ctx;$/;"	m	class:LegionRuntime::HighLevel::Operation
parent_id	src/legion_runtime/legion_profiling.h	/^        UniqueID parent_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
parent_impl	src/legion_runtime/shared_lowlevel.cc	/^        RegionInstance::Impl *parent_impl; \/\/ for lists$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
parent_index	src/legion_runtime/legion_ops.h	/^      unsigned parent_index;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
parent_inst	src/legion_runtime/lowlevel.cc	/^      RegionInstance parent_inst;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceArgs	file:
parent_inst	src/legion_runtime/lowlevel_impl.h	/^	RegionInstance parent_inst;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
parent_method	src/acpi/acpica/aclocal.h	/^	union acpi_parse_object *parent_method;$/;"	m	struct:acpi_parse_obj_asl	typeref:union:acpi_parse_obj_asl::acpi_parse_object
parent_package	src/acpi/acpica/aclocal.h	/^	union acpi_operand_object *parent_package;$/;"	m	struct:acpi_predefined_data	typeref:union:acpi_predefined_data::acpi_operand_object
parent_region	src/legion_runtime/legion.h	/^      LogicalRegion                     parent_region;$/;"	m	class:LegionRuntime::HighLevel::Acquire
parent_region	src/legion_runtime/legion.h	/^      LogicalRegion                     parent_region;$/;"	m	class:LegionRuntime::HighLevel::Release
parent_region	src/legion_runtime/legion.h	/^      LogicalRegion                   parent_region;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
parent_region	src/legion_runtime/legion.h	/^      LogicalRegion                   parent_region;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
parent_register	src/acpi/acpica/aclocal.h	/^	u8 parent_register;$/;"	m	struct:acpi_bit_register_info
parent_task	src/legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Acquire
parent_task	src/legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Copy
parent_task	src/legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Inline
parent_task	src/legion_runtime/legion.h	/^      Task                              *parent_task;$/;"	m	class:LegionRuntime::HighLevel::Release
parents	scripts/kconfig/gconf.c	/^static GtkTreeIter *parents[256];$/;"	v	file:
parity	include/acpi/actbl2.h	/^	uint8_t parity;$/;"	m	struct:acpi_table_spcr
parlist	src/lua_src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parse_args	src/acpi/acpica/aclocal.h	/^	u32 parse_args;		\/* Grammar\/Parse time arguments *\/$/;"	m	struct:acpi_opcode_info
parse_config_file	scripts/basic/fixdep.c	/^void parse_config_file(char *map, size_t len)$/;"	f
parse_dep_file	scripts/basic/fixdep.c	/^void parse_dep_file(void *map, size_t len)$/;"	f
parse_entry	src/nautilus/sfi.c	/^parse_entry (struct sfi_common_hdr * entry, struct sys_info * sys)$/;"	f	file:
parse_file	scripts/basic/docproc.c	/^void parse_file(FILE *infile)$/;"	f
parse_hpet_tbl	src/dev/hpet.c	/^parse_hpet_tbl (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
parse_input_args	src/test/circuit.cc	/^void parse_input_args(char **argv, int argc, int &num_loops, int &num_pieces,$/;"	f
parse_mp_table	src/arch/x64/smp.c	/^parse_mp_table (struct sys_info * sys, struct mp_table * mp)$/;"	f	file:
parse_mptable_bus	src/arch/x64/smp.c	/^parse_mptable_bus (struct sys_info * sys, struct mp_table_entry_bus * bus)$/;"	f	file:
parse_mptable_cpu	src/arch/x64/smp.c	/^parse_mptable_cpu (struct sys_info * sys, struct mp_table_entry_cpu * cpu)$/;"	f	file:
parse_mptable_ioapic	src/arch/x64/smp.c	/^parse_mptable_ioapic (struct sys_info * sys, struct mp_table_entry_ioapic * ioapic)$/;"	f	file:
parse_mptable_ioint	src/arch/x64/smp.c	/^parse_mptable_ioint (struct sys_info * sys, struct mp_table_entry_ioint * ioint)$/;"	f	file:
parse_mptable_lint	src/arch/x64/smp.c	/^parse_mptable_lint (struct sys_info * sys, struct mp_table_entry_lint * lint)$/;"	f	file:
parse_node_announce_data	src/legion_runtime/lowlevel.cc	/^    void Machine::parse_node_announce_data(const void *args, size_t arglen,$/;"	f	class:LegionRuntime::LowLevel::Machine
parse_node_announce_data	src/legion_runtime/shared_lowlevel.cc	/^    void Machine::parse_node_announce_data(const void *args, size_t arglen,$/;"	f	class:LegionRuntime::LowLevel::Machine
parse_op_name	src/acpi/acpica/aclocal.h	/^	char parse_op_name[ACPI_MAX_PARSEOP_NAME];$/;"	m	struct:acpi_parse_obj_asl
parse_opcode	src/acpi/acpica/aclocal.h	/^	u16 parse_opcode;$/;"	m	struct:acpi_parse_obj_asl
parse_scope	src/acpi/acpica/aclocal.h	/^	struct acpi_pscope_state parse_scope;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_pscope_state
parse_sfi_cpu	src/nautilus/sfi.c	/^parse_sfi_cpu (struct sfi_cpu_tbl * tbl, struct sys_info * sys)$/;"	f	file:
parse_sfi_ioapic	src/nautilus/sfi.c	/^parse_sfi_ioapic (struct sfi_ioapic_tbl * tbl, struct sys_info * sys)$/;"	f	file:
parse_sfi_mmap	src/nautilus/sfi.c	/^parse_sfi_mmap (struct sfi_mmap_tbl * tbl, struct nk_mem_info * sysmem)$/;"	f	file:
part	include/nautilus/multiboot2.h	/^  multiboot_uint32_t part;$/;"	m	struct:multiboot_tag_bootdev
part_nodes	src/legion_runtime/region_tree.h	/^      std::map<LogicalPartition,PartitionNode*> part_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
partial	src/legion_runtime/runtime.h	/^      bool partial;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
partial_field	src/legion_runtime/lowlevel_dma.cc	/^      std::vector<bool> partial_field;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
partial_remote_writes	src/legion_runtime/lowlevel.cc	/^    static PartialWriteMap partial_remote_writes;$/;"	m	namespace:LegionRuntime::LowLevel	file:
partial_remote_writes_lock	src/legion_runtime/lowlevel.cc	/^    static gasnet_hsl_t partial_remote_writes_lock = GASNET_HSL_INITIALIZER;$/;"	m	namespace:LegionRuntime::LowLevel	file:
participant_count	src/legion_runtime/legion.h	/^      unsigned participant_count(void) const { return participants; }$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
participants	src/legion_runtime/legion.h	/^      unsigned participants;$/;"	m	class:LegionRuntime::HighLevel::PhaseBarrier
partition	src/legion_runtime/legion.h	/^      LogicalPartition partition; \/**< mutually exclusive with region*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
partition	src/test/hpcg/cg-data.h	/^    partition(int64_t nParts,$/;"	f	struct:lgncg::CGData
partition	src/test/hpcg/mg-data.h	/^    partition(int64_t nParts,$/;"	f	struct:lgncg::MGData
partition	src/test/hpcg/sparsemat.h	/^    partition(const Geometry &geom,$/;"	f	struct:lgncg::SparseMatrix
partition	src/test/hpcg/vector.h	/^    partition(int64_t nParts,$/;"	f	struct:lgncg::Vector
pat	include/nautilus/cpuid.h	/^            uint8_t pat         : 1; \/\/ page attribute table$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
pat	include/nautilus/cpuid.h	/^            uint8_t pat      : 1; \/\/ page attribute table$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
patchlistaux	src/lua_src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	src/lua_src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
path	src/acpi/acpica/aclocal.h	/^	ACPI_PARSE_COMMON u8 *path;$/;"	m	struct:acpi_parse_obj_named
path	src/legion_runtime/region_tree.h	/^      RegionTreePath &path;$/;"	m	class:LegionRuntime::HighLevel::PathTraverser
path	src/legion_runtime/region_tree.h	/^      std::vector<int> path;$/;"	m	class:LegionRuntime::HighLevel::RegionTreePath
path_stat	src/nautilus/fs.c	/^static int path_stat(struct nk_fs *fs, char *path, struct nk_fs_stat *st) $/;"	f	file:
pathname	src/acpi/acpica/aclocal.h	/^	char *pathname;$/;"	m	struct:acpi_predefined_data
pathname	src/acpi/acpica/aclocal.h	/^	char pathname[128];$/;"	m	struct:acpi_db_method_info
payload	src/legion_runtime/activemsg.cc	/^  void *payload;$/;"	m	struct:OutgoingMessage	file:
payload_count	src/legion_runtime/activemsg.cc	/^static int payload_count = 0;$/;"	v	file:
payload_mode	src/legion_runtime/activemsg.cc	/^  int payload_mode;$/;"	m	struct:OutgoingMessage	file:
payload_num	src/legion_runtime/activemsg.cc	/^  int payload_num;$/;"	m	struct:OutgoingMessage	file:
payload_size	src/legion_runtime/activemsg.cc	/^  size_t payload_size;$/;"	m	struct:OutgoingMessage	file:
payload_src	src/legion_runtime/activemsg.cc	/^  PayloadSource *payload_src;$/;"	m	struct:OutgoingMessage	file:
pbe	include/nautilus/cpuid.h	/^            uint8_t pbe      : 1; \/\/pending break enable$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
pblk_address	include/acpi/actypes.h	/^		acpi_io_address pblk_address;$/;"	m	struct:acpi_object::__anon25
pblk_length	include/acpi/actypes.h	/^		uint32_t pblk_length;$/;"	m	struct:acpi_object::__anon25
pc	include/lua/lparser.h	/^  int pc;  \/* next position to code (equivalent to `ncode') *\/$/;"	m	struct:FuncState
pc	include/lua/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc
pcRel	include/lua/ldebug.h	14;"	d
pc_int_handler	src/dev/apic.c	/^pc_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
pc_interrupt	include/acpi/actbl2.h	/^	uint8_t pc_interrupt;$/;"	m	struct:acpi_table_spcr
pcallcont	src/lua_src/lbaselib.c	/^static int pcallcont (lua_State *L) {$/;"	f	file:
pci	include/dev/pci.h	/^    struct pci_info * pci;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_info
pci	include/nautilus/nautilus.h	/^    struct pci_info * pci;$/;"	m	struct:sys_info	typeref:struct:sys_info::pci_info
pci_add_bus	src/dev/pci.c	/^pci_add_bus (struct pci_bus * bus, struct pci_info * pci)$/;"	f	file:
pci_add_dev_to_bus	src/dev/pci.c	/^pci_add_dev_to_bus (struct pci_dev * dev, $/;"	f	file:
pci_address	include/acpi/actbl2.h	/^	uint16_t pci_address;$/;"	m	struct:acpi_ibft_nic
pci_bus	include/acpi/actbl2.h	/^	uint8_t pci_bus;		\/* PCI Bus number *\/$/;"	m	struct:acpi_table_wdat
pci_bus	include/acpi/actbl2.h	/^	uint8_t pci_bus;		\/* PCI Bus number *\/$/;"	m	struct:acpi_table_wdrt
pci_bus	include/acpi/actbl2.h	/^	uint8_t pci_bus;$/;"	m	struct:acpi_table_mchi
pci_bus	include/acpi/actbl2.h	/^	uint8_t pci_bus;$/;"	m	struct:acpi_table_spcr
pci_bus	include/acpi/actbl2.h	/^	uint8_t pci_bus;$/;"	m	struct:acpi_table_spmi
pci_bus	include/dev/pci.h	/^struct pci_bus {$/;"	s
pci_bus_create	src/dev/pci.c	/^pci_bus_create (uint32_t num, struct pci_info * pci)$/;"	f	file:
pci_bus_num	include/dev/pci.h	/^            uint8_t  pci_bus_num;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
pci_bus_probe	src/dev/pci.c	/^pci_bus_probe (struct pci_info * pci, uint8_t bus)$/;"	f	file:
pci_bus_scan	src/dev/pci.c	/^pci_bus_scan (struct pci_info * pci)$/;"	f	file:
pci_cfg_readl	src/dev/pci.c	/^pci_cfg_readl (uint8_t bus, $/;"	f
pci_cfg_readw	src/dev/pci.c	/^pci_cfg_readw (uint8_t bus, $/;"	f
pci_cfg_space	include/dev/pci.h	/^struct pci_cfg_space {$/;"	s
pci_cfg_writel	src/dev/pci.c	/^pci_cfg_writel (uint8_t bus, $/;"	f
pci_cfg_writew	src/dev/pci.c	/^pci_cfg_writew (uint8_t bus, $/;"	f
pci_copy_cfg_space	src/dev/pci.c	/^pci_copy_cfg_space(struct pci_dev *dev, struct pci_bus *bus)$/;"	f	file:
pci_dev	include/dev/pci.h	/^struct pci_dev {$/;"	s
pci_dev	include/dev/virtio_pci.h	/^  struct pci_dev *pci_dev;$/;"	m	struct:virtio_pci_dev	typeref:struct:virtio_pci_dev::pci_dev
pci_dev_create	src/dev/pci.c	/^pci_dev_create (uint32_t num, struct pci_bus * bus)$/;"	f	file:
pci_dev_probe	src/dev/pci.c	/^pci_dev_probe (struct pci_bus * bus, uint8_t dev)$/;"	f	file:
pci_dev_valid	src/dev/pci.c	/^pci_dev_valid (uint8_t bus, uint8_t slot)$/;"	f	file:
pci_device	include/acpi/actbl2.h	/^	uint8_t pci_device;		\/* PCI Device number *\/$/;"	m	struct:acpi_table_wdat
pci_device	include/acpi/actbl2.h	/^	uint8_t pci_device;		\/* PCI Device number *\/$/;"	m	struct:acpi_table_wdrt
pci_device	include/acpi/actbl2.h	/^	uint8_t pci_device;$/;"	m	struct:acpi_table_mchi
pci_device	include/acpi/actbl2.h	/^	uint8_t pci_device;$/;"	m	struct:acpi_table_spcr
pci_device	include/acpi/actbl2.h	/^	uint8_t pci_device;$/;"	m	struct:acpi_table_spmi
pci_device_flag	include/acpi/actbl2.h	/^	uint8_t pci_device_flag;$/;"	m	struct:acpi_table_mchi
pci_device_flag	include/acpi/actbl2.h	/^	uint8_t pci_device_flag;$/;"	m	struct:acpi_table_spmi
pci_device_id	include/acpi/actbl2.h	/^	uint16_t pci_device_id;$/;"	m	struct:acpi_table_spcr
pci_device_id	include/acpi/actbl2.h	/^	uint16_t pci_device_id;$/;"	m	struct:acpi_table_wdrt
pci_flags	include/acpi/actbl2.h	/^	uint32_t pci_flags;$/;"	m	struct:acpi_table_spcr
pci_fun_probe	src/dev/pci.c	/^pci_fun_probe (struct pci_info * pci, uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_function	include/acpi/actbl2.h	/^	uint8_t pci_function;	\/* PCI Function number *\/$/;"	m	struct:acpi_table_wdat
pci_function	include/acpi/actbl2.h	/^	uint8_t pci_function;	\/* PCI Function number *\/$/;"	m	struct:acpi_table_wdrt
pci_function	include/acpi/actbl2.h	/^	uint8_t pci_function;$/;"	m	struct:acpi_table_mchi
pci_function	include/acpi/actbl2.h	/^	uint8_t pci_function;$/;"	m	struct:acpi_table_spcr
pci_function	include/acpi/actbl2.h	/^	uint8_t pci_function;$/;"	m	struct:acpi_table_spmi
pci_get_base_class	src/dev/pci.c	/^pci_get_base_class (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_dev_id	src/dev/pci.c	/^pci_get_dev_id (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_hdr_type	src/dev/pci.c	/^pci_get_hdr_type (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_rev_id	src/dev/pci.c	/^pci_get_rev_id (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_sec_bus	src/dev/pci.c	/^pci_get_sec_bus (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_sub_class	src/dev/pci.c	/^pci_get_sub_class (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_get_vendor_id	src/dev/pci.c	/^pci_get_vendor_id (uint8_t bus, uint8_t dev, uint8_t fun)$/;"	f	file:
pci_info	include/dev/pci.h	/^struct pci_info {$/;"	s
pci_init	src/dev/pci.c	/^pci_init (struct naut_info * naut)$/;"	f
pci_intr	include/dev/virtio_pci.h	/^  uint8_t   pci_intr;  \/\/ number on bus$/;"	m	struct:virtio_pci_dev
pci_segment	include/acpi/actbl2.h	/^	uint16_t pci_segment;	\/* PCI Segment number *\/$/;"	m	struct:acpi_table_wdat
pci_segment	include/acpi/actbl2.h	/^	uint16_t pci_segment;	\/* PCI segment group number *\/$/;"	m	struct:acpi_mcfg_allocation
pci_segment	include/acpi/actbl2.h	/^	uint8_t pci_segment;		\/* PCI Segment number *\/$/;"	m	struct:acpi_table_wdrt
pci_segment	include/acpi/actbl2.h	/^	uint8_t pci_segment;$/;"	m	struct:acpi_table_mchi
pci_segment	include/acpi/actbl2.h	/^	uint8_t pci_segment;$/;"	m	struct:acpi_table_spcr
pci_segment	include/acpi/actbl2.h	/^	uint8_t pci_segment;$/;"	m	struct:acpi_table_spmi
pci_segment_group	include/acpi/actbl2.h	/^	uint16_t pci_segment_group;$/;"	m	struct:acpi_ivrs_hardware
pci_to_pci_bridge_cfg	include/dev/pci.h	/^        } __packed pci_to_pci_bridge_cfg;$/;"	m	union:pci_cfg_space::__anon66	typeref:struct:pci_cfg_space::__anon66::__anon68
pci_vendor_id	include/acpi/actbl2.h	/^	uint16_t pci_vendor_id;$/;"	m	struct:acpi_table_spcr
pci_vendor_id	include/acpi/actbl2.h	/^	uint16_t pci_vendor_id;$/;"	m	struct:acpi_table_wddt
pci_vendor_id	include/acpi/actbl2.h	/^	uint16_t pci_vendor_id;$/;"	m	struct:acpi_table_wdrt
pcid	include/nautilus/cpuid.h	/^            uint8_t pcid     : 1; \/\/ process-context identifiers$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
pclmuldq	include/nautilus/cpuid.h	/^            uint8_t pclmuldq : 1; \/\/ PCLMULQDQ instruction$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
pdcm	include/nautilus/cpuid.h	/^            uint8_t pdcm     : 1; \/\/ perfmon and debug capability$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
pde_t	include/nautilus/paging.h	/^typedef ulong_t pde_t;$/;"	t
pdpte_t	include/nautilus/paging.h	/^typedef ulong_t pdpte_t;$/;"	t
peek_next	src/legion_runtime/lowlevel.cc	/^    bool ElementMask::Enumerator::peek_next(int &position, int &length)$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
peer	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *peer;	\/* First peer *\/$/;"	m	struct:acpi_namespace_node	typeref:struct:acpi_namespace_node::acpi_namespace_node
peer	src/legion_runtime/activemsg.cc	/^  gasnet_node_t peer;$/;"	m	class:ActiveMessageEndpoint	file:
peer_gpus	src/legion_runtime/lowlevel_gpu.h	/^      std::set<GPUProcessor*> peer_gpus;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor
pending	src/legion_runtime/lowlevel.cc	/^        std::map<Barrier::timestamp_t, int> pending;$/;"	m	struct:LegionRuntime::LowLevel::Event::Impl::PendingUpdates::PerNodeUpdates	file:
pending	src/nautilus/scheduler.c	/^    rt_priority_queue pending;     \/\/ Periodic and sporadic threads that have not yet arrived$/;"	m	struct:nk_sched_percpu_state	file:
pending_allocations	src/legion_runtime/activemsg.cc	/^  std::queue<OutgoingMessage *> pending_allocations;$/;"	m	class:SrcDataPool	file:
pending_copies	src/legion_runtime/shared_lowlevel.cc	/^        std::list<CopyOperation2> pending_copies;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
pending_gc_epochs	src/legion_runtime/runtime.h	/^                      RUNTIME_GC_EPOCH_ALLOC>::set pending_gc_epochs;$/;"	m	class:LegionRuntime::HighLevel::Runtime
pending_shutdown	src/legion_runtime/runtime.h	/^      bool pending_shutdown;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
pending_subtasks	src/legion_runtime/legion_tasks.h	/^      unsigned pending_subtasks;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
pending_tasks	src/legion_runtime/lowlevel.cc	/^      std::list<Task *> pending_tasks;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
pending_updates	src/legion_runtime/lowlevel_impl.h	/^      std::map<Event::gen_t, PendingUpdates *> pending_updates;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
pending_updates	src/legion_runtime/region_tree.h	/^                     PENDING_UPDATES_ALLOC>::map pending_updates;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
per_cpu_get	include/nautilus/percpu.h	66;"	d
per_cpu_put	include/nautilus/percpu.h	100;"	d
perf_event_t	include/nautilus/pmc.h	/^} perf_event_t;$/;"	t	typeref:struct:pmc_event
perf_report	src/nautilus/pmc.c	/^perf_report (void)$/;"	f
perf_slot	include/nautilus/pmc.h	/^typedef struct perf_slot {$/;"	s
perf_slot_t	include/nautilus/pmc.h	/^} perf_slot_t;$/;"	t	typeref:struct:perf_slot
perf_trace_lock	src/legion_runtime/region_tree.h	/^      Reservation perf_trace_lock;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
perf_trace_tolerance	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned long long Runtime::perf_trace_tolerance = 10000; $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
perf_trace_tolerance	src/legion_runtime/runtime.h	/^      static unsigned long long perf_trace_tolerance;$/;"	m	class:LegionRuntime::HighLevel::Runtime
perform_close_operations	src/legion_runtime/region_tree.cc	/^    bool PremapTraverser::perform_close_operations(RegionTreeNode *node, $/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
perform_close_operations	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::perform_close_operations(LogicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_closing_checks	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::perform_closing_checks($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_composite_across_reduction	src/legion_runtime/region_tree.cc	/^    Event ReductionView::perform_composite_across_reduction($/;"	f	class:LegionRuntime::HighLevel::ReductionView
perform_composite_reduction	src/legion_runtime/region_tree.cc	/^    Event ReductionView::perform_composite_reduction(MaterializedView *target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
perform_copy_operation	src/legion_runtime/region_tree.cc	/^    Event RegionTreeNode::perform_copy_operation(Event precondition,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_copy_operation	src/legion_runtime/shared_lowlevel.cc	/^    void CopyOperation::perform_copy_operation(void)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
perform_copy_operation	src/legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::perform_copy_operation(RegionInstance::Impl *target, const ElementMask &src_mask, const ElementMask &dst_mask)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
perform_dependence_analysis	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::perform_dependence_analysis(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
perform_dependence_checks	src/legion_runtime/region_tree.cc	/^    FieldMask RegionTreeNode::perform_dependence_checks($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
perform_dma	src/legion_runtime/lowlevel_dma.cc	/^    void CopyRequest::perform_dma(void)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
perform_dma	src/legion_runtime/lowlevel_dma.cc	/^    void ReduceRequest::perform_dma(void)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
perform_dma_mask	src/legion_runtime/lowlevel_dma.cc	/^    void CopyRequest::perform_dma_mask(MemPairCopier *mpc)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
perform_dma_rect	src/legion_runtime/lowlevel_dma.cc	/^    void CopyRequest::perform_dma_rect(MemPairCopier *mpc)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
perform_dma_rect	src/legion_runtime/lowlevel_dma.cc	/^    void ReduceRequest::perform_dma_rect(MemPairCopier *mpc)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
perform_dynamic_independence_tests	src/legion_runtime/runtime.cc	/^    bool Runtime::perform_dynamic_independence_tests(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
perform_dynamic_tests	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::perform_dynamic_tests(unsigned num_tests)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
perform_fence_analysis	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::perform_fence_analysis(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
perform_inlining	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
perform_inlining	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::perform_inlining(SingleTask *ctx, InlineFnptr fn) $/;"	f	class:LegionRuntime::HighLevel::IndividualTask
perform_inlining	src/legion_runtime/legion_tasks.cc	/^    void PointTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::PointTask
perform_inlining	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
perform_inlining	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::perform_inlining(SingleTask *ctx, InlineFnptr fn)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
perform_mapping	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
perform_mapping	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
perform_mapping	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::PointTask
perform_mapping	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
perform_mapping	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::perform_mapping(bool mapper_invoked)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
perform_mapping_operations	src/legion_runtime/runtime.cc	/^    void ProcessorManager::perform_mapping_operations(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
perform_one_time_logging	src/legion_runtime/runtime.cc	/^    void Runtime::perform_one_time_logging(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
perform_privilege_checks	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::perform_privilege_checks(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
perform_reduction	src/legion_runtime/region_tree.cc	/^    void ReductionView::perform_reduction(LogicalView *target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
perform_registration	src/legion_runtime/legion_ops.cc	/^    bool Operation::perform_registration(GenerationID our_gen, $/;"	f	class:LegionRuntime::HighLevel::Operation
perform_release	src/legion_runtime/shared_lowlevel.cc	/^    void ReservationImpl::perform_release(std::set<EventImpl*> &to_trigger)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
perform_scheduling	src/legion_runtime/runtime.cc	/^    void ProcessorManager::perform_scheduling(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
perform_scheduling	src/legion_runtime/shared_lowlevel.cc	/^    bool ProcessorImpl::perform_scheduling(bool need_lock)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
perform_slice	src/legion_runtime/legion_tasks.cc	/^    void DeferredSlicer::perform_slice(SliceTask *slice)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
perform_test	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::DynamicPartTest::perform_test(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
perform_test	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::DynamicSpaceTest::perform_test(void) const$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
performance_robustness	include/acpi/acrestyp.h	/^	uint8_t performance_robustness;$/;"	m	struct:acpi_resource_start_dependent
period	include/acpi/actbl2.h	/^	uint16_t period;$/;"	m	struct:acpi_table_wddt
period	include/nautilus/scheduler.h	/^    uint64_t period; \/\/ how frequently it arrives (arrival+period=deadline)$/;"	m	struct:nk_sched_periodic_constraints
periodic	include/nautilus/scheduler.h	/^	struct nk_sched_periodic_constraints     periodic;$/;"	m	union:nk_sched_constraints::__anon53	typeref:struct:nk_sched_constraints::__anon53::nk_sched_periodic_constraints
permanent_mappings	src/legion_runtime/mapping_utilities.h	/^        std::map<MappingKey,MemoizedMapping> permanent_mappings;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
permit_leave_open	src/legion_runtime/region_tree.h	/^      bool permit_leave_open;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
permit_leave_open	src/legion_runtime/region_tree.h	/^      bool permit_leave_open;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
permit_task_steal	src/legion_runtime/alt_mappers.cc	/^    void DebugMapper::permit_task_steal(Processor thief, const std::vector<const Task*> &tasks,$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
permit_task_steal	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::permit_task_steal(Processor thief,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
permute	src/legion_runtime/legion_utilities.h	/^    inline void BitPermutation<BITMASK,LOG2MAX>::permute(BITMASK &mask)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
pernode	src/legion_runtime/lowlevel.cc	/^      std::map<int, PerNodeUpdates *> pernode;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates	file:
persistent	src/legion_runtime/region_tree.h	/^      bool persistent;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
pg1gb	include/nautilus/cpuid.h	/^            uint8_t pg1gb       : 1; \/\/ 1GB page support$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
pge	include/nautilus/cpuid.h	/^            uint8_t pge         : 1; \/\/ page global extensions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
pge	include/nautilus/cpuid.h	/^            uint8_t pge      : 1; \/\/ page global bit$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
phase	include/nautilus/scheduler.h	/^    uint64_t phase;    \/\/ time of arrival relative to admission$/;"	m	struct:nk_sched_sporadic_constraints
phase	include/nautilus/scheduler.h	/^    uint64_t phase;  \/\/ time of first arrival relative to time of admission$/;"	m	struct:nk_sched_periodic_constraints
phase_barrier	src/legion_runtime/legion.h	/^      Barrier phase_barrier;$/;"	m	class:LegionRuntime::HighLevel::PhaseBarrier
phi_card_is_up	src/arch/k1om/xeon_phi.c	/^phi_card_is_up (void)$/;"	f
phi_cons_clear_screen	src/arch/k1om/xeon_phi.c	/^phi_cons_clear_screen (void)$/;"	f
phi_cons_get_cursor	src/arch/k1om/xeon_phi.c	/^phi_cons_get_cursor (uint8_t * x, uint8_t * y)$/;"	f
phi_cons_init	src/arch/k1om/xeon_phi.c	/^phi_cons_init (void)$/;"	f
phi_cons_notify_char_write	src/arch/k1om/xeon_phi.c	/^phi_cons_notify_char_write (uint16_t x, uint16_t y)$/;"	f	file:
phi_cons_notify_line_draw	src/arch/k1om/xeon_phi.c	/^phi_cons_notify_line_draw (unsigned row)$/;"	f
phi_cons_notify_redraw	src/arch/k1om/xeon_phi.c	/^phi_cons_notify_redraw (void)$/;"	f
phi_cons_notify_scrollup	src/arch/k1om/xeon_phi.c	/^phi_cons_notify_scrollup (void)$/;"	f
phi_cons_print	src/arch/k1om/xeon_phi.c	/^phi_cons_print (char *buf)$/;"	f
phi_cons_putchar	src/arch/k1om/xeon_phi.c	/^phi_cons_putchar (char c)$/;"	f
phi_cons_read_reg	src/arch/k1om/xeon_phi.c	/^phi_cons_read_reg(uint32_t off)$/;"	f	file:
phi_cons_scrollup	src/arch/k1om/xeon_phi.c	/^phi_cons_scrollup (void)$/;"	f	file:
phi_cons_set_cursor	src/arch/k1om/xeon_phi.c	/^phi_cons_set_cursor (uint8_t x, uint8_t y)$/;"	f
phi_cons_wait_for_out_cmpl	src/arch/k1om/xeon_phi.c	/^phi_cons_wait_for_out_cmpl (void)$/;"	f	file:
phi_cons_write_fb_and_notify	src/arch/k1om/xeon_phi.c	/^phi_cons_write_fb_and_notify (uint16_t x, uint16_t y, char c, uint8_t color)$/;"	f	file:
phi_cons_write_reg	src/arch/k1om/xeon_phi.c	/^phi_cons_write_reg (uint32_t off, uint32_t val)$/;"	f	file:
phi_sbox_read	include/arch/k1om/xeon_phi.h	/^phi_sbox_read (uint32_t offset)$/;"	f
phi_sbox_write	include/arch/k1om/xeon_phi.h	/^phi_sbox_write (uint32_t offset, uint32_t val)$/;"	f
phi_term	src/arch/k1om/xeon_phi.c	/^} phi_term;$/;"	v	typeref:struct:__anon128	file:
phys_addr	include/nautilus/sfi.h	/^    uint64_t phys_addr;$/;"	m	struct:sfi_m_rtc_entry
phys_addr	include/nautilus/sfi.h	/^    uint64_t phys_addr;$/;"	m	struct:sfi_m_timer_entry
phys_mem_avail	include/nautilus/paging.h	/^    ulong_t   phys_mem_avail;$/;"	m	struct:nk_mem_info
phys_start	include/nautilus/sfi.h	/^    uint64_t phys_start;$/;"	m	struct:efi_mem_desc
physical_instances	src/legion_runtime/legion_tasks.h	/^                                                    physical_instances;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
physical_instances	src/legion_runtime/runtime.h	/^                     MEMORY_INSTANCES_ALLOC>::map physical_instances;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
physical_logging_only	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::physical_logging_only = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
physical_logging_only	src/legion_runtime/runtime.h	/^      static bool physical_logging_only;$/;"	m	class:LegionRuntime::HighLevel::Runtime
physical_only	src/legion_runtime/legion_spy.h	/^      const bool physical_only;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
physical_region	src/legion_runtime/legion.h	/^      PhysicalRegion                  physical_region;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
physical_region	src/legion_runtime/legion.h	/^      PhysicalRegion                  physical_region;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
physical_regions	src/legion_runtime/legion_tasks.h	/^      std::vector<PhysicalRegion> physical_regions;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
physical_state_size	src/legion_runtime/region_tree.h	/^      size_t physical_state_size;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
physical_states	src/legion_runtime/region_tree.h	/^      LegionStack<PhysicalState,MAX_CONTEXTS,DEFAULT_CONTEXTS> physical_states;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeNode
pic_mode_enabled	include/nautilus/nautilus.h	/^    uint8_t pic_mode_enabled;$/;"	m	struct:sys_info
pic_spur_int_handler	src/nautilus/idt.c	/^pic_spur_int_handler (excp_entry_t * excp,$/;"	f	file:
pid	scripts/kconfig/mconf.c	/^pid_t pid;$/;"	v
pin	include/acpi/acrestyp.h	/^	uint32_t pin;$/;"	m	struct:acpi_pci_routing_table
pin_memory	src/legion_runtime/lowlevel.cc	/^      void pin_memory(GPUProcessor *proc)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
pin_name	include/nautilus/sfi.h	/^    char     pin_name[16];$/;"	m	struct:sfi_gpio_entry
pin_num	include/nautilus/sfi.h	/^    uint16_t pin_num;$/;"	m	struct:sfi_gpio_entry
ping	src/test/ipi.c	/^ping (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
pit_irq_handler	src/dev/i8254.c	/^pit_irq_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
pitch	include/dev/vesa.h	/^    uint16_t pitch;            \/\/ number of bytes per horizontal line$/;"	m	struct:vesa_mode_info
pixmap	scripts/kconfig/qconf.h	/^	const QPixmap* pixmap(colIdx idx) const$/;"	f	class:ConfigItem
pk_funcs	src/lua_src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pkg	src/acpi/acpica/aclocal.h	/^	struct acpi_pkg_state pkg;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_pkg_state
pkg_end	src/acpi/acpica/aclocal.h	/^	u8 *pkg_end;		\/* Current package end *\/$/;"	m	struct:acpi_parse_state
pkg_end	src/acpi/acpica/aclocal.h	/^	u8 *pkg_end;		\/* Current package end *\/$/;"	m	struct:acpi_pscope_state
pkg_id	include/nautilus/numa.h	/^    uint32_t pkg_id;  \/\/ package id$/;"	m	struct:nk_cpu_coords
pkg_length	src/acpi/acpica/aclocal.h	/^	u32 pkg_length;$/;"	m	struct:acpi_field_info
pkg_start	src/acpi/acpica/aclocal.h	/^	u8 *pkg_start;		\/* Current package begin *\/$/;"	m	struct:acpi_parse_state
place_node	scripts/kconfig/gconf.c	/^static void place_node(struct menu *menu, char **row)$/;"	f	file:
planes	include/dev/vesa.h	/^    uint8_t planes;$/;"	m	struct:vesa_mode_info
pm1_cnt_len	src/arch/hrt/shutdown.c	/^    uint8_t   pm1_cnt_len;$/;"	m	struct:shutdown_info	file:
pm1_cnt_len	src/arch/x64/shutdown.c	/^    uint8_t   pm1_cnt_len;$/;"	m	struct:shutdown_info	file:
pm1_control_length	include/acpi/actbl.h	/^	uint8_t pm1_control_length;	\/* Byte Length of ports at pm1x_control_block *\/$/;"	m	struct:acpi_table_fadt
pm1_event_length	include/acpi/actbl.h	/^	uint8_t pm1_event_length;	\/* Byte Length of ports at pm1x_event_block *\/$/;"	m	struct:acpi_table_fadt
pm1a_cnt	src/arch/hrt/shutdown.c	/^    uint32_t  pm1a_cnt;$/;"	m	struct:shutdown_info	file:
pm1a_cnt	src/arch/x64/shutdown.c	/^    uint32_t  pm1a_cnt;$/;"	m	struct:shutdown_info	file:
pm1a_control_block	include/acpi/actbl.h	/^	uint32_t pm1a_control_block;	\/* 32-bit Port address of Power Mgt 1a Control Reg Blk *\/$/;"	m	struct:acpi_table_fadt
pm1a_event_block	include/acpi/actbl.h	/^	uint32_t pm1a_event_block;	\/* 32-bit Port address of Power Mgt 1a Event Reg Blk *\/$/;"	m	struct:acpi_table_fadt
pm1b_cnt	src/arch/hrt/shutdown.c	/^    uint32_t  pm1b_cnt;$/;"	m	struct:shutdown_info	file:
pm1b_cnt	src/arch/x64/shutdown.c	/^    uint32_t  pm1b_cnt;$/;"	m	struct:shutdown_info	file:
pm1b_control_block	include/acpi/actbl.h	/^	uint32_t pm1b_control_block;	\/* 32-bit Port address of Power Mgt 1b Control Reg Blk *\/$/;"	m	struct:acpi_table_fadt
pm1b_event_block	include/acpi/actbl.h	/^	uint32_t pm1b_event_block;	\/* 32-bit Port address of Power Mgt 1b Event Reg Blk *\/$/;"	m	struct:acpi_table_fadt
pm2_control_block	include/acpi/actbl.h	/^	uint32_t pm2_control_block;	\/* 32-bit Port address of Power Mgt 2 Control Reg Blk *\/$/;"	m	struct:acpi_table_fadt
pm2_control_length	include/acpi/actbl.h	/^	uint8_t pm2_control_length;	\/* Byte Length of ports at pm2_control_block *\/$/;"	m	struct:acpi_table_fadt
pm_end	include/nautilus/paging.h	/^    addr_t    pm_end;$/;"	m	struct:nk_mem_info
pm_len	include/nautilus/mm.h	/^    ulong_t   pm_len;$/;"	m	struct:boot_mem_info
pm_start	include/nautilus/paging.h	/^    addr_t    pm_start;$/;"	m	struct:nk_mem_info
pm_timer_block	include/acpi/actbl.h	/^	uint32_t pm_timer_block;	\/* 32-bit Port address of Power Mgt Timer Ctrl Reg Blk *\/$/;"	m	struct:acpi_table_fadt
pm_timer_length	include/acpi/actbl.h	/^	uint8_t pm_timer_length;	\/* Byte Length of ports at pm_timer_block *\/$/;"	m	struct:acpi_table_fadt
pmain	src/lua_src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmc_ctl	include/nautilus/pmc.h	/^typedef struct pmc_ctl {$/;"	s
pmc_ctl_t	include/nautilus/pmc.h	/^} __attribute__((packed)) pmc_ctl_t;$/;"	t	typeref:struct:pmc_ctl
pmc_event	include/nautilus/pmc.h	/^typedef struct pmc_event {$/;"	s
pmc_init	src/nautilus/pmc.c	/^pmc_init (void)$/;"	f
pmc_slots	src/nautilus/pmc.c	/^static perf_slot_t  pmc_slots[NUM_PERF_SLOTS];$/;"	v	file:
pml4e_t	include/nautilus/paging.h	/^typedef ulong_t pml4e_t;$/;"	t
point	src/legion_runtime/legion.h	/^      DomainPoint                        point;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
point	src/legion_runtime/legion_logging.h	/^        const DomainPoint &point;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
point	src/legion_runtime/legion_profiling.h	/^        DomainPoint point;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
point_data	src/legion_runtime/lowlevel.h	/^      int point_data[MAX_POINT_DIM];$/;"	m	class:LegionRuntime::LowLevel::DomainPoint
point_id	src/legion_runtime/legion_logging.h	/^        UniqueID point_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
point_task_lock	src/legion_runtime/runtime.h	/^      Reservation point_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
point_termination	src/legion_runtime/legion_tasks.h	/^      UserEvent point_termination;$/;"	m	class:LegionRuntime::HighLevel::PointTask
pointer	include/acpi/actbl.h	/^	struct acpi_table_header *pointer;$/;"	m	struct:acpi_table_desc	typeref:struct:acpi_table_desc::acpi_table_header
pointer	include/acpi/actypes.h	/^		char *pointer;	\/* points to the string value *\/$/;"	m	struct:acpi_object::__anon21
pointer	include/acpi/actypes.h	/^		uint8_t *pointer;	\/* points to the buffer *\/$/;"	m	struct:acpi_object::__anon22
pointer	include/acpi/actypes.h	/^	union acpi_object *pointer;$/;"	m	struct:acpi_object_list	typeref:union:acpi_object_list::acpi_object
pointer	include/acpi/actypes.h	/^	void *pointer;		\/* pointer to buffer *\/$/;"	m	struct:acpi_buffer
pointer	include/nautilus/multiboot2.h	/^  multiboot_uint32_t pointer;$/;"	m	struct:multiboot_tag_efi32
pointer	include/nautilus/multiboot2.h	/^  multiboot_uint64_t pointer;$/;"	m	struct:multiboot_tag_efi64
pointer	src/legion_runtime/legion_allocation.h	/^      typedef T*                pointer;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
pointer	src/nautilus/printk.c	/^static char *pointer(const char *fmt, char *buf, char *end, void *ptr,$/;"	f	file:
points	src/legion_runtime/legion.h	/^      std::set<T> points;$/;"	m	struct:LegionRuntime::HighLevel::ColoredPoints
points	src/legion_runtime/legion_tasks.h	/^      std::deque<PointTask*> points;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
points_left	src/legion_runtime/rectangle_set.h	/^      inline bool points_left(void) const { return (dir == LEFT_DIR); }$/;"	f	class:LegionRuntime::HighLevel::Segment
points_none	src/legion_runtime/rectangle_set.h	/^      inline bool points_none(void) const { return (dir == NONE_DIR); }$/;"	f	class:LegionRuntime::HighLevel::Segment
points_right	src/legion_runtime/rectangle_set.h	/^      inline bool points_right(void) const { return (dir == RIGHT_DIR); }$/;"	f	class:LegionRuntime::HighLevel::Segment
polarity	include/acpi/acrestyp.h	/^	uint8_t polarity;$/;"	m	struct:acpi_resource_extended_irq
polarity	include/acpi/acrestyp.h	/^	uint8_t polarity;$/;"	m	struct:acpi_resource_irq
polarity	include/nautilus/irq.h	/^    int_pol_t  polarity;$/;"	m	struct:nk_int_entry
polarity	src/legion_runtime/lowlevel.h	/^	int polarity;$/;"	m	class:LegionRuntime::LowLevel::ElementMask::Enumerator
poll	src/nautilus/libccompat.c	/^int poll (struct pollfd *fds, nfds_t nfds, int timeout)$/;"	f
poll_interval	include/acpi/actbl1.h	/^	uint32_t poll_interval;$/;"	m	struct:acpi_hest_notify
pollfd	include/nautilus/libccompat.h	/^struct pollfd {$/;"	s
polling_threads	src/legion_runtime/activemsg.cc	/^static pthread_t *polling_threads = 0;$/;"	v	file:
polling_threshold_value	include/acpi/actbl1.h	/^	uint32_t polling_threshold_value;$/;"	m	struct:acpi_hest_notify
polling_threshold_window	include/acpi/actbl1.h	/^	uint32_t polling_threshold_window;$/;"	m	struct:acpi_hest_notify
pollit	xeon_phi/linux_usr/phi_console.c	/^pollit (void * base, $/;"	f	file:
pong	src/test/ipi.c	/^pong (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
pong_bcast	src/test/ipi.c	/^pong_bcast (excp_entry_t * excp, excp_vec_t vec)$/;"	f	file:
pool_order	include/nautilus/buddy.h	/^    ulong_t    pool_order;   \/** size of memory pool = 2^pool_order *\/$/;"	m	struct:buddy_mempool
pop	src/legion_runtime/lowlevel_impl.h	/^    JOBTYPE *JobQueue<JOBTYPE>::pop(void)$/;"	f	class:LegionRuntime::LowLevel::JobQueue
pop_count	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int AVXBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
pop_count	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int AVXTLBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
pop_count	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int BitMask<T,MAX,SHIFT,MASK>::pop_count($/;"	f	class:LegionRuntime::HighLevel::BitMask
pop_count	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int SSEBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
pop_count	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int SSETLBitMask<MAX>::pop_count($/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
pop_count	src/legion_runtime/legion_utilities.h	/^    \/*static*\/ inline int TLBitMask<T,MAX,SHIFT,MASK>::pop_count($/;"	f	class:LegionRuntime::HighLevel::TLBitMask
pop_count	src/legion_runtime/lowlevel.cc	/^    size_t ElementMask::pop_count(bool enabled) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
pop_count	src/legion_runtime/shared_lowlevel.cc	/^    size_t ElementMask::pop_count(bool enabled) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
pop_timer	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::pop_timer(void)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
pop_timer	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::pop_timer(void)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
popcnt	include/nautilus/cpuid.h	/^            uint8_t popcnt   : 1; \/\/ POPCNT instruction$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
popfq	src/asm/thread_lowlevel.S	/^popfq           ;                               \\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r10	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r11	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r12	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r13	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r14	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r15       ;                               \\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r8	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %r9	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %rax       ;$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %rbp   ;               \\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %rbx	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %rcx	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %rdi	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %rdx	;				\\$/;"	l
popq	src/asm/thread_lowlevel.S	/^popq %rsi	;				\\$/;"	l
populatef2c	src/test/hpcg/hpcg-problem.cc	/^Problem::populatef2c(lgncg::SparseMatrix &Af,$/;"	f	class:Problem
populatef2cTID	src/test/hpcg/hpcg-problem.cc	/^int Problem::populatef2cTID   = -1;$/;"	m	class:Problem	file:
populatef2cTID	src/test/hpcg/hpcg-problem.h	/^    static int populatef2cTID;$/;"	m	struct:Problem
populatef2cTask	src/test/hpcg/hpcg-problem.cc	/^populatef2cTask($/;"	f
pos	src/legion_runtime/lowlevel.h	/^	int pos;$/;"	m	class:LegionRuntime::LowLevel::ElementMask::Enumerator
position	src/nautilus/fs.c	/^    size_t   position;$/;"	m	struct:nk_fs_open_file_state	file:
position_indicator_attr	scripts/kconfig/lxdialog/dialog.h	108;"	d
positive_sign	include/lua/llocale.h	/^    char *positive_sign;      \/\/""           LC_MONETARY$/;"	m	struct:lconv
positive_sign	src/nautilus/libccompat.c	/^    char *positive_sign;      \/\/""           LC_MONETARY$/;"	m	struct:lconv	file:
posrelat	src/lua_src/lstrlib.c	/^static size_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
post_end_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::post_end_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
post_execute	src/legion_runtime/lowlevel_gpu.cc	/^      void post_execute(void)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
post_receive	include/nautilus/netdev.h	/^    int (*post_receive)(void *state, uint8_t *dest, uint64_t len, void (*callback)(void *context), void *context);$/;"	m	struct:nk_net_dev_int
post_send	include/nautilus/netdev.h	/^    int (*post_send)(void *state, uint8_t *src, uint64_t len, void (*callback)(void *context), void *context);$/;"	m	struct:nk_net_dev_int
post_wait	src/legion_runtime/runtime.cc	/^    void Runtime::post_wait(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::Runtime
pow	src/nautilus/libccompat.c	/^double pow(double x, double y)$/;"	f
power_resource	include/acpi/actypes.h	/^	} power_resource;$/;"	m	union:acpi_object	typeref:struct:acpi_object::__anon26
powersOf10	src/nautilus/libccompat.c	/^static double powersOf10[] = {	\/* Table giving binary powers of 10.  Entry *\/$/;"	v	file:
pprev	include/nautilus/list.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
preSolvPrep	src/test/hpcg/cg.h	/^preSolvPrep(lgncg::SparseMatrix &A,$/;"	f	namespace:__anon118
preStartInit	src/test/hpcg/hpcg-main.cc	/^preStartInit(void)$/;"	f	namespace:__anon117
pre_map_task	src/legion_runtime/default_mapper.cc	/^    bool DefaultMapper::pre_map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
pre_map_task	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::pre_map_task(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
pre_mask	src/legion_runtime/region_tree.h	/^      FieldMask pre_mask;$/;"	m	struct:LegionRuntime::HighLevel::PreconditionSet
pre_reap_thread	src/nautilus/scheduler.c	/^static void pre_reap_thread(rt_thread *r, void *priv)$/;"	f	file:
pre_wait	src/legion_runtime/runtime.cc	/^    void Runtime::pre_wait(Processor proc)$/;"	f	class:LegionRuntime::HighLevel::Runtime
prealloced	src/legion_runtime/lowlevel.cc	/^      bool prealloced, registered;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
precise_users	src/legion_runtime/field_tree.h	/^      std::list<UT> precise_users;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
precision	src/nautilus/printk.c	/^	int			precision;	\/* # of digits\/chars *\/$/;"	m	struct:printf_spec	file:
preconditions	src/legion_runtime/region_tree.h	/^      std::set<Event> preconditions;$/;"	m	struct:LegionRuntime::HighLevel::PreconditionSet
pred_op	src/legion_runtime/legion_ops.h	/^      PredicateOp *pred_op;$/;"	m	class:LegionRuntime::HighLevel::NotPredOp
predefined	src/acpi/acpica/aclocal.h	/^	const union acpi_predefined_info *predefined;$/;"	m	struct:acpi_predefined_data	typeref:union:acpi_predefined_data::acpi_predefined_info
predicate	src/legion_runtime/legion.h	/^      Predicate                          predicate;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
predicate	src/legion_runtime/legion.h	/^      Predicate                          predicate;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
predicate	src/legion_runtime/legion.h	/^      Predicate                       predicate;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
predicate	src/legion_runtime/legion.h	/^      Predicate                       predicate;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
predicate	src/legion_runtime/legion.h	/^      Predicate                       predicate;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
predicate	src/legion_runtime/legion_ops.h	/^      PredicateOp *predicate;$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
predicate_and	src/legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::predicate_and(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
predicate_and	src/legion_runtime/runtime.cc	/^    Predicate Runtime::predicate_and(Context ctx, const Predicate &p1, $/;"	f	class:LegionRuntime::HighLevel::Runtime
predicate_false_future	src/legion_runtime/legion.h	/^      Future                             predicate_false_future;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
predicate_false_future	src/legion_runtime/legion.h	/^      Future                             predicate_false_future;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
predicate_false_future	src/legion_runtime/legion_tasks.h	/^      Future predicate_false_future;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
predicate_false_future	src/legion_runtime/legion_tasks.h	/^      Future predicate_false_future;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
predicate_false_result	src/legion_runtime/legion.h	/^      TaskArgument                       predicate_false_result;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
predicate_false_result	src/legion_runtime/legion.h	/^      TaskArgument                       predicate_false_result;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
predicate_false_result	src/legion_runtime/legion_tasks.h	/^      void *predicate_false_result;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
predicate_false_result	src/legion_runtime/legion_tasks.h	/^      void *predicate_false_result;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
predicate_false_size	src/legion_runtime/legion_tasks.h	/^      size_t predicate_false_size;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
predicate_false_size	src/legion_runtime/legion_tasks.h	/^      size_t predicate_false_size;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
predicate_not	src/legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::predicate_not(Context ctx, const Predicate &p) $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
predicate_not	src/legion_runtime/runtime.cc	/^    Predicate Runtime::predicate_not(Context ctx, const Predicate &p) $/;"	f	class:LegionRuntime::HighLevel::Runtime
predicate_op	src/acpi/acpica/aclocal.h	/^	union acpi_parse_object *predicate_op;$/;"	m	struct:acpi_control_state	typeref:union:acpi_control_state::acpi_parse_object
predicate_or	src/legion_runtime/legion.cc	/^    Predicate HighLevelRuntime::predicate_or(Context ctx,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
predicate_or	src/legion_runtime/runtime.cc	/^    Predicate Runtime::predicate_or(Context ctx, const Predicate &p1, $/;"	f	class:LegionRuntime::HighLevel::Runtime
predicate_references	src/legion_runtime/legion_ops.h	/^      unsigned predicate_references;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
predicate_resolved	src/legion_runtime/legion_ops.h	/^      bool predicate_resolved;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
predicate_value	src/legion_runtime/legion_ops.h	/^      bool predicate_value;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
predicate_waiter	src/legion_runtime/legion_ops.h	/^      UserEvent predicate_waiter; \/\/ used only when needed$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
preempt	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::preempt(EventImpl *event, EventImpl::EventGeneration needed)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
preemptable_sleep	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ bool PreemptableThread::preemptable_sleep(Event wait_for,$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
preemptable_threads	src/legion_runtime/lowlevel.cc	/^      std::list<Thread *> preemptable_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
preferred_profile	include/acpi/actbl.h	/^	uint8_t preferred_profile;	\/* Conveys preferred power management profile to OSPM. *\/$/;"	m	struct:acpi_table_fadt
prefetch	include/nautilus/list.h	42;"	d
prefetch3d	include/nautilus/cpuid.h	/^            uint8_t prefetch3d  : 1; \/\/ PREFETCH and PREFETCHW instrs$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
prefetch_base_upper	include/dev/pci.h	/^            uint32_t prefetch_base_upper;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
prefetch_limit_upper	include/dev/pci.h	/^            uint32_t prefetch_limit_upper;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
prefetch_mem_base	include/dev/pci.h	/^            uint16_t prefetch_mem_base;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
prefetch_mem_limit	include/dev/pci.h	/^            uint16_t prefetch_mem_limit;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
preimage	src/legion_runtime/arrays.h	/^      Rect<DIM> preimage(const Point<DIM> p) const$/;"	f	class:LegionRuntime::Arrays::Blockify
preimage	src/legion_runtime/arrays.h	/^      Rect<IDIM> preimage(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Linearization
preimage	src/legion_runtime/arrays.h	/^      Rect<IDIM> preimage(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Translation
preimage	src/legion_runtime/arrays.h	/^      virtual Rect<IDIM> preimage(const Point<ODIM> p) const { assert(0); return Rect<IDIM>(); }\/\/= 0;$/;"	f	class:LegionRuntime::Arrays::Mapping
preimage	src/legion_runtime/arrays.h	/^      virtual Rect<IDIM> preimage(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
preimage_is_dense	src/legion_runtime/arrays.h	/^      bool preimage_is_dense(const Point<DIM> p) const$/;"	f	class:LegionRuntime::Arrays::Blockify
preimage_is_dense	src/legion_runtime/arrays.h	/^      bool preimage_is_dense(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Linearization
preimage_is_dense	src/legion_runtime/arrays.h	/^      bool preimage_is_dense(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::Translation
preimage_is_dense	src/legion_runtime/arrays.h	/^      virtual bool preimage_is_dense(const Point<ODIM> p) const { assert(0); return false; }\/\/= 0;$/;"	f	class:LegionRuntime::Arrays::Mapping
preimage_is_dense	src/legion_runtime/arrays.h	/^      virtual bool preimage_is_dense(const Point<ODIM> p) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
preinit_state	src/lua_src/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
preloadedlibs	src/lua_src/linit.c	/^static const luaL_Reg preloadedlibs[] = {$/;"	v	file:
premap_physical_region	src/legion_runtime/region_tree.cc	/^    bool RegionTreeForest::premap_physical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
premap_task	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
premap_task	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
premap_task	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
premap_task	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
premap_task	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::premap_task(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
premapped	src/legion_runtime/legion.h	/^      bool                                premapped;$/;"	m	class:LegionRuntime::HighLevel::Task
premapped	src/legion_runtime/legion.h	/^      bool premapped;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
premapping_events	src/legion_runtime/legion_tasks.h	/^      std::map<RegionTreeID,std::map<Event,FieldMask> > premapping_events;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
prepare_steal	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
prepare_steal	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
prepare_steal	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
prepare_steal	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
prepare_steal	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::prepare_steal(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
prev	include/lua/lobject.h	/^      struct UpVal *prev;$/;"	m	struct:UpVal::__anon7::__anon8	typeref:struct:UpVal::__anon7::__anon8::UpVal
prev	include/lua/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
prev	include/nautilus/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prev	src/lua_src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	src/nautilus/scheduler.c	/^    struct rt_node *prev;$/;"	m	struct:rt_node	typeref:struct:rt_node::rt_node	file:
prev	xeon_phi/linux_usr/phi_console.c	/^    struct line_elm * prev;$/;"	m	struct:line_elm	typeref:struct:line_elm::line_elm	file:
prev_count	src/legion_runtime/lowlevel.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
prev_count	src/legion_runtime/lowlevel_dma.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
prev_epoch_users	src/legion_runtime/region_tree.h	/^      FieldTree<LogicalUser> *prev_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
prev_epoch_users	src/legion_runtime/region_tree.h	/^      FieldTree<PhysicalUser> *const prev_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
prev_epoch_users	src/legion_runtime/region_tree.h	/^      LegionContainer<LogicalUser,PREV_LOGICAL_ALLOC>::list prev_epoch_users;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
prev_epoch_users	src/legion_runtime/region_tree.h	/^      LegionContainer<PhysicalUser,PREV_PHYSICAL_ALLOC>::list prev_epoch_users;$/;"	m	class:LegionRuntime::HighLevel::MaterializedView
prev_idx	src/legion_runtime/legion_trace.h	/^        int prev_idx;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
prev_offset	src/legion_runtime/lowlevel.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
prev_offset	src/legion_runtime/lowlevel_dma.cc	/^	int prev_offset, prev_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
previous	include/lua/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo
previous	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_block_info *previous;$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_block_info
previous	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_xrupt_info *previous;$/;"	m	struct:acpi_gpe_xrupt_info	typeref:struct:acpi_gpe_xrupt_info::acpi_gpe_xrupt_info
previous	src/lua_src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	src/lua_src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous_id	src/legion_runtime/legion_logging.h	/^        UniqueID previous_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
previous_index	src/legion_runtime/legion_logging.h	/^        unsigned previous_index;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgMappingDependence
previous_subscribe_gen	src/legion_runtime/lowlevel.cc	/^      Event::gen_t previous_subscribe_gen;$/;"	m	struct:LegionRuntime::LowLevel::EventSubscribeArgs	file:
pri_insert	src/legion_runtime/lowlevel_impl.h	/^      void pri_insert(T to_add) {$/;"	f	class:LegionRuntime::LowLevel::pri_list
pri_list	src/legion_runtime/lowlevel_impl.h	/^    class pri_list : public std::list<T> {$/;"	c	namespace:LegionRuntime::LowLevel
primary_bus_num	include/dev/pci.h	/^            uint8_t  primary_bus_num;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
primary_dns	include/acpi/actbl2.h	/^	uint8_t primary_dns[16];$/;"	m	struct:acpi_ibft_nic
primary_server	include/acpi/actbl2.h	/^	uint8_t primary_server[16];$/;"	m	struct:acpi_ibft_initiator
primaryexp	src/lua_src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
prime_index	src/nautilus/hashtable.c	/^    uint_t prime_index;$/;"	m	struct:nk_hashtable	file:
prime_table_length	src/nautilus/hashtable.c	/^const uint_t prime_table_length = sizeof(primes) \/ sizeof(primes[0]);$/;"	v
primes	src/nautilus/hashtable.c	/^static const uint_t primes[] = $/;"	v	file:
primes	src/nautilus/mm/kmem.c	/^static const uint64_t primes[] = $/;"	v	file:
print	src/legion_runtime/utilities.h	/^      inline void print(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
print_arrows	scripts/kconfig/lxdialog/checklist.c	/^static void print_arrows(WINDOW * win, int choice, int item_no, int scroll,$/;"	f	file:
print_arrows	scripts/kconfig/lxdialog/menubox.c	/^static void print_arrows(WINDOW * win, int item_no, int scroll, int y, int x,$/;"	f	file:
print_autowrap	scripts/kconfig/lxdialog/util.c	/^void print_autowrap(WINDOW * win, const char *prompt, int width, int y, int x)$/;"	f
print_button	scripts/kconfig/lxdialog/util.c	/^void print_button(WINDOW * win, const char *label, int y, int x, int selected)$/;"	f
print_buttons	scripts/kconfig/lxdialog/checklist.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	file:
print_buttons	scripts/kconfig/lxdialog/inputbox.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	file:
print_buttons	scripts/kconfig/lxdialog/menubox.c	/^static void print_buttons(WINDOW * win, int height, int width, int selected)$/;"	f	file:
print_buttons	scripts/kconfig/lxdialog/yesno.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	file:
print_children	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::print_children(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
print_cmdline	scripts/basic/fixdep.c	/^void print_cmdline(void)$/;"	f
print_deps	scripts/basic/fixdep.c	/^void print_deps(void)$/;"	f
print_event_waiters	src/legion_runtime/shared_lowlevel.cc	/^    void Runtime::print_event_waiters(void)$/;"	f	class:LegionRuntime::LowLevel::Runtime
print_filter	scripts/kconfig/qconf.cc	/^static QString print_filter(const QString &str)$/;"	f	file:
print_info	src/legion_runtime/lowlevel.cc	/^	  virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f) { fprintf(f,"external waiter\\n"); }$/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
print_info	src/legion_runtime/lowlevel.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
print_info	src/legion_runtime/lowlevel_dma.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
print_info	src/legion_runtime/lowlevel_dma.cc	/^    void DmaRequest::Waiter::print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
print_info	src/legion_runtime/lowlevel_gpu.cc	/^      virtual void print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
print_info	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::print_info(FILE *f)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
print_item	scripts/kconfig/lxdialog/checklist.c	/^static void print_item(WINDOW * win, const char *item, int status, int choice,$/;"	f	file:
print_item	scripts/kconfig/lxdialog/menubox.c	101;"	d	file:
print_line	scripts/kconfig/lxdialog/textbox.c	/^static void print_line(WINDOW * win, int row, int width)$/;"	f	file:
print_logical_context	src/legion_runtime/region_tree.cc	/^    void PartitionNode::print_logical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_logical_context	src/legion_runtime/region_tree.cc	/^    void RegionNode::print_logical_context(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_logical_state	src/legion_runtime/region_tree.cc	/^    void PartitionNode::print_logical_state(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_logical_state	src/legion_runtime/region_tree.cc	/^    void RegionNode::print_logical_state(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_message	src/legion_runtime/utilities.h	/^    const char *print_message;$/;"	m	class:LegionRuntime::TimeStamp
print_out_acquire_ops	src/legion_runtime/runtime.cc	/^    void Runtime::print_out_acquire_ops(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_index_tasks	src/legion_runtime/runtime.cc	/^    void Runtime::print_out_index_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_individual_tasks	src/legion_runtime/runtime.cc	/^    void Runtime::print_out_individual_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_point_tasks	src/legion_runtime/runtime.cc	/^    void Runtime::print_out_point_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_out_slice_tasks	src/legion_runtime/runtime.cc	/^    void Runtime::print_out_slice_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_outstanding_tasks	src/legion_runtime/runtime.cc	/^    void Runtime::print_outstanding_tasks(FILE *f, int cnt \/*= -1*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
print_page	scripts/kconfig/lxdialog/textbox.c	/^static void print_page(WINDOW * win, int height, int width)$/;"	f	file:
print_physical_context	src/legion_runtime/region_tree.cc	/^    void PartitionNode::print_physical_context(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_physical_context	src/legion_runtime/region_tree.cc	/^    void RegionNode::print_physical_context(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_physical_state	src/legion_runtime/region_tree.cc	/^    void PartitionNode::print_physical_state(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
print_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionNode::print_physical_state(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
print_position	scripts/kconfig/lxdialog/textbox.c	/^static void print_position(WINDOW * win, int height, int width)$/;"	f	file:
print_quoted_string	scripts/kconfig/zconf.tab.c	/^void print_quoted_string(FILE *out, const char *str)$/;"	f
print_state	src/legion_runtime/region_tree.cc	/^    void FieldState::print_state(TreeStateLogger *logger,$/;"	f	class:LegionRuntime::HighLevel::FieldState
print_symbol	scripts/kconfig/zconf.tab.c	/^void print_symbol(FILE *out, struct menu *menu)$/;"	f
print_thread	src/nautilus/scheduler.c	/^static void print_thread(rt_thread *r, void *priv)$/;"	f	file:
print_title	scripts/kconfig/lxdialog/util.c	/^void print_title(WINDOW *dialog, const char *title, int width)$/;"	f
print_usage	src/lua_src/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	src/lua_src/lua.c	/^static void print_version (void) {$/;"	f	file:
print_waiters	src/legion_runtime/shared_lowlevel.cc	/^    void EventImpl::print_waiters(void)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
printd	scripts/kconfig/zconf.tab.c	168;"	d	file:
printf	src/nautilus/libccompat.c	/^int printf (const char * s, ...)$/;"	f
printf_spec	src/nautilus/printk.c	/^struct printf_spec {$/;"	s	file:
printk	src/nautilus/printk.c	/^printk (const char *fmt, ...)$/;"	f
printk_char	src/nautilus/printk.c	/^printk_char (char * arg, int c)$/;"	f	file:
printk_lock	src/nautilus/printk.c	/^spinlock_t printk_lock;$/;"	v
printk_state	src/nautilus/printk.c	/^struct printk_state {$/;"	s	file:
printline	scripts/basic/docproc.c	/^void printline(char * line)               { printf("%s", line); }$/;"	f
println	src/legion_runtime/legion_logging.cc	/^    void TreeStateLogger::println(const char *fmt, va_list args)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
println	src/legion_runtime/legion_spy.cc	/^    void TreeStateLogger::println(const char *fmt, va_list args)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
printnum	src/nautilus/doprnt.c	/^printnum(register unsigned long u, $/;"	f	file:
printnum_16	src/nautilus/doprnt.c	/^printnum_16 (register unsigned long u, $/;"	f	file:
priority	include/nautilus/scheduler.h	/^    uint64_t priority;  \/\/ higher number = lower priority; essentially quantum$/;"	m	struct:nk_sched_aperiodic_constraints
priority	src/legion_runtime/lowlevel.cc	/^      int priority;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
priority	src/legion_runtime/lowlevel_dma.cc	/^      int priority;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest	file:
priority	src/legion_runtime/lowlevel_dma.h	/^      int priority;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
priority	src/legion_runtime/lowlevel_gpu.cc	/^      int priority;$/;"	m	class:LegionRuntime::LowLevel::GPUTask	file:
priority	src/legion_runtime/lowlevel_impl.h	/^      int priority;$/;"	m	class:LegionRuntime::LowLevel::Task
priority	src/legion_runtime/shared_lowlevel.cc	/^                int priority;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
priority	src/lua_src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon143	file:
priv	src/legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
priv	src/legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
priv	src/legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
priv	src/legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
priv	src/legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
priv	src/legion_runtime/accessor.h	/^          AccessorPrivilege priv;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
priv	src/nautilus/timer.c	/^    void              *priv;$/;"	m	struct:nk_timer	file:
priv_data	include/nautilus/nemo.h	/^	void *          priv_data;$/;"	m	struct:nemo_event
privilege	src/legion_runtime/legion.h	/^      AllocateMode  privilege;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
privilege	src/legion_runtime/legion.h	/^      AllocateMode privilege;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceRequirement
privilege	src/legion_runtime/legion.h	/^      PrivilegeMode privilege; \/**< region privilege mode*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
privilege	src/legion_runtime/legion_logging.h	/^        PrivilegeMode privilege;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
privilege	src/legion_runtime/legion_utilities.h	/^      PrivilegeMode     privilege;$/;"	m	struct:LegionRuntime::HighLevel::RegionUsage
privilege_fields	src/legion_runtime/legion.h	/^      std::set<FieldID> privilege_fields; \/**< unique set of privilege fields*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
privilege_path	src/legion_runtime/legion_ops.h	/^      RegionTreePath    privilege_path;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
privilege_path	src/legion_runtime/legion_ops.h	/^      RegionTreePath    privilege_path;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
privilege_path	src/legion_runtime/legion_ops.h	/^      RegionTreePath privilege_path;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
privilege_path	src/legion_runtime/legion_ops.h	/^      RegionTreePath privilege_path;$/;"	m	class:LegionRuntime::HighLevel::MapOp
privilege_paths	src/legion_runtime/legion_tasks.h	/^      std::vector<RegionTreePath> privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
privilege_paths	src/legion_runtime/legion_tasks.h	/^      std::vector<RegionTreePath> privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
proc	src/legion_runtime/legion.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcMemAffinity
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgProcessor
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
proc	src/legion_runtime/legion_logging.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::ProcessorProfiler
proc	src/legion_runtime/legion_profiling.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
proc	src/legion_runtime/lowlevel.cc	/^	LocalProcessor *proc;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
proc	src/legion_runtime/lowlevel.cc	/^      Processor *proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorThread	file:
proc	src/legion_runtime/lowlevel.cc	/^      Processor proc;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
proc	src/legion_runtime/lowlevel.cc	/^      Processor::Impl *proc;$/;"	m	class:LegionRuntime::LowLevel::DeferredTaskSpawn	file:
proc	src/legion_runtime/lowlevel.cc	/^      UtilityProcessor *proc;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread	file:
proc	src/legion_runtime/lowlevel_impl.h	/^      Processor proc;$/;"	m	class:LegionRuntime::LowLevel::Task
proc	src/legion_runtime/runtime.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::SchedulerArgs
proc	src/legion_runtime/runtime.h	/^        Processor proc;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MapperInfo
proc	src/legion_runtime/shared_lowlevel.cc	/^	Processor proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
proc_assignment	src/legion_runtime/lowlevel.cc	/^    ProcessorAssignment *proc_assignment = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
proc_ctx	src/legion_runtime/lowlevel_gpu.cc	/^      CUcontext proc_ctx;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
proc_dev	src/legion_runtime/lowlevel_gpu.cc	/^      CUdevice  proc_dev;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
proc_events	src/legion_runtime/legion_profiling.h	/^        std::deque<ProfilingEvent> proc_events;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
proc_group_lock	src/legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         proc_group_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
proc_groups	src/legion_runtime/lowlevel.cc	/^    static std::map<Processor, std::set<Processor> *> proc_groups;$/;"	m	namespace:LegionRuntime::LowLevel	file:
proc_groups	src/legion_runtime/lowlevel_impl.h	/^      DynamicTable<ProcessorGroupTableAllocator> proc_groups;$/;"	m	struct:Node
proc_groups	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<ProcessorGroup*> proc_groups;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
proc_id	include/acpi/actypes.h	/^		uint32_t proc_id;$/;"	m	struct:acpi_object::__anon25
proc_kind	src/legion_runtime/legion.h	/^        Processor::Kind proc_kind;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
proc_kind	src/legion_runtime/legion_logging.h	/^        Processor::Kind proc_kind;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
proc_kind	src/legion_runtime/runtime.h	/^      const Processor::Kind proc_kind;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
proc_kind	src/legion_runtime/shared_lowlevel.cc	/^        Processor::Kind proc_kind;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
proc_kinds	src/legion_runtime/mapping_utilities.h	/^        std::map<Processor::Kind,std::set<Processor> > proc_kinds;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
proc_managers	src/legion_runtime/runtime.h	/^      std::map<Processor,ProcessorManager*> proc_managers;$/;"	m	class:LegionRuntime::HighLevel::Runtime
proc_mem_affinities	src/legion_runtime/lowlevel.h	/^      std::vector<ProcessorMemoryAffinity> proc_mem_affinities;$/;"	m	class:LegionRuntime::LowLevel::Machine
proc_mem_stacks	src/legion_runtime/mapping_utilities.h	/^        std::map<Processor,std::vector<Memory> > proc_mem_stacks;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
proc_mem_table	src/legion_runtime/mapping_utilities.h	/^        std::map<std::pair<Processor,Memory::Kind>,Memory> proc_mem_table;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
proc_spaces	src/legion_runtime/runtime.h	/^      const std::map<Processor,AddressSpaceID> proc_spaces;$/;"	m	class:LegionRuntime::HighLevel::Runtime
process_add_remote_reference	src/legion_runtime/garbage_collection.cc	/^    \/*static*\/ void DistributedCollectable::process_add_remote_reference($/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
process_advertisement	src/legion_runtime/runtime.cc	/^    void ProcessorManager::process_advertisement(Processor advertiser,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
process_message	src/legion_runtime/runtime.cc	/^    void MessageManager::process_message(const void *args, size_t arglen)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
process_message_task	src/legion_runtime/runtime.cc	/^    void Runtime::process_message_task(const void *args, size_t arglen)$/;"	f	class:LegionRuntime::HighLevel::Runtime
process_remove_remote_reference	src/legion_runtime/garbage_collection.cc	/^    \/*static*\/ void DistributedCollectable::process_remove_remote_reference($/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
process_remove_remote_reference	src/legion_runtime/garbage_collection.cc	/^    \/*static*\/ void HierarchicalCollectable::process_remove_remote_reference($/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
process_remove_resource_reference	src/legion_runtime/garbage_collection.cc	/^    \/*static*\/ void DistributedCollectable::process_remove_resource_reference($/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
process_remove_resource_reference	src/legion_runtime/garbage_collection.cc	/^    \/*static*\/ void HierarchicalCollectable::process_remove_resource_reference($/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
process_schedule_request	src/legion_runtime/runtime.cc	/^    void Runtime::process_schedule_request(Processor proc, bool first\/*=false*\/)$/;"	f	class:LegionRuntime::HighLevel::Runtime
process_send_back_user	src/legion_runtime/region_tree.cc	/^    void CompositeView::process_send_back_user(AddressSpaceID source,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
process_send_back_user	src/legion_runtime/region_tree.cc	/^    void MaterializedView::process_send_back_user(AddressSpaceID source,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
process_send_back_user	src/legion_runtime/region_tree.cc	/^    void ReductionView::process_send_back_user(AddressSpaceID source,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
process_slice_commit	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::process_slice_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
process_slice_complete	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::process_slice_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
process_slice_mapped	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndexTask::process_slice_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
process_steal_request	src/legion_runtime/runtime.cc	/^    void ProcessorManager::process_steal_request(Processor thief,$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
process_unpack_remote_commit	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::process_unpack_remote_commit($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
process_unpack_remote_complete	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::process_unpack_remote_complete($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
process_unpack_remote_mapped	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void IndividualTask::process_unpack_remote_mapped($/;"	f	class:LegionRuntime::HighLevel::IndividualTask
process_unpack_task	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::process_unpack_task(Runtime *rt, $/;"	f	class:LegionRuntime::HighLevel::TaskOp
process_updates	src/legion_runtime/region_tree.cc	/^    void MaterializedView::process_updates(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
process_updates	src/legion_runtime/region_tree.cc	/^    void ReductionView::process_updates(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
processor	include/acpi/actypes.h	/^	} processor;$/;"	m	union:acpi_object	typeref:struct:acpi_object::__anon25
processor_capacity	include/acpi/actbl1.h	/^	uint32_t processor_capacity;$/;"	m	struct:acpi_msct_proximity
processor_group	src/legion_runtime/runtime.h	/^        Processor           processor_group;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
processor_groups	src/legion_runtime/runtime.h	/^                     PROCESSOR_GROUP_ALLOC>::map processor_groups;$/;"	m	class:LegionRuntime::HighLevel::Runtime
processor_id	include/acpi/actbl1.h	/^	uint8_t processor_id;	\/* ACPI processor id *\/$/;"	m	struct:acpi_madt_local_apic
processor_id	include/acpi/actbl1.h	/^	uint8_t processor_id;	\/* ACPI processor id *\/$/;"	m	struct:acpi_madt_local_apic_nmi
processor_id	include/acpi/actbl1.h	/^	uint8_t processor_id;	\/* ACPI processor id *\/$/;"	m	struct:acpi_madt_local_sapic
processor_mask	src/legion_runtime/runtime.h	/^        ProcessorMask       processor_mask;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::ProcessorGroupInfo
processor_profilers	src/legion_runtime/legion.cc	/^      std::list<ProcessorProfiler *> processor_profilers;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
processors	src/legion_runtime/lowlevel_impl.h	/^      std::vector<Processor::Impl *> processors;$/;"	m	struct:Node
processors	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<ProcessorImpl*> processors;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
procs	src/legion_runtime/lowlevel.h	/^      std::set<Processor> procs;$/;"	m	class:LegionRuntime::LowLevel::Machine
procs_in_idle_task	src/legion_runtime/lowlevel_impl.h	/^      std::set<Processor::Impl *> procs_in_idle_task;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
prod_id	include/nautilus/acpi.h	/^    char     prod_id[12];$/;"	m	struct:mp_table
producer_consumer	include/acpi/acrestyp.h	/^	uint8_t producer_consumer;$/;"	m	struct:acpi_resource_extended_irq
product_name	include/dev/vesa.h	/^    uint32_t product_name;  \/\/ segment:offset to card model name$/;"	m	struct:vesa_adapter_info
product_rev	include/dev/vesa.h	/^    uint32_t product_rev;   \/\/ segment:offset pointer to product revision$/;"	m	struct:vesa_adapter_info
profile_task	src/legion_runtime/legion.h	/^      bool                                profile_task;$/;"	m	class:LegionRuntime::HighLevel::Task
profile_task_execution	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::profile_task_execution(const Task *task, Processor target)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
profiler	src/legion_runtime/default_mapper.h	/^      MappingUtilities::MappingProfiler profiler;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
profiler_mutex	src/legion_runtime/legion.cc	/^      pthread_mutex_t profiler_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
profiling_complete	src/legion_runtime/mapping_utilities.cc	/^      bool MappingProfiler::profiling_complete(const Task *task) const$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
profiling_enabled	src/legion_runtime/legion.cc	/^      bool profiling_enabled;$/;"	m	namespace:LegionRuntime::HighLevel::LegionProf	file:
prog_if	include/dev/pci.h	/^    uint8_t  prog_if;$/;"	m	struct:pci_cfg_space
progname	scripts/kconfig/qconf.cc	/^static const char *progname;$/;"	v	file:
progname	src/lua_src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
program_order_execution	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::program_order_execution = true;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
program_order_execution	src/legion_runtime/runtime.h	/^      static bool program_order_execution;$/;"	m	class:LegionRuntime::HighLevel::Runtime
projection	src/legion_runtime/legion.h	/^      ProjectionID projection; \/**< projection function for index space tasks*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
prolongation	src/test/hpcg/comp-prolongation.h	/^prolongation(SparseMatrix &Af,$/;"	f	namespace:lgncg
prolongationTask	src/test/hpcg/comp-prolongation.h	/^prolongationTask($/;"	f	namespace:lgncg
prompt	scripts/kconfig/expr.h	/^	struct property *prompt;$/;"	m	struct:menu	typeref:struct:menu::property
prompt	scripts/kconfig/zconf.y	/^prompt:	  T_WORD$/;"	l
promptColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	enum:colIdx
prompt_stmt_opt	scripts/kconfig/zconf.y	/^prompt_stmt_opt:$/;"	l
prop	include/nautilus/pmc.h	/^    event_prop_t * prop;$/;"	m	struct:pmc_event
prop	scripts/kconfig/expr.h	/^	struct property *prop;$/;"	m	struct:symbol	typeref:struct:symbol::property
prop	src/legion_runtime/legion.h	/^      CoherenceProperty prop; \/**< region coherence mode*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
prop	src/legion_runtime/legion_logging.h	/^        CoherenceProperty prop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
prop	src/legion_runtime/legion_utilities.h	/^      CoherenceProperty prop;$/;"	m	struct:LegionRuntime::HighLevel::RegionUsage
prop_alloc	scripts/kconfig/symbol.c	/^struct property *prop_alloc(enum prop_type type, struct symbol *sym)$/;"	f
prop_get_symbol	scripts/kconfig/symbol.c	/^struct symbol *prop_get_symbol(struct property *prop)$/;"	f
prop_get_type_name	scripts/kconfig/symbol.c	/^const char *prop_get_type_name(enum prop_type type)$/;"	f
prop_type	scripts/kconfig/expr.h	/^enum prop_type {$/;"	g
prop_warn	scripts/kconfig/menu.c	/^static void prop_warn(struct property *prop, const char *fmt, ...)$/;"	f	file:
propagateall	src/lua_src/lgc.c	/^static void propagateall (global_State *g) {$/;"	f	file:
propagatelist	src/lua_src/lgc.c	/^static void propagatelist (global_State *g, GCObject *l) {$/;"	f	file:
propagatemark	src/lua_src/lgc.c	/^static void propagatemark (global_State *g) {$/;"	f	file:
property	scripts/kconfig/expr.h	/^struct property {$/;"	s
protocol	include/acpi/actbl2.h	/^	uint8_t protocol;$/;"	m	struct:acpi_table_mchi
protocol_data	include/acpi/actbl2.h	/^	uint64_t protocol_data;$/;"	m	struct:acpi_table_mchi
proximity_domain	include/acpi/actbl1.h	/^	uint32_t proximity_domain;$/;"	m	struct:acpi_srat_mem_affinity
proximity_domain	include/acpi/actbl1.h	/^	uint32_t proximity_domain;$/;"	m	struct:acpi_srat_x2apic_cpu_affinity
proximity_domain	include/acpi/actbl2.h	/^	uint32_t proximity_domain;$/;"	m	struct:acpi_dmar_rhsa
proximity_domain_hi	include/acpi/actbl1.h	/^	uint8_t proximity_domain_hi[3];$/;"	m	struct:acpi_srat_cpu_affinity
proximity_domain_lo	include/acpi/actbl1.h	/^	uint8_t proximity_domain_lo;$/;"	m	struct:acpi_srat_cpu_affinity
proximity_offset	include/acpi/actbl1.h	/^	uint32_t proximity_offset;	\/* Location of proximity info struct(s) *\/$/;"	m	struct:acpi_table_msct
proxy_this	src/legion_runtime/legion_ops.h	/^        Operation *proxy_this;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredCompleteArgs
proxy_this	src/legion_runtime/legion_ops.h	/^        Operation *proxy_this;$/;"	m	struct:LegionRuntime::HighLevel::Operation::DeferredMappingArgs
proxy_this	src/legion_runtime/legion_tasks.h	/^        SingleTask *proxy_this;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::PostEndArgs
ps2str	src/nautilus/paging.c	/^static char * ps2str[3] = {$/;"	v	file:
ps_per_tick	include/dev/apic.h	/^    uint64_t ps_per_tick;$/;"	m	struct:apic_dev
ps_type_to_size	include/nautilus/paging.h	/^ps_type_to_size (page_size_t size) {$/;"	f
pse	include/nautilus/cpuid.h	/^            uint8_t pse         : 1; \/\/ page-size extensions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
pse	include/nautilus/cpuid.h	/^            uint8_t pse      : 1; \/\/ page size extension$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
pse36	include/nautilus/cpuid.h	/^            uint8_t pse36       : 1; \/\/ page-size extensions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
pse_36	include/nautilus/cpuid.h	/^            uint8_t pse_36   : 1; \/\/ 36-bit page size extension$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
psn	include/nautilus/cpuid.h	/^            uint8_t psn      : 1; \/\/ processor serial number$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
pstate_control	include/acpi/actbl.h	/^	uint8_t pstate_control;	\/* Processor performance state control *\/$/;"	m	struct:acpi_table_fadt
pte_t	include/nautilus/paging.h	/^typedef ulong_t pte_t;$/;"	t
pthread_barrier_t	src/legion_runtime/shared_lowlevel.cc	/^    typedef UtilityBarrier pthread_barrier_t;$/;"	t	namespace:LegionRuntime::LowLevel	file:
pthread_profiler_key	src/legion_runtime/legion.cc	/^      pthread_key_t pthread_profiler_key;$/;"	m	namespace:LegionRuntime::HighLevel::LegionLogging	file:
ptr	src/legion_runtime/accessor.h	/^	  inline T *ptr(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
ptr	src/legion_runtime/accessor.h	/^	  inline T *ptr(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
ptr	src/legion_runtime/accessor.h	/^	  inline T *ptr(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
ptr	src/legion_runtime/accessor.h	/^	  ptr_t ptr;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::ReductionListEntry
ptr	src/legion_runtime/lowlevel.h	/^      ptr_t ptr;$/;"	m	struct:LegionRuntime::LowLevel::ReductionListEntry
ptr_buffer	src/legion_runtime/region_tree.h	/^      T* ptr_buffer[(MAX_SIZE+INC_SIZE-1)\/INC_SIZE];$/;"	m	class:LegionRuntime::HighLevel::LegionStack
ptr_space	src/legion_runtime/region_tree.h	/^      const Domain ptr_space;$/;"	m	class:LegionRuntime::HighLevel::ListReductionManager
ptr_t	src/legion_runtime/common.h	/^  explicit ptr_t(const utptr_t &p) : value(p.value) { }$/;"	f	struct:ptr_t
ptr_t	src/legion_runtime/common.h	/^  ptr_t(const ptr_t &p) : value(p.value) { }$/;"	f	struct:ptr_t
ptr_t	src/legion_runtime/common.h	/^  ptr_t(const ptr_t<T> &p) : value(p.value) { }$/;"	f	struct:ptr_t
ptr_t	src/legion_runtime/common.h	/^  ptr_t(unsigned v) : value(v) { }$/;"	f	struct:ptr_t
ptr_t	src/legion_runtime/common.h	/^  ptr_t(void) : value(0) { }$/;"	f	struct:ptr_t
ptr_t	src/legion_runtime/common.h	/^struct ptr_t $/;"	s
ptr_t	src/legion_runtime/common.h	/^struct ptr_t$/;"	s
ptrtest	src/lua_src/lnautlib.c	/^int* ptrtest(int i)$/;"	f
pull_valid_instance_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::pull_valid_instance_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
push_captures	src/lua_src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_messages	src/legion_runtime/activemsg.cc	/^  int push_messages(int max_to_send = 0, bool wait = false)$/;"	f	class:ActiveMessageEndpoint
push_messages	src/legion_runtime/activemsg.cc	/^  void push_messages(int max_to_send = 0, bool wait = false)$/;"	f	class:EndpointManager
push_onecapture	src/lua_src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
push_timer	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::push_timer(int timer_kind)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
push_timer	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::push_timer(int timer_kind)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
pushclosure	src/lua_src/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pusherror	src/lua_src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushfq	src/asm/thread_lowlevel.S	/^pushfq          ;$/;"	l
pushfuncname	src/lua_src/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushglobalfuncname	src/lua_src/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushline	src/lua_src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	src/lua_src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushq	src/asm/thread_lowlevel.S	/^pushq %r10	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %r11	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %r12	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %r13	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %r14	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %r15      ;                               \\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %r8	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %r9	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %rax	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %rbp  ;               \\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %rbx	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %rcx	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %rdi	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %rdx	;				\\$/;"	l
pushq	src/asm/thread_lowlevel.S	/^pushq %rsi	;				\\$/;"	l
pushstr	src/lua_src/lobject.c	/^static void pushstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
put_batch	src/legion_runtime/lowlevel.cc	/^    void GASNetMemory::put_batch(size_t batch_size,$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
put_bytes	src/legion_runtime/lowlevel.cc	/^      virtual void put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
put_bytes	src/legion_runtime/lowlevel.cc	/^    void GASNetMemory::put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
put_bytes	src/legion_runtime/lowlevel.cc	/^    void RegionInstance::Impl::put_bytes(int index, off_t byte_offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
put_bytes	src/legion_runtime/lowlevel.cc	/^    void RemoteMemory::put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::RemoteMemory
put_bytes	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUFBMemory::put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
put_bytes	src/legion_runtime/lowlevel_gpu.h	/^      virtual void put_bytes(off_t offset, const void *src, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
put_cur_thread	include/nautilus/thread.h	/^put_cur_thread (nk_thread_t * t) $/;"	f
put_dec	src/nautilus/printk.c	/^static __noinline char* put_dec(char *buf, unsigned long long num)$/;"	f	file:
put_dec_full	src/nautilus/printk.c	/^static char* put_dec_full(char *buf, unsigned q)$/;"	f	file:
put_dec_trunc	src/nautilus/printk.c	/^static char* put_dec_trunc(char *buf, unsigned q)$/;"	f	file:
pvalue	include/lua/lobject.h	155;"	d
pvec	src/test/hpcg/vector.h	/^    std::vector<PVecItem> pvec;$/;"	m	struct:lgncg::Vector
pvt_nodes	src/test/circuit.h	/^  LogicalPartition pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:Partitions
pvt_nodes	src/test/circuit.h	/^  LogicalRegion pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:CircuitPiece
pvt_wires	src/test/circuit.h	/^  LogicalPartition pvt_wires;$/;"	m	struct:Partitions
pvt_wires	src/test/circuit.h	/^  LogicalRegion pvt_wires;$/;"	m	struct:CircuitPiece
q_type	src/nautilus/scheduler.c	/^    queue_type q_type;$/;"	m	struct:nk_sched_thread_state	file:
qconf-cxxobjs	scripts/kconfig/Makefile	/^qconf-cxxobjs	:= qconf.o$/;"	m
qconf-objs	scripts/kconfig/Makefile	/^qconf-objs	:= kconfig_load.o zconf.tab.o$/;"	m
qconf-target	scripts/kconfig/Makefile	/^	qconf-target := 1$/;"	m
qgettext	scripts/kconfig/qconf.cc	/^static inline QString qgettext(const QString& str)$/;"	f	file:
qgettext	scripts/kconfig/qconf.cc	/^static inline QString qgettext(const char* str)$/;"	f	file:
qualifier	src/nautilus/printk.c	/^	int			qualifier;$/;"	m	struct:printf_spec	file:
quash_operation	src/legion_runtime/legion_ops.cc	/^    void Operation::quash_operation(GenerationID gen, bool restart)$/;"	f	class:LegionRuntime::HighLevel::Operation
queue	include/nautilus/queue.h	/^    struct list_head queue;$/;"	m	struct:nk_queue	typeref:struct:nk_queue::list_head
queue	src/legion_runtime/lowlevel_dma.cc	/^	DmaRequestQueue *queue;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest::Waiter	file:
queue	src/nautilus/vc.c	/^  union queue{$/;"	u	struct:nk_virtual_console	file:
queue_condvar	src/legion_runtime/lowlevel_dma.cc	/^      gasnett_cond_t queue_condvar;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
queue_lock	src/legion_runtime/runtime.h	/^      Reservation queue_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
queue_lock	src/nautilus/vc.c	/^  spinlock_t       queue_lock;$/;"	m	struct:nk_virtual_console	file:
queue_mutex	src/legion_runtime/lowlevel_dma.cc	/^      gasnet_hsl_t queue_mutex;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
queue_scancode	src/dev/kbd.c	/^static void queue_scancode(nk_scancode_t scan)$/;"	f	file:
queue_sleepers	src/legion_runtime/lowlevel_dma.cc	/^      int queue_sleepers;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
queue_type	src/nautilus/scheduler.c	/^	       APERIODIC_QUEUE = 2} queue_type;$/;"	t	typeref:enum:__anon131	file:
queues	src/legion_runtime/lowlevel_dma.cc	/^      std::map<int, std::list<DmaRequest *> *> queues;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
quiet	Makefile	/^  quiet =$/;"	m
quiet	Makefile	/^  quiet=quiet_$/;"	m
quiet	Makefile	/^  quiet=silent_$/;"	m
quiet_cmd_TAGS	Makefile	/^quiet_cmd_TAGS = MAKE   $@$/;"	m
quiet_cmd_as_o_S	Makefile	/^quiet_cmd_as_o_S = AS      $@$/;"	m
quiet_cmd_cscope	Makefile	/^quiet_cmd_cscope = MAKE    cscope.out$/;"	m
quiet_cmd_cscope-file	Makefile	/^quiet_cmd_cscope-file = FILELST cscope.files$/;"	m
quiet_cmd_nautilus__	Makefile	/^quiet_cmd_nautilus__ ?= LD      $@$/;"	m
quiet_cmd_nautilus_version	Makefile	/^quiet_cmd_nautilus_version = GEN     .version$/;"	m
quiet_cmd_rmdirs	Makefile	/^quiet_cmd_rmdirs = $(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))$/;"	m
quiet_cmd_rmfiles	Makefile	/^quiet_cmd_rmfiles = $(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))$/;"	m
quiet_cmd_tags	Makefile	/^quiet_cmd_tags = MAKE   $@$/;"	m
quiet_cmd_transform_linkscript__	Makefile	/^quiet_cmd_transform_linkscript__ ?= CC      $@$/;"	m
r	include/lua/llex.h	/^  lua_Number r;$/;"	m	union:__anon10
r	src/legion_runtime/arrays.h	/^      Rect<DIM> r;$/;"	m	class:LegionRuntime::Arrays::GenericPointInRectIterator
r	src/legion_runtime/lowlevel.cc	/^      IndexSpace r;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstanceArgs	file:
r	src/test/hpcg/cg-data.h	/^    Vector r;$/;"	m	struct:lgncg::CGData
r10	include/nautilus/cpu.h	/^    ulong_t r10;$/;"	m	struct:nk_regs
r11	include/nautilus/cpu.h	/^    ulong_t r11;$/;"	m	struct:nk_regs
r12	include/nautilus/cpu.h	/^    ulong_t r12;$/;"	m	struct:nk_regs
r13	include/nautilus/cpu.h	/^    ulong_t r13;$/;"	m	struct:nk_regs
r14	include/nautilus/cpu.h	/^    ulong_t r14;$/;"	m	struct:nk_regs
r15	include/nautilus/cpu.h	/^    ulong_t r15;$/;"	m	struct:nk_regs
r8	include/nautilus/cpu.h	/^    ulong_t r8;$/;"	m	struct:nk_regs
r9	include/nautilus/cpu.h	/^    ulong_t r9;$/;"	m	struct:nk_regs
rTreeID	src/test/hpcg/vector.h	/^    LegionRuntime::HighLevel::RegionTreeID rTreeID;$/;"	m	struct:lgncg::Vector
r_x	src/test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:Block	file:
r_x	src/test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:MainArgs	file:
r_y	src/test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:Block	file:
r_y	src/test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:MainArgs	file:
r_z	src/test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:Block	file:
r_z	src/test/saxpy_array.cc	/^  LogicalRegion r_x, r_y, r_z;$/;"	m	struct:MainArgs	file:
radiolist_instructions	scripts/kconfig/mconf.c	/^radiolist_instructions[] = N_($/;"	v	file:
raise_region_exception	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::raise_region_exception(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
raise_region_exception	src/legion_runtime/runtime.cc	/^    void Runtime::raise_region_exception(Context ctx, $/;"	f	class:LegionRuntime::HighLevel::Runtime
ramdisk_state	src/dev/ramdisk.c	/^struct ramdisk_state {$/;"	s	file:
rand	include/nautilus/smp.h	/^    struct nk_rand_info * rand;$/;"	m	struct:cpu	typeref:struct:cpu::nk_rand_info
rand	src/nautilus/libccompat.c	/^rand (void) {$/;"	f
random_element	src/test/circuit.cc	/^static T random_element(const std::set<T> &set)$/;"	f	file:
random_element	src/test/circuit.cc	/^static T random_element(const std::vector<T> &vec)$/;"	f	file:
range_end	include/acpi/actbl1.h	/^	uint32_t range_end;		\/* End of domain range *\/$/;"	m	struct:acpi_msct_proximity
range_start	include/acpi/actbl1.h	/^	uint32_t range_start;	\/* Start of domain range *\/$/;"	m	struct:acpi_msct_proximity
range_type	include/acpi/acrestyp.h	/^	uint8_t range_type;$/;"	m	struct:acpi_io_attribute
range_type	include/acpi/acrestyp.h	/^	uint8_t range_type;$/;"	m	struct:acpi_memory_attribute
ranges	src/legion_runtime/legion.h	/^      std::set<std::pair<T,T> > ranges;$/;"	m	struct:LegionRuntime::HighLevel::ColoredPoints
rank_char	src/nautilus/fmtout.c	/^  rank_char	= -2,$/;"	e	enum:ranks	file:
rank_copy_sources	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::rank_copy_sources(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
rank_copy_sources	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::rank_copy_sources($/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_copy_sources	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::rank_copy_sources(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_copy_targets	src/legion_runtime/alt_mappers.cc	/^    void DebugMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
rank_copy_targets	src/legion_runtime/alt_mappers.cc	/^    void SequoiaMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
rank_copy_targets	src/legion_runtime/alt_mappers.cc	/^    void SharedMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::SharedMapper
rank_copy_targets	src/legion_runtime/default_mapper.cc	/^    bool DefaultMapper::rank_copy_targets(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
rank_copy_targets	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::rank_copy_targets(const Mappable *mappable,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_copy_targets	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::rank_copy_targets(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
rank_int	src/nautilus/fmtout.c	/^  rank_int 	= 0,$/;"	e	enum:ranks	file:
rank_long	src/nautilus/fmtout.c	/^  rank_long	= 1,$/;"	e	enum:ranks	file:
rank_short	src/nautilus/fmtout.c	/^  rank_short	= -1,$/;"	e	enum:ranks	file:
rankings	src/legion_runtime/mapping_utilities.h	/^          std::vector<std::vector<Memory> > rankings;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer::MemoizedMapping
ranks	src/nautilus/fmtout.c	/^enum ranks {$/;"	g	file:
raw_data	src/legion_runtime/lowlevel.h	/^      void *raw_data;$/;"	m	class:LegionRuntime::LowLevel::ElementMask
raw_data_length	include/acpi/actbl1.h	/^	uint32_t raw_data_length;	\/* Length of raw error data *\/$/;"	m	struct:acpi_bert_region
raw_data_length	include/acpi/actbl1.h	/^	uint32_t raw_data_length;$/;"	m	struct:acpi_hest_generic_status
raw_data_offset	include/acpi/actbl1.h	/^	uint32_t raw_data_offset;	\/* Offset to raw error data *\/$/;"	m	struct:acpi_bert_region
raw_data_offset	include/acpi/actbl1.h	/^	uint32_t raw_data_offset;$/;"	m	struct:acpi_hest_generic_status
raw_dense_ptr	src/legion_runtime/accessor.h	/^	  T *raw_dense_ptr(const Rect<DIM>& r, Rect<DIM> &subrect, ByteOffset &elem_stride)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
raw_dense_ptr	src/legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_dense_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset &elem_stride)$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_dense_ptr	src/legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_dense_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset &elem_stride,$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_noqueue_callback	src/nautilus/vc.c	/^  void    (*raw_noqueue_callback)(nk_scancode_t, void *priv);$/;"	m	struct:nk_virtual_console	file:
raw_noqueue_callback_priv	src/nautilus/vc.c	/^  void     *raw_noqueue_callback_priv;$/;"	m	struct:nk_virtual_console	file:
raw_rect_ptr	src/legion_runtime/accessor.h	/^	    T *raw_rect_ptr(const Rect<DIM>& r, Rect<DIM> &subrect, ByteOffset *offsets,$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
raw_rect_ptr	src/legion_runtime/accessor.h	/^	  T *raw_rect_ptr(const Rect<DIM>& r, Rect<DIM> &subrect, ByteOffset *offsets)$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
raw_rect_ptr	src/legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_rect_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset *offsets)$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_rect_ptr	src/legion_runtime/lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_rect_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset *offsets,$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_rect_ptr	src/legion_runtime/shared_lowlevel.cc	/^    void *AccessorType::Generic::Untyped::raw_rect_ptr(const Rect<DIM>& r, Rect<DIM>& subrect, ByteOffset *offsets)$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
raw_size	src/legion_runtime/lowlevel.cc	/^    size_t ElementMask::raw_size(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
raw_size	src/legion_runtime/shared_lowlevel.cc	/^    size_t ElementMask::raw_size(void) const$/;"	f	class:LegionRuntime::LowLevel::ElementMask
rawgco2ts	include/lua/lstate.h	200;"	d
rawgco2u	include/lua/lstate.h	203;"	d
rawtsvalue	include/lua/lobject.h	156;"	d
rawuvalue	include/lua/lobject.h	158;"	d
rax	include/nautilus/cpu.h	/^    ulong_t rax;$/;"	m	struct:nk_regs
rb_color	include/nautilus/rbtree.h	127;"	d
rb_entry	include/nautilus/rbtree.h	143;"	d
rb_is_black	include/nautilus/rbtree.h	129;"	d
rb_is_red	include/nautilus/rbtree.h	128;"	d
rb_left	include/nautilus/rbtree.h	/^    struct rb_node *rb_left;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_link_node	include/nautilus/rbtree.h	/^static inline void rb_link_node(struct rb_node * node, struct rb_node * parent,$/;"	f
rb_node	include/nautilus/rbtree.h	/^    struct rb_node *rb_node;$/;"	m	struct:rb_root	typeref:struct:rb_root::rb_node
rb_node	include/nautilus/rbtree.h	/^struct rb_node$/;"	s
rb_parent	include/nautilus/rbtree.h	126;"	d
rb_parent_color	include/nautilus/rbtree.h	/^    unsigned long  rb_parent_color;$/;"	m	struct:rb_node
rb_right	include/nautilus/rbtree.h	/^    struct rb_node *rb_right;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_root	include/nautilus/rbtree.h	/^struct rb_root$/;"	s
rb_set_black	include/nautilus/rbtree.h	131;"	d
rb_set_color	include/nautilus/rbtree.h	/^static inline void rb_set_color(struct rb_node *rb, int color)$/;"	f
rb_set_parent	include/nautilus/rbtree.h	/^static inline void rb_set_parent(struct rb_node *rb, struct rb_node *p)$/;"	f
rb_set_red	include/nautilus/rbtree.h	130;"	d
rbp	include/nautilus/cpu.h	/^    ulong_t rbp;$/;"	m	struct:nk_regs
rbx	include/nautilus/cpu.h	/^    ulong_t rbx;$/;"	m	struct:nk_regs
rc	src/test/hpcg/mg-data.h	/^    Vector rc;$/;"	m	struct:lgncg::MGData
rcx	include/nautilus/cpu.h	/^    ulong_t rcx;$/;"	m	struct:nk_regs
rdi	include/nautilus/cpu.h	/^    ulong_t rdi;$/;"	m	struct:nk_regs
rdma_sequence_no	src/legion_runtime/lowlevel_dma.cc	/^    static unsigned rdma_sequence_no = 1;$/;"	m	namespace:LegionRuntime::LowLevel	file:
rdrand	include/nautilus/cpuid.h	/^            uint8_t rdrand   : 1; \/\/ RDRAND instruction$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
rdtsc	include/nautilus/cpu.h	/^rdtsc (void)$/;"	f
rdtsc	src/test/custom_mapper.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	src/test/hpcg/comp-waxpby.h	/^rdtsc (void) $/;"	f	namespace:lgncg
rdtsc	src/test/multiple_partitions.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	src/test/partitioning.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	src/test/physical_regions.cc	/^rdtsc (void)$/;"	f	file:
rdtsc	src/test/privileges.cc	/^rdtsc (void)$/;"	f	file:
rdtscll	src/test/benchmark.c	58;"	d	file:
rdtscll	src/test/hpcg/cg.h	93;"	d
rdtscll	src/test/hpcg/hpcg-main.cc	246;"	d	file:
rdtscll	src/test/ipi.c	48;"	d	file:
rdtscp	include/nautilus/cpu.h	/^rdtscp (void)$/;"	f
rdtscp	include/nautilus/cpu.h	273;"	d
rdtscp	include/nautilus/cpuid.h	/^            uint8_t rdtscp      : 1; \/\/ RDTSCP instruction$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
rdx	include/nautilus/cpu.h	/^    ulong_t rdx;$/;"	m	struct:nk_regs
rdy	src/dev/ata.c	/^	uint8_t rdy:1;  \/\/ drive ready$/;"	m	struct:ata_status_reg::__anon135	file:
reacquire	src/legion_runtime/lowlevel_impl.h	/^      void reacquire(void)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
read	include/nautilus/chardev.h	/^    int (*read)(void *state, uint8_t *dest);$/;"	m	struct:nk_char_dev_int
read	src/legion_runtime/accessor.h	/^	  inline T read(PTRTYPE ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
read	src/legion_runtime/accessor.h	/^	  inline T read(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
read	src/legion_runtime/accessor.h	/^	  inline T read(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
read	src/legion_runtime/accessor.h	/^	  inline T read(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
read	src/legion_runtime/lowlevel.h	/^      ET read(ptr_t ptr) const { return ria.read(ptr); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
read	src/legion_runtime/lowlevel.h	/^      T read(ptr_t ptr) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
read	src/legion_runtime/lowlevel.h	/^      T read(ptr_t ptr) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
read	src/legion_runtime/lowlevel.h	/^      __device__ ET read(ptr_t ptr) const { return ria.read(ptr); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
read	src/legion_runtime/shared_lowlevel.cc	/^    const void* RegionInstance::Impl::read(unsigned ptr)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
readListSettings	scripts/kconfig/qconf.cc	/^void ConfigSettings::readListSettings()$/;"	f	class:ConfigSettings
readSizes	scripts/kconfig/qconf.cc	/^QValueList<int> ConfigSettings::readSizes(const QString& key, bool *ok)$/;"	f	class:ConfigSettings
read_all	src/lua_src/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_block	src/fs/ext2/ext2_access.c	133;"	d	file:
read_block_group	src/fs/ext2/ext2_access.c	187;"	d	file:
read_blocks	src/dev/ata.c	/^static int read_blocks(void *state, uint64_t blocknum, uint64_t count, uint8_t *dest)$/;"	f	file:
read_blocks	src/dev/ramdisk.c	/^static int read_blocks(void *state, uint64_t blocknum, uint64_t count, uint8_t *dest)$/;"	f	file:
read_blocks_async	include/nautilus/blkdev.h	/^    int (*read_blocks_async)(void *state, uint64_t blocknum, uint64_t count, uint8_t *dest);$/;"	m	struct:nk_block_dev_int
read_blocks_sync	include/nautilus/blkdev.h	/^    int (*read_blocks_sync)(void *state, uint64_t blocknum, uint64_t count, uint8_t *dest);$/;"	m	struct:nk_block_dev_int
read_chars	src/lua_src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_cr0	include/nautilus/cpu.h	/^read_cr0 (void)$/;"	f
read_cr2	include/nautilus/cpu.h	/^read_cr2 (void)$/;"	f
read_cr3	include/nautilus/cpu.h	/^read_cr3 (void)$/;"	f
read_cr4	include/nautilus/cpu.h	/^read_cr4 (void)$/;"	f
read_cr8	include/nautilus/cpu.h	/^read_cr8 (void)$/;"	f
read_event_count	src/nautilus/pmc.c	/^read_event_count (perf_event_t * event)$/;"	f
read_file	include/nautilus/fs.h	/^    ssize_t  (*read_file)(void *state, void *file, void *dest, off_t offset, size_t n);$/;"	m	struct:nk_fs_int
read_inode	src/fs/ext2/ext2_access.c	237;"	d	file:
read_line	src/lua_src/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	src/lua_src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_lua_script	src/dev/lua_script.c	/^char* read_lua_script()$/;"	f
read_map	scripts/kallsyms.c	/^static void read_map(FILE *in)$/;"	f	file:
read_number	src/lua_src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	src/lua_src/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_partial	src/legion_runtime/lowlevel.h	/^      void read_partial(ptr_t ptr, off_t offset, void *dst, size_t size) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
read_pmc_ctl	src/nautilus/pmc.c	/^read_pmc_ctl (uint8_t idx)$/;"	f	file:
read_pmc_ctr	src/nautilus/pmc.c	/^read_pmc_ctr (uint8_t idx)$/;"	f	file:
read_rflags	include/nautilus/cpu.h	/^read_rflags (void)$/;"	f
read_string	src/lua_src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
read_superblock	src/fs/ext2/ext2_access.c	92;"	d	file:
read_symbol	scripts/kallsyms.c	/^static int read_symbol(FILE *in, struct sym_entry *s)$/;"	f	file:
read_untyped	src/legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(const DomainPoint& dp, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
read_untyped	src/legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(ptr_t ptr, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
read_untyped	src/legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(const DomainPoint& dp, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
read_untyped	src/legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::read_untyped(ptr_t ptr, void *dst, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
read_write_block	src/fs/ext2/ext2_access.c	/^static int read_write_block(struct ext2_state * fs, uint32_t block_num, void *srcdest, int write) $/;"	f	file:
read_write_block_group	src/fs/ext2/ext2_access.c	/^static int read_write_block_group(struct ext2_state* fs, uint32_t block_group_num, struct ext2_group_desc *srcdest, int write) $/;"	f	file:
read_write_inode	src/fs/ext2/ext2_access.c	/^static int read_write_inode(struct ext2_state *fs, uint32_t inode_num, struct ext2_inode *srcdest, int write) $/;"	f	file:
read_write_superblock	src/fs/ext2/ext2_access.c	/^static int read_write_superblock(struct ext2_state *fs, int write)$/;"	f	file:
readable	src/lua_src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readdecesc	src/lua_src/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
reader	include/lua/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio
reader1	src/nautilus/rwlock.c	/^reader1 (void * in, void ** out) $/;"	f	file:
reader2	src/nautilus/rwlock.c	/^reader2 (void * in, void ** out)$/;"	f	file:
reader_mutex	src/acpi/acpica/aclocal.h	/^	acpi_mutex reader_mutex;$/;"	m	struct:acpi_rw_lock
readers	include/nautilus/rwlock.h	/^    unsigned readers;$/;"	m	struct:nk_rwlock
readhexa	src/lua_src/lobject.c	/^static lua_Number readhexa (const char **s, lua_Number r, int *count) {$/;"	f	file:
readhexaesc	src/lua_src/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
reading_users	src/legion_runtime/region_tree.h	/^      std::list<PhysicalUser> reading_users;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
ready	src/legion_runtime/lowlevel_impl.h	/^      std::map<int, std::deque<JOBTYPE*> > ready;$/;"	m	class:LegionRuntime::LowLevel::JobQueue
ready	src/legion_runtime/shared_lowlevel.cc	/^                bool ready; \/\/ If this reservation waits on a event, see if it's ready$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl::ReservationRecord	file:
ready	src/test/benchmark.c	/^static volatile int ready[2];$/;"	v	file:
ready_copies	src/legion_runtime/shared_lowlevel.cc	/^      std::deque<CopyOperation*> ready_copies;$/;"	m	class:LegionRuntime::LowLevel::DMAQueue	file:
ready_event	src/legion_runtime/region_tree.h	/^      Event ready_event;$/;"	m	class:LegionRuntime::HighLevel::InstanceRef
ready_event	src/legion_runtime/runtime.h	/^      Event ready_event;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
ready_event	src/legion_runtime/runtime.h	/^      Event ready_event;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
ready_event	src/legion_runtime/runtime.h	/^      UserEvent ready_event;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
ready_queue	src/legion_runtime/shared_lowlevel.cc	/^	std::list<TaskDesc*> ready_queue;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
ready_queues	src/legion_runtime/runtime.h	/^      std::vector<std::list<TaskOp*> > ready_queues;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
realloc	src/nautilus/mm/kmem.c	/^void *realloc(void *ptr, size_t size)$/;"	f
really_do_span	src/legion_runtime/lowlevel.cc	/^	void really_do_span(bool last)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
really_do_span	src/legion_runtime/lowlevel_dma.cc	/^	void really_do_span(bool last)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite
reallymarkobject	src/lua_src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
reap_thread	src/nautilus/scheduler.c	/^static void reap_thread(rt_thread *r, void *priv)$/;"	f	file:
reaper	src/nautilus/scheduler.c	/^static void reaper(void *in, void **out)$/;"	f	file:
reaping	src/nautilus/scheduler.c	/^    int                  reaping;$/;"	m	struct:nk_sched_global_state	file:
rebind	src/legion_runtime/legion_allocation.h	/^      struct rebind {$/;"	s	class:LegionRuntime::HighLevel::LegionAllocator
reboot	src/arch/hrt/shutdown.c	/^reboot (void) $/;"	f
reboot	src/arch/x64/shutdown.c	/^reboot (void) $/;"	f
rebuild_timeout	src/legion_runtime/region_tree.h	/^      unsigned rebuild_timeout;$/;"	m	struct:LegionRuntime::HighLevel::FieldState
rec_len	src/fs/ext2/ext2fs.h	/^	__u16	rec_len;		\/* Directory entry length *\/$/;"	m	struct:ext2_dir_entry
rec_len	src/fs/ext2/ext2fs.h	/^	__u16	rec_len;		\/* Directory entry length *\/$/;"	m	struct:ext2_dir_entry_2
recall_chosen	src/legion_runtime/mapping_utilities.cc	/^      Memory MappingMemoizer::recall_chosen(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
recall_mapping	src/legion_runtime/mapping_utilities.cc	/^      bool MappingMemoizer::recall_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
received_messages	src/legion_runtime/activemsg.cc	/^  int received_messages;$/;"	m	class:ActiveMessageEndpoint	file:
received_messages	src/legion_runtime/runtime.h	/^      unsigned received_messages; $/;"	m	class:LegionRuntime::HighLevel::MessageManager
received_trigger_resolution	src/legion_runtime/legion_ops.h	/^      bool received_trigger_resolution;$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
receiving_buffer	src/legion_runtime/runtime.h	/^      char *receiving_buffer;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
receiving_buffer_size	src/legion_runtime/runtime.h	/^      size_t receiving_buffer_size;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
receiving_index	src/legion_runtime/runtime.h	/^      unsigned receiving_index;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
recfield	src/lua_src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
reclaim	src/legion_runtime/legion_tasks.h	/^      bool reclaim; \/\/ used for reclaiming intermediate slices$/;"	m	class:LegionRuntime::HighLevel::SliceTask
reclaim_event	src/legion_runtime/legion_tasks.h	/^        Event      reclaim_event;$/;"	m	struct:LegionRuntime::HighLevel::SingleTask::LocalFieldInfo
reclaim_physical_instance	src/legion_runtime/runtime.cc	/^    bool MemoryManager::reclaim_physical_instance(InstanceManager *instance)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
reclaim_physical_instance	src/legion_runtime/runtime.cc	/^    bool Runtime::reclaim_physical_instance(InstanceManager *inst)$/;"	f	class:LegionRuntime::HighLevel::Runtime
record_after_version	src/legion_runtime/region_tree.cc	/^    void RegionTreePath::record_after_version(unsigned depth, VersionID vid,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
record_before_version	src/legion_runtime/region_tree.cc	/^    void RegionTreePath::record_before_version(unsigned depth, VersionID vid,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
record_call	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::record_call(int kind, unsigned long long time)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
record_call	src/legion_runtime/region_tree.h	/^        inline void record_call(int call_kind, unsigned long long time)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
record_call	src/legion_runtime/region_tree.h	/^        inline void record_call(unsigned long long time)$/;"	f	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
record_child_committed	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::record_child_committed(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
record_child_complete	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::record_child_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
record_child_mapped	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::record_child_mapped(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
record_close_operation	src/legion_runtime/region_tree.cc	/^    void RegionTreePath::record_close_operation(unsigned depth,$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
record_close_operations	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::record_close_operations(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
record_dependence	src/legion_runtime/legion_ops.cc	/^    bool MustEpochOp::record_dependence(Operation *src_op, GenerationID src_gen,$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
record_dependence	src/legion_runtime/legion_trace.cc	/^    void LegionTrace::record_dependence(Operation *target, GenerationID tar_gen,$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
record_field_versions	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::record_field_versions(LogicalState &state, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
record_mapping	src/legion_runtime/mapping_utilities.cc	/^      void MappingMemoizer::record_mapping(Processor target, const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
record_message	src/legion_runtime/activemsg.cc	/^  void record_message(bool sent_reply) $/;"	f	class:ActiveMessageEndpoint
record_message	src/legion_runtime/activemsg.cc	/^  void record_message(gasnet_node_t source, bool sent_reply)$/;"	f	class:EndpointManager
record_message	src/legion_runtime/activemsg.cc	/^extern void record_message(gasnet_node_t source, bool sent_reply)$/;"	f
record_region_dependence	src/legion_runtime/legion_trace.cc	/^    void LegionTrace::record_region_dependence(Operation *target, $/;"	f	class:LegionRuntime::HighLevel::LegionTrace
record_user_coherence	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::record_user_coherence(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
records	src/legion_runtime/region_tree.h	/^        std::vector<CallRecord> records;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
records_to_preallocate	include/acpi/actbl1.h	/^	uint32_t records_to_preallocate;$/;"	m	struct:acpi_hest_aer_common
records_to_preallocate	include/acpi/actbl1.h	/^	uint32_t records_to_preallocate;$/;"	m	struct:acpi_hest_generic
records_to_preallocate	include/acpi/actbl1.h	/^	uint32_t records_to_preallocate;$/;"	m	struct:acpi_hest_ia_corrected
records_to_preallocate	include/acpi/actbl1.h	/^	uint32_t records_to_preallocate;$/;"	m	struct:acpi_hest_ia_machine_check
records_to_preallocate	include/acpi/actbl1.h	/^	uint32_t records_to_preallocate;$/;"	m	struct:acpi_hest_ia_nmi
recover	src/lua_src/ldo.c	/^static int recover (lua_State *L, int status) {$/;"	f	file:
rect_data	src/legion_runtime/lowlevel.h	/^      int rect_data[2 * MAX_RECT_DIM];$/;"	m	class:LegionRuntime::LowLevel::Domain
recurse	src/legion_runtime/legion.h	/^        bool recurse;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
recycle_distributed_id	src/legion_runtime/runtime.cc	/^    void Runtime::recycle_distributed_id(DistributedID did, Event recycle_event)$/;"	f	class:LegionRuntime::HighLevel::Runtime
recycle_events	src/legion_runtime/garbage_collection.h	/^      std::set<Event> recycle_events;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
recycle_physical_instance	src/legion_runtime/runtime.cc	/^    void MemoryManager::recycle_physical_instance(InstanceManager *instance)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
recycle_physical_instance	src/legion_runtime/runtime.cc	/^    void Runtime::recycle_physical_instance(InstanceManager *inst)$/;"	f	class:LegionRuntime::HighLevel::Runtime
recycled	src/legion_runtime/region_tree.h	/^      bool recycled;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
red	include/nautilus/multiboot2.h	/^  multiboot_uint8_t red;$/;"	m	struct:multiboot_color
red_fold	src/legion_runtime/lowlevel_dma.cc	/^      bool red_fold;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
red_fold	src/legion_runtime/lowlevel_dma.h	/^      bool red_fold;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
red_fold	src/legion_runtime/shared_lowlevel.cc	/^      bool red_fold;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
red_list_size	src/legion_runtime/lowlevel_impl.h	/^	off_t red_list_size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
red_mask	include/dev/vesa.h	/^    uint8_t red_mask;$/;"	m	struct:vesa_mode_info
red_position	include/dev/vesa.h	/^    uint8_t red_position;$/;"	m	struct:vesa_mode_info
redfold	src/legion_runtime/lowlevel.cc	/^	bool redfold;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redfold	src/legion_runtime/lowlevel_dma.cc	/^	bool redfold;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redop	src/legion_runtime/legion.h	/^      ReductionOpID redop; \/**<reduction operation (default 0)*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
redop	src/legion_runtime/legion_logging.h	/^        ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
redop	src/legion_runtime/legion_logging.h	/^        ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
redop	src/legion_runtime/legion_logging.h	/^        ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
redop	src/legion_runtime/legion_profiling.h	/^        unsigned redop;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
redop	src/legion_runtime/legion_tasks.h	/^      ReductionOpID redop;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
redop	src/legion_runtime/legion_utilities.h	/^      ReductionOpID     redop;$/;"	m	struct:LegionRuntime::HighLevel::RegionUsage
redop	src/legion_runtime/lowlevel.cc	/^	const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redop	src/legion_runtime/lowlevel_dma.cc	/^	const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList	file:
redop	src/legion_runtime/lowlevel_dma.cc	/^	const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce	file:
redop	src/legion_runtime/lowlevel_dma.cc	/^      const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
redop	src/legion_runtime/lowlevel_dma.cc	/^      const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
redop	src/legion_runtime/region_tree.h	/^      ReductionOpID redop;$/;"	m	struct:LegionRuntime::HighLevel::FieldState
redop	src/legion_runtime/region_tree.h	/^      const ReductionOpID redop;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
redop	src/legion_runtime/region_tree.h	/^      const ReductionOpID redop;$/;"	m	class:LegionRuntime::HighLevel::ReductionManager
redop	src/legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop; \/\/ for all reductions$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
redop	src/legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
redop	src/legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold	file:
redop	src/legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply	file:
redop	src/legion_runtime/shared_lowlevel.cc	/^        const ReductionOpUntyped *redop;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold	file:
redop_id	src/legion_runtime/lowlevel.cc	/^      ReductionOpID redop_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
redop_id	src/legion_runtime/lowlevel_dma.cc	/^      ReductionOpID redop_id;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
redop_id	src/legion_runtime/lowlevel_dma.h	/^      ReductionOpID redop_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteCopyArgs
redop_id	src/legion_runtime/shared_lowlevel.cc	/^      ReductionOpID redop_id;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
redop_table	src/legion_runtime/shared_lowlevel.cc	/^      ReductionOpTable redop_table;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
redopid	src/legion_runtime/lowlevel.cc	/^      ReductionOpID redopid;$/;"	m	struct:LegionRuntime::LowLevel::CreateInstancePayload	file:
redopid	src/legion_runtime/lowlevel.cc	/^      ReductionOpID redopid;$/;"	m	struct:LegionRuntime::LowLevel::RemoteRedListArgs	file:
redopid	src/legion_runtime/lowlevel_dma.cc	/^	ReductionOpID redopid;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList	file:
redopid	src/legion_runtime/lowlevel_impl.h	/^	ReductionOpID redopid;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
reduce	src/legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
reduce	src/legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
reduce	src/legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
reduce	src/legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
reduce	src/legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
reduce	src/legion_runtime/accessor.h	/^	  inline void reduce(ptr_t ptr, typename REDOP::RHS newval) const$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
reduce	src/legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
reduce	src/legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
reduce	src/legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const { REDOP::template fold<true>(((RHS*)array_base)[ptr.value], newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
reduce	src/legion_runtime/lowlevel.h	/^      void reduce(ptr_t ptr, RHS newval) const { ria.template reduce<REDOP>(ptr, newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
reduce_from	src/legion_runtime/region_tree.cc	/^    void ReductionView::reduce_from(ReductionOpID redop,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
reduce_node	src/test/circuit_cpu.cc	/^static inline void reduce_node(const RegionAccessor<AT1,typename REDOP::LHS> &priv,$/;"	f	file:
reduce_op_table	src/legion_runtime/lowlevel.cc	/^    ReductionOpTable reduce_op_table;$/;"	m	namespace:LegionRuntime::LowLevel	file:
reduce_slow_case	src/legion_runtime/lowlevel.cc	/^    void RegionAccessor<AccessorReductionList>::reduce_slow_case(size_t my_pos, unsigned ptrvalue,$/;"	f	class:LegionRuntime::LowLevel::RegionAccessor
reduce_to	src/legion_runtime/region_tree.cc	/^    bool CompositeView::reduce_to(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
reduce_to	src/legion_runtime/region_tree.cc	/^    bool MaterializedView::reduce_to(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
reduce_to	src/legion_runtime/region_tree.cc	/^    bool ReductionView::reduce_to(ReductionOpID redop, $/;"	f	class:LegionRuntime::HighLevel::ReductionView
reduction	src/legion_runtime/shared_lowlevel.cc	/^        bool reduction; \/\/ reduction fold$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
reduction_future	src/legion_runtime/legion_tasks.h	/^      Future reduction_future;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
reduction_instances	src/legion_runtime/runtime.h	/^                     MEMORY_REDUCTION_ALLOC>::map reduction_instances;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
reduction_list	src/legion_runtime/legion.h	/^      bool reduction_list;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
reduction_mask	src/legion_runtime/region_tree.h	/^      FieldMask reduction_mask;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
reduction_mask	src/legion_runtime/region_tree.h	/^      FieldMask reduction_mask;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
reduction_op	src/legion_runtime/legion_tasks.h	/^      const ReductionOp *reduction_op;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
reduction_state	src/legion_runtime/legion_tasks.h	/^      void *reduction_state; $/;"	m	class:LegionRuntime::HighLevel::MultiTask
reduction_state_size	src/legion_runtime/legion_tasks.h	/^      size_t reduction_state_size;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
reduction_users	src/legion_runtime/region_tree.h	/^      std::list<PhysicalUser> reduction_users;$/;"	m	class:LegionRuntime::HighLevel::ReductionView
reduction_views	src/legion_runtime/region_tree.h	/^                     VALID_REDUCTION_ALLOC>::map reduction_views;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
reduction_views	src/legion_runtime/region_tree.h	/^      std::map<ReductionView*,FieldMask> reduction_views;$/;"	m	struct:LegionRuntime::HighLevel::CompositeCloser
ref	src/legion_runtime/accessor.h	/^          inline T& ref(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
ref	src/legion_runtime/accessor.h	/^          inline T& ref(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
ref	src/legion_runtime/accessor.h	/^          inline T& ref(ptr_t ptr) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
ref	src/legion_runtime/legion.h	/^      inline Coloring& ref(void) { return coloring; }$/;"	f	class:LegionRuntime::HighLevel::ColoringSerializer
ref	src/legion_runtime/legion.h	/^      inline DomainColoring& ref(void) { return coloring; }$/;"	f	class:LegionRuntime::HighLevel::DomainColoringSerializer
ref	src/legion_runtime/lowlevel.h	/^      ET& ref(ptr_t ptr) const { return ria.ref(ptr); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
ref	src/legion_runtime/lowlevel.h	/^      T &ref(ptr_t ptr) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
ref	src/legion_runtime/lowlevel.h	/^      T &ref(ptr_t ptr) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
refcount	include/nautilus/thread.h	/^    unsigned long refcount;$/;"	m	struct:nk_thread
reference	include/acpi/actypes.h	/^	} reference;$/;"	m	union:acpi_object	typeref:struct:acpi_object::__anon24
reference	src/legion_runtime/legion_allocation.h	/^      typedef T&              reference;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
reference	src/legion_runtime/legion_ops.h	/^      InstanceRef reference;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
reference	src/legion_runtime/runtime.h	/^      InstanceRef reference;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
references	src/legion_runtime/arrays.h	/^      unsigned references;$/;"	m	class:LegionRuntime::Arrays::Mapping
references	src/legion_runtime/garbage_collection.h	/^      unsigned int references;$/;"	m	class:LegionRuntime::HighLevel::Collectable
references	src/legion_runtime/rectangle_set.h	/^      unsigned int references;$/;"	m	class:LegionRuntime::HighLevel::Segment
reg1_idx	src/legion_runtime/legion_ops.h	/^        unsigned reg1_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
reg2_idx	src/legion_runtime/legion_ops.h	/^        unsigned reg2_idx;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochOp::DependenceRecord
regbase	src/legion_runtime/lowlevel.cc	/^      void *regbase;$/;"	m	class:LegionRuntime::LowLevel::RemoteMemory	file:
region	src/legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
region	src/legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
region	src/legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
region	src/legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
region	src/legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
region	src/legion_runtime/accessor.h	/^          void *region;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
region	src/legion_runtime/legion.h	/^      LogicalRegion region; \/**< mutually exclusive with partition*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
region	src/legion_runtime/legion.h	/^      PhysicalRegion                    region;$/;"	m	class:LegionRuntime::HighLevel::Acquire
region	src/legion_runtime/legion.h	/^      PhysicalRegion                    region;$/;"	m	class:LegionRuntime::HighLevel::Release
region	src/legion_runtime/legion_logging.h	/^        bool region;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
region	src/legion_runtime/legion_ops.h	/^      PhysicalRegion region;$/;"	m	class:LegionRuntime::HighLevel::MapOp
region	src/legion_runtime/shared_lowlevel.cc	/^        IndexSpace region;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
region_deleted	src/legion_runtime/legion_tasks.h	/^      std::vector<bool> region_deleted; $/;"	m	class:LegionRuntime::HighLevel::SingleTask
region_length	include/acpi/actbl1.h	/^	uint32_t region_length;	\/* Length of the boot error region *\/$/;"	m	struct:acpi_table_bert
region_node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *region_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
region_node	src/legion_runtime/region_tree.h	/^      RegionNode *const region_node;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
region_node	src/legion_runtime/region_tree.h	/^      RegionNode *const region_node;$/;"	m	class:LegionRuntime::HighLevel::ReductionManager
region_nodes	src/legion_runtime/region_tree.h	/^      std::map<LogicalRegion,RegionNode*>     region_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
region_requirements	src/legion_runtime/legion.h	/^      std::vector<RegionRequirement>     region_requirements;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
region_requirements	src/legion_runtime/legion.h	/^      std::vector<RegionRequirement>     region_requirements;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
regions	include/nautilus/numa.h	/^    struct list_head regions;$/;"	m	struct:numa_domain	typeref:struct:numa_domain::list_head
regions	src/legion_runtime/legion.h	/^      std::vector<RegionRequirement>      regions;$/;"	m	class:LegionRuntime::HighLevel::Task
register_child	src/legion_runtime/region_tree.cc	/^    void RegionTreePath::register_child(unsigned depth, Color color)$/;"	f	class:LegionRuntime::HighLevel::RegionTreePath
register_child_commit	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_commit(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_commit	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_commit(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_child_complete	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_complete(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_complete	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_complete(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_child_executed	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_executed(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_executed	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_executed(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_child_operation	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::register_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_child_operation	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::register_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_close	src/legion_runtime/legion_profiling.h	/^      static inline void register_close(UniqueID uid, UniqueID pid)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_copy	src/legion_runtime/legion_profiling.h	/^      static inline void register_copy(UniqueID uid, UniqueID pid)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_copy	src/legion_runtime/shared_lowlevel.cc	/^    Event CopyOperation::register_copy(Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
register_count	src/acpi/acpica/aclocal.h	/^	u32 register_count;	\/* Number of register pairs in block *\/$/;"	m	struct:acpi_gpe_block_info
register_cpu_variants	src/test/circuit.h	/^  void register_cpu_variants(void)$/;"	f	namespace:TaskHelper
register_dependence	src/legion_runtime/legion_ops.cc	/^    bool Operation::register_dependence(Operation *target, $/;"	f	class:LegionRuntime::HighLevel::Operation
register_dependence	src/legion_runtime/legion_ops.cc	/^    bool Operation::register_dependence(unsigned idx, Operation *target, $/;"	f	class:LegionRuntime::HighLevel::Operation
register_dependent	src/legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::register_dependent(Triggerable *target, EventGeneration gen, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
register_distributed_collectable	src/legion_runtime/runtime.cc	/^    void Runtime::register_distributed_collectable(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_event	src/legion_runtime/legion_profiling.h	/^      static inline void register_event(UniqueID uid, ProfKind kind)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_fence_dependence	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::register_fence_dependence(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
register_fence_dependence	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::register_fence_dependence(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_field_creation	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_creation(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_creations	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_creations($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_creations	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_creations(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_deletions	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_deletions($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_deletions	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_deletions(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_creation	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_creation(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_creations	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_creations($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_deletion	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_deletion(FieldSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_field_space_deletions	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_field_space_deletions($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_future	src/legion_runtime/runtime.cc	/^    void Runtime::register_future(DistributedID did, Future::Impl *impl)$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_hierarchical_collectable	src/legion_runtime/runtime.cc	/^    void Runtime::register_hierarchical_collectable(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_host_memory	src/legion_runtime/lowlevel_gpu.cc	/^      void register_host_memory(void *base, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
register_host_memory	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::register_host_memory(void *base, size_t size)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
register_hybrid_variants	src/test/circuit.h	/^  void register_hybrid_variants(void)$/;"	f	namespace:TaskHelper
register_index_space_creation	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_creation(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_space_creations	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_creations($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_space_deletion	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_deletion(IndexSpace space)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_space_deletions	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_index_space_deletions($/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_index_task	src/legion_runtime/legion.h	/^    \/*static*\/ TaskID HighLevelRuntime::register_index_task(TaskID id, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_info	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_register_info *register_info;	\/* Backpointer to register info *\/$/;"	m	struct:acpi_gpe_event_info	typeref:struct:acpi_gpe_event_info::acpi_gpe_register_info
register_info	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_register_info *register_info;	\/* One per GPE register pair *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_register_info
register_inline_mapped_region	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::register_inline_mapped_region(PhysicalRegion &region)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
register_instance_creation	src/legion_runtime/legion_profiling.h	/^      static inline void register_instance_creation(unsigned inst_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_instance_deletion	src/legion_runtime/legion_profiling.h	/^      static inline void register_instance_deletion(unsigned inst_id)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_int_handler	src/nautilus/irq.c	/^register_int_handler (uint16_t int_vec, $/;"	f
register_irq_handler	src/nautilus/irq.c	/^register_irq_handler (uint16_t irq, $/;"	f
register_layout_description	src/legion_runtime/region_tree.cc	/^    LayoutDescription* FieldSpaceNode::register_layout_description($/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
register_legion_task	src/legion_runtime/legion.h	/^    \/*static*\/ TaskID HighLevelRuntime::register_legion_task(TaskID id,$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_logical_dependences	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::register_logical_dependences(ContextID ctx, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
register_logical_node	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::register_logical_node(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
register_logical_view	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::register_logical_view(DistributedID did,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
register_map	src/legion_runtime/legion_profiling.h	/^      static inline void register_map(UniqueID uid, UniqueID pid)$/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_mapping	src/legion_runtime/arrays.h	/^      bool register_mapping(void) {$/;"	f	class:LegionRuntime::Arrays::MappingRegistry
register_mapping	src/legion_runtime/arrays.h	/^      static void register_mapping(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
register_must_epoch	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::register_must_epoch(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
register_must_epoch	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::register_must_epoch(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
register_node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *register_node;$/;"	m	struct:acpi_create_field_info	typeref:struct:acpi_create_field_info::acpi_namespace_node
register_operation	src/legion_runtime/legion_trace.cc	/^    void LegionTrace::register_operation(Operation *op, GenerationID gen)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
register_operation	src/legion_runtime/runtime.cc	/^    void Grant::Impl::register_operation(Event completion_event)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
register_partition_function	src/legion_runtime/legion.h	/^    \/*static*\/ ProjectionID HighLevelRuntime::register_partition_function($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_partition_projection_function	src/legion_runtime/legion.cc	/^      register_partition_projection_function(ProjectionID handle, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_partition_projection_function	src/legion_runtime/runtime.cc	/^      register_partition_projection_function(ProjectionID handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
register_physical_manager	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::register_physical_manager(PhysicalManager *manager)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
register_physical_region	src/legion_runtime/region_tree.cc	/^    InstanceRef RegionTreeForest::register_physical_region($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
register_predicate_dependence	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::register_predicate_dependence(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
register_reduction_op	src/legion_runtime/legion.h	/^    \/*static*\/ void HighLevelRuntime::register_reduction_op($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_region	include/acpi/actbl1.h	/^	struct acpi_generic_address register_region;$/;"	m	struct:acpi_whea_header	typeref:struct:acpi_whea_header::acpi_generic_address
register_region	include/acpi/actbl2.h	/^	struct acpi_generic_address register_region;$/;"	m	struct:acpi_wdat_entry	typeref:struct:acpi_wdat_entry::acpi_generic_address
register_region	src/legion_runtime/region_tree.cc	/^    InstanceRef RegionNode::register_region(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
register_region_creation	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_creation(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_creations	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_creations(const std::set<LogicalRegion> &regs)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_deletion	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_deletion(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_deletions	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::register_region_deletions(const std::set<LogicalRegion> &regs)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
register_region_dependence	src/legion_runtime/legion_ops.cc	/^    bool Operation::register_region_dependence(unsigned idx, Operation *target,$/;"	f	class:LegionRuntime::HighLevel::Operation
register_region_function	src/legion_runtime/legion.h	/^    \/*static*\/ ProjectionID HighLevelRuntime::register_region_function($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_region_projection_function	src/legion_runtime/legion.cc	/^      register_region_projection_function(ProjectionID handle, void *func_ptr)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_region_projection_function	src/legion_runtime/runtime.cc	/^    \/*static*\/ ProjectionID Runtime::register_region_projection_function($/;"	f	class:LegionRuntime::HighLevel::Runtime
register_request	src/legion_runtime/shared_lowlevel.cc	/^    Event ReservationImpl::register_request(unsigned m, bool exc, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
register_runtime_tasks	src/legion_runtime/runtime.cc	/^                          register_runtime_tasks(Processor::TaskIDTable &table)$/;"	f	class:LegionRuntime::HighLevel::Runtime
register_single_task	src/legion_runtime/legion.h	/^    \/*static*\/ TaskID HighLevelRuntime::register_single_task(TaskID id, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
register_single_task	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::register_single_task(SingleTask *single, unsigned index)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
register_slice_task	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::register_slice_task(SliceTask *slice)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
register_subop	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::register_subop(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
register_task	src/legion_runtime/legion_profiling.h	/^      static inline void register_task(unsigned tid, UniqueID uid, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_task	src/test/circuit_cpu.cc	/^void CheckTask::register_task(void)$/;"	f	class:CheckTask
register_task_variant	src/legion_runtime/legion_profiling.h	/^      static inline void register_task_variant(unsigned task_id, $/;"	f	namespace:LegionRuntime::HighLevel::LegionProf
register_waiter	src/legion_runtime/legion_ops.cc	/^    bool Predicate::Impl::register_waiter(PredicateWaiter *waiter,$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
register_waiter	src/legion_runtime/runtime.cc	/^    void Future::Impl::register_waiter(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
registered	src/legion_runtime/lowlevel.cc	/^      bool prealloced, registered;$/;"	m	class:LegionRuntime::LowLevel::LocalCPUMemory	file:
registered_waiters	src/legion_runtime/runtime.h	/^      std::set<AddressSpaceID> registered_waiters;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
registerlocalvar	src/lua_src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
registration_callback	src/legion_runtime/runtime.cc	/^                                              registration_callback = NULL;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
registration_callback	src/legion_runtime/runtime.h	/^      static volatile RegistrationCallbackFnptr registration_callback;$/;"	m	class:LegionRuntime::HighLevel::Runtime
registry	src/legion_runtime/arrays.h	/^      static MappingRegistry<IDIM_, ODIM_> registry;$/;"	m	class:LegionRuntime::Arrays::Mapping
registry	src/legion_runtime/lowlevel.cc	/^    MappingRegistry<IDIM, ODIM> Mapping<IDIM, ODIM>::registry;$/;"	m	class:LegionRuntime::Arrays::Mapping	file:
registry	src/legion_runtime/shared_lowlevel.cc	/^    MappingRegistry<IDIM, ODIM> Mapping<IDIM, ODIM>::registry;$/;"	m	class:LegionRuntime::Arrays::Mapping	file:
rehash	src/lua_src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
reinit	scripts/kconfig/qconf.cc	/^void ConfigList::reinit(void)$/;"	f	class:ConfigList
reinsert	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>* IntervalTreeNode<T,DISCRETE>::reinsert($/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
reinsert	src/legion_runtime/region_tree.h	/^      std::deque<LogicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
reinsert	src/legion_runtime/region_tree.h	/^      std::deque<LogicalUser> reinsert;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
reinsert	src/legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
reinsert	src/legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
reinsert	src/legion_runtime/region_tree.h	/^      std::deque<PhysicalUser> reinsert;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
reinsert_count	src/legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
reinsert_count	src/legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
reinsert_count	src/legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
reinsert_count	src/legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
reinsert_count	src/legion_runtime/region_tree.h	/^      unsigned reinsert_count;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
reinsert_stack	src/legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
reinsert_stack	src/legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
reinsert_stack	src/legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::PhysicalFilter
reinsert_stack	src/legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
reinsert_stack	src/legion_runtime/region_tree.h	/^      std::deque<unsigned> reinsert_stack;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
rel_time	src/legion_runtime/utilities.h	/^      static double rel_time(void)$/;"	f	class:LegionRuntime::LowLevel::Clock
related_source_id	include/acpi/actbl1.h	/^	uint16_t related_source_id;$/;"	m	struct:acpi_hest_generic
release	src/legion_runtime/legion.cc	/^    void Lock::release(void)$/;"	f	class:LegionRuntime::HighLevel::Lock
release	src/legion_runtime/lowlevel.cc	/^    void Reservation::Impl::release(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
release	src/legion_runtime/lowlevel.cc	/^    void Reservation::release(Event wait_on \/* = Event::NO_EVENT *\/) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
release	src/legion_runtime/lowlevel_impl.h	/^      void release(void)$/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
release	src/legion_runtime/shared_lowlevel.cc	/^    void Reservation::release(Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::Reservation
release	src/legion_runtime/shared_lowlevel.cc	/^    void ReservationImpl::release(Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
release_context	src/legion_runtime/legion_tasks.cc	/^    RegionTreeContext SingleTask::release_context(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
release_grant	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::release_grant(Context ctx, Grant grant)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
release_grant	src/legion_runtime/runtime.cc	/^    void Grant::Impl::release_grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
release_grant	src/legion_runtime/runtime.cc	/^    void Runtime::release_grant(Context ctx, Grant grant)$/;"	f	class:LegionRuntime::HighLevel::Runtime
release_op_lock	src/legion_runtime/runtime.h	/^      Reservation release_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
release_perf_event	src/nautilus/pmc.c	/^release_perf_event (perf_event_t * event)$/;"	f
release_physical_state	src/legion_runtime/region_tree.cc	/^    bool RegionTreeNode::release_physical_state(PhysicalState &state)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
release_reservation	src/legion_runtime/lowlevel.cc	/^    void Reservation::Impl::release_reservation(void)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
release_srcptr	src/legion_runtime/activemsg.cc	/^void SrcDataPool::release_srcptr(void *srcptr)$/;"	f	class:SrcDataPool
release_srcptr	src/legion_runtime/activemsg.cc	/^void release_srcptr(void *srcptr)$/;"	f
release_srcptr_handler	src/legion_runtime/activemsg.cc	/^\/*static*\/ void SrcDataPool::release_srcptr_handler(gasnet_token_t token,$/;"	f	class:SrcDataPool
release_user	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::release_user()$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
release_user_coherence	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::release_user_coherence(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
release_user_coherence	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::release_user_coherence(ContextID ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
remaining	include/nautilus/barrier.h	/^    unsigned remaining;$/;"	m	struct:nk_barrier
remaining	src/legion_runtime/region_tree.h	/^      size_t remaining;$/;"	m	class:LegionRuntime::HighLevel::LegionStack
remaining	src/legion_runtime/runtime.h	/^      int remaining;$/;"	m	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
remaining	src/legion_runtime/shared_lowlevel.cc	/^	size_t remaining;$/;"	m	class:LegionRuntime::LowLevel::MemoryImpl	file:
remaining_arrivals	src/legion_runtime/utilities.h	/^      unsigned remaining_arrivals;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
remaining_bytes	src/legion_runtime/shared_lowlevel.cc	/^    size_t MemoryImpl::remaining_bytes(void) $/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
remaining_capacity	src/legion_runtime/runtime.h	/^      size_t remaining_capacity;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
remaining_count	src/legion_runtime/lowlevel.cc	/^      int remaining_count;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteEntry	file:
remaining_elmts	src/legion_runtime/legion.h	/^      int remaining_elmts;$/;"	m	class:LegionRuntime::HighLevel::IndexIterator
remaining_leaves	src/legion_runtime/utilities.h	/^      unsigned remaining_leaves;$/;"	m	class:LegionRuntime::LowLevel::UtilityBarrier
remaining_logical	src/legion_runtime/region_tree.h	/^      FieldMask remaining_logical;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
remaining_mpi_notifications	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::remaining_mpi_notifications = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
remaining_mpi_notifications	src/legion_runtime/runtime.h	/^      static unsigned remaining_mpi_notifications;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remaining_physical	src/legion_runtime/region_tree.h	/^      FieldMask remaining_physical;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
remaining_stops	src/legion_runtime/shared_lowlevel.cc	/^        unsigned remaining_stops; \/\/ for utility processor knowing when to stop$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
remaining_subop_commits	src/legion_runtime/legion_ops.h	/^      unsigned remaining_subop_commits;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
remaining_subop_completes	src/legion_runtime/legion_ops.h	/^      unsigned remaining_subop_completes;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
remap_physical_region	src/legion_runtime/region_tree.cc	/^    MappingRef RegionTreeForest::remap_physical_region(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
remap_region	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::remap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
remap_region	src/legion_runtime/legion_ops.h	/^      bool remap_region;$/;"	m	class:LegionRuntime::HighLevel::MapOp
remap_region	src/legion_runtime/region_tree.cc	/^    void RegionNode::remap_region(ContextID ctx, MaterializedView *view,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
remap_region	src/legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::remap_region(Event new_ready)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
remap_region	src/legion_runtime/runtime.cc	/^    void Runtime::remap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::Runtime
remarkupvals	src/lua_src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
remote_address_procs	src/legion_runtime/runtime.h	/^      const std::set<Processor> remote_address_procs;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
remote_address_space	src/legion_runtime/runtime.h	/^      const AddressSpaceID remote_address_space;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
remote_completion_event	src/legion_runtime/legion_tasks.h	/^      Event remote_completion_event;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_contexts	src/legion_runtime/legion_tasks.h	/^      std::deque<RegionTreeContext> remote_contexts;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_contexts	src/legion_runtime/legion_tasks.h	/^      std::deque<RegionTreeContext> remote_contexts;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
remote_contexts	src/legion_runtime/runtime.h	/^                     RUNTIME_REMOTE_ALLOC>::map remote_contexts;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remote_ctx	src/legion_runtime/region_tree.h	/^      const ContextID remote_ctx;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
remote_ctx	src/legion_runtime/region_tree.h	/^      const ContextID remote_ctx;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
remote_legion_spy_completion	src/legion_runtime/legion_tasks.h	/^      Event remote_legion_spy_completion;$/;"	m	class:LegionRuntime::HighLevel::RemoteTask
remote_lock	src/legion_runtime/runtime.h	/^      Reservation remote_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remote_outermost_context	src/legion_runtime/legion_tasks.h	/^      RegionTreeContext remote_outermost_context;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_outermost_context	src/legion_runtime/legion_tasks.h	/^      RegionTreeContext remote_outermost_context;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
remote_references	src/legion_runtime/garbage_collection.h	/^      std::map<AddressSpaceID,int> remote_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
remote_references	src/legion_runtime/garbage_collection.h	/^      unsigned remote_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
remote_sharer_mask	src/legion_runtime/lowlevel_impl.h	/^      NodeMask remote_waiter_mask, remote_sharer_mask;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
remote_spaces	src/legion_runtime/garbage_collection.h	/^      std::set<AddressSpaceID> remote_spaces;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
remote_state	src/legion_runtime/region_tree.h	/^      std::map<AddressSpaceID,FieldMask> remote_state;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
remote_task_lock	src/legion_runtime/runtime.h	/^      Reservation remote_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
remote_unique_id	src/legion_runtime/legion_tasks.h	/^      UniqueID remote_unique_id;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
remote_unique_id	src/legion_runtime/legion_tasks.h	/^      UniqueID remote_unique_id;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
remote_waiter_mask	src/legion_runtime/lowlevel_impl.h	/^      NodeMask remote_waiter_mask, remote_sharer_mask;$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
remote_waiters	src/legion_runtime/lowlevel_impl.h	/^      std::map<Event::gen_t,NodeMask> remote_waiters;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl
remove	include/nautilus/acpi.h	/^	void (*remove)(acpi_handle handle);$/;"	m	struct:acpi_pci_driver
remove	include/nautilus/fs.h	/^    int   (*remove)(void *state, char *path);$/;"	m	struct:nk_fs_int
remove	src/nautilus/fs.c	/^static int remove(struct nk_fs *fs, char* path) $/;"	f	file:
remove	src/nautilus/libccompat.c	/^int remove(const char *path)$/;"	f
removeColumn	scripts/kconfig/qconf.h	/^	void removeColumn(colIdx idx)$/;"	f	class:ConfigList
remove_adjacent	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::remove_adjacent(Segment<T> *old)$/;"	f	class:LegionRuntime::HighLevel::Segment
remove_child	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
remove_child	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
remove_child	src/legion_runtime/region_tree.cc	/^    void PartitionNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
remove_child	src/legion_runtime/region_tree.cc	/^    void RegionNode::remove_child(Color c)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
remove_created_field	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::remove_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
remove_created_field	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::remove_created_field(FieldSpace handle, FieldID fid)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
remove_created_index	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::remove_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
remove_created_index	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::remove_created_index(IndexSpace handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
remove_created_region	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::remove_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
remove_created_region	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::remove_created_region(LogicalRegion handle)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
remove_gc_reference	src/legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_gc_reference	src/legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_gc_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_gc_references	src/legion_runtime/region_tree.cc	/^    void CompositeNode::remove_gc_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
remove_local_reference	src/legion_runtime/lowlevel.h	/^      void remove_local_reference(void)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
remove_mapping_reference	src/legion_runtime/legion_ops.cc	/^    void Operation::remove_mapping_reference(GenerationID our_gen)$/;"	f	class:LegionRuntime::HighLevel::Operation
remove_point	src/legion_runtime/legion.cc	/^    bool ArgumentMap::remove_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
remove_point	src/legion_runtime/legion.h	/^    inline bool ArgumentMap::remove_point(const PT point[DIM])$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
remove_point	src/legion_runtime/runtime.cc	/^    bool ArgumentMap::Impl::remove_point(const DomainPoint &point)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
remove_predicate_reference	src/legion_runtime/legion_ops.cc	/^    void Predicate::Impl::remove_predicate_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
remove_reference	src/legion_runtime/arrays.h	/^      inline bool remove_reference(void)$/;"	f	class:LegionRuntime::Arrays::Mapping
remove_reference	src/legion_runtime/garbage_collection.h	/^    inline bool Collectable::remove_reference(unsigned cnt \/*= 1*\/)$/;"	f	class:LegionRuntime::HighLevel::Collectable
remove_reference	src/legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::remove_reference(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
remove_remote_reference	src/legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_remote_reference(AddressSpaceID sid,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_remote_reference	src/legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_remote_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_resource_reference	src/legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_resource_reference	src/legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_resource_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_valid_reference	src/legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::remove_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
remove_valid_reference	src/legion_runtime/garbage_collection.cc	/^    bool HierarchicalCollectable::remove_valid_reference(unsigned cnt \/*=1*\/)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
remove_valid_reference	src/legion_runtime/region_tree.cc	/^    void InstanceRef::remove_valid_reference(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
remove_valid_references	src/legion_runtime/region_tree.cc	/^    \/*static*\/ void RegionTreeNode::remove_valid_references($/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
remove_valid_references	src/legion_runtime/region_tree.cc	/^    void CompositeNode::remove_valid_references(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
remove_valid_view	src/legion_runtime/region_tree.cc	/^    void InstanceManager::remove_valid_view(MaterializedView *view)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
removeentry	src/lua_src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	src/lua_src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	src/lua_src/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
rename	src/nautilus/libccompat.c	/^int rename(const char *old, const char *new)$/;"	f
renderer_edited	scripts/kconfig/gconf.c	/^static void renderer_edited(GtkCellRendererText * cell,$/;"	f	file:
renderer_toggled	scripts/kconfig/gconf.c	/^static void renderer_toggled(GtkCellRendererToggle * cell,$/;"	f	file:
repeatstat	src/lua_src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
replace_adjacent	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::replace_adjacent(Segment<T> *old_seg,$/;"	f	class:LegionRuntime::HighLevel::Segment
replace_button_icon	scripts/kconfig/gconf.c	/^void replace_button_icon(GladeXML * xml, GdkDrawable * window,$/;"	f
replace_default_mapper	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::replace_default_mapper(Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
replace_default_mapper	src/legion_runtime/runtime.cc	/^    void ProcessorManager::replace_default_mapper(Mapper *m)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
replace_default_mapper	src/legion_runtime/runtime.cc	/^    void Runtime::replace_default_mapper(Mapper *mapper, $/;"	f	class:LegionRuntime::HighLevel::Runtime
report	src/lua_src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
report_activemsg_status	src/legion_runtime/activemsg.cc	/^  void report_activemsg_status(FILE *f)$/;"	f	class:EndpointManager
report_activemsg_status	src/legion_runtime/activemsg.cc	/^extern void report_activemsg_status(FILE *f)$/;"	f
report_aliased_requirements	src/legion_runtime/legion_ops.cc	/^    void CopyOp::report_aliased_requirements(unsigned idx1, unsigned idx2)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
report_aliased_requirements	src/legion_runtime/legion_ops.cc	/^    void Operation::report_aliased_requirements(unsigned idx1, unsigned idx2)$/;"	f	class:LegionRuntime::HighLevel::Operation
report_aliased_requirements	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::report_aliased_requirements(unsigned idx1, unsigned idx2)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
report_aliased_requirements	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::report_aliased_requirements(unsigned idx1, $/;"	f	class:LegionRuntime::HighLevel::IndividualTask
report_timers	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::report_timers(bool local_only \/*= false*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
report_timers	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::report_timers(bool local_only \/* = false*\/)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
report_trace	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::PerfTrace::report_trace(unsigned long long diff)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
req	src/legion_runtime/lowlevel_dma.cc	/^	DmaRequest *req;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest::Waiter	file:
req	src/legion_runtime/region_tree.h	/^      RegionRequirement &req;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
req	src/legion_runtime/runtime.h	/^      RegionRequirement req;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
request	src/legion_runtime/activemsg.h	/^  static RPLTYPE request(gasnet_node_t dest, REQTYPE args)$/;"	f	class:ActiveMessageShortReply
request	src/legion_runtime/activemsg.h	/^  static RPLTYPE request(gasnet_node_t dest, REQTYPE args,$/;"	f	class:ActiveMessageMediumReply
request	src/legion_runtime/activemsg.h	/^  static void request(gasnet_node_t dest, MSGTYPE args)$/;"	f	class:ActiveMessageShortNoReply
request	src/legion_runtime/activemsg.h	/^  static void request(gasnet_node_t dest, \/*const*\/ MSGTYPE &args, $/;"	f	class:ActiveMessageMediumNoReply
request_early_commit	src/legion_runtime/legion_ops.cc	/^    bool Operation::request_early_commit(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
request_shutdown	src/legion_runtime/lowlevel.cc	/^    void UtilityProcessor::request_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
request_valid_mask	src/legion_runtime/lowlevel.cc	/^    Event IndexSpace::Impl::request_valid_mask(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
requested	src/legion_runtime/lowlevel_impl.h	/^      bool requested; \/\/ do we have a request for the lock in flight?$/;"	m	class:LegionRuntime::LowLevel::Reservation::Impl
requests	include/acpi/actypes.h	/^	uint32_t requests;$/;"	m	struct:acpi_memory_list
requests	include/nautilus/multiboot2.h	/^  multiboot_uint32_t requests[0];$/;"	m	struct:multiboot_header_tag_information_request
requests	src/legion_runtime/region_tree.h	/^      std::deque<std::pair<UserEvent,bool\/*exclusive*\/> > requests;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
requests	src/legion_runtime/runtime.h	/^      std::vector<ReservationRequest> requests;$/;"	m	class:LegionRuntime::HighLevel::Grant::Impl
requests	src/legion_runtime/shared_lowlevel.cc	/^	std::list<ReservationRecord> requests;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
requirement	src/legion_runtime/legion.h	/^      RegionRequirement                 requirement;$/;"	m	class:LegionRuntime::HighLevel::Inline
requirement	src/legion_runtime/legion.h	/^      RegionRequirement               requirement;$/;"	m	struct:LegionRuntime::HighLevel::InlineLauncher
requirement	src/legion_runtime/legion_ops.h	/^      RegionRequirement requirement;$/;"	m	class:LegionRuntime::HighLevel::AcquireOp
requirement	src/legion_runtime/legion_ops.h	/^      RegionRequirement requirement;$/;"	m	class:LegionRuntime::HighLevel::CloseOp
requirement	src/legion_runtime/legion_ops.h	/^      RegionRequirement requirement;$/;"	m	class:LegionRuntime::HighLevel::ReleaseOp
resched_count	src/nautilus/scheduler.c	/^    uint64_t resched_count;   \/\/ how many times resched was invoked on this thread$/;"	m	struct:nk_sched_thread_state	file:
resched_fast_max	src/nautilus/scheduler.c	/^    uint64_t resched_fast_max;$/;"	m	struct:nk_sched_percpu_state	file:
resched_fast_min	src/nautilus/scheduler.c	/^    uint64_t resched_fast_min;$/;"	m	struct:nk_sched_percpu_state	file:
resched_fast_num	src/nautilus/scheduler.c	/^    uint64_t resched_fast_num;$/;"	m	struct:nk_sched_percpu_state	file:
resched_fast_sum	src/nautilus/scheduler.c	/^    uint64_t resched_fast_sum;$/;"	m	struct:nk_sched_percpu_state	file:
resched_fast_sum2	src/nautilus/scheduler.c	/^    uint64_t resched_fast_sum2;$/;"	m	struct:nk_sched_percpu_state	file:
resched_long_count	src/nautilus/scheduler.c	/^    uint64_t resched_long_count; \/\/ how many times the long path was taken for the thread$/;"	m	struct:nk_sched_thread_state	file:
resched_slow_max	src/nautilus/scheduler.c	/^    uint64_t resched_slow_max;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_min	src/nautilus/scheduler.c	/^    uint64_t resched_slow_min;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_noswitch_max	src/nautilus/scheduler.c	/^    uint64_t resched_slow_noswitch_max;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_noswitch_min	src/nautilus/scheduler.c	/^    uint64_t resched_slow_noswitch_min;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_noswitch_num	src/nautilus/scheduler.c	/^    uint64_t resched_slow_noswitch_num;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_noswitch_sum	src/nautilus/scheduler.c	/^    uint64_t resched_slow_noswitch_sum;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_noswitch_sum2	src/nautilus/scheduler.c	/^    uint64_t resched_slow_noswitch_sum2;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_num	src/nautilus/scheduler.c	/^    uint64_t resched_slow_num;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_sum	src/nautilus/scheduler.c	/^    uint64_t resched_slow_sum;$/;"	m	struct:nk_sched_percpu_state	file:
resched_slow_sum2	src/nautilus/scheduler.c	/^    uint64_t resched_slow_sum2;$/;"	m	struct:nk_sched_percpu_state	file:
reservation	src/legion_runtime/runtime.h	/^        Reservation reservation;$/;"	m	struct:LegionRuntime::HighLevel::Grant::Impl::ReservationRequest
reservation	src/legion_runtime/shared_lowlevel.cc	/^	ReservationImpl *reservation;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl	file:
reservation	src/legion_runtime/shared_lowlevel.cc	/^	ReservationImpl *reservation;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl	file:
reservation_lock	src/legion_runtime/legion.h	/^      Reservation reservation_lock;$/;"	m	class:LegionRuntime::HighLevel::Lock
reservation_lock	src/legion_runtime/shared_lowlevel.cc	/^      nk_rwlock_t         reservation_lock;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
reservations	src/legion_runtime/lowlevel_impl.h	/^      DynamicTable<ReservationTableAllocator> reservations;$/;"	m	struct:Node
reservations	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<ReservationImpl*> reservations;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
reserve	src/legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::reserve(unsigned ptr, unsigned count \/*= 1  *\/) const$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator
reserve_contexts	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::reserve_contexts(unsigned num_contexts)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
reserve_elements	src/legion_runtime/lowlevel.cc	/^    void IndexSpaceAllocator::Impl::reserve_elements(unsigned ptr, unsigned count \/*= 1 *\/)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
reserve_srcdata	src/legion_runtime/activemsg.cc	/^void OutgoingMessage::reserve_srcdata(void)$/;"	f	class:OutgoingMessage
reserved	include/acpi/actbl.h	/^	uint8_t reserved;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_table_fadt
reserved	include/acpi/actbl.h	/^	uint8_t reserved[3];		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_table_facs
reserved	include/acpi/actbl.h	/^	uint8_t reserved[3];		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_table_rsdp
reserved	include/acpi/actbl1.h	/^	uint16_t reserved;		\/* Reserved - must be zero *\/$/;"	m	struct:acpi_madt_local_x2apic
reserved	include/acpi/actbl1.h	/^	uint16_t reserved;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_madt_local_apic_override
reserved	include/acpi/actbl1.h	/^	uint16_t reserved;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_srat_mem_affinity
reserved	include/acpi/actbl1.h	/^	uint16_t reserved;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_srat_x2apic_cpu_affinity
reserved	include/acpi/actbl1.h	/^	uint32_t reserved;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_srat_cpu_affinity
reserved	include/acpi/actbl1.h	/^	uint32_t reserved;$/;"	m	struct:acpi_hest_ia_nmi
reserved	include/acpi/actbl1.h	/^	uint32_t reserved;$/;"	m	struct:acpi_table_erst
reserved	include/acpi/actbl1.h	/^	uint64_t reserved;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_table_srat
reserved	include/acpi/actbl1.h	/^	uint64_t reserved;$/;"	m	struct:acpi_table_cpep
reserved	include/acpi/actbl1.h	/^	uint8_t reserved;		\/* Reserved - must be zero *\/$/;"	m	struct:acpi_madt_io_apic
reserved	include/acpi/actbl1.h	/^	uint8_t reserved;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_madt_io_sapic
reserved	include/acpi/actbl1.h	/^	uint8_t reserved;$/;"	m	struct:acpi_hest_generic
reserved	include/acpi/actbl1.h	/^	uint8_t reserved;$/;"	m	struct:acpi_hest_ia_error_bank
reserved	include/acpi/actbl1.h	/^	uint8_t reserved;$/;"	m	struct:acpi_whea_header
reserved	include/acpi/actbl1.h	/^	uint8_t reserved[3];		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_madt_local_sapic
reserved	include/acpi/actbl1.h	/^	uint8_t reserved[3];$/;"	m	struct:acpi_madt_local_x2apic_nmi
reserved	include/acpi/actbl1.h	/^	uint8_t reserved[3];$/;"	m	struct:acpi_table_einj
reserved	include/acpi/actbl2.h	/^	uint16_t reserved;$/;"	m	struct:acpi_dmar_device_scope
reserved	include/acpi/actbl2.h	/^	uint16_t reserved;$/;"	m	struct:acpi_dmar_reserved_memory
reserved	include/acpi/actbl2.h	/^	uint16_t reserved;$/;"	m	struct:acpi_slic_key
reserved	include/acpi/actbl2.h	/^	uint16_t reserved;$/;"	m	struct:acpi_table_tcpa
reserved	include/acpi/actbl2.h	/^	uint16_t reserved;$/;"	m	struct:acpi_wdat_entry
reserved	include/acpi/actbl2.h	/^	uint32_t reserved;$/;"	m	struct:acpi_dmar_rhsa
reserved	include/acpi/actbl2.h	/^	uint32_t reserved;$/;"	m	struct:acpi_ivrs_hardware
reserved	include/acpi/actbl2.h	/^	uint32_t reserved;$/;"	m	struct:acpi_mcfg_allocation
reserved	include/acpi/actbl2.h	/^	uint64_t reserved;$/;"	m	struct:acpi_ivrs_memory
reserved	include/acpi/actbl2.h	/^	uint64_t reserved;$/;"	m	struct:acpi_table_ivrs
reserved	include/acpi/actbl2.h	/^	uint8_t reserved;		\/* Must be 1 *\/$/;"	m	struct:acpi_table_spmi
reserved	include/acpi/actbl2.h	/^	uint8_t reserved;$/;"	m	struct:acpi_asf_header
reserved	include/acpi/actbl2.h	/^	uint8_t reserved;$/;"	m	struct:acpi_dmar_atsr
reserved	include/acpi/actbl2.h	/^	uint8_t reserved;$/;"	m	struct:acpi_dmar_hardware_unit
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[10];$/;"	m	struct:acpi_table_dmar
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[12];$/;"	m	struct:acpi_table_ibft
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[16];$/;"	m	struct:acpi_slic_marker
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[3];$/;"	m	struct:acpi_table_boot
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[3];$/;"	m	struct:acpi_table_dbgp
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[3];$/;"	m	struct:acpi_table_spcr
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[3];$/;"	m	struct:acpi_table_wdat
reserved	include/acpi/actbl2.h	/^	uint8_t reserved[8];$/;"	m	struct:acpi_table_mcfg
reserved	include/dev/vesa.h	/^    char reserved[222];	    \/\/ reserved for future expansion$/;"	m	struct:vesa_adapter_info
reserved	include/nautilus/multiboot2.h	/^  multiboot_uint16_t reserved;$/;"	m	struct:multiboot_tag_framebuffer_common
reserved	include/nautilus/multiboot2.h	/^  multiboot_uint8_t  reserved[7];$/;"	m	struct:multiboot_tag_hrt
reserved	include/nautilus/multiboot2.h	/^  multiboot_uint8_t reserved[6];$/;"	m	struct:multiboot_tag_smbios
reserved	src/acpi/acpica/aclocal.h	/^	u8 reserved;$/;"	m	struct:acpi_package_info
reserved	src/acpi/acpica/aclocal.h	/^	u8 reserved;$/;"	m	struct:acpi_package_info3
reserved0	include/dev/vesa.h	/^    uint8_t reserved0;$/;"	m	struct:vesa_mode_info
reserved1	include/acpi/acrestyp.h	/^	uint8_t reserved1;$/;"	m	struct:acpi_io_attribute
reserved1	include/acpi/actbl.h	/^	uint8_t reserved1[24];	\/* Reserved, must be zero *\/$/;"	m	struct:acpi_table_facs
reserved1	include/acpi/actbl1.h	/^	uint16_t reserved1;$/;"	m	struct:acpi_hest_aer_common
reserved1	include/acpi/actbl1.h	/^	uint16_t reserved1;$/;"	m	struct:acpi_hest_ia_corrected
reserved1	include/acpi/actbl1.h	/^	uint16_t reserved1;$/;"	m	struct:acpi_hest_ia_machine_check
reserved1	include/acpi/actbl2.h	/^	uint8_t reserved1;$/;"	m	struct:acpi_ivrs_device8a
reserved1	include/acpi/actbl2.h	/^	uint8_t reserved1;$/;"	m	struct:acpi_table_spcr
reserved1	include/acpi/actbl2.h	/^	uint8_t reserved1;$/;"	m	struct:acpi_table_spmi
reserved1	include/acpi/actypes.h	/^	uint32_t reserved1;$/;"	m	struct:acpi_system_info
reserved1	include/dev/vesa.h	/^    uint8_t reserved1[206];$/;"	m	struct:vesa_mode_info
reserved2	include/acpi/actbl1.h	/^	uint16_t reserved2;$/;"	m	struct:acpi_hest_aer_common
reserved2	include/acpi/actbl1.h	/^	uint32_t reserved2;$/;"	m	struct:acpi_srat_x2apic_cpu_affinity
reserved2	include/acpi/actbl1.h	/^	uint64_t reserved2;		\/* Reserved, must be zero *\/$/;"	m	struct:acpi_srat_mem_affinity
reserved2	include/acpi/actbl1.h	/^	uint8_t reserved2[3];$/;"	m	struct:acpi_hest_ia_corrected
reserved2	include/acpi/actbl2.h	/^	uint16_t reserved2;$/;"	m	struct:acpi_asf_remote
reserved2	include/acpi/actbl2.h	/^	uint32_t reserved2;$/;"	m	struct:acpi_table_spcr
reserved2	include/acpi/actbl2.h	/^	uint8_t reserved2;$/;"	m	struct:acpi_ivrs_device8a
reserved2	include/acpi/actbl2.h	/^	uint8_t reserved2;$/;"	m	struct:acpi_table_spmi
reserved2	include/acpi/actbl2.h	/^	uint8_t reserved2[3];$/;"	m	struct:acpi_asf_info
reserved2	include/acpi/actbl2.h	/^	uint8_t reserved2[3];$/;"	m	struct:acpi_table_wdat
reserved2	include/acpi/actypes.h	/^	uint32_t reserved2;$/;"	m	struct:acpi_system_info
reserved3	include/acpi/actbl1.h	/^	uint8_t reserved3[7];$/;"	m	struct:acpi_hest_ia_machine_check
reserved4	include/acpi/actbl.h	/^	uint8_t reserved4[3];	\/* Reserved, must be zero *\/$/;"	m	struct:acpi_table_fadt
reserved_mask	include/dev/vesa.h	/^    uint8_t reserved_mask;$/;"	m	struct:vesa_mode_info
reserved_position	include/dev/vesa.h	/^    uint8_t reserved_position;$/;"	m	struct:vesa_mode_info
reset	src/legion_runtime/region_tree.cc	/^    void LogicalState::reset(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
reset_all_counters	src/nautilus/pmc.c	/^reset_all_counters (void)$/;"	f
reset_all_futures	src/legion_runtime/runtime.cc	/^    bool FutureMap::Impl::reset_all_futures(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
reset_bcast_data	src/test/ipi.c	/^reset_bcast_data (ipi_exp_data_t * data)$/;"	f	file:
reset_future	src/legion_runtime/runtime.cc	/^    bool Future::Impl::reset_future(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
reset_phi	xeon_phi/linux_usr/phi_console.c	/^reset_phi (void)$/;"	f	file:
reset_reference	src/legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::reset_reference(const InstanceRef &ref,$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
reset_register	include/acpi/actbl.h	/^	struct acpi_generic_address reset_register;	\/* 64-bit address of the Reset register *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
reset_state	src/nautilus/scheduler.c	/^static void reset_state(rt_thread *thread)$/;"	f	file:
reset_stats	src/nautilus/scheduler.c	/^static void reset_stats(rt_thread *thread)$/;"	f	file:
reset_value	include/acpi/actbl.h	/^	uint8_t reset_value;		\/* Value to write to the reset_register port to reset the system *\/$/;"	m	struct:acpi_table_fadt
resetbit	include/lua/lgc.h	82;"	d
resetbits	include/lua/lgc.h	76;"	d
resethookcount	include/lua/ldebug.h	18;"	d
resetoldbit	include/lua/lgc.h	108;"	d
resilient_mode	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::resilient_mode = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
resilient_mode	src/legion_runtime/runtime.h	/^      static bool resilient_mode;$/;"	m	class:LegionRuntime::HighLevel::Runtime
resize	src/legion_runtime/legion_utilities.h	/^    inline void Serializer::resize(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
resize_node_contexts	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::resize_node_contexts(unsigned total_contexts)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
resizeable	scripts/kconfig/gconf.c	/^static gboolean resizeable = FALSE;$/;"	v	file:
resolve_false	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
resolve_false	src/legion_runtime/legion_ops.cc	/^    void CopyOp::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
resolve_false	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
resolve_false	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
resolve_false	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
resolve_false	src/legion_runtime/legion_tasks.cc	/^    void PointTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
resolve_false	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
resolve_false	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::resolve_false(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
resolve_future_predicate	src/legion_runtime/legion_ops.cc	/^    void FuturePredOp::resolve_future_predicate(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
resolve_speculation	src/legion_runtime/legion_ops.cc	/^    void Operation::resolve_speculation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
resolve_true	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
resolve_true	src/legion_runtime/legion_ops.cc	/^    void CopyOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
resolve_true	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
resolve_true	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::resolve_true(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
resolved	src/legion_runtime/legion_ops.h	/^      bool resolved;$/;"	m	class:LegionRuntime::HighLevel::Operation
resource_order	include/acpi/actypes.h	/^		uint32_t resource_order;$/;"	m	struct:acpi_object::__anon26
resource_references	src/legion_runtime/garbage_collection.h	/^      unsigned resource_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
resource_references	src/legion_runtime/garbage_collection.h	/^      unsigned resource_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
resource_source	include/acpi/acrestyp.h	/^	struct acpi_resource_source resource_source;$/;"	m	struct:acpi_resource_address16	typeref:struct:acpi_resource_address16::acpi_resource_source
resource_source	include/acpi/acrestyp.h	/^	struct acpi_resource_source resource_source;$/;"	m	struct:acpi_resource_address32	typeref:struct:acpi_resource_address32::acpi_resource_source
resource_source	include/acpi/acrestyp.h	/^	struct acpi_resource_source resource_source;$/;"	m	struct:acpi_resource_address64	typeref:struct:acpi_resource_address64::acpi_resource_source
resource_source	include/acpi/acrestyp.h	/^	struct acpi_resource_source resource_source;$/;"	m	struct:acpi_resource_extended_irq	typeref:struct:acpi_resource_extended_irq::acpi_resource_source
restart_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::restart_task(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
restartcollection	src/lua_src/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
restorestack	include/lua/ldo.h	23;"	d
restricted	src/legion_runtime/legion.h	/^      bool restricted;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
restriction	src/test/hpcg/comp-restriction.h	/^restriction(SparseMatrix &A,$/;"	f	namespace:lgncg
restrictionTask	src/test/hpcg/comp-restriction.h	/^restrictionTask($/;"	f	namespace:lgncg
result	src/legion_runtime/legion_tasks.h	/^      Future result; $/;"	m	class:LegionRuntime::HighLevel::IndividualTask
result	src/legion_runtime/region_tree.h	/^      MappingRef result;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
result	src/legion_runtime/runtime.h	/^        Future::Impl *result;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
result	src/legion_runtime/runtime.h	/^        Future::Impl *result;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
result	src/legion_runtime/runtime.h	/^      void *result; $/;"	m	class:LegionRuntime::HighLevel::Future::Impl
result_map	src/legion_runtime/legion_ops.h	/^      FutureMap result_map;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
result_size	src/legion_runtime/runtime.h	/^      size_t result_size;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
results	src/acpi/acpica/aclocal.h	/^	struct acpi_result_values results;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_result_values
resumable_threads	src/legion_runtime/lowlevel.cc	/^      std::list<Thread *> resumable_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
resume	src/lua_src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	src/lua_src/ldo.c	/^static l_noret resume_error (lua_State *L, const char *msg, StkId firstArg) {$/;"	f	file:
ret	include/nautilus/acpi.h	/^	struct acpi_buffer ret; \/* free by caller if success *\/$/;"	m	struct:acpi_osc_context	typeref:struct:acpi_osc_context::acpi_buffer
ret_info	src/acpi/acpica/aclocal.h	/^	struct acpi_package_info ret_info;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_package_info
ret_info2	src/acpi/acpica/aclocal.h	/^	struct acpi_package_info2 ret_info2;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_package_info2
ret_info3	src/acpi/acpica/aclocal.h	/^	struct acpi_package_info3 ret_info3;$/;"	m	union:acpi_predefined_info	typeref:struct:acpi_predefined_info::acpi_package_info3
retraversegrays	src/lua_src/lgc.c	/^static void retraversegrays (global_State *g) {$/;"	f	file:
retstat	src/lua_src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
return_ACPI_STATUS	src/acpi/acpica/acmacros.h	408;"	d
return_ACPI_STATUS	src/acpi/acpica/acmacros.h	430;"	d
return_ACPI_STATUS	src/acpi/acpica/acmacros.h	457;"	d
return_ACPI_STATUS	src/acpi/acpica/acmacros.h	512;"	d
return_PTR	src/acpi/acpica/acmacros.h	412;"	d
return_PTR	src/acpi/acpica/acmacros.h	433;"	d
return_PTR	src/acpi/acpica/acmacros.h	461;"	d
return_PTR	src/acpi/acpica/acmacros.h	516;"	d
return_UINT32	src/acpi/acpica/acmacros.h	424;"	d
return_UINT32	src/acpi/acpica/acmacros.h	440;"	d
return_UINT32	src/acpi/acpica/acmacros.h	460;"	d
return_UINT32	src/acpi/acpica/acmacros.h	515;"	d
return_UINT8	src/acpi/acpica/acmacros.h	420;"	d
return_UINT8	src/acpi/acpica/acmacros.h	439;"	d
return_UINT8	src/acpi/acpica/acmacros.h	459;"	d
return_UINT8	src/acpi/acpica/acmacros.h	514;"	d
return_VALUE	src/acpi/acpica/acmacros.h	416;"	d
return_VALUE	src/acpi/acpica/acmacros.h	436;"	d
return_VALUE	src/acpi/acpica/acmacros.h	458;"	d
return_VALUE	src/acpi/acpica/acmacros.h	513;"	d
return_VOID	src/acpi/acpica/acmacros.h	394;"	d
return_VOID	src/acpi/acpica/acmacros.h	456;"	d
return_VOID	src/acpi/acpica/acmacros.h	511;"	d
return_close_op	src/legion_runtime/region_tree.cc	/^    void TreeClose::return_close_op(const FieldMask &close_mask)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
return_close_op	src/legion_runtime/region_tree.cc	/^    void TreeCloseImpl::return_close_op(const FieldMask &close_mask)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
return_close_op	src/legion_runtime/region_tree.h	/^      inline void return_close_op(void)$/;"	f	struct:LegionRuntime::HighLevel::CloseInfo
return_held_references	src/legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::return_held_references(void)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
return_held_references	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::return_held_references(void)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
return_mask	src/legion_runtime/region_tree.h	/^      const FieldMask return_mask;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
return_mask	src/legion_runtime/region_tree.h	/^      const FieldMask return_mask;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
return_on_finish	src/legion_runtime/shared_lowlevel.cc	/^        const bool return_on_finish;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
return_privilege_state	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::return_privilege_state(TaskOp *target)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
return_privileges	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::return_privileges(PointTask *point)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
return_size	src/legion_runtime/legion.h	/^      const size_t return_size;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
return_slice_commit	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::return_slice_commit(unsigned points)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
return_slice_complete	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::return_slice_complete(unsigned points)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
return_slice_mapped	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::return_slice_mapped(unsigned points, long long denom)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
rev	include/nautilus/acpi.h	/^	int rev;$/;"	m	struct:acpi_osc_context
rev	include/nautilus/acpi.h	/^    uint8_t  rev;          \/* spec revision *\/$/;"	m	struct:mp_table
rev_dep	scripts/kconfig/expr.h	/^	struct expr_value rev_dep;$/;"	m	struct:symbol	typeref:struct:symbol::expr_value
rev_id	include/dev/hpet.h	/^    uint8_t  rev_id;$/;"	m	struct:hpet_dev
rev_id	include/dev/pci.h	/^    uint8_t  rev_id;$/;"	m	struct:pci_cfg_space
rev_id	include/nautilus/sfi.h	/^    uint8_t  rev_id;$/;"	m	struct:sfi_common_hdr
revents	include/nautilus/libccompat.h	/^    short revents;$/;"	m	struct:pollfd
reverse_chap_name_length	include/acpi/actbl2.h	/^	uint16_t reverse_chap_name_length;$/;"	m	struct:acpi_ibft_target
reverse_chap_name_offset	include/acpi/actbl2.h	/^	uint16_t reverse_chap_name_offset;$/;"	m	struct:acpi_ibft_target
reverse_chap_secret_length	include/acpi/actbl2.h	/^	uint16_t reverse_chap_secret_length;$/;"	m	struct:acpi_ibft_target
reverse_chap_secret_offset	include/acpi/actbl2.h	/^	uint16_t reverse_chap_secret_offset;$/;"	m	struct:acpi_ibft_target
reverse_mpi_mapping	src/legion_runtime/runtime.h	/^      std::map<AddressSpace,int> reverse_mpi_mapping;$/;"	m	class:LegionRuntime::HighLevel::Runtime
revision	include/acpi/actbl.h	/^	uint8_t revision;		\/* ACPI Specification minor version # *\/$/;"	m	struct:acpi_table_header
revision	include/acpi/actbl.h	/^	uint8_t revision;		\/* Must be (0) for ACPI 1.0 or (2) for ACPI 2.0+ *\/$/;"	m	struct:acpi_table_rsdp
revision	include/acpi/actbl1.h	/^	uint16_t revision;$/;"	m	struct:acpi_hest_generic_data
revision	include/acpi/actbl1.h	/^	uint32_t revision;$/;"	m	struct:acpi_einj_trigger
revision	include/acpi/actbl1.h	/^	uint8_t revision;$/;"	m	struct:acpi_msct_proximity
revision_iD	include/acpi/acrestyp.h	/^	ACPI_RESOURCE_ADDRESS_COMMON uint8_t revision_iD;$/;"	m	struct:acpi_resource_extended_address64
rez	src/legion_runtime/legion_utilities.h	/^      Serializer &rez;$/;"	m	class:LegionRuntime::HighLevel::RezCheck
rflags	include/nautilus/cpu.h	/^    ulong_t rflags;$/;"	m	struct:nk_regs
rflags	include/nautilus/idt.h	/^    ulong_t rflags;$/;"	m	struct:excp_entry_state
rhs	src/legion_runtime/accessor.h	/^	  typename REDOP::RHS rhs;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::ReductionList::ReductionListEntry
rhs	src/legion_runtime/lowlevel.h	/^      RHS rhs;$/;"	m	struct:LegionRuntime::LowLevel::ReductionListEntry
ria	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped<AT> ria;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessor
ria	src/legion_runtime/lowlevel.h	/^      RegionInstanceAccessorUntyped<AccessorGPU> ria;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessor
right	scripts/kconfig/expr.h	/^	union expr_data left, right;$/;"	m	struct:expr	typeref:union:expr::
right	src/legion_runtime/legion_ops.h	/^      PredicateOp *right;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
right	src/legion_runtime/legion_ops.h	/^      PredicateOp *right;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
right	src/legion_runtime/region_tree.h	/^        IndexPartNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
right	src/legion_runtime/region_tree.h	/^        IndexSpaceNode *left, *right;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicSpaceTest
right	src/lua_src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon143	file:
right_bound	src/legion_runtime/interval_tree.h	/^      T left_bound, right_bound;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
right_child	src/nautilus/scheduler.c	1208;"	d	file:
right_child	src/nautilus/scheduler.c	1212;"	d	file:
right_node	src/legion_runtime/interval_tree.h	/^      IntervalTreeNode<T, DISCRETE> *left_node, *right_node;$/;"	m	class:LegionRuntime::HighLevel::IntervalTreeNode
right_spaces	src/legion_runtime/region_tree.h	/^        std::vector<IndexSpaceNode*> left_spaces, right_spaces;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest::DynamicPartTest
right_valid	src/legion_runtime/legion_ops.h	/^      bool right_valid;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
right_valid	src/legion_runtime/legion_ops.h	/^      bool right_valid;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
right_value	src/legion_runtime/legion_ops.h	/^      bool right_value;$/;"	m	class:LegionRuntime::HighLevel::AndPredOp
right_value	src/legion_runtime/legion_ops.h	/^      bool right_value;$/;"	m	class:LegionRuntime::HighLevel::OrPredOp
righttt	include/lua/lobject.h	177;"	d
rip	include/nautilus/cpu.h	/^    ulong_t rip;$/;"	m	struct:nk_regs
rip	include/nautilus/idt.h	/^    ulong_t rip;$/;"	m	struct:excp_entry_state
rm-dirs	Makefile	/^clean: rm-dirs  := $(CLEAN_DIRS)$/;"	m
rm-dirs	Makefile	/^mrproper: rm-dirs  := $(wildcard $(MRPROPER_DIRS))$/;"	m
rm-files	Makefile	/^clean: rm-files := $(CLEAN_FILES)$/;"	m
rm-files	Makefile	/^mrproper: rm-files := $(wildcard $(MRPROPER_FILES))$/;"	m
rol16	include/lib/bitops.h	/^static inline uint16_t rol16(uint16_t word, unsigned int shift)$/;"	f
rol16	include/lib/linux_bitops.h	/^static inline __u16 rol16(__u16 word, unsigned int shift)$/;"	f
rol32	include/lib/bitops.h	/^static inline uint32_t rol32(uint32_t word, unsigned int shift)$/;"	f
rol32	include/lib/linux_bitops.h	/^static inline __u32 rol32(__u32 word, unsigned int shift)$/;"	f
rol64	include/lib/bitops.h	/^static inline uint64_t rol64(uint64_t word, unsigned int shift)$/;"	f
rol64	include/lib/linux_bitops.h	/^static inline __u64 rol64(__u64 word, unsigned int shift)$/;"	f
rol8	include/lib/bitops.h	/^static inline uint8_t rol8(uint8_t word, unsigned int shift)$/;"	f
rol8	include/lib/linux_bitops.h	/^static inline __u8 rol8(__u8 word, unsigned int shift)$/;"	f
roll_up_timers	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void DetailedTimer::roll_up_timers(std::map<int, double>& timers,$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
roll_up_timers	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void DetailedTimer::roll_up_timers(std::map<int,double> &timers, bool local_only)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
rollup_ptr	src/legion_runtime/lowlevel.cc	/^      void *rollup_ptr;$/;"	m	struct:LegionRuntime::LowLevel::RollUpDataArgs	file:
rollup_ptr	src/legion_runtime/lowlevel.cc	/^      void *rollup_ptr;$/;"	m	struct:LegionRuntime::LowLevel::RollUpRequestArgs	file:
root	src/legion_runtime/interval_tree.h	/^      IntervalTreeNode<T, DISCRETE> *root;$/;"	m	class:LegionRuntime::HighLevel::IntervalTree
root	src/legion_runtime/lowlevel_impl.h	/^      NodeBase * volatile root;$/;"	m	class:LegionRuntime::LowLevel::DynamicTable
rootEntry	scripts/kconfig/conf.c	/^static struct menu *rootEntry;$/;"	v	typeref:struct:menu	file:
rootEntry	scripts/kconfig/qconf.h	/^	struct menu *rootEntry;$/;"	m	class:ConfigList	typeref:struct:ConfigList::menu
root_error_command	include/acpi/actbl1.h	/^	uint32_t root_error_command;$/;"	m	struct:acpi_hest_aer_root
rootmenu	scripts/kconfig/menu.c	/^struct menu rootmenu;$/;"	v	typeref:struct:menu
roots	src/legion_runtime/region_tree.h	/^      std::map<CompositeNode*,FieldMask> roots;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
ror16	include/lib/bitops.h	/^static inline uint16_t ror16(uint16_t word, unsigned int shift)$/;"	f
ror16	include/lib/linux_bitops.h	/^static inline __u16 ror16(__u16 word, unsigned int shift)$/;"	f
ror32	include/lib/bitops.h	/^static inline uint32_t ror32(uint32_t word, unsigned int shift)$/;"	f
ror32	include/lib/linux_bitops.h	/^static inline __u32 ror32(__u32 word, unsigned int shift)$/;"	f
ror64	include/lib/bitops.h	/^static inline uint64_t ror64(uint64_t word, unsigned int shift)$/;"	f
ror64	include/lib/linux_bitops.h	/^static inline __u64 ror64(__u64 word, unsigned int shift)$/;"	f
ror8	include/lib/bitops.h	/^static inline uint8_t ror8(uint8_t word, unsigned int shift)$/;"	f
ror8	include/lib/linux_bitops.h	/^static inline __u8 ror8(__u8 word, unsigned int shift)$/;"	f
round_down	include/nautilus/macros.h	35;"	d
round_robin_get_next_aperiodic	src/nautilus/scheduler.c	/^static inline rt_thread *round_robin_get_next_aperiodic(rt_scheduler *s)$/;"	f	file:
round_robin_point_assign	src/legion_runtime/default_mapper.cc	/^    static void round_robin_point_assign(const Domain &domain, $/;"	f	namespace:LegionRuntime::HighLevel
round_robin_put_aperiodic	src/nautilus/scheduler.c	/^static inline int round_robin_put_aperiodic(rt_scheduler *s, rt_thread *t)$/;"	f	file:
round_robin_remove_aperiodic	src/nautilus/scheduler.c	/^static inline rt_thread *round_robin_remove_aperiodic(rt_scheduler *s, rt_thread *t) $/;"	f	file:
round_up	include/nautilus/macros.h	30;"	d
round_up_size	src/legion_runtime/activemsg.cc	/^size_t SrcDataPool::round_up_size(size_t size)$/;"	f	class:SrcDataPool
roundup_pow_of_two	include/nautilus/math.h	164;"	d
row	src/arch/k1om/xeon_phi.c	/^  size_t row;$/;"	m	struct:__anon128	file:
row_source	src/legion_runtime/region_tree.h	/^      IndexPartNode *const row_source;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
row_source	src/legion_runtime/region_tree.h	/^      IndexSpaceNode *const row_source;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
rows	scripts/kconfig/mconf.c	/^static int rows = 0, cols = 0;$/;"	v	file:
rows	xeon_phi/linux_usr/phi_console.c	/^    uint16_t rows;$/;"	m	struct:__anon79	file:
rptr	src/legion_runtime/lowlevel.cc	/^      unsigned wptr, rptr, size;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
rsdp	include/nautilus/multiboot2.h	/^  multiboot_uint8_t rsdp[0];$/;"	m	struct:multiboot_tag_new_acpi
rsdp	include/nautilus/multiboot2.h	/^  multiboot_uint8_t rsdp[0];$/;"	m	struct:multiboot_tag_old_acpi
rsdt_physical_address	include/acpi/actbl.h	/^	uint32_t rsdt_physical_address;	\/* 32-bit physical address of the RSDT *\/$/;"	m	struct:acpi_table_rsdp
rsi	include/nautilus/cpu.h	/^    ulong_t rsi;$/;"	m	struct:nk_regs
rsp	include/nautilus/cpu.h	/^    ulong_t rsp;$/;"	m	struct:nk_regs
rsp	include/nautilus/idt.h	/^    ulong_t rsp;$/;"	m	struct:excp_entry_state
rsp	include/nautilus/thread.h	/^    uint64_t rsp; \/* SHOULD NOT CHANGE POSITION *\/$/;"	m	struct:nk_thread
rsv1	src/dev/ata.c	/^	uint8_t rsv1:2; $/;"	m	struct:ata_status_reg::__anon135	file:
rsv2	src/dev/ata.c	/^	uint8_t rsv2:4; $/;"	m	struct:ata_cmd_reg::__anon136	file:
rsvd	include/dev/pci.h	/^            uint8_t  rsvd;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
rsvd	include/dev/pci.h	/^            uint8_t  rsvd[3];$/;"	m	struct:pci_cfg_space::__anon66::__anon68
rsvd	include/dev/pci.h	/^            uint8_t  rsvd[7];$/;"	m	struct:pci_cfg_space::__anon66::__anon67
rsvd	include/nautilus/acpi.h	/^    uint8_t  rsvd;$/;"	m	struct:mp_table
rsvd	include/nautilus/paging.h	/^            uint32_t rsvd   : 27;$/;"	m	struct:nk_pf_error::__anon56::__anon57
rsvd	include/nautilus/smp.h	/^    uint32_t rsvd; \/\/ to align the GDT on 8-byte boundary \/\/ 4$/;"	m	struct:ap_init_area
rsvd0	include/nautilus/acpi.h	/^   uint32_t rsvd0;$/;"	m	struct:mp_table_entry_cpu
rsvd0	include/nautilus/cpuid.h	/^            uint8_t rsvd0               : 2;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
rsvd0	include/nautilus/cpuid.h	/^            uint8_t rsvd0       : 1; $/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
rsvd0	include/nautilus/cpuid.h	/^            uint8_t rsvd0       : 1; $/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
rsvd0	include/nautilus/cpuid.h	/^            uint8_t rsvd0    : 1; $/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
rsvd0	include/nautilus/cpuid.h	/^            uint8_t rsvd0    : 1;$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
rsvd0	include/nautilus/idt.h	/^            uint8_t  rsvd0 : 3;$/;"	m	struct:gate_desc64::__anon61::__anon63
rsvd0	include/nautilus/pmc.h	/^            uint8_t rsvd0         : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
rsvd1	include/dev/pci.h	/^            uint32_t rsvd1[14];$/;"	m	struct:pci_cfg_space::__anon66::__anon69
rsvd1	include/nautilus/acpi.h	/^   uint32_t rsvd1;$/;"	m	struct:mp_table_entry_cpu
rsvd1	include/nautilus/cpuid.h	/^            uint8_t rsvd1               : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
rsvd1	include/nautilus/cpuid.h	/^            uint8_t rsvd1       : 2; $/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
rsvd1	include/nautilus/cpuid.h	/^            uint8_t rsvd1       : 2; $/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
rsvd1	include/nautilus/cpuid.h	/^            uint8_t rsvd1    : 1; $/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
rsvd1	include/nautilus/idt.h	/^            uint8_t  rsvd1 : 1;$/;"	m	struct:gate_desc64::__anon61::__anon63
rsvd1	include/nautilus/pmc.h	/^            uint8_t rsvd1         : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
rsvd1	include/nautilus/smp.h	/^    uint16_t rsvd1; \/\/ 38$/;"	m	struct:ap_init_area
rsvd1	src/dev/ata.c	/^	uint8_t rsvd1:1;$/;"	m	struct:ata_cmd_reg::__anon136	file:
rsvd2	include/nautilus/cpuid.h	/^            uint8_t rsvd2               : 4;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
rsvd2	include/nautilus/cpuid.h	/^            uint8_t rsvd2       : 1; $/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
rsvd2	include/nautilus/cpuid.h	/^            uint8_t rsvd2       : 1; $/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
rsvd2	include/nautilus/cpuid.h	/^            uint8_t rsvd2    : 1; $/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
rsvd2	include/nautilus/idt.h	/^            uint32_t rsvd2;$/;"	m	struct:gate_desc64::__anon61::__anon63
rsvd2	include/nautilus/pmc.h	/^            uint8_t rsvd2         : 4;$/;"	m	struct:pmc_ctl::__anon46::__anon47
rsvd3	include/nautilus/cpuid.h	/^            uint16_t rsvd3;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
rsvd3	include/nautilus/cpuid.h	/^            uint8_t rsvd3          ; $/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
rsvd3	include/nautilus/cpuid.h	/^            uint8_t rsvd3       : 1;$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
rsvd3	include/nautilus/pmc.h	/^            uint32_t rsvd3        : 22;$/;"	m	struct:pmc_ctl::__anon46::__anon47
rsvd_bit	include/nautilus/paging.h	/^            uint8_t rsvd_bit: 1;$/;"	m	struct:nk_pf_error::__anon56::__anon57
rt_constraints	src/nautilus/scheduler.c	/^typedef struct nk_sched_constraints  rt_constraints;$/;"	t	typeref:struct:nk_sched_constraints	file:
rt_list	src/nautilus/scheduler.c	/^typedef struct rt_list {$/;"	s	file:
rt_list	src/nautilus/scheduler.c	/^} rt_list;$/;"	t	typeref:struct:rt_list	file:
rt_list_deinit	src/nautilus/scheduler.c	/^static void rt_list_deinit(rt_list *l) $/;"	f	file:
rt_list_dequeue	src/nautilus/scheduler.c	/^static rt_thread* rt_list_dequeue(rt_list *l) $/;"	f	file:
rt_list_empty	src/nautilus/scheduler.c	/^static int rt_list_empty(rt_list *l) $/;"	f	file:
rt_list_enqueue	src/nautilus/scheduler.c	/^static int rt_list_enqueue(rt_list *l, rt_thread *t) $/;"	f	file:
rt_list_init	src/nautilus/scheduler.c	/^static rt_list* rt_list_init() $/;"	f	file:
rt_list_map	src/nautilus/scheduler.c	/^static void rt_list_map(rt_list *l, void (func)(rt_thread *t, void *priv), void *priv)  $/;"	f	file:
rt_list_remove	src/nautilus/scheduler.c	/^static rt_thread* rt_list_remove(rt_list *l, rt_thread *t) $/;"	f	file:
rt_node	src/nautilus/scheduler.c	/^typedef struct rt_node {$/;"	s	file:
rt_node	src/nautilus/scheduler.c	/^} rt_node;$/;"	t	typeref:struct:rt_node	file:
rt_node_deinit	src/nautilus/scheduler.c	/^static void rt_node_deinit(rt_node *n)$/;"	f	file:
rt_node_init	src/nautilus/scheduler.c	/^static rt_node* rt_node_init(rt_thread *t) $/;"	f	file:
rt_priority_queue	src/nautilus/scheduler.c	/^typedef struct rt_priority_queue {$/;"	s	file:
rt_priority_queue	src/nautilus/scheduler.c	/^} rt_priority_queue ;$/;"	t	typeref:struct:rt_priority_queue	file:
rt_priority_queue_dequeue	src/nautilus/scheduler.c	/^static rt_thread* rt_priority_queue_dequeue(rt_priority_queue *queue)$/;"	f	file:
rt_priority_queue_dump	src/nautilus/scheduler.c	/^static void rt_priority_queue_dump(rt_priority_queue *queue, char *pre)$/;"	f	file:
rt_priority_queue_empty	src/nautilus/scheduler.c	/^static int rt_priority_queue_empty(rt_priority_queue *queue)$/;"	f	file:
rt_priority_queue_enqueue	src/nautilus/scheduler.c	/^static int rt_priority_queue_enqueue(rt_priority_queue *queue, rt_thread *thread)$/;"	f	file:
rt_priority_queue_peek	src/nautilus/scheduler.c	/^static rt_thread *rt_priority_queue_peek(rt_priority_queue *queue, uint64_t pos)$/;"	f	file:
rt_priority_queue_remove	src/nautilus/scheduler.c	/^static rt_thread* rt_priority_queue_remove(rt_priority_queue *queue, rt_thread *thread)$/;"	f	file:
rt_queue	src/nautilus/scheduler.c	/^typedef struct rt_queue {$/;"	s	file:
rt_queue	src/nautilus/scheduler.c	/^} rt_queue ;$/;"	t	typeref:struct:rt_queue	file:
rt_queue_dequeue	src/nautilus/scheduler.c	/^static rt_thread* rt_queue_dequeue(rt_queue *queue)$/;"	f	file:
rt_queue_dump	src/nautilus/scheduler.c	/^static void rt_queue_dump(rt_queue *queue, char *pre)$/;"	f	file:
rt_queue_empty	src/nautilus/scheduler.c	/^static int        rt_queue_empty(rt_queue *queue)$/;"	f	file:
rt_queue_enqueue	src/nautilus/scheduler.c	/^static int        rt_queue_enqueue(rt_queue *queue, rt_thread *thread)$/;"	f	file:
rt_queue_peek	src/nautilus/scheduler.c	/^static rt_thread *rt_queue_peek(rt_queue *queue, uint64_t pos)$/;"	f	file:
rt_queue_remove	src/nautilus/scheduler.c	/^static rt_thread* rt_queue_remove(rt_queue *queue, rt_thread *thread)$/;"	f	file:
rt_scheduler	src/nautilus/scheduler.c	/^} rt_scheduler;$/;"	t	typeref:struct:nk_sched_percpu_state	file:
rt_status	src/nautilus/scheduler.c	/^             } rt_status;$/;"	t	typeref:enum:__anon132	file:
rt_thread	src/nautilus/scheduler.c	/^typedef struct nk_sched_thread_state rt_thread;$/;"	t	typeref:struct:nk_sched_thread_state	file:
rt_thread	src/nautilus/scheduler.c	/^} rt_thread ;$/;"	t	typeref:struct:nk_sched_thread_state	file:
rt_thread_admit	src/nautilus/scheduler.c	/^static int rt_thread_admit(rt_scheduler *scheduler, rt_thread *thread, uint64_t now)$/;"	f	file:
rt_thread_check_deadlines	src/nautilus/scheduler.c	/^static int rt_thread_check_deadlines(rt_thread *t, rt_scheduler *s, uint64_t now)$/;"	f	file:
rt_thread_dump	src/nautilus/scheduler.c	/^static void rt_thread_dump(rt_thread *thread, char *pre)$/;"	f	file:
rt_thread_update_aperiodic	src/nautilus/scheduler.c	/^static inline void rt_thread_update_aperiodic(rt_thread *t, rt_scheduler *scheduler, uint64_t now)$/;"	f	file:
rt_thread_update_periodic	src/nautilus/scheduler.c	/^static inline void rt_thread_update_periodic(rt_thread *t, rt_scheduler *scheduler, uint64_t now)$/;"	f	file:
rt_thread_update_sporadic	src/nautilus/scheduler.c	/^static inline void rt_thread_update_sporadic(rt_thread *t, rt_scheduler *scheduler, uint64_t now)$/;"	f	file:
rt_type	src/nautilus/scheduler.c	/^typedef nk_sched_constraint_type_t rt_type;$/;"	t	file:
rtm	include/nautilus/cpuid.h	/^            uint8_t rtm                 : 1;$/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
rttype	include/lua/lobject.h	118;"	d
rttype	include/lua/lobject.h	341;"	d
rttype	include/lua/lobject.h	342;"	d
rule_nautilus__	Makefile	/^define rule_nautilus__$/;"	m
run	src/legion_runtime/lowlevel.cc	/^      virtual void run(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorThread
run	src/legion_runtime/lowlevel.cc	/^    void Machine::run(Processor::TaskFuncID task_id \/*= 0*\/,$/;"	f	class:LegionRuntime::LowLevel::Machine
run	src/legion_runtime/lowlevel_impl.h	/^      void run(Atomic<int> *_run_counter)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
run	src/legion_runtime/shared_lowlevel.cc	/^    void Machine::run(Processor::TaskFuncID task_id \/*= 0*\/,$/;"	f	class:LegionRuntime::LowLevel::Machine
run	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::run(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
run_all	src/nautilus/testfs.c	/^int run_all() {$/;"	f
run_benchmarks	src/test/benchmark.c	/^run_benchmarks(void)$/;"	f
run_count	src/legion_runtime/lowlevel_impl.h	/^      int run_count, finish_count;$/;"	m	class:LegionRuntime::LowLevel::Task
run_counter	src/legion_runtime/lowlevel_impl.h	/^      Atomic<int> *run_counter;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
run_dma_loop	src/legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::run_dma_loop(void)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
run_legion_tests	src/test/test_legion.c	/^run_legion_tests (void) $/;"	f
run_or_wait	src/legion_runtime/lowlevel_gpu.cc	/^      virtual void run_or_wait(Event start_event)$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
run_or_wait	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUTask::run_or_wait(Event start_event)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
run_task	src/legion_runtime/lowlevel.cc	/^	void run_task(Task *task, Processor actual_proc = Processor::NO_PROC)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
run_task	src/legion_runtime/lowlevel.cc	/^      void run_task(Task *task, Processor actual_proc = Processor::NO_PROC)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
run_time	src/nautilus/scheduler.c	/^    uint64_t run_time;     \/\/ how long it has run so far$/;"	m	struct:nk_sched_thread_state	file:
runargs	src/lua_src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
runnable	src/nautilus/scheduler.c	/^    rt_priority_queue runnable;    \/\/ Periodic and sporadic threads that have arrived (and are runnable)$/;"	m	struct:nk_sched_percpu_state	file:
running_as_background_thread	src/legion_runtime/lowlevel.cc	/^    static bool running_as_background_thread = false;$/;"	m	namespace:LegionRuntime::LowLevel	file:
runq_node	include/nautilus/thread.h	/^    nk_queue_entry_t runq_node; \/\/ formerly q_node$/;"	m	struct:nk_thread
runtime	src/legion_runtime/garbage_collection.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
runtime	src/legion_runtime/garbage_collection.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
runtime	src/legion_runtime/legion.h	/^      HighLevelRuntime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::Mapper
runtime	src/legion_runtime/legion.h	/^      HighLevelRuntime *runtime;$/;"	m	class:LegionRuntime::HighLevel::FieldAllocator
runtime	src/legion_runtime/legion.h	/^      Runtime *runtime;$/;"	m	class:LegionRuntime::HighLevel::HighLevelRuntime
runtime	src/legion_runtime/legion_allocation.h	/^      Runtime *runtime;$/;"	m	class:LegionRuntime::HighLevel::LegionAllocator
runtime	src/legion_runtime/legion_ops.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::Operation
runtime	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ Runtime *Runtime::runtime = 0;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
runtime	src/legion_runtime/lowlevel_impl.h	/^      static Runtime *runtime;$/;"	m	class:Runtime
runtime	src/legion_runtime/region_tree.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
runtime	src/legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
runtime	src/legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
runtime	src/legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::MemoryManager
runtime	src/legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
runtime	src/legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
runtime	src/legion_runtime/runtime.h	/^      Runtime *const runtime;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
runtime	src/legion_runtime/shared_lowlevel.cc	/^      static Runtime *runtime;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
runtime	src/legion_runtime/shared_lowlevel.cc	/^    Runtime *Runtime::runtime = NULL;$/;"	m	class:LegionRuntime::LowLevel::Runtime	file:
runtime_args	src/acpi/acpica/aclocal.h	/^	u32 runtime_args;	\/* Interpret time arguments *\/$/;"	m	struct:acpi_opcode_info
runtime_count	src/acpi/acpica/aclocal.h	/^	u8 runtime_count;	\/* References to a run GPE *\/$/;"	m	struct:acpi_gpe_event_info
runtime_init	src/arch/hrt/init.c	/^runtime_init (void)$/;"	f	file:
runtime_init	src/arch/x64/init.c	/^runtime_init (void)$/;"	f	file:
runtime_map	src/legion_runtime/runtime.cc	/^    \/*static*\/ Runtime *Runtime::runtime_map[(MAX_NUM_PROCS+1)];$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
runtime_map	src/legion_runtime/runtime.h	/^      static Runtime *runtime_map[(MAX_NUM_PROCS+1\/*+1 for NO_PROC*\/)];$/;"	m	class:LegionRuntime::HighLevel::Runtime
runtime_stride	src/legion_runtime/runtime.h	/^      const unsigned runtime_stride; \/\/ stride for uniqueness$/;"	m	class:LegionRuntime::HighLevel::Runtime
rw	src/fs/ext2/ext2_access.c	/^static char *rw[2] = { "read", "write" };$/;"	v	file:
s	scripts/kconfig/lkc.h	/^	char  *s;$/;"	m	struct:gstr
s	src/lua_src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s_algorithm_usage_bitmap	src/fs/ext2/ext2fs.h	/^	__u32	s_algorithm_usage_bitmap; \/* For compression *\/$/;"	m	struct:ext2_super_block
s_block_group_nr	src/fs/ext2/ext2fs.h	/^	__u16	s_block_group_nr;	\/* block group # of this superblock *\/$/;"	m	struct:ext2_super_block
s_blocks_count	src/fs/ext2/ext2fs.h	/^	__u32	s_blocks_count;		\/* Blocks count *\/$/;"	m	struct:ext2_super_block
s_blocks_count_hi	src/fs/ext2/ext2fs.h	/^	__u32	s_blocks_count_hi;	\/* Blocks count high 32bits *\/$/;"	m	struct:ext2_super_block
s_blocks_per_group	src/fs/ext2/ext2fs.h	/^	__u32	s_blocks_per_group;	\/* # Blocks per group *\/$/;"	m	struct:ext2_super_block
s_checkinterval	src/fs/ext2/ext2fs.h	/^	__u32	s_checkinterval;	\/* max. time between checks *\/$/;"	m	struct:ext2_super_block
s_checksum	src/fs/ext2/ext2fs.h	/^	__u32	s_checksum;		\/* crc32c(superblock) *\/$/;"	m	struct:ext2_super_block
s_clusters_per_group	src/fs/ext2/ext2fs.h	/^	__u32	s_clusters_per_group;	\/* # Fragments per group *\/$/;"	m	struct:ext2_super_block
s_creator_os	src/fs/ext2/ext2fs.h	/^	__u32	s_creator_os;		\/* OS *\/$/;"	m	struct:ext2_super_block
s_def_hash_version	src/fs/ext2/ext2fs.h	/^	__u8	s_def_hash_version;	\/* Default hash version to use *\/$/;"	m	struct:ext2_super_block
s_def_resgid	src/fs/ext2/ext2fs.h	/^	__u16	s_def_resgid;		\/* Default gid for reserved blocks *\/$/;"	m	struct:ext2_super_block
s_def_resuid	src/fs/ext2/ext2fs.h	/^	__u16	s_def_resuid;		\/* Default uid for reserved blocks *\/$/;"	m	struct:ext2_super_block
s_default_mount_opts	src/fs/ext2/ext2fs.h	/^	__u32	s_default_mount_opts;$/;"	m	struct:ext2_super_block
s_desc_size	src/fs/ext2/ext2fs.h	/^	__u16	s_desc_size;		\/* Group desc. size: INCOMPAT_64BIT *\/$/;"	m	struct:ext2_super_block
s_error_count	src/fs/ext2/ext2fs.h	/^	__u32	s_error_count;		\/* number of fs errors *\/$/;"	m	struct:ext2_super_block
s_errors	src/fs/ext2/ext2fs.h	/^	__u16	s_errors;		\/* Behaviour when detecting errors *\/$/;"	m	struct:ext2_super_block
s_feature_compat	src/fs/ext2/ext2fs.h	/^	__u32	s_feature_compat;	\/* compatible feature set *\/$/;"	m	struct:ext2_super_block
s_feature_incompat	src/fs/ext2/ext2fs.h	/^	__u32	s_feature_incompat;	\/* incompatible feature set *\/$/;"	m	struct:ext2_super_block
s_feature_ro_compat	src/fs/ext2/ext2fs.h	/^	__u32	s_feature_ro_compat;	\/* readonly-compatible feature set *\/$/;"	m	struct:ext2_super_block
s_first_data_block	src/fs/ext2/ext2fs.h	/^	__u32	s_first_data_block;	\/* First Data Block *\/$/;"	m	struct:ext2_super_block
s_first_error_block	src/fs/ext2/ext2fs.h	/^	__u64	s_first_error_block;	\/* block involved of first error *\/$/;"	m	struct:ext2_super_block
s_first_error_func	src/fs/ext2/ext2fs.h	/^	__u8	s_first_error_func[32];	\/* function where the error happened *\/$/;"	m	struct:ext2_super_block
s_first_error_ino	src/fs/ext2/ext2fs.h	/^	__u32	s_first_error_ino;	\/* inode involved in first error *\/$/;"	m	struct:ext2_super_block
s_first_error_line	src/fs/ext2/ext2fs.h	/^	__u32	s_first_error_line;	\/* line number where error happened *\/$/;"	m	struct:ext2_super_block
s_first_error_time	src/fs/ext2/ext2fs.h	/^	__u32	s_first_error_time;	\/* first time an error happened *\/$/;"	m	struct:ext2_super_block
s_first_ino	src/fs/ext2/ext2fs.h	/^	__u32	s_first_ino;		\/* First non-reserved inode *\/$/;"	m	struct:ext2_super_block
s_first_meta_bg	src/fs/ext2/ext2fs.h	/^	__u32	s_first_meta_bg;	\/* First metablock group *\/$/;"	m	struct:ext2_super_block
s_flags	src/fs/ext2/ext2fs.h	/^	__u32	s_flags;		\/* Miscellaneous flags *\/$/;"	m	struct:ext2_super_block
s_free_blocks_count	src/fs/ext2/ext2fs.h	/^	__u32	s_free_blocks_count;	\/* Free blocks count *\/$/;"	m	struct:ext2_super_block
s_free_blocks_hi	src/fs/ext2/ext2fs.h	/^	__u32	s_free_blocks_hi; 	\/* Free blocks count *\/$/;"	m	struct:ext2_super_block
s_free_inodes_count	src/fs/ext2/ext2fs.h	/^	__u32	s_free_inodes_count;	\/* Free inodes count *\/$/;"	m	struct:ext2_super_block
s_grp_quota_inum	src/fs/ext2/ext2fs.h	/^	__u32	s_grp_quota_inum;	\/* inode number of group quota file *\/$/;"	m	struct:ext2_super_block
s_hash_seed	src/fs/ext2/ext2fs.h	/^	__u32	s_hash_seed[4];		\/* HTREE hash seed *\/$/;"	m	struct:ext2_super_block
s_inode_size	src/fs/ext2/ext2fs.h	/^	__u16   s_inode_size;		\/* size of inode structure *\/$/;"	m	struct:ext2_super_block
s_inodes_count	src/fs/ext2/ext2fs.h	/^	__u32	s_inodes_count;		\/* Inodes count *\/$/;"	m	struct:ext2_super_block
s_inodes_per_group	src/fs/ext2/ext2fs.h	/^	__u32	s_inodes_per_group;	\/* # Inodes per group *\/$/;"	m	struct:ext2_super_block
s_jnl_backup_type	src/fs/ext2/ext2fs.h	/^	__u8	s_jnl_backup_type; 	\/* Default type of journal backup *\/$/;"	m	struct:ext2_super_block
s_jnl_blocks	src/fs/ext2/ext2fs.h	/^	__u32	s_jnl_blocks[17]; 	\/* Backup of the journal inode *\/$/;"	m	struct:ext2_super_block
s_journal_dev	src/fs/ext2/ext2fs.h	/^	__u32	s_journal_dev;		\/* device number of journal file *\/$/;"	m	struct:ext2_super_block
s_journal_inum	src/fs/ext2/ext2fs.h	/^	__u32	s_journal_inum;		\/* inode number of journal file *\/$/;"	m	struct:ext2_super_block
s_journal_uuid	src/fs/ext2/ext2fs.h	/^	__u8	s_journal_uuid[16];	\/* uuid of journal superblock *\/$/;"	m	struct:ext2_super_block
s_kbytes_written	src/fs/ext2/ext2fs.h	/^	__u64	s_kbytes_written;	\/* nr of lifetime kilobytes written *\/$/;"	m	struct:ext2_super_block
s_last_error_block	src/fs/ext2/ext2fs.h	/^	__u64	s_last_error_block;	\/* block involved of last error *\/$/;"	m	struct:ext2_super_block
s_last_error_func	src/fs/ext2/ext2fs.h	/^	__u8	s_last_error_func[32];	\/* function where the error happened *\/$/;"	m	struct:ext2_super_block
s_last_error_ino	src/fs/ext2/ext2fs.h	/^	__u32	s_last_error_ino;	\/* inode involved in last error *\/$/;"	m	struct:ext2_super_block
s_last_error_line	src/fs/ext2/ext2fs.h	/^	__u32	s_last_error_line;	\/* line number where error happened *\/$/;"	m	struct:ext2_super_block
s_last_error_time	src/fs/ext2/ext2fs.h	/^	__u32	s_last_error_time;	\/* most recent time of an error *\/$/;"	m	struct:ext2_super_block
s_last_mounted	src/fs/ext2/ext2fs.h	/^	char	s_last_mounted[64];	\/* directory where last mounted *\/$/;"	m	struct:ext2_super_block
s_last_orphan	src/fs/ext2/ext2fs.h	/^	__u32	s_last_orphan;		\/* start of list of inodes to delete *\/$/;"	m	struct:ext2_super_block
s_lastcheck	src/fs/ext2/ext2fs.h	/^	__u32	s_lastcheck;		\/* time of last check *\/$/;"	m	struct:ext2_super_block
s_log_block_size	src/fs/ext2/ext2fs.h	/^	__u32	s_log_block_size;	\/* Block size *\/$/;"	m	struct:ext2_super_block
s_log_cluster_size	src/fs/ext2/ext2fs.h	/^	__u32	s_log_cluster_size;	\/* Allocation cluster size *\/$/;"	m	struct:ext2_super_block
s_log_groups_per_flex	src/fs/ext2/ext2fs.h	/^	__u8	s_log_groups_per_flex;	\/* FLEX_BG group size *\/$/;"	m	struct:ext2_super_block
s_magic	src/fs/ext2/ext2fs.h	/^	__u16	s_magic;		\/* Magic signature *\/$/;"	m	struct:ext2_super_block
s_max_mnt_count	src/fs/ext2/ext2fs.h	/^	__s16	s_max_mnt_count;	\/* Maximal mount count *\/$/;"	m	struct:ext2_super_block
s_min_extra_isize	src/fs/ext2/ext2fs.h	/^	__u16	s_min_extra_isize;	\/* All inodes have at least # bytes *\/$/;"	m	struct:ext2_super_block
s_minor_rev_level	src/fs/ext2/ext2fs.h	/^	__u16	s_minor_rev_level;	\/* minor revision level *\/$/;"	m	struct:ext2_super_block
s_mkfs_time	src/fs/ext2/ext2fs.h	/^	__u32	s_mkfs_time;		\/* When the filesystem was created *\/$/;"	m	struct:ext2_super_block
s_mmp_block	src/fs/ext2/ext2fs.h	/^	__u64   s_mmp_block;            \/* Block for multi-mount protection *\/$/;"	m	struct:ext2_super_block
s_mmp_update_interval	src/fs/ext2/ext2fs.h	/^	__u16   s_mmp_update_interval;  \/* # seconds to wait in MMP checking *\/$/;"	m	struct:ext2_super_block
s_mnt_count	src/fs/ext2/ext2fs.h	/^	__u16	s_mnt_count;		\/* Mount count *\/$/;"	m	struct:ext2_super_block
s_mount_opts	src/fs/ext2/ext2fs.h	/^	__u8	s_mount_opts[64];$/;"	m	struct:ext2_super_block
s_mtime	src/fs/ext2/ext2fs.h	/^	__u32	s_mtime;		\/* Mount time *\/$/;"	m	struct:ext2_super_block
s_overhead_blocks	src/fs/ext2/ext2fs.h	/^	__u32	s_overhead_blocks;	\/* overhead blocks\/clusters in fs *\/$/;"	m	struct:ext2_super_block
s_prealloc_blocks	src/fs/ext2/ext2fs.h	/^	__u8	s_prealloc_blocks;	\/* Nr of blocks to try to preallocate*\/$/;"	m	struct:ext2_super_block
s_prealloc_dir_blocks	src/fs/ext2/ext2fs.h	/^	__u8	s_prealloc_dir_blocks;	\/* Nr to preallocate for dirs *\/$/;"	m	struct:ext2_super_block
s_queue	src/nautilus/vc.c	/^    nk_scancode_t s_queue[Scancode_QUEUE_SIZE];$/;"	m	union:nk_virtual_console::queue	file:
s_r_blocks_count	src/fs/ext2/ext2fs.h	/^	__u32	s_r_blocks_count;	\/* Reserved blocks count *\/$/;"	m	struct:ext2_super_block
s_r_blocks_count_hi	src/fs/ext2/ext2fs.h	/^	__u32	s_r_blocks_count_hi;	\/* Reserved blocks count high 32 bits*\/$/;"	m	struct:ext2_super_block
s_raid_stride	src/fs/ext2/ext2fs.h	/^	__u16   s_raid_stride;		\/* RAID stride *\/$/;"	m	struct:ext2_super_block
s_raid_stripe_width	src/fs/ext2/ext2fs.h	/^	__u32   s_raid_stripe_width;    \/* blocks on all data disks (N*stride)*\/$/;"	m	struct:ext2_super_block
s_reserved	src/fs/ext2/ext2fs.h	/^	__u32   s_reserved[108];        \/* Padding to the end of the block *\/$/;"	m	struct:ext2_super_block
s_reserved_char_pad	src/fs/ext2/ext2fs.h	/^	__u8    s_reserved_char_pad;$/;"	m	struct:ext2_super_block
s_reserved_gdt_blocks	src/fs/ext2/ext2fs.h	/^	__u16	s_reserved_gdt_blocks;	\/* Per group table for online growth *\/$/;"	m	struct:ext2_super_block
s_reserved_pad	src/fs/ext2/ext2fs.h	/^	__u16	s_reserved_pad;		\/* Padding to next 32bits *\/$/;"	m	struct:ext2_super_block
s_rev_level	src/fs/ext2/ext2fs.h	/^	__u32	s_rev_level;		\/* Revision level *\/$/;"	m	struct:ext2_super_block
s_snapshot_id	src/fs/ext2/ext2fs.h	/^	__u32	s_snapshot_id;		\/* sequential ID of active snapshot *\/$/;"	m	struct:ext2_super_block
s_snapshot_inum	src/fs/ext2/ext2fs.h	/^	__u32	s_snapshot_inum;	\/* Inode number of active snapshot *\/$/;"	m	struct:ext2_super_block
s_snapshot_list	src/fs/ext2/ext2fs.h	/^	__u32	s_snapshot_list;	\/* inode number of the head of the on-disk snapshot list *\/$/;"	m	struct:ext2_super_block
s_snapshot_r_blocks_count	src/fs/ext2/ext2fs.h	/^	__u64	s_snapshot_r_blocks_count; \/* reserved blocks for active$/;"	m	struct:ext2_super_block
s_state	src/fs/ext2/ext2fs.h	/^	__u16	s_state;		\/* File system state *\/$/;"	m	struct:ext2_super_block
s_usr_quota_inum	src/fs/ext2/ext2fs.h	/^	__u32	s_usr_quota_inum;	\/* inode number of user quota file *\/$/;"	m	struct:ext2_super_block
s_uuid	src/fs/ext2/ext2fs.h	/^	__u8	s_uuid[16];		\/* 128-bit uuid for volume *\/$/;"	m	struct:ext2_super_block
s_volume_name	src/fs/ext2/ext2fs.h	/^	char	s_volume_name[16];	\/* volume name *\/$/;"	m	struct:ext2_super_block
s_want_extra_isize	src/fs/ext2/ext2fs.h	/^	__u16	s_want_extra_isize; 	\/* New inodes should reserve # bytes *\/$/;"	m	struct:ext2_super_block
s_wtime	src/fs/ext2/ext2fs.h	/^	__u32	s_wtime;		\/* Write time *\/$/;"	m	struct:ext2_super_block
safe_cast	src/legion_runtime/legion.cc	/^    DomainPoint HighLevelRuntime::safe_cast(Context ctx, DomainPoint point, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
safe_cast	src/legion_runtime/legion.cc	/^    ptr_t HighLevelRuntime::safe_cast(Context ctx, ptr_t pointer, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
safe_cast	src/legion_runtime/runtime.cc	/^    DomainPoint Runtime::safe_cast(Context ctx, DomainPoint point, $/;"	f	class:LegionRuntime::HighLevel::Runtime
safe_cast	src/legion_runtime/runtime.cc	/^    ptr_t Runtime::safe_cast(Context ctx, ptr_t pointer, $/;"	f	class:LegionRuntime::HighLevel::Runtime
same	src/test/hpcg/vector.h	/^    same(const Vector &a, const Vector &b) {$/;"	f	struct:lgncg::Vector
sample_allocated_instances	src/legion_runtime/legion.cc	/^    unsigned Mapper::sample_allocated_instances(Memory mem) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_allocated_instances	src/legion_runtime/runtime.cc	/^    unsigned MemoryManager::sample_allocated_instances(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
sample_allocated_instances	src/legion_runtime/runtime.cc	/^    unsigned Runtime::sample_allocated_instances(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sample_allocated_space	src/legion_runtime/legion.cc	/^    size_t Mapper::sample_allocated_space(Memory mem) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_allocated_space	src/legion_runtime/runtime.cc	/^    size_t MemoryManager::sample_allocated_space(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
sample_allocated_space	src/legion_runtime/runtime.cc	/^    size_t Runtime::sample_allocated_space(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sample_free_space	src/legion_runtime/legion.cc	/^    size_t Mapper::sample_free_space(Memory mem) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_free_space	src/legion_runtime/runtime.cc	/^    size_t MemoryManager::sample_free_space(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
sample_free_space	src/legion_runtime/runtime.cc	/^    size_t Runtime::sample_free_space(Memory mem)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sample_unmapped_tasks	src/legion_runtime/legion.cc	/^    unsigned Mapper::sample_unmapped_tasks(Processor proc) const$/;"	f	class:LegionRuntime::HighLevel::Mapper
sample_unmapped_tasks	src/legion_runtime/runtime.cc	/^    unsigned ProcessorManager::sample_unmapped_tasks(MapperID map_id)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
sample_unmapped_tasks	src/legion_runtime/runtime.cc	/^    unsigned Runtime::sample_unmapped_tasks(Processor proc, Mapper *mapper)$/;"	f	class:LegionRuntime::HighLevel::Runtime
sampled	src/legion_runtime/runtime.h	/^      volatile bool sampled;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
sanity_check	src/legion_runtime/interval_tree.h	/^    void IntervalTreeNode<T,DISCRETE>::sanity_check(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
sanity_check	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::sanity_check(void) const$/;"	f	class:LegionRuntime::HighLevel::Segment
sanity_check_logical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::sanity_check_logical_state(LogicalState &state)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
save	src/lua_src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
saveConfig	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::saveConfig(void)$/;"	f	class:ConfigMainWindow
saveConfigAs	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::saveConfigAs(void)$/;"	f	class:ConfigMainWindow
saveSettings	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::saveSettings(void)$/;"	f	class:ConfigMainWindow
save_and_next	src/lua_src/llex.c	46;"	d	file:
save_config_help	scripts/kconfig/mconf.c	/^save_config_help[] = N_($/;"	v	file:
save_config_text	scripts/kconfig/mconf.c	/^save_config_text[] = N_($/;"	v	file:
saved-output	Makefile	/^saved-output := $(KBUILD_OUTPUT)$/;"	m
savedpc	include/lua/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon11::__anon12
savestack	include/lua/ldo.h	22;"	d
scan_action	src/dev/vesa.c	/^typedef enum {ENUM, FIND} scan_action;$/;"	t	typeref:enum:__anon139	file:
scanformat	src/lua_src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
schar_t	include/nautilus/naut_types.h	/^typedef signed char   schar_t;$/;"	t
sched_cfg	src/arch/hrt/init.c	/^struct nk_sched_config sched_cfg = {$/;"	v	typeref:struct:nk_sched_config
sched_cfg	src/arch/k1om/init.c	/^struct nk_sched_config sched_cfg = {$/;"	v	typeref:struct:nk_sched_config
sched_cfg	src/arch/x64/init.c	/^struct nk_sched_config sched_cfg = {$/;"	v	typeref:struct:nk_sched_config
sched_state	include/nautilus/smp.h	/^    struct nk_sched_percpu_state *sched_state;$/;"	m	struct:cpu	typeref:struct:cpu::nk_sched_percpu_state
sched_state	include/nautilus/thread.h	/^    struct nk_sched_thread_state *sched_state;$/;"	m	struct:nk_thread	typeref:struct:nk_thread::nk_sched_thread_state
schedule	src/legion_runtime/legion.h	/^      bool                                schedule;$/;"	m	class:LegionRuntime::HighLevel::Task
schedule_runtime	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::schedule_runtime($/;"	f	class:LegionRuntime::HighLevel::Runtime
scheduler_invoked	src/legion_runtime/shared_lowlevel.cc	/^        bool scheduler_invoked;   \/\/ for traking if we've invoked the scheduler$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
sci_en	src/arch/hrt/shutdown.c	/^    uint16_t  sci_en;$/;"	m	struct:shutdown_info	file:
sci_en	src/arch/x64/shutdown.c	/^    uint16_t  sci_en;$/;"	m	struct:shutdown_info	file:
sci_interrupt	include/acpi/actbl.h	/^	uint16_t sci_interrupt;	\/* System vector of SCI interrupt *\/$/;"	m	struct:acpi_table_fadt
scnprintf	src/nautilus/printk.c	/^int scnprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
scope	src/acpi/acpica/aclocal.h	/^	struct acpi_scope_state scope;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_scope_state
scope	src/acpi/acpica/aclocal.h	/^	union acpi_generic_state *scope;	\/* Current scope *\/$/;"	m	struct:acpi_parse_state	typeref:union:acpi_parse_state::acpi_generic_state
screen_attr	scripts/kconfig/lxdialog/dialog.h	92;"	d
scroll_bottom	xeon_phi/linux_usr/phi_console.c	/^scroll_bottom (void)$/;"	f	file:
scroll_output_win	xeon_phi/linux_usr/phi_console.c	/^scroll_output_win (int nlines)$/;"	f	file:
scroll_page	xeon_phi/linux_usr/phi_console.c	/^scroll_page (uint8_t dir)$/;"	f	file:
scroll_top	xeon_phi/linux_usr/phi_console.c	/^scroll_top (void) $/;"	f	file:
sdbg	include/nautilus/cpuid.h	/^            uint8_t sdbg     : 1; \/\/ supports IA32_DEBUG_INTERFACE MSR$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
sdp	src/legion_runtime/activemsg.cc	/^    SrcDataPool& sdp;$/;"	m	class:SrcDataPool::Lock	file:
search_conf	scripts/kconfig/mconf.c	/^static void search_conf(void)$/;"	f	file:
search_for	src/acpi/acpica/aclocal.h	/^	char *search_for;$/;"	m	struct:acpi_find_context
search_help	scripts/kconfig/mconf.c	/^search_help[] = N_($/;"	v	file:
searchbox_attr	scripts/kconfig/lxdialog/dialog.h	105;"	d
searchbox_border_attr	scripts/kconfig/lxdialog/dialog.h	107;"	d
searchbox_title_attr	scripts/kconfig/lxdialog/dialog.h	106;"	d
searcher_C	src/lua_src/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	src/lua_src/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	src/lua_src/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	src/lua_src/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	src/lua_src/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	src/lua_src/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	src/lua_src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
sec_hdr_start	include/nautilus/mb_utils.h	/^    void * sec_hdr_start;$/;"	m	struct:multiboot_info
secondary_bus_num	include/dev/pci.h	/^            uint8_t  secondary_bus_num;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
secondary_dns	include/acpi/actbl2.h	/^	uint8_t secondary_dns[16];$/;"	m	struct:acpi_ibft_nic
secondary_lat_timer	include/dev/pci.h	/^            uint8_t  secondary_lat_timer;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
secondary_server	include/acpi/actbl2.h	/^	uint8_t secondary_server[16];$/;"	m	struct:acpi_ibft_initiator
secondary_status	include/dev/pci.h	/^            uint16_t secondary_status;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
secondary_status	include/dev/pci.h	/^            uint16_t secondary_status;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
section_type	include/acpi/actbl1.h	/^	uint8_t section_type[16];$/;"	m	struct:acpi_hest_generic_data
sections	include/nautilus/multiboot2.h	/^  char sections[0];$/;"	m	struct:multiboot_tag_elf_sections
seed	include/lua/lstate.h	/^  unsigned int seed;  \/* randomized seed for hashes *\/$/;"	m	struct:global_State
seed	include/nautilus/random.h	/^    uint64_t seed;$/;"	m	struct:nk_rand_info
seed_state	src/legion_runtime/region_tree.cc	/^    InstanceRef RegionNode::seed_state(ContextID ctx, PhysicalUser &user,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
seginfos	src/legion_runtime/lowlevel_impl.h	/^      gasnet_seginfo_t *seginfos;$/;"	m	class:LegionRuntime::LowLevel::GASNetMemory
segment	include/acpi/actbl2.h	/^	uint16_t segment;$/;"	m	struct:acpi_dmar_atsr
segment	include/acpi/actbl2.h	/^	uint16_t segment;$/;"	m	struct:acpi_dmar_hardware_unit
segment	include/acpi/actbl2.h	/^	uint16_t segment;$/;"	m	struct:acpi_dmar_reserved_memory
segment	include/acpi/actypes.h	/^	uint16_t segment;$/;"	m	struct:acpi_pci_id
segment	src/legion_runtime/rectangle_set.h	/^      Segment<T> *segment;$/;"	m	struct:LegionRuntime::HighLevel::SplitSegment
segment_a	include/dev/vesa.h	/^    uint16_t segment_a;$/;"	m	struct:vesa_mode_info
segment_b	include/dev/vesa.h	/^    uint16_t segment_b;$/;"	m	struct:vesa_mode_info
segment_info	src/legion_runtime/activemsg.cc	/^gasnet_seginfo_t *segment_info = 0;$/;"	v
select_close_targets	src/legion_runtime/region_tree.cc	/^    bool RegionTreeNode::select_close_targets(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
select_dma_node	src/legion_runtime/lowlevel_dma.cc	/^    static int select_dma_node(Memory src_mem, Memory dst_mem,$/;"	f	namespace:LegionRuntime::LowLevel
select_local_waiters	src/legion_runtime/lowlevel.cc	/^    bool Reservation::Impl::select_local_waiters(std::deque<Event>& to_wake)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
select_random_processor	src/legion_runtime/default_mapper.cc	/^    \/*static*\/ Processor DefaultMapper::select_random_processor($/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_reduction_layout	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::select_reduction_layout(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_region_layout	src/legion_runtime/shim_mapper.cc	/^    size_t ShimMapper::select_region_layout(const Task *task, Processor target,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_target_processor	src/legion_runtime/shim_mapper.cc	/^    Processor ShimMapper::select_target_processor(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_task_options	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::select_task_options(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_task_options	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::select_task_options(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_task_options	src/test/custom_mapper.cc	/^void AdversarialMapper::select_task_options(Task *task)$/;"	f	class:AdversarialMapper
select_task_variant	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::select_task_variant(Task *task)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_task_variant	src/legion_runtime/shim_mapper.cc	/^    VariantID ShimMapper::select_task_variant(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_task_variant	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::select_task_variant(Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_tasks_to_schedule	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::select_tasks_to_schedule($/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
select_tasks_to_schedule	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::select_tasks_to_schedule($/;"	f	class:LegionRuntime::HighLevel::ShimMapper
select_variant	src/legion_runtime/legion.cc	/^    const TaskVariantCollection::Variant& TaskVariantCollection::select_variant($/;"	f	class:LegionRuntime::HighLevel::TaskVariantCollection
select_victim	src/nautilus/scheduler.c	/^static int select_victim(int new_cpu)$/;"	f	file:
selected_memory	src/legion_runtime/legion.h	/^      Memory selected_memory;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
selected_variant	src/legion_runtime/legion.h	/^      VariantID                           selected_variant;$/;"	m	class:LegionRuntime::HighLevel::Task
semerror	src/lua_src/lparser.c	/^static l_noret semerror (LexState *ls, const char *msg) {$/;"	f	file:
seminfo	include/lua/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
send_add_distributed_remote	src/legion_runtime/runtime.cc	/^    void MessageManager::send_add_distributed_remote(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_add_distributed_remote	src/legion_runtime/runtime.cc	/^    void Runtime::send_add_distributed_remote(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_advertisement	src/legion_runtime/runtime.cc	/^    void MessageManager::send_advertisement(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_advertisements	src/legion_runtime/runtime.cc	/^    void Runtime::send_advertisements(const std::set<Processor> &targets,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_composite_view	src/legion_runtime/runtime.cc	/^    void MessageManager::send_back_composite_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_composite_view	src/legion_runtime/runtime.cc	/^    void Runtime::send_back_composite_view(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_created_state	src/legion_runtime/legion_tasks.cc	/^    void PointTask::send_back_created_state(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::PointTask
send_back_materialized_view	src/legion_runtime/runtime.cc	/^    void MessageManager::send_back_materialized_view(Serializer &rez,bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_materialized_view	src/legion_runtime/runtime.cc	/^    void Runtime::send_back_materialized_view(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_partition_state	src/legion_runtime/runtime.cc	/^    void MessageManager::send_back_partition_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_partition_state	src/legion_runtime/runtime.cc	/^    void Runtime::send_back_partition_state(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_back_physical_state(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_back_reduction_view	src/legion_runtime/runtime.cc	/^    void MessageManager::send_back_reduction_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_reduction_view	src/legion_runtime/runtime.cc	/^    void Runtime::send_back_reduction_view(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_region_state	src/legion_runtime/runtime.cc	/^    void MessageManager::send_back_region_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_region_state	src/legion_runtime/runtime.cc	/^    void Runtime::send_back_region_state(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_back_remote_state	src/legion_runtime/legion_tasks.cc	/^    void PointTask::send_back_remote_state(AddressSpaceID target, unsigned idx,$/;"	f	class:LegionRuntime::HighLevel::PointTask
send_back_state	src/legion_runtime/region_tree.cc	/^    DistributedID CompositeView::send_back_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
send_back_state	src/legion_runtime/region_tree.cc	/^    DistributedID MaterializedView::send_back_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
send_back_state	src/legion_runtime/region_tree.cc	/^    DistributedID ReductionView::send_back_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
send_back_state	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::send_back_state(ContextID ctx, ContextID remote_ctx,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
send_back_state	src/legion_runtime/region_tree.cc	/^    bool RegionNode::send_back_state(ContextID ctx, ContextID remote_ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionNode
send_back_user	src/legion_runtime/region_tree.cc	/^    void LogicalView::send_back_user(const PhysicalUser &user)$/;"	f	class:LegionRuntime::HighLevel::LogicalView
send_back_user	src/legion_runtime/runtime.cc	/^    void MessageManager::send_back_user(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_back_user	src/legion_runtime/runtime.cc	/^    void Runtime::send_back_user(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_composite_update	src/legion_runtime/runtime.cc	/^    void MessageManager::send_composite_update(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_composite_update	src/legion_runtime/runtime.cc	/^    void Runtime::send_composite_update(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_composite_view	src/legion_runtime/runtime.cc	/^    void MessageManager::send_composite_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_composite_view	src/legion_runtime/runtime.cc	/^    void Runtime::send_composite_view(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_allocation	src/legion_runtime/runtime.cc	/^    void MessageManager::send_field_allocation(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_allocation	src/legion_runtime/runtime.cc	/^    void Runtime::send_field_allocation(FieldSpace space, FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_destruction	src/legion_runtime/runtime.cc	/^    void MessageManager::send_field_destruction(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::send_field_destruction(FieldSpace space, FieldID fid,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_space_destruction	src/legion_runtime/runtime.cc	/^    void MessageManager::send_field_space_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_space_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::send_field_space_destruction(FieldSpace handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_field_space_node	src/legion_runtime/runtime.cc	/^    void MessageManager::send_field_space_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_field_space_node	src/legion_runtime/runtime.cc	/^    void Runtime::send_field_space_node(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_future	src/legion_runtime/runtime.cc	/^    bool Future::Impl::send_future(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
send_future	src/legion_runtime/runtime.cc	/^    void MessageManager::send_future(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_future	src/legion_runtime/runtime.cc	/^    void Runtime::send_future(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_future_result	src/legion_runtime/runtime.cc	/^    void MessageManager::send_future_result(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_future_result	src/legion_runtime/runtime.cc	/^    void Runtime::send_future_result(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_future_subscription	src/legion_runtime/runtime.cc	/^    void MessageManager::send_future_subscription(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_future_subscription	src/legion_runtime/runtime.cc	/^    void Runtime::send_future_subscription(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_partition_destruction	src/legion_runtime/runtime.cc	/^    void MessageManager::send_index_partition_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_partition_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::send_index_partition_destruction(IndexPartition handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_partition_node	src/legion_runtime/runtime.cc	/^    void MessageManager::send_index_partition_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_partition_node	src/legion_runtime/runtime.cc	/^    void Runtime::send_index_partition_node(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_space_destruction	src/legion_runtime/runtime.cc	/^    void MessageManager::send_index_space_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_space_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::send_index_space_destruction(IndexSpace handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_index_space_node	src/legion_runtime/runtime.cc	/^    void MessageManager::send_index_space_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_index_space_node	src/legion_runtime/runtime.cc	/^    void Runtime::send_index_space_node(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_remote_commit	src/legion_runtime/runtime.cc	/^    void MessageManager::send_individual_remote_commit(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_remote_commit	src/legion_runtime/runtime.cc	/^    void Runtime::send_individual_remote_commit(Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_remote_complete	src/legion_runtime/runtime.cc	/^    void MessageManager::send_individual_remote_complete(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_remote_complete	src/legion_runtime/runtime.cc	/^    void Runtime::send_individual_remote_complete(Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_remote_mapped	src/legion_runtime/runtime.cc	/^    void MessageManager::send_individual_remote_mapped(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_remote_mapped	src/legion_runtime/runtime.cc	/^    void Runtime::send_individual_remote_mapped(Processor target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_request	src/legion_runtime/runtime.cc	/^    void MessageManager::send_individual_request(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_request	src/legion_runtime/runtime.cc	/^    void Runtime::send_individual_request(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_individual_return	src/legion_runtime/runtime.cc	/^    void MessageManager::send_individual_return(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_individual_return	src/legion_runtime/runtime.cc	/^    void Runtime::send_individual_return(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_instance_manager	src/legion_runtime/runtime.cc	/^    void MessageManager::send_instance_manager(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_instance_manager	src/legion_runtime/runtime.cc	/^    void Runtime::send_instance_manager(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_lock	src/legion_runtime/runtime.h	/^      Reservation send_lock;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
send_logical_partition_destruction	src/legion_runtime/runtime.cc	/^    void MessageManager::send_logical_partition_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_logical_partition_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::send_logical_partition_destruction($/;"	f	class:LegionRuntime::HighLevel::Runtime
send_logical_region_destruction	src/legion_runtime/runtime.cc	/^    void MessageManager::send_logical_region_destruction(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_logical_region_destruction	src/legion_runtime/runtime.cc	/^    void Runtime::send_logical_region_destruction(LogicalRegion handle, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_logical_region_node	src/legion_runtime/runtime.cc	/^    void MessageManager::send_logical_region_node(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_logical_region_node	src/legion_runtime/runtime.cc	/^    void Runtime::send_logical_region_node(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_long	src/legion_runtime/activemsg.cc	/^  void send_long(OutgoingMessage *hdr, void *dest_ptr)$/;"	f	class:ActiveMessageEndpoint
send_make_persistent	src/legion_runtime/runtime.cc	/^    void MessageManager::send_make_persistent(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_make_persistent	src/legion_runtime/runtime.cc	/^    void Runtime::send_make_persistent(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_manager	src/legion_runtime/region_tree.cc	/^    DistributedID InstanceManager::send_manager(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
send_manager	src/legion_runtime/region_tree.cc	/^    DistributedID ReductionManager::send_manager(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
send_mapper_message	src/legion_runtime/runtime.cc	/^    void MessageManager::send_mapper_message(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_mapper_message	src/legion_runtime/runtime.cc	/^    void Runtime::send_mapper_message(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_mapper_messages	src/legion_runtime/runtime.cc	/^    void ProcessorManager::send_mapper_messages(MapperID map_id, $/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
send_mask	src/legion_runtime/region_tree.h	/^      const FieldMask send_mask;$/;"	m	class:LegionRuntime::HighLevel::StateSender
send_materialized_update	src/legion_runtime/runtime.cc	/^    void MessageManager::send_materialized_update(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_materialized_update	src/legion_runtime/runtime.cc	/^    void Runtime::send_materialized_update(AddressSpaceID target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_materialized_view	src/legion_runtime/runtime.cc	/^    void MessageManager::send_materialized_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_materialized_view	src/legion_runtime/runtime.cc	/^    void Runtime::send_materialized_view(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_message	src/legion_runtime/legion.cc	/^    void Mapper::send_message(Processor target, $/;"	f	class:LegionRuntime::HighLevel::Mapper
send_message	src/legion_runtime/runtime.cc	/^    void MessageManager::send_message(bool complete)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_node	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::send_node(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
send_node	src/legion_runtime/region_tree.cc	/^    void IndexPartNode::send_node(AddressSpaceID target, bool up, bool down)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
send_node	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::send_node(AddressSpaceID target, bool up, bool down)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
send_node	src/legion_runtime/region_tree.cc	/^    void PartitionNode::send_node(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
send_node	src/legion_runtime/region_tree.cc	/^    void RegionNode::send_node(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
send_partition_state	src/legion_runtime/runtime.cc	/^    void MessageManager::send_partition_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_partition_state	src/legion_runtime/runtime.cc	/^    void Runtime::send_partition_state(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_physical_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_physical_state(RegionTreeContext ctx,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_reduction_manager	src/legion_runtime/runtime.cc	/^    void MessageManager::send_reduction_manager(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_reduction_manager	src/legion_runtime/runtime.cc	/^    void Runtime::send_reduction_manager(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_reduction_update	src/legion_runtime/runtime.cc	/^    void MessageManager::send_reduction_update(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_reduction_update	src/legion_runtime/runtime.cc	/^    void Runtime::send_reduction_update(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_reduction_view	src/legion_runtime/runtime.cc	/^    void MessageManager::send_reduction_view(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_reduction_view	src/legion_runtime/runtime.cc	/^    void Runtime::send_reduction_view(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_region_state	src/legion_runtime/runtime.cc	/^    void MessageManager::send_region_state(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_region_state	src/legion_runtime/runtime.cc	/^    void Runtime::send_region_state(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remote_reference	src/legion_runtime/garbage_collection.cc	/^    bool DistributedCollectable::send_remote_reference(AddressSpaceID sid,$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
send_remote_references	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_remote_references($/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_remote_references	src/legion_runtime/runtime.cc	/^    void MessageManager::send_remote_references(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remote_references	src/legion_runtime/runtime.cc	/^    void Runtime::send_remote_references(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remote_state	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::send_remote_state(AddressSpaceID target, UniqueID uid)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
send_remote_state	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::send_remote_state(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
send_remove_distributed_remote	src/legion_runtime/runtime.cc	/^    void MessageManager::send_remove_distributed_remote(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_distributed_remote	src/legion_runtime/runtime.cc	/^    void Runtime::send_remove_distributed_remote(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remove_distributed_resource	src/legion_runtime/runtime.cc	/^    void MessageManager::send_remove_distributed_resource(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_distributed_resource	src/legion_runtime/runtime.cc	/^    void Runtime::send_remove_distributed_resource(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remove_hierarchical_remote	src/legion_runtime/runtime.cc	/^    void MessageManager::send_remove_hierarchical_remote(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_hierarchical_remote	src/legion_runtime/runtime.cc	/^    void Runtime::send_remove_hierarchical_remote(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_remove_hierarchical_resource	src/legion_runtime/runtime.cc	/^    void MessageManager::send_remove_hierarchical_resource(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_remove_hierarchical_resource	src/legion_runtime/runtime.cc	/^    void Runtime::send_remove_hierarchical_resource(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_request	src/legion_runtime/lowlevel.cc	/^      static void send_request(gasnet_node_t target, Event event, int delta, Barrier::timestamp_t timestamp, Event wait_on)$/;"	f	struct:LegionRuntime::LowLevel::BarrierAdjustMessage
send_short	src/legion_runtime/activemsg.cc	/^  void send_short(OutgoingMessage *hdr)$/;"	f	class:ActiveMessageEndpoint
send_slice_remote_commit	src/legion_runtime/runtime.cc	/^    void MessageManager::send_slice_remote_commit(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_remote_commit	src/legion_runtime/runtime.cc	/^    void Runtime::send_slice_remote_commit(Processor target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_remote_complete	src/legion_runtime/runtime.cc	/^    void MessageManager::send_slice_remote_complete(Serializer &rez,$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_remote_complete	src/legion_runtime/runtime.cc	/^    void Runtime::send_slice_remote_complete(Processor target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_remote_mapped	src/legion_runtime/runtime.cc	/^    void MessageManager::send_slice_remote_mapped(Serializer &rez, $/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_remote_mapped	src/legion_runtime/runtime.cc	/^    void Runtime::send_slice_remote_mapped(Processor target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_request	src/legion_runtime/runtime.cc	/^    void MessageManager::send_slice_request(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_request	src/legion_runtime/runtime.cc	/^    void Runtime::send_slice_request(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_slice_return	src/legion_runtime/runtime.cc	/^    void MessageManager::send_slice_return(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_slice_return	src/legion_runtime/runtime.cc	/^    void Runtime::send_slice_return(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_state	src/legion_runtime/region_tree.cc	/^    DistributedID CompositeView::send_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
send_state	src/legion_runtime/region_tree.cc	/^    DistributedID MaterializedView::send_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
send_state	src/legion_runtime/region_tree.cc	/^    DistributedID ReductionView::send_state(AddressSpaceID target,$/;"	f	class:LegionRuntime::HighLevel::ReductionView
send_state	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::send_state(ContextID ctx, UniqueID uid,$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
send_state	src/legion_runtime/region_tree.cc	/^    bool RegionNode::send_state(ContextID ctx, UniqueID uid, $/;"	f	class:LegionRuntime::HighLevel::RegionNode
send_steal_request	src/legion_runtime/runtime.cc	/^    void MessageManager::send_steal_request(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_steal_request	src/legion_runtime/runtime.cc	/^    void Runtime::send_steal_request($/;"	f	class:LegionRuntime::HighLevel::Runtime
send_subscriber	src/legion_runtime/runtime.cc	/^    void MessageManager::send_subscriber(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_subscriber	src/legion_runtime/runtime.cc	/^    void Runtime::send_subscriber(AddressSpaceID target, Serializer &rez)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_task	src/legion_runtime/runtime.cc	/^    void MessageManager::send_task(Serializer &rez, bool flush)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
send_task	src/legion_runtime/runtime.cc	/^    void Runtime::send_task(Processor target, TaskOp *task)$/;"	f	class:LegionRuntime::HighLevel::Runtime
send_tasks	src/legion_runtime/runtime.cc	/^    void Runtime::send_tasks(Processor target, $/;"	f	class:LegionRuntime::HighLevel::Runtime
send_to	src/legion_runtime/legion_utilities.h	/^    inline void BitPermutation<BITMASK,LOG2MAX>::send_to(unsigned src,$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
send_tree_shape	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(FieldSpace handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(IndexSpace handle, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(LogicalRegion handle,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(const IndexSpaceRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_tree_shape	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::send_tree_shape(const RegionRequirement &req,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
send_updates	src/legion_runtime/region_tree.cc	/^    void CompositeView::send_updates(DistributedID remote_did, $/;"	f	class:LegionRuntime::HighLevel::CompositeView
send_updates	src/legion_runtime/region_tree.cc	/^    void MaterializedView::send_updates(DistributedID remote_did,$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
send_updates	src/legion_runtime/region_tree.cc	/^    void ReductionView::send_updates(DistributedID remote_did, $/;"	f	class:LegionRuntime::HighLevel::ReductionView
sender	src/legion_runtime/lowlevel.cc	/^      int sender;$/;"	m	struct:LegionRuntime::LowLevel::ClearTimerRequestArgs	file:
sender	src/legion_runtime/lowlevel.cc	/^      int sender;$/;"	m	struct:LegionRuntime::LowLevel::RollUpRequestArgs	file:
sender	src/legion_runtime/lowlevel.cc	/^      int sender;$/;"	m	struct:LegionRuntime::LowLevel::ValidMaskRequestArgs	file:
sender	src/legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteKey	file:
sender	src/legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
sender	src/legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
sender	src/legion_runtime/lowlevel.cc	/^      unsigned sender;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
sender_thread_loop	src/legion_runtime/activemsg.cc	/^static void* sender_thread_loop(void *index)$/;"	f	file:
sending_buffer	src/legion_runtime/runtime.h	/^      char *const sending_buffer;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
sending_buffer_size	src/legion_runtime/runtime.h	/^      const size_t sending_buffer_size;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
sending_index	src/legion_runtime/runtime.h	/^      unsigned sending_index;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
sending_threads	src/legion_runtime/activemsg.cc	/^static pthread_t *sending_threads = 0;$/;"	v	file:
sensor_number	include/acpi/actbl2.h	/^	uint8_t sensor_number;$/;"	m	struct:acpi_asf_alert_data
sensor_type	include/acpi/actbl2.h	/^	uint8_t sensor_type;$/;"	m	struct:acpi_asf_alert_data
sent_messages	src/legion_runtime/activemsg.cc	/^  int sent_messages;$/;"	m	class:ActiveMessageEndpoint	file:
sent_remotely	src/legion_runtime/legion_tasks.h	/^      bool sent_remotely;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
sep	include/nautilus/cpuid.h	/^            uint8_t sep      : 1; \/\/ SYSENTER and SYSEXIT instructions$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
separate_runtime_instances	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::separate_runtime_instances = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
separate_runtime_instances	src/legion_runtime/runtime.h	/^      static bool separate_runtime_instances;$/;"	m	class:LegionRuntime::HighLevel::Runtime
separatetobefnz	src/lua_src/lgc.c	/^static void separatetobefnz (lua_State *L, int all) {$/;"	f	file:
seq	include/dev/hpet.h	/^    uint8_t seq; \/\/ sequence number$/;"	m	struct:hpet_dev
seq_num	include/nautilus/thread.h	/^    unsigned seq_num;$/;"	m	struct:nk_tls
sequence	include/acpi/actbl2.h	/^	uint8_t sequence;		\/* HPET sequence number *\/$/;"	m	struct:acpi_table_hpet
sequence_id	src/legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::PartialWriteKey	file:
sequence_id	src/legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
sequence_id	src/legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteArgs	file:
sequence_id	src/legion_runtime/lowlevel.cc	/^      unsigned sequence_id;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteFenceArgs	file:
sequence_id	src/legion_runtime/lowlevel_dma.cc	/^      unsigned sequence_id, num_writes;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
serial_device_ready	src/dev/serial.c	/^static uint8_t serial_device_ready = 0;$/;"	v	file:
serial_get_irq	src/dev/serial.c	/^serial_get_irq (void)$/;"	f
serial_init	src/dev/serial.c	/^serial_init (void) $/;"	f
serial_init_addr	src/dev/serial.c	/^serial_init_addr (uint16_t io_addr) $/;"	f
serial_io_addr	src/dev/serial.c	/^uint16_t serial_io_addr = 0;$/;"	v
serial_irq_handler	src/dev/serial.c	/^serial_irq_handler (excp_entry_t * excp,$/;"	f	file:
serial_lock	src/dev/serial.c	/^static spinlock_t serial_lock; \/* for SMP *\/$/;"	v	file:
serial_mem_dump	src/dev/serial.c	/^serial_mem_dump (uint8_t * start, int n)$/;"	f
serial_output_sink	src/dev/serial.c	/^static struct Output_Sink serial_output_sink;$/;"	v	typeref:struct:Output_Sink	file:
serial_port	include/acpi/actbl2.h	/^	struct acpi_generic_address serial_port;$/;"	m	struct:acpi_table_spcr	typeref:struct:acpi_table_spcr::acpi_generic_address
serial_print	src/dev/serial.c	/^serial_print (const char * format, ...)$/;"	f
serial_print_hex	src/dev/serial.c	/^serial_print_hex (uchar_t x)$/;"	f
serial_print_level	src/dev/serial.c	/^uint_t serial_print_level;$/;"	v
serial_print_list	src/dev/serial.c	/^serial_print_list (const char * format, va_list ap) $/;"	f
serial_printlevel	src/dev/serial.c	/^serial_printlevel (int level, const char * format, ...) $/;"	f
serial_putchar	src/dev/serial.c	/^serial_putchar (uchar_t c)$/;"	f
serial_putlnn	src/dev/serial.c	/^serial_putlnn (const char * line, int len) $/;"	f
serial_puts	src/dev/serial.c	/^serial_puts( const char *buf)$/;"	f
serial_write	src/dev/serial.c	/^serial_write (const char *buf) $/;"	f
serialize	src/legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
serialize	src/legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
serialize	src/legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
serialize	src/legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
serialize	src/legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
serialize	src/legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize(const T &element)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	src/legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize(const void *src, size_t bytes)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	src/legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize<FieldMask>(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	src/legion_runtime/legion_utilities.h	/^    inline void Serializer::serialize<bool>(const bool &element)$/;"	f	class:LegionRuntime::HighLevel::Serializer
serialize	src/legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::serialize(Serializer &rez) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
serialize	src/legion_runtime/lowlevel.h	/^      IDType *serialize(IDType *data) const$/;"	f	class:LegionRuntime::LowLevel::Domain
serialize	src/legion_runtime/lowlevel.h	/^      void serialize(int *data) const$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
serialize	src/legion_runtime/lowlevel_dma.cc	/^    size_t CopyRequest::serialize(void *buffer, size_t maxlen)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
serialize	src/legion_runtime/lowlevel_dma.cc	/^    size_t ReduceRequest::serialize(void *buffer, size_t maxlen)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
serialize_mapping	src/legion_runtime/arrays.h	/^      virtual void serialize_mapping(int *data) const$/;"	f	class:LegionRuntime::Arrays::DynamicMapping
set	src/legion_runtime/activemsg.h	/^  void set(T newval)$/;"	f	struct:HandlerReplyFuture
set	src/legion_runtime/legion_allocation.h	/^      typedef std::set<T, std::less<T>, LegionAllocator<T, A> > set;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
set2	src/lua_src/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
setAllOpen	scripts/kconfig/qconf.cc	/^void ConfigList::setAllOpen(bool open)$/;"	f	class:ConfigList
setHelp	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::setHelp(QListViewItem* item)$/;"	f	class:ConfigMainWindow
setICs	src/test/hpcg/hpcg-problem.cc	/^Problem::setICs(lgncg::SparseMatrix &A,$/;"	f	class:Problem
setICsTask	src/test/hpcg/hpcg-problem.cc	/^setICsTask($/;"	f
setInitialConds	src/test/hpcg/hpcg-problem.h	/^    setInitialConds(LegionRuntime::HighLevel::Context &ctx,$/;"	f	struct:Problem
setParentMenu	scripts/kconfig/qconf.cc	/^void ConfigList::setParentMenu(void)$/;"	f	class:ConfigList
setPixmap	scripts/kconfig/qconf.h	/^	void setPixmap(colIdx idx, const QPixmap& pm)$/;"	f	class:ConfigItem
setRootMenu	scripts/kconfig/qconf.cc	/^void ConfigList::setRootMenu(struct menu *menu)$/;"	f	class:ConfigList
setShowAll	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::setShowAll(bool b)$/;"	f	class:ConfigMainWindow
setShowData	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::setShowData(bool b)$/;"	f	class:ConfigMainWindow
setShowDebug	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::setShowDebug(bool b)$/;"	f	class:ConfigMainWindow
setShowName	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::setShowName(bool b)$/;"	f	class:ConfigMainWindow
setShowRange	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::setShowRange(bool b)$/;"	f	class:ConfigMainWindow
setText	scripts/kconfig/qconf.h	/^	void setText(colIdx idx, const QString& text)$/;"	f	class:ConfigItem
setValue	scripts/kconfig/qconf.cc	/^void ConfigList::setValue(ConfigItem* item, tristate val)$/;"	f	class:ConfigList
set_adjacent	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ inline void RectangleSet<T,DISCRETE>::set_adjacent($/;"	f	class:LegionRuntime::HighLevel::RectangleSet
set_adjacent	src/legion_runtime/rectangle_set.h	/^    inline void Segment<T>::set_adjacent(Segment<T> *one, Segment<T> *two)$/;"	f	class:LegionRuntime::HighLevel::Segment
set_bit	include/asm/bitops.h	/^static inline void set_bit(int nr, volatile unsigned long *addr)$/;"	f
set_bit	src/legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
set_bit	src/legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
set_bit	src/legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::BitMask
set_bit	src/legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
set_bit	src/legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
set_bit	src/legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::set_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
set_default	scripts/kconfig/conf.c	/^	set_default,$/;"	e	enum:__anon2	file:
set_edge	src/legion_runtime/legion_utilities.h	/^    inline void BitPermutation<BITMASK,LOG2MAX>::set_edge(unsigned src,$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
set_env	src/lua_src/loadlib.c	/^static void set_env (lua_State *L) {$/;"	f	file:
set_executing_processor	src/legion_runtime/legion_tasks.h	/^      inline void set_executing_processor(Processor p)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
set_file_size	src/fs/ext2/ext2.c	/^static void set_file_size(struct ext2_state *fs, struct ext2_inode *inode, size_t size) $/;"	f	file:
set_future	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::set_future(const DomainPoint &point, const void *result, $/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
set_group_members	src/legion_runtime/lowlevel.cc	/^    void ProcessorGroup::set_group_members(const std::vector<Processor>& member_list)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
set_impl	src/legion_runtime/lowlevel.h	/^      void set_impl(void *impl)$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
set_interrupt_priority	src/nautilus/scheduler.c	/^static inline void set_interrupt_priority(rt_thread *t)$/;"	f	file:
set_intr_gate	include/nautilus/idt.h	/^set_intr_gate (struct gate_desc64 * idt, unsigned gate, const void * func) $/;"	f
set_irq_vector	src/nautilus/irq.c	/^set_irq_vector (uint8_t irq, uint8_t vector)$/;"	f	file:
set_local_data	src/legion_runtime/lowlevel_impl.h	/^      void set_local_data(T *data)$/;"	f	class:LegionRuntime::LowLevel::Reservation::Impl
set_magic	src/legion_runtime/activemsg.h	/^  void set_magic(void) {$/;"	f	struct:BaseMedium
set_max_profiling_samples	src/legion_runtime/mapping_utilities.cc	/^      void MappingProfiler::set_max_profiling_samples(unsigned max)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
set_mod	scripts/kconfig/conf.c	/^	set_mod,$/;"	e	enum:__anon2	file:
set_mode	src/dev/apic.c	/^static int set_mode(struct apic_dev *apic, apic_mode_t mode)$/;"	f	file:
set_must_epoch	src/legion_runtime/legion_ops.cc	/^    void Operation::set_must_epoch(MustEpochOp *epoch, unsigned index)$/;"	f	class:LegionRuntime::HighLevel::Operation
set_needed_profiling_samples	src/legion_runtime/mapping_utilities.cc	/^      void MappingProfiler::set_needed_profiling_samples(unsigned num_samples)$/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
set_no	scripts/kconfig/conf.c	/^	set_no,$/;"	e	enum:__anon2	file:
set_no_free_did	src/legion_runtime/garbage_collection.cc	/^    void HierarchicalCollectable::set_no_free_did(void)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
set_node	scripts/kconfig/gconf.c	/^static void set_node(GtkTreeIter * node, struct menu *menu, gchar ** row)$/;"	f	file:
set_osxsave	src/nautilus/fpu.c	/^set_osxsave (void)$/;"	f	file:
set_payload	src/legion_runtime/activemsg.cc	/^void OutgoingMessage::set_payload(PayloadSource *_payload_src,$/;"	f	class:OutgoingMessage
set_point	src/legion_runtime/legion.cc	/^    void ArgumentMap::set_point(const DomainPoint &point, $/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
set_point	src/legion_runtime/runtime.cc	/^    void ArgumentMap::Impl::set_point(const DomainPoint &point, $/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
set_point_arg	src/legion_runtime/legion.h	/^    inline void ArgumentMap::set_point_arg(const PT point[DIM], $/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
set_predicate_false_future	src/legion_runtime/legion.h	/^    inline void IndexLauncher::set_predicate_false_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
set_predicate_false_future	src/legion_runtime/legion.h	/^    inline void TaskLauncher::set_predicate_false_future(Future f)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
set_predicate_false_result	src/legion_runtime/legion.h	/^    inline void IndexLauncher::set_predicate_false_result(TaskArgument arg)$/;"	f	class:LegionRuntime::HighLevel::IndexLauncher
set_predicate_false_result	src/legion_runtime/legion.h	/^    inline void TaskLauncher::set_predicate_false_result(TaskArgument arg)$/;"	f	class:LegionRuntime::HighLevel::TaskLauncher
set_privileges	src/legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
set_privileges	src/legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
set_privileges	src/legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { this->priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
set_privileges	src/legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { this->priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
set_privileges	src/legion_runtime/accessor.h	/^          inline void set_privileges(AccessorPrivilege p) { this->priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
set_privileges	src/legion_runtime/accessor.h	/^        inline void set_privileges(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
set_privileges_untyped	src/legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
set_privileges_untyped	src/legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
set_privileges_untyped	src/legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
set_privileges_untyped	src/legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
set_privileges_untyped	src/legion_runtime/accessor.h	/^          inline void set_privileges_untyped(AccessorPrivilege p) { priv = p; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
set_random	scripts/kconfig/conf.c	/^	set_random$/;"	e	enum:__anon2	file:
set_raw	src/legion_runtime/lowlevel.cc	/^    void ElementMask::set_raw(const void *data)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
set_raw	src/legion_runtime/shared_lowlevel.cc	/^    void ElementMask::set_raw(const void *data)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
set_region	src/legion_runtime/accessor.h	/^          inline void set_region(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
set_region	src/legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
set_region	src/legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
set_region	src/legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->template region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
set_region	src/legion_runtime/accessor.h	/^          inline void set_region(void *r) { this->template region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Typed
set_region	src/legion_runtime/accessor.h	/^        inline void set_region(void *r) { this->template region = r; } $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Typed
set_region_untpyed	src/legion_runtime/accessor.h	/^          inline void set_region_untpyed(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
set_region_untyped	src/legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Untyped
set_region_untyped	src/legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
set_region_untyped	src/legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Untyped
set_region_untyped	src/legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionFold::Untyped
set_region_untyped	src/legion_runtime/accessor.h	/^          inline void set_region_untyped(void *r) { region = r; }$/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Untyped
set_registration_callback	src/legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::set_registration_callback($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
set_registration_callback	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::set_registration_callback($/;"	f	class:LegionRuntime::HighLevel::Runtime
set_resolved_value	src/legion_runtime/legion_ops.cc	/^    void Predicate::Impl::set_resolved_value(GenerationID pred_gen, bool value)$/;"	f	class:LegionRuntime::HighLevel::Predicate::Impl
set_result	src/legion_runtime/runtime.cc	/^    void Future::Impl::set_result(const void *args, size_t arglen, bool own)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
set_task_options	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::set_task_options(ProcessorManager *manager)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
set_time	src/nautilus/scheduler.c	/^    uint64_t set_time;    \/\/ time when the next timer interrupt should occur$/;"	m	struct:tsc_info	file:
set_timer	src/nautilus/scheduler.c	/^static void set_timer(rt_scheduler *scheduler, rt_thread *thread, uint64_t now)$/;"	f	file:
set_top_level_task_id	src/legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::set_top_level_task_id($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
set_top_level_task_id	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::set_top_level_task_id($/;"	f	class:LegionRuntime::HighLevel::Runtime
set_trace	src/legion_runtime/legion_ops.cc	/^    void Operation::set_trace(LegionTrace *t)$/;"	f	class:LegionRuntime::HighLevel::Operation
set_untyped_privileges	src/legion_runtime/accessor.h	/^          inline void set_untyped_privileges(AccessorPrivilege p) $/;"	f	struct:LegionRuntime::Accessor::AccessorType::ReductionList::Untyped
set_utility_processor	src/legion_runtime/lowlevel.cc	/^    void Processor::Impl::set_utility_processor(UtilityProcessor *_util_proc)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
set_yes	scripts/kconfig/conf.c	/^	set_yes,$/;"	e	enum:__anon2	file:
setarg	include/lua/lopcodes.h	94;"	d
setarrayvector	src/lua_src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setb	src/nautilus/mm/buddy.c	/^static inline void setb(ulong_t nr, volatile char *addr)$/;"	f	file:
setbits	include/lua/lgc.h	77;"	d
setboolfield	src/lua_src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbvalue	include/lua/lobject.h	197;"	d
setclCvalue	include/lua/lobject.h	225;"	d
setclLvalue	include/lua/lobject.h	220;"	d
setdeadvalue	include/lua/lobject.h	235;"	d
seterrorobj	src/lua_src/ldo.c	/^static void seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	file:
setfield	src/lua_src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setfvalue	include/lua/lobject.h	191;"	d
setgcovalue	include/lua/lobject.h	200;"	d
sethvalue	include/lua/lobject.h	230;"	d
sethvalue2s	include/lua/lobject.h	254;"	d
setlocale	src/nautilus/libccompat.c	/^char *setlocale (int category, const char *locale)$/;"	f
setmod_text	scripts/kconfig/mconf.c	/^setmod_text[] = N_($/;"	v	file:
setnilvalue	include/lua/lobject.h	189;"	d
setnodevector	src/lua_src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setnvalue	include/lua/lobject.h	187;"	d
setnvalue	include/lua/lobject.h	347;"	d
setnvalue	include/lua/lobject.h	348;"	d
setobj	include/lua/lobject.h	239;"	d
setobj	include/lua/lobject.h	351;"	d
setobj	include/lua/lobject.h	352;"	d
setobj2n	include/lua/lobject.h	261;"	d
setobj2s	include/lua/lobject.h	252;"	d
setobj2t	include/lua/lobject.h	259;"	d
setobjs2s	include/lua/lobject.h	250;"	d
setobjt2t	include/lua/lobject.h	257;"	d
setpath	src/lua_src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname1,$/;"	f	file:
setpause	src/lua_src/lgc.c	/^static void setpause (global_State *g, l_mem estimate) {$/;"	f	file:
setprogdir	src/lua_src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	src/lua_src/loadlib.c	105;"	d	file:
setprogdir	src/lua_src/loadlib.c	158;"	d	file:
setptvalue2s	include/lua/lobject.h	255;"	d
setpvalue	include/lua/lobject.h	194;"	d
setsvalue	include/lua/lobject.h	204;"	d
setsvalue2n	include/lua/lobject.h	262;"	d
setsvalue2s	include/lua/lobject.h	253;"	d
settabsb	src/lua_src/ldblib.c	/^static void settabsb (lua_State *L, const char *i, int v) {$/;"	f	file:
settabsi	src/lua_src/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	src/lua_src/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
setthvalue	include/lua/lobject.h	215;"	d
settt_	include/lua/lobject.h	185;"	d
settt_	include/lua/lobject.h	344;"	d
settt_	include/lua/lobject.h	345;"	d
setupHalo	src/test/hpcg/setup-halo.h	/^setupHalo(SparseMatrix &A,$/;"	f	namespace:lgncg
setupHaloTask	src/test/hpcg/setup-halo.h	/^setupHaloTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
setup_idt	src/nautilus/idt.c	/^setup_idt (void)$/;"	f
setuvalue	include/lua/lobject.h	210;"	d
setvbuf	src/nautilus/libccompat.c	/^int setvbuf(FILE *restrict stream, char *restrict buf, int type,$/;"	f
severity	include/acpi/actbl2.h	/^	uint8_t severity;$/;"	m	struct:acpi_asf_alert_data
sfi_common_hdr	include/nautilus/sfi.h	/^struct sfi_common_hdr {$/;"	s
sfi_cpu_desc_t	include/nautilus/sfi.h	/^typedef uint32_t sfi_cpu_desc_t;$/;"	t
sfi_cpu_tbl	include/nautilus/sfi.h	/^struct sfi_cpu_tbl {$/;"	s
sfi_fill_attrs	src/nautilus/sfi.c	/^sfi_fill_attrs (char * str, uint64_t attr)$/;"	f	file:
sfi_find_syst	src/nautilus/sfi.c	/^sfi_find_syst (void)$/;"	f
sfi_freq_entry	include/nautilus/sfi.h	/^typedef struct sfi_freq_entry {$/;"	s
sfi_freq_entry_t	include/nautilus/sfi.h	/^} __packed sfi_freq_entry_t;$/;"	t	typeref:struct:sfi_freq_entry
sfi_freq_tbl	include/nautilus/sfi.h	/^struct sfi_freq_tbl {$/;"	s
sfi_get_mmap	src/nautilus/sfi.c	/^sfi_get_mmap (void) $/;"	f
sfi_get_mmap_nentries	src/nautilus/sfi.c	/^sfi_get_mmap_nentries (struct sfi_mmap_tbl * tbl)$/;"	f
sfi_gpio_entry	include/nautilus/sfi.h	/^struct sfi_gpio_entry {$/;"	s
sfi_gpio_entry_t	include/nautilus/sfi.h	/^typedef struct sfi_gpio_entry sfi_gpio_entry_t;$/;"	t	typeref:struct:sfi_gpio_entry
sfi_ioapic_desc_t	include/nautilus/sfi.h	/^typedef uint64_t sfi_ioapic_desc_t;$/;"	t
sfi_ioapic_tbl	include/nautilus/sfi.h	/^struct sfi_ioapic_tbl {$/;"	s
sfi_m_rtc_entry	include/nautilus/sfi.h	/^struct sfi_m_rtc_entry {$/;"	s
sfi_m_rtc_entry_t	include/nautilus/sfi.h	/^typedef struct sfi_m_rtc_entry sfi_m_rtc_entry_t;$/;"	t	typeref:struct:sfi_m_rtc_entry
sfi_m_rtc_tbl	include/nautilus/sfi.h	/^struct sfi_m_rtc_tbl {$/;"	s
sfi_m_timer_entry	include/nautilus/sfi.h	/^struct sfi_m_timer_entry {$/;"	s
sfi_m_timer_entry_t	include/nautilus/sfi.h	/^typedef struct sfi_m_timer_entry sfi_m_timer_entry_t;$/;"	t	typeref:struct:sfi_m_timer_entry
sfi_m_timer_tbl	include/nautilus/sfi.h	/^struct sfi_m_timer_tbl {$/;"	s
sfi_mmap_tbl	include/nautilus/sfi.h	/^struct sfi_mmap_tbl {$/;"	s
sfi_parse_phys_mem	src/nautilus/sfi.c	/^sfi_parse_phys_mem (struct nk_mem_info * mem)$/;"	f
sfi_parse_syst	src/nautilus/sfi.c	/^sfi_parse_syst (struct sys_info * sys, struct sfi_sys_tbl * sfi)$/;"	f
sfi_plat_dev_entry	include/nautilus/sfi.h	/^struct sfi_plat_dev_entry {$/;"	s
sfi_plat_dev_entry_t	include/nautilus/sfi.h	/^typedef struct sfi_plat_dev_entry sfi_plat_dev_entry_t;$/;"	t	typeref:struct:sfi_plat_dev_entry
sfi_plat_dev_tbl	include/nautilus/sfi.h	/^struct sfi_plat_dev_tbl {$/;"	s
sfi_sys_tbl	include/nautilus/sfi.h	/^struct sfi_sys_tbl {$/;"	s
sfi_tbl_desc_t	include/nautilus/sfi.h	/^typedef uint64_t sfi_tbl_desc_t;$/;"	t
sfi_wake_vec_tbl	include/nautilus/sfi.h	/^struct sfi_wake_vec_tbl {$/;"	s
sgb	src/test/hpcg/vector.h	/^    sgb(size_t index = 0) const$/;"	f	struct:lgncg::Vector
shadow_attr	scripts/kconfig/lxdialog/dialog.h	93;"	d
sharable	include/acpi/acrestyp.h	/^	uint8_t sharable;$/;"	m	struct:acpi_resource_extended_irq
sharable	include/acpi/acrestyp.h	/^	uint8_t sharable;$/;"	m	struct:acpi_resource_irq
shared_init	src/nautilus/scheduler.c	/^static int shared_init(struct cpu *my_cpu, struct nk_sched_config *cfg)$/;"	f	file:
shared_memory	src/legion_runtime/alt_mappers.h	/^      Memory shared_memory;$/;"	m	class:LegionRuntime::HighLevel::SharedMapper
sheep_and_goats	src/legion_runtime/legion_utilities.h	/^    inline BITMASK BitPermutation<BITMASK,LOG2MAX>::sheep_and_goats($/;"	f	class:LegionRuntime::HighLevel::BitPermutation
shell	src/nautilus/shell.c	/^static void shell(void *in, void **out)$/;"	f	file:
shndx	include/nautilus/multiboot2.h	/^  multiboot_uint32_t shndx;$/;"	m	struct:multiboot_tag_elf_sections
short	scripts/kconfig/zconf.tab.c	237;"	d	file:
short_src	include/lua/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
show	scripts/kconfig/qconf.cc	/^void ConfigLineEdit::show(ConfigItem* i)$/;"	f	class:ConfigLineEdit
showAbout	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showAbout(void)$/;"	f	class:ConfigMainWindow
showAll	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	class:ConfigList
showAll	scripts/kconfig/qconf.h	/^	bool showAll;$/;"	m	class:ConfigSettings
showData	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	class:ConfigList
showData	scripts/kconfig/qconf.h	/^	bool showData;$/;"	m	class:ConfigSettings
showDebug	scripts/kconfig/qconf.h	/^	bool showDebug;$/;"	m	class:ConfigMainWindow
showFullView	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showFullView(void)$/;"	f	class:ConfigMainWindow
showIntro	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showIntro(void)$/;"	f	class:ConfigMainWindow
showName	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	class:ConfigList
showName	scripts/kconfig/qconf.h	/^	bool showName;$/;"	m	class:ConfigSettings
showRange	scripts/kconfig/qconf.h	/^	bool showAll, showName, showRange, showData;$/;"	m	class:ConfigList
showRange	scripts/kconfig/qconf.h	/^	bool showRange;$/;"	m	class:ConfigSettings
showSingleView	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showSingleView(void)$/;"	f	class:ConfigMainWindow
showSplitView	scripts/kconfig/qconf.cc	/^void ConfigMainWindow::showSplitView(void)$/;"	f	class:ConfigMainWindow
show_all	scripts/kconfig/gconf.c	/^static gboolean show_all = FALSE;$/;"	v	file:
show_debug	scripts/kconfig/gconf.c	/^static gboolean show_debug = FALSE;$/;"	v	file:
show_event_waiters	src/legion_runtime/lowlevel.cc	/^    void show_event_waiters(FILE *f = stdout)$/;"	f	namespace:LegionRuntime::LowLevel
show_file	scripts/kconfig/mconf.c	/^static void show_file(const char *filename, const char *title, int r, int c)$/;"	f	file:
show_help	scripts/kconfig/mconf.c	/^static void show_help(struct menu *menu)$/;"	f	file:
show_helptext	scripts/kconfig/mconf.c	/^static void show_helptext(const char *title, const char *text)$/;"	f	file:
show_name	scripts/kconfig/gconf.c	/^static gboolean show_name = TRUE;$/;"	v	file:
show_range	scripts/kconfig/gconf.c	/^static gboolean show_range = TRUE;$/;"	v	file:
show_textbox	scripts/kconfig/mconf.c	/^static void show_textbox(const char *title, const char *text, int r, int c)$/;"	f	file:
show_value	scripts/kconfig/gconf.c	/^static gboolean show_value = TRUE;$/;"	v	file:
shr_nodes	src/test/circuit.h	/^  LogicalPartition pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:Partitions
shr_nodes	src/test/circuit.h	/^  LogicalRegion pvt_nodes, shr_nodes, ghost_nodes;$/;"	m	struct:CircuitPiece
shutdown	src/legion_runtime/lowlevel.cc	/^    void Machine::shutdown(bool local_request \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::Machine
shutdown	src/legion_runtime/shared_lowlevel.cc	/^	bool shutdown;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
shutdown	src/legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
shutdown	src/legion_runtime/shared_lowlevel.cc	/^    void Machine::shutdown(bool local_request \/*= true*\/)$/;"	f	class:LegionRuntime::LowLevel::Machine
shutdown_counter	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::shutdown_counter = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
shutdown_counter	src/legion_runtime/runtime.h	/^      static unsigned shutdown_counter;$/;"	m	class:LegionRuntime::HighLevel::Runtime
shutdown_event	src/legion_runtime/lowlevel.cc	/^      Event shutdown_event;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
shutdown_flag	src/legion_runtime/lowlevel_dma.cc	/^      bool shutdown_flag;$/;"	m	class:LegionRuntime::LowLevel::DmaRequestQueue	file:
shutdown_info	src/arch/hrt/shutdown.c	/^struct shutdown_info {$/;"	s	file:
shutdown_info	src/arch/x64/shutdown.c	/^struct shutdown_info {$/;"	s	file:
shutdown_ok	src/arch/hrt/shutdown.c	/^    uint8_t shutdown_ok;$/;"	m	struct:shutdown_info	file:
shutdown_ok	src/arch/x64/shutdown.c	/^    uint8_t shutdown_ok;$/;"	m	struct:shutdown_info	file:
shutdown_queue	src/legion_runtime/lowlevel_dma.cc	/^    void DmaRequestQueue::shutdown_queue(void)$/;"	f	class:LegionRuntime::LowLevel::DmaRequestQueue
shutdown_requested	src/legion_runtime/lowlevel.cc	/^      bool init_done, shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
shutdown_requested	src/legion_runtime/lowlevel_gpu.cc	/^      bool shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
shutdown_requested	src/legion_runtime/lowlevel_impl.h	/^      bool shutdown_requested;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
shutdown_runtime	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::shutdown_runtime($/;"	f	class:LegionRuntime::HighLevel::Runtime
shutdown_trigger	src/legion_runtime/shared_lowlevel.cc	/^	EventImpl *shutdown_trigger;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
si	include/nautilus/realmode.h	/^    uint16_t si;$/;"	m	struct:nk_real_mode_int_args
sig	include/nautilus/acpi.h	/^    uint32_t sig;$/;"	m	struct:mp_float_ptr_struct
sig	include/nautilus/acpi.h	/^    uint32_t sig;$/;"	m	struct:mp_table
sig	include/nautilus/acpi.h	/^   uint32_t sig;$/;"	m	struct:mp_table_entry_cpu
sig	include/nautilus/sfi.h	/^    uint32_t sig;$/;"	m	struct:sfi_common_hdr
sigabrt_catch	src/legion_runtime/lowlevel.cc	/^    void sigabrt_catch(int signal) {$/;"	f	namespace:LegionRuntime::LowLevel
sigint_handler	xeon_phi/linux_usr/phi_console.c	/^sigint_handler (int sig)$/;"	f	file:
sign	src/nautilus/libccompat.c	/^        uint32_t sign      :1;$/;"	m	struct:ieee754dbl::__anon130	file:
sign_extend32	include/lib/bitops.h	/^static inline sint32_t sign_extend32(uint32_t value, int index)$/;"	f
sign_extend32	include/lib/linux_bitops.h	/^static inline __s32 sign_extend32(__u32 value, int index)$/;"	f
signal	src/nautilus/libccompat.c	/^void (*signal(int sig, void (*func)(int)))(int ){$/;"	f
signaled	src/nautilus/timer.c	/^    volatile uint8_t  signaled; \/\/ 1 = timer has fired$/;"	m	struct:nk_timer	file:
signature	include/acpi/actbl.h	/^	char signature[4];	\/* ASCII table signature *\/$/;"	m	struct:acpi_table_facs
signature	include/acpi/actbl.h	/^	char signature[8];	\/* ACPI signature, contains "RSD PTR " *\/$/;"	m	struct:acpi_table_rsdp
signature	include/acpi/actbl.h	/^	char signature[ACPI_NAME_SIZE];	\/* ASCII table signature *\/$/;"	m	struct:acpi_table_header
signature	include/acpi/actbl.h	/^	union acpi_name_union signature;$/;"	m	struct:acpi_table_desc	typeref:union:acpi_table_desc::acpi_name_union
signature	include/acpi/actbl1.h	/^	uint16_t signature;		\/* Should be "ER" *\/$/;"	m	struct:acpi_erst_info
signature	include/acpi/actbl2.h	/^	uint8_t signature[128];$/;"	m	struct:acpi_slic_marker
signature	include/dev/vesa.h	/^    char     signature[4];  \/\/ "VBE2" on entry, "VESA" on exit$/;"	m	struct:vesa_adapter_info
sigsegv_handler	xeon_phi/linux_usr/phi_console.c	/^sigsegv_handler (int sig)$/;"	f	file:
sigterm_catch	src/legion_runtime/lowlevel.cc	/^    void sigterm_catch(int signal) {$/;"	f	namespace:LegionRuntime::LowLevel
simple_guess_base	src/nautilus/printk.c	/^static unsigned int simple_guess_base(const char *cp)$/;"	f	file:
simple_strtol	src/nautilus/printk.c	/^long simple_strtol(const char *cp, char **endp, unsigned int base)$/;"	f
simple_strtoll	src/nautilus/printk.c	/^long long simple_strtoll(const char *cp, char **endp, unsigned int base)$/;"	f
simple_strtoul	src/nautilus/printk.c	/^unsigned long simple_strtoul(const char *cp, char **endp, unsigned int base)$/;"	f
simple_strtoull	src/nautilus/printk.c	/^unsigned long long simple_strtoull(const char *cp, char **endp, unsigned int base)$/;"	f
simpleexp	src/lua_src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
simultaneous_checked	src/legion_runtime/legion_tasks.h	/^      bool simultaneous_checked, has_simultaneous;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
sin	src/nautilus/libccompat.c	/^double sin(double x)$/;"	f
singfunc	scripts/basic/docproc.c	/^void singfunc(char * filename, char * line)$/;"	f
singleMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode$/;"	e	enum:listMode
single_children	src/legion_runtime/field_tree.h	/^      std::set<FieldTree<UT>*> single_children;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
single_index	src/legion_runtime/field_tree.h	/^      const unsigned single_index;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
single_menu_mode	scripts/kconfig/mconf.c	/^static int single_menu_mode;$/;"	v	file:
single_node	src/legion_runtime/field_tree.h	/^      const bool single_node;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
single_task	src/legion_runtime/legion.h	/^        bool single_task; \/**< supports single tasks*\/$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
single_task	src/legion_runtime/legion_logging.h	/^        bool single_task;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
single_tasks	src/legion_runtime/legion.h	/^      std::vector<TaskLauncher> single_tasks;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochLauncher
single_tasks	src/legion_runtime/legion_ops.h	/^      std::set<SingleTask*>        single_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
single_users	src/legion_runtime/field_tree.h	/^      std::list<std::pair<UT,unsigned> > single_users;$/;"	m	class:LegionRuntime::HighLevel::FieldTree
singlefunctions	scripts/basic/docproc.c	/^FILELINE * singlefunctions;$/;"	v
singlematch	src/lua_src/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	src/lua_src/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	src/lua_src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	src/lua_src/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
sinh	src/nautilus/libccompat.c	/^double sinh(double x)$/;"	f
sint16_t	include/nautilus/naut_types.h	/^typedef short          sint16_t;$/;"	t
sint32_t	include/nautilus/naut_types.h	/^typedef int          sint32_t;$/;"	t
sint64_t	include/nautilus/naut_types.h	/^typedef long sint64_t;$/;"	t
sint8_t	include/nautilus/naut_types.h	/^typedef char          sint8_t;$/;"	t
sint_t	include/nautilus/naut_types.h	/^typedef signed int   sint_t;$/;"	t
siphon_logical_children	src/legion_runtime/region_tree.cc	/^    bool RegionTreeNode::siphon_logical_children(LogicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
siphon_physical_children	src/legion_runtime/region_tree.cc	/^    bool RegionTreeNode::siphon_physical_children(PhysicalCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
siphon_physical_children	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::siphon_physical_children(CompositeCloser &closer,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
size	include/dev/hpet.h	/^    hpet_cmp_size_t size;   \/* is the timer 32-bit (0) or 64-bit? (1) *\/$/;"	m	struct:hpet_comparator
size	include/lua/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer
size	include/lua/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon18
size	include/lua/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist
size	include/lua/lstate.h	/^  int size;$/;"	m	struct:stringtable
size	include/nautilus/idt.h	/^    uint16_t size;$/;"	m	struct:idt_desc
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_address
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_console_flags
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_entry_address
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_framebuffer
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_information_request
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_module_align
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_apm
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_basic_meminfo
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_bootdev
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_efi32
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_efi64
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_elf_sections
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_framebuffer_common
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_hrt
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_mmap
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_module
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_network
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_new_acpi
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_old_acpi
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_smbios
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_string
size	include/nautilus/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_vbe
size	include/nautilus/scheduler.h	/^    uint64_t size;     \/\/ length of RT computation$/;"	m	struct:nk_sched_sporadic_constraints
size	src/acpi/acpica/aclocal.h	/^	u32 size;		\/* bytelist or field size *\/$/;"	m	union:acpi_parse_value
size	src/legion_runtime/activemsg.cc	/^  size_t size;$/;"	m	class:ContiguousPayload	file:
size	src/legion_runtime/activemsg.cc	/^  size_t size;$/;"	m	class:SpanPayload	file:
size	src/legion_runtime/lowlevel.cc	/^      size_t size;$/;"	m	struct:LegionRuntime::LowLevel::RemoteMemAllocArgs	file:
size	src/legion_runtime/lowlevel.cc	/^      unsigned wptr, rptr, size;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
size	src/legion_runtime/lowlevel.h	/^	unsigned offset, size;$/;"	m	struct:LegionRuntime::LowLevel::Domain::CopySrcDstField
size	src/legion_runtime/lowlevel_dma.cc	/^      unsigned src_offset, dst_offset, size;$/;"	m	struct:LegionRuntime::LowLevel::OffsetsAndSize	file:
size	src/legion_runtime/lowlevel_impl.h	/^	size_t size;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
size	src/legion_runtime/lowlevel_impl.h	/^      size_t size;$/;"	m	class:LegionRuntime::LowLevel::Memory::Impl
size	src/legion_runtime/region_tree.cc	/^    size_t LegionStack<T,MAX_SIZE,INC_SIZE>::size(void) const$/;"	f	class:LegionRuntime::HighLevel::LegionStack
size	src/lua_src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	src/nautilus/scheduler.c	/^    uint64_t   size;        \/\/ number of elements currently in the queue$/;"	m	struct:rt_queue	file:
size	src/nautilus/scheduler.c	/^    uint64_t   size;$/;"	m	struct:rt_priority_queue	file:
size	src/test/hpcg/geometry.h	/^    int64_t size;$/;"	m	struct:lgncg::Geometry
sizeCclosure	include/lua/lfunc.h	14;"	d
sizeLclosure	include/lua/lfunc.h	17;"	d
size_bytes	include/dev/virtio_pci.h	/^  uint64_t size_bytes;$/;"	m	struct:virtio_pci_vring
size_config	scripts/basic/fixdep.c	/^int    size_config = 0;$/;"	v
size_t	include/nautilus/libccompat.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t
size_t	include/nautilus/naut_types.h	/^typedef unsigned long size_t;$/;"	t
size_t	src/lua_src/lnautlib.c	/^typedef long unsigned int size_t;$/;"	t	file:
size_type	src/legion_runtime/legion_allocation.h	/^      typedef size_t          size_type;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
sizearray	include/lua/lobject.h	/^  int sizearray;  \/* size of `array' array *\/$/;"	m	struct:Table
sizecode	include/lua/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	include/lua/lobject.h	/^  int sizek;  \/* size of `k' *\/$/;"	m	struct:Proto
sizelineinfo	include/lua/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	include/lua/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizenode	include/lua/lobject.h	581;"	d
sizeof_lhs	src/legion_runtime/lowlevel.h	/^      size_t sizeof_lhs;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
sizeof_list_entry	src/legion_runtime/lowlevel.h	/^      size_t sizeof_list_entry;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
sizeof_rhs	src/legion_runtime/lowlevel.h	/^      size_t sizeof_rhs;$/;"	m	class:LegionRuntime::LowLevel::ReductionOpUntyped
sizep	include/lua/lobject.h	/^  int sizep;  \/* size of `p' *\/$/;"	m	struct:Proto
sizes	src/legion_runtime/lowlevel_dma.cc	/^	std::vector<size_t> sizes;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
sizes	src/legion_runtime/lowlevel_dma.cc	/^	std::vector<size_t> sizes;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
sizestring	include/lua/lstring.h	15;"	d
sizeudata	include/lua/lstring.h	17;"	d
sizeupvalues	include/lua/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto
skinit	include/nautilus/cpuid.h	/^            uint8_t skinit      : 1; \/\/ SKINIT and STGI are supported$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
skip-makefile	Makefile	/^skip-makefile := 1$/;"	m
skipBOM	src/lua_src/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:
skip_atoi	src/nautilus/printk.c	/^static int skip_atoi(const char **s)$/;"	f	file:
skip_field	src/acpi/acpica/aclocal.h	/^	u8 skip_field;$/;"	m	struct:acpi_field_info
skip_sep	src/lua_src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skipcomment	src/lua_src/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:
skipnoopstat	src/lua_src/lparser.c	/^static void skipnoopstat (LexState *ls) {$/;"	f	file:
slack	src/nautilus/scheduler.c	/^    uint64_t slack;        \/\/ allowed slop for scheduler execution itself$/;"	m	struct:nk_sched_percpu_state	file:
sleep_on_event	src/legion_runtime/lowlevel.cc	/^	virtual void sleep_on_event(Event wait_for, bool block = false)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
sleep_on_event	src/legion_runtime/lowlevel.cc	/^      void sleep_on_event(Event wait_for, bool block = false)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
sleep_on_event	src/legion_runtime/lowlevel_dma.cc	/^    void DmaRequest::Waiter::sleep_on_event(Event e, $/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
slic_version	include/acpi/actbl2.h	/^	uint32_t slic_version;$/;"	m	struct:acpi_slic_marker
slice	include/nautilus/multiboot2.h	/^  multiboot_uint32_t slice;$/;"	m	struct:multiboot_tag_bootdev
slice	include/nautilus/scheduler.h	/^    uint64_t slice;  \/\/ how much RT computation when it arrives$/;"	m	struct:nk_sched_periodic_constraints
slice	src/legion_runtime/legion_tasks.h	/^        SliceTask *slice;$/;"	m	struct:LegionRuntime::HighLevel::DeferredSlicer::DeferredSliceArgs
slice_domain	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::slice_domain(const Task *task, const Domain &domain,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
slice_domain	src/test/circuit_mapper.cc	/^void CircuitMapper::slice_domain(const Task *task, const Domain &domain,$/;"	f	class:CircuitMapper
slice_domain	src/test/custom_mapper.cc	/^void AdversarialMapper::slice_domain(const Task *task, const Domain &domain,$/;"	f	class:AdversarialMapper
slice_fraction	src/legion_runtime/legion_tasks.h	/^      Fraction<long long> slice_fraction;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
slice_id	src/legion_runtime/legion_logging.h	/^        UniqueID slice_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgIndexSlice
slice_id	src/legion_runtime/legion_logging.h	/^        UniqueID slice_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSlicePoint
slice_index_space	src/legion_runtime/legion_tasks.cc	/^    bool MultiTask::slice_index_space(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
slice_lock	src/legion_runtime/legion_tasks.h	/^      Reservation slice_lock;$/;"	m	class:LegionRuntime::HighLevel::DeferredSlicer
slice_owner	src/legion_runtime/legion_tasks.h	/^      SliceTask *slice_owner;$/;"	m	class:LegionRuntime::HighLevel::PointTask
slice_parent	src/legion_runtime/legion_logging.h	/^        UniqueID slice_parent;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSliceSlice
slice_subslice	src/legion_runtime/legion_logging.h	/^        UniqueID slice_subslice;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgSliceSlice
slice_task_lock	src/legion_runtime/runtime.h	/^      Reservation slice_task_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
slice_tasks	src/legion_runtime/legion_ops.h	/^      std::set<SliceTask*>         slice_tasks;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
sliced	src/legion_runtime/legion_tasks.h	/^      bool sliced;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
slicer	src/legion_runtime/legion_tasks.h	/^        DeferredSlicer *slicer;$/;"	m	struct:LegionRuntime::HighLevel::DeferredSlicer::DeferredSliceArgs
slices	src/legion_runtime/legion_tasks.h	/^      std::list<SliceTask*> slices;$/;"	m	class:LegionRuntime::HighLevel::MultiTask
sllong_t	include/nautilus/naut_types.h	/^typedef signed long long   sllong_t;$/;"	t
slong_t	include/nautilus/naut_types.h	/^typedef signed long   slong_t;$/;"	t
slot_mask	include/nautilus/pmc.h	/^    uint8_t slot_mask;$/;"	m	struct:event_prop
slp_en	src/arch/hrt/shutdown.c	/^    uint16_t  slp_en;$/;"	m	struct:shutdown_info	file:
slp_en	src/arch/x64/shutdown.c	/^    uint16_t  slp_en;$/;"	m	struct:shutdown_info	file:
slp_server	include/acpi/actbl2.h	/^	uint8_t slp_server[16];$/;"	m	struct:acpi_ibft_initiator
slp_typa	src/arch/hrt/shutdown.c	/^    uint16_t  slp_typa;$/;"	m	struct:shutdown_info	file:
slp_typa	src/arch/x64/shutdown.c	/^    uint16_t  slp_typa;$/;"	m	struct:shutdown_info	file:
slp_typb	src/arch/hrt/shutdown.c	/^    uint16_t  slp_typb;$/;"	m	struct:shutdown_info	file:
slp_typb	src/arch/x64/shutdown.c	/^    uint16_t  slp_typb;$/;"	m	struct:shutdown_info	file:
small_const_nbits	include/lib/bitmap.h	63;"	d
smep	include/nautilus/cpuid.h	/^            uint8_t smep                : 1; $/;"	m	struct:cpuid_ext_feat_flags_ebx::__anon44::__anon45
smi_cmd	src/arch/hrt/shutdown.c	/^    uint32_t  smi_cmd;$/;"	m	struct:shutdown_info	file:
smi_cmd	src/arch/x64/shutdown.c	/^    uint32_t  smi_cmd;$/;"	m	struct:shutdown_info	file:
smi_command	include/acpi/actbl.h	/^	uint32_t smi_command;	\/* 32-bit Port address of SMI command port *\/$/;"	m	struct:acpi_table_fadt
smp_ap_entry	src/nautilus/smp.c	/^smp_ap_entry (struct cpu * core) $/;"	f
smp_ap_finish	src/nautilus/smp.c	/^smp_ap_finish (struct cpu * core)$/;"	f	file:
smp_ap_setup	src/nautilus/smp.c	/^smp_ap_setup (struct cpu * core)$/;"	f	file:
smp_bringup_aps	src/nautilus/smp.c	/^smp_bringup_aps (struct naut_info * naut)$/;"	f
smp_core_count	src/nautilus/smp.c	/^static volatile unsigned smp_core_count = 1; \/\/ assume BSP is booted$/;"	v	file:
smp_early_init	src/nautilus/smp.c	/^smp_early_init (struct naut_info * naut)$/;"	f
smp_setup_xcall_bsp	src/nautilus/smp.c	/^smp_setup_xcall_bsp (struct cpu * core)$/;"	f
smp_wait_for_ap	src/nautilus/smp.c	/^smp_wait_for_ap (struct naut_info * naut, unsigned int core_num)$/;"	f	file:
smp_xcall	src/nautilus/smp.c	/^smp_xcall (cpu_id_t cpu_id, $/;"	f
smp_xcall_init_queue	src/nautilus/smp.c	/^smp_xcall_init_queue (struct cpu * core)$/;"	f	file:
smt_bits	include/nautilus/numa.h	/^    uint32_t smt_bits;$/;"	m	struct:nk_topo_params
smt_id	include/nautilus/numa.h	/^    uint32_t smt_id;  \/\/ logical CPU ID within core$/;"	m	struct:nk_cpu_coords
smx	include/nautilus/cpuid.h	/^            uint8_t smx      : 1; \/\/ Safer mode extensions$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
snprintf	src/nautilus/printk.c	/^int snprintf(char * buf, size_t size, const char *fmt, ...)$/;"	f
sns_server	include/acpi/actbl2.h	/^	uint8_t sns_server[16];$/;"	m	struct:acpi_ibft_initiator
software_rev	include/dev/vesa.h	/^    uint16_t software_rev;  \/\/ software revision$/;"	m	struct:vesa_adapter_info
solv	src/test/hpcg/cg.h	/^solv(SparseMatrix &A,$/;"	f	namespace:lgncg::cg
sort	src/lua_src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	src/lua_src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
sort_copy_instances	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::sort_copy_instances(MappableInfo *info,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
sort_memories	src/legion_runtime/mapping_utilities.cc	/^      \/*static*\/ void MachineQueryInterface::sort_memories(Machine *machine, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MachineQueryInterface
source	include/acpi/acrestyp.h	/^	char source[4];		\/* pad to 64 bits so sizeof() works in all cases *\/$/;"	m	struct:acpi_pci_routing_table
source	include/lua/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	include/lua/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto
source	include/lua/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
source	src/legion_runtime/region_tree.h	/^      const AddressSpaceID source;$/;"	m	class:LegionRuntime::HighLevel::PhysicalUnpacker
source_id	include/acpi/actbl1.h	/^	uint16_t source_id;$/;"	m	struct:acpi_hest_header
source_index	include/acpi/acrestyp.h	/^	uint32_t source_index;$/;"	m	struct:acpi_pci_routing_table
source_irq	include/acpi/actbl1.h	/^	uint8_t source_irq;		\/* Interrupt source (IRQ) *\/$/;"	m	struct:acpi_madt_interrupt_override
source_object	src/acpi/acpica/aclocal.h	/^	union acpi_operand_object *source_object;$/;"	m	struct:acpi_pkg_state	typeref:union:acpi_pkg_state::acpi_operand_object
source_space	src/legion_runtime/runtime.h	/^        AddressSpace source_space;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::MPIRankArgs
source_stmt	scripts/kconfig/zconf.y	/^source_stmt: T_SOURCE prompt T_EOL$/;"	l
source_type	include/acpi/actbl2.h	/^	uint8_t source_type;$/;"	m	struct:acpi_asf_alert_data
sources	src/legion_runtime/shared_lowlevel.cc	/^	unsigned sources;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
sp	include/nautilus/realmode.h	/^    uint16_t sp;    \/\/ Accept defaults for these$/;"	m	struct:nk_real_mode_int_args
space	src/legion_runtime/legion_logging.h	/^        IndexSpace space;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopIndexSpace
space_id	include/acpi/acrestyp.h	/^	uint8_t space_id;$/;"	m	struct:acpi_resource_generic_register
space_id	include/acpi/actbl.h	/^	uint8_t space_id;		\/* Address space where struct or register exists *\/$/;"	m	struct:acpi_generic_address
space_id	include/dev/hpet.h	/^    uint8_t space_id;$/;"	m	struct:hpet_dev
span_copier	src/legion_runtime/lowlevel_dma.cc	/^      T *span_copier;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
span_count	src/legion_runtime/lowlevel.cc	/^	int span_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
span_count	src/legion_runtime/lowlevel_dma.cc	/^	int span_count;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
span_time	src/legion_runtime/lowlevel_dma.cc	/^      unsigned long long span_time;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
spans	src/legion_runtime/activemsg.cc	/^  SpanList spans;$/;"	m	class:SpanPayload	file:
spawn	src/legion_runtime/lowlevel.cc	/^    Event Processor::spawn(TaskFuncID func_id, const void *args, size_t arglen,$/;"	f	class:LegionRuntime::LowLevel::Processor
spawn	src/legion_runtime/shared_lowlevel.cc	/^    Event Processor::spawn(Processor::TaskFuncID func_id, const void * args,$/;"	f	class:LegionRuntime::LowLevel::Processor
spawn	src/legion_runtime/shared_lowlevel.cc	/^    Event ProcessorGroup::spawn(Processor::TaskFuncID func_id, const void * args,$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
spawn	src/legion_runtime/shared_lowlevel.cc	/^    Event ProcessorImpl::spawn(Processor::TaskFuncID func_id, const void * args,$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
spawn_child_task	src/legion_runtime/alt_mappers.cc	/^    bool DebugMapper::spawn_child_task(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
spawn_child_task	src/legion_runtime/alt_mappers.cc	/^    bool SequoiaMapper::spawn_child_task(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::SequoiaMapper
spawn_task	src/legion_runtime/legion.h	/^      bool                                spawn_task;$/;"	m	class:LegionRuntime::HighLevel::Task
spawn_task	src/legion_runtime/lowlevel.cc	/^      virtual void spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
spawn_task	src/legion_runtime/lowlevel.cc	/^      virtual void spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
spawn_task	src/legion_runtime/lowlevel.cc	/^    \/*virtual*\/ void ProcessorGroup::spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
spawn_task	src/legion_runtime/lowlevel.cc	/^    \/*virtual*\/ void UtilityProcessor::spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
spawn_task	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::spawn_task(Processor::TaskFuncID func_id,$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
spawn_task	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::spawn_task(const Task *task)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
spec	src/legion_runtime/utilities.h	/^    mach_timespec_t spec;$/;"	m	class:LegionRuntime::TimeStamp
spec	src/legion_runtime/utilities.h	/^    struct timespec spec;$/;"	m	class:LegionRuntime::TimeStamp	typeref:struct:LegionRuntime::TimeStamp::timespec
spec_revision	include/acpi/actbl2.h	/^	uint16_t spec_revision;	\/* Version of IPMI *\/$/;"	m	struct:acpi_table_spmi
spec_version	include/acpi/actbl2.h	/^	uint16_t spec_version;$/;"	m	struct:acpi_table_wddt
speculate	src/legion_runtime/legion_ops.cc	/^    bool AcquireOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
speculate	src/legion_runtime/legion_ops.cc	/^    bool CopyOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
speculate	src/legion_runtime/legion_ops.cc	/^    bool ReleaseOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
speculate	src/legion_runtime/legion_tasks.cc	/^    bool TaskOp::speculate(bool &value)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
speculate_on_predicate	src/legion_runtime/default_mapper.cc	/^    bool DefaultMapper::speculate_on_predicate(const Mappable *mappable, $/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
speculate_on_predicate	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::speculate_on_predicate(MappingTagID tag, $/;"	f	class:LegionRuntime::HighLevel::ShimMapper
speculate_on_predicate	src/legion_runtime/shim_mapper.cc	/^    bool ShimMapper::speculate_on_predicate(const Mappable *m, bool &spec_value)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
speculated	src/legion_runtime/legion.h	/^      bool                                speculated;$/;"	m	class:LegionRuntime::HighLevel::Task
speculation_state	src/legion_runtime/legion_ops.h	/^      SpecState    speculation_state;$/;"	m	class:LegionRuntime::HighLevel::SpeculativeOp
spew	src/legion_runtime/utilities.h	/^      inline void spew(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
spin_lock	include/nautilus/spinlock.h	/^spin_lock (volatile spinlock_t * lock) $/;"	f
spin_lock_irq_save	include/nautilus/spinlock.h	/^spin_lock_irq_save (volatile spinlock_t * lock)$/;"	f
spin_lock_irq_save_nopause	src/nautilus/spinlock.c	/^spin_lock_irq_save_nopause (volatile spinlock_t * lock)$/;"	f
spin_lock_nopause	src/nautilus/spinlock.c	/^spin_lock_nopause (volatile spinlock_t * lock)$/;"	f
spin_unlock	include/nautilus/spinlock.h	/^spin_unlock (volatile spinlock_t * lock) $/;"	f
spin_unlock_irq_restore	include/nautilus/spinlock.h	/^spin_unlock_irq_restore (volatile spinlock_t * lock, uint8_t flags)$/;"	f
spinlock_deinit	src/nautilus/spinlock.c	/^spinlock_deinit (volatile spinlock_t * lock) $/;"	f
spinlock_init	src/nautilus/spinlock.c	/^spinlock_init (volatile spinlock_t * lock) $/;"	f
spinlock_t	include/nautilus/spinlock.h	/^typedef uint32_t spinlock_t;$/;"	t
split1	scripts/kconfig/qconf.h	/^	QSplitter* split1;$/;"	m	class:ConfigMainWindow
split2	scripts/kconfig/qconf.h	/^	QSplitter* split2;$/;"	m	class:ConfigMainWindow
split_path	src/fs/ext2/ext2_access.c	/^static char** split_path(char *path, int *num_parts) $/;"	f	file:
split_segment	src/legion_runtime/rectangle_set.h	/^    \/*static*\/ void RectangleSet<T,DISCRETE>::split_segment(Segment<T> *segment,$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
splitting_factor	src/legion_runtime/default_mapper.h	/^      unsigned splitting_factor;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
spmv	src/test/hpcg/comp-spmv.h	/^spmv(const SparseMatrix &A,$/;"	f	namespace:lgncg
spmvTask	src/test/hpcg/comp-spmv.h	/^spmvTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
spmvTaskArgs	src/test/hpcg/comp-spmv.h	/^    spmvTaskArgs(int64_t nCols) : nCols(nCols) { ; }$/;"	f	struct:__anon111::spmvTaskArgs
spmvTaskArgs	src/test/hpcg/comp-spmv.h	/^struct spmvTaskArgs {$/;"	s	namespace:__anon111
sporadic	include/nautilus/scheduler.h	/^	struct nk_sched_sporadic_constraints     sporadic;$/;"	m	union:nk_sched_constraints::__anon53	typeref:struct:nk_sched_constraints::__anon53::nk_sched_sporadic_constraints
sporadic_reservation	include/nautilus/scheduler.h	/^    uint64_t sporadic_reservation;       \/\/ utilization in 10^-6 units$/;"	m	struct:nk_sched_config
sprintf	src/nautilus/printk.c	/^int sprintf(char * buf, const char *fmt, ...)$/;"	f
spur_int_cnt	include/dev/apic.h	/^    uint64_t spur_int_cnt;$/;"	m	struct:apic_dev
spur_int_handler	src/dev/apic.c	/^spur_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
sqrt	src/nautilus/libccompat.c	/^double sqrt(double x)$/;"	f
srand	src/nautilus/libccompat.c	/^srand (unsigned int seed)$/;"	f
srand48	src/nautilus/libccompat.c	/^srand48 (long int seedval)$/;"	f
srat_rev	src/arch/x64/numa.c	/^static int srat_rev;$/;"	v	file:
src	Makefile	/^src		:= $(srctree)$/;"	m
src	src/legion_runtime/lowlevel_dma.cc	/^      GPUProcessor *src, *dst;$/;"	m	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier	file:
src	src/legion_runtime/lowlevel_gpu.cc	/^      const void *src;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy1D	file:
src	src/legion_runtime/lowlevel_gpu.cc	/^      const void *src;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
src_acc	src/legion_runtime/lowlevel_dma.cc	/^      RegionAccessor<AccessorType::Generic> src_acc;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier	file:
src_base	src/legion_runtime/lowlevel.cc	/^	const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
src_base	src/legion_runtime/lowlevel_dma.cc	/^	const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
src_base	src/legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier	file:
src_base	src/legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier	file:
src_base	src/legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::MemcpyMemPairCopier	file:
src_base	src/legion_runtime/lowlevel_dma.cc	/^      const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
src_base	src/legion_runtime/shared_lowlevel.cc	/^        const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::Memcpy	file:
src_base	src/legion_runtime/shared_lowlevel.cc	/^        const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopApply	file:
src_base	src/legion_runtime/shared_lowlevel.cc	/^        const char *src_base;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RedopFold	file:
src_buffer	src/legion_runtime/lowlevel_dma.cc	/^      char *src_buffer;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
src_bus_id	include/nautilus/acpi.h	/^    uint8_t  src_bus_id;$/;"	m	struct:mp_table_entry_ioint
src_bus_id	include/nautilus/acpi.h	/^    uint8_t  src_bus_id;$/;"	m	struct:mp_table_entry_lint
src_bus_id	include/nautilus/irq.h	/^    uint8_t    src_bus_id;$/;"	m	struct:nk_int_entry
src_bus_irq	include/nautilus/acpi.h	/^    uint8_t  src_bus_irq; $/;"	m	struct:mp_table_entry_ioint
src_bus_irq	include/nautilus/acpi.h	/^    uint8_t  src_bus_irq; $/;"	m	struct:mp_table_entry_lint
src_bus_irq	include/nautilus/irq.h	/^    uint8_t    src_bus_irq;$/;"	m	struct:nk_int_entry
src_core	include/test/ipi.h	/^	cpu_id_t       src_core; \/\/ which core is the src$/;"	m	struct:ipi_exp_data
src_end	src/lua_src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	src/lua_src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
src_inst	src/legion_runtime/lowlevel_dma.cc	/^      RegionInstance::Impl *src_inst;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
src_instance	src/legion_runtime/legion_logging.h	/^        PhysicalInstance src_instance;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
src_mapping_paths	src/legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> src_mapping_paths; $/;"	m	class:LegionRuntime::HighLevel::CopyOp
src_mask	src/legion_runtime/shared_lowlevel.cc	/^          const ElementMask &src_mask;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
src_mem	src/legion_runtime/lowlevel.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_mem	src/legion_runtime/lowlevel.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_mem	src/legion_runtime/lowlevel_dma.cc	/^	GASNetMemory *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
src_mem	src/legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_mem	src/legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *src_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_mem	src/legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedMemPairCopier	file:
src_mem	src/legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier	file:
src_mem	src/legion_runtime/lowlevel_dma.cc	/^      Memory::Impl *src_mem, *dst_mem;$/;"	m	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier	file:
src_offset	src/legion_runtime/lowlevel.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_offset	src/legion_runtime/lowlevel.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_offset	src/legion_runtime/lowlevel_dma.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
src_offset	src/legion_runtime/lowlevel_dma.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
src_offset	src/legion_runtime/lowlevel_dma.cc	/^	off_t src_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
src_offset	src/legion_runtime/lowlevel_dma.cc	/^      unsigned src_offset, dst_offset, size;$/;"	m	struct:LegionRuntime::LowLevel::OffsetsAndSize	file:
src_privilege_paths	src/legion_runtime/legion_ops.h	/^      std::vector<RegionTreePath> src_privilege_paths;$/;"	m	class:LegionRuntime::HighLevel::CopyOp
src_ptr	src/legion_runtime/lowlevel.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
src_ptr	src/legion_runtime/lowlevel.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
src_ptr	src/legion_runtime/lowlevel_dma.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
src_ptr	src/legion_runtime/lowlevel_dma.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
src_ptr	src/legion_runtime/lowlevel_dma.cc	/^	const char *src_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
src_requirements	src/legion_runtime/legion.h	/^      std::vector<RegionRequirement>    src_requirements;$/;"	m	class:LegionRuntime::HighLevel::Copy
src_requirements	src/legion_runtime/legion.h	/^      std::vector<RegionRequirement>  src_requirements;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
src_size	src/legion_runtime/lowlevel_dma.cc	/^      std::vector<int> src_size;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
src_spans	src/legion_runtime/lowlevel_dma.cc	/^	SpanList src_spans;$/;"	m	struct:LegionRuntime::LowLevel::RemoteWriteMemPairCopier::PendingGather	file:
src_start	src/legion_runtime/lowlevel_dma.cc	/^      std::vector<off_t> src_start;$/;"	m	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier	file:
src_stride	src/legion_runtime/lowlevel_gpu.cc	/^      off_t dst_stride, src_stride;$/;"	m	class:LegionRuntime::LowLevel::GPUMemcpy2D	file:
src_type	include/test/ipi.h	/^	ipi_src_type_t src_type; \/\/ is this one src core or all?$/;"	m	struct:ipi_exp_data
srcdatapool	src/legion_runtime/activemsg.cc	/^static SrcDataPool *srcdatapool = 0;$/;"	v	file:
srcptr	src/legion_runtime/activemsg.cc	/^  const void *srcptr;$/;"	m	class:TwoDPayload	file:
srcptr	src/legion_runtime/activemsg.cc	/^  void *srcptr;$/;"	m	class:ContiguousPayload	file:
srcptr	src/legion_runtime/activemsg.h	/^  void *srcptr;$/;"	m	struct:BaseMedium
srcptr	src/legion_runtime/activemsg.h	/^  void *srcptr;$/;"	m	struct:BaseReply
srcs	src/legion_runtime/lowlevel_dma.cc	/^	std::vector<const void *> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
srcs	src/legion_runtime/lowlevel_dma.cc	/^      std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
srcs	src/legion_runtime/shared_lowlevel.cc	/^	std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter	file:
srcs	src/legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionApply	file:
srcs	src/legion_runtime/shared_lowlevel.cc	/^        std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::ReductionFold	file:
srcs	src/legion_runtime/shared_lowlevel.cc	/^      std::vector<Domain::CopySrcDstField> srcs;$/;"	m	class:LegionRuntime::LowLevel::CopyOperation	file:
srctree	Makefile	/^srctree		:= $(if $(KBUILD_SRC),$(KBUILD_SRC),$(CURDIR))$/;"	m
srst	src/dev/ata.c	/^	uint8_t srst:1;  \/\/ software reset of all drives on bus$/;"	m	struct:ata_cmd_reg::__anon136	file:
srv	src/dev/ata.c	/^	uint8_t srv:1;  \/\/ overlapped mode?$/;"	m	struct:ata_status_reg::__anon135	file:
ss	include/nautilus/cpu.h	/^    ulong_t ss;$/;"	m	struct:nk_regs
ss	include/nautilus/cpuid.h	/^            uint8_t ss       : 1; \/\/ self snoop$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
ss	include/nautilus/idt.h	/^    ulong_t ss;$/;"	m	struct:excp_entry_state
ss	include/nautilus/realmode.h	/^    uint16_t ss;    \/\/ $/;"	m	struct:nk_real_mode_int_args
sscanf	src/nautilus/printk.c	/^int sscanf(const char * buf, const char * fmt, ...)$/;"	f
sse	include/nautilus/cpuid.h	/^            uint8_t sse      : 1; \/\/ SSE$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
sse2	include/nautilus/cpuid.h	/^            uint8_t sse2     : 1; \/\/ SSE2$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
sse3	include/nautilus/cpuid.h	/^            uint8_t sse3     : 1; \/\/ Streaming SIMD Extensions 3 (SSE3)$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
sse4a	include/nautilus/cpuid.h	/^            uint8_t sse4a       : 1; \/\/ EXTRQ, INSERTQ, MOVNTSS, & MOVNTSD$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
sse4dot1	include/nautilus/cpuid.h	/^            uint8_t sse4dot1 : 1; \/\/ SSE 4.1$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
sse4dot2	include/nautilus/cpuid.h	/^            uint8_t sse4dot2 : 1; \/\/ SSE 4.2$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
sse_vector	src/legion_runtime/legion_utilities.h	/^        __m128i sse_vector[MAX\/128];$/;"	m	union:LegionRuntime::HighLevel::SSEBitMask::__anon94
sse_vector	src/legion_runtime/legion_utilities.h	/^        __m128i sse_vector[MAX\/128];$/;"	m	union:LegionRuntime::HighLevel::SSETLBitMask::__anon95
sshort_t	include/nautilus/naut_types.h	/^typedef signed short   sshort_t;$/;"	t
ssize_t	include/nautilus/naut_types.h	/^typedef long          ssize_t;$/;"	t
ssse3	include/nautilus/cpuid.h	/^            uint8_t ssse3    : 1; \/\/ Supplemental Streaming SIMD Extensions 3 (SSSE3)$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
st_size	include/nautilus/fs.h	/^    uint64_t st_size;$/;"	m	struct:nk_fs_stat
stack	include/lua/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack	include/nautilus/smp.h	/^    uint32_t stack;  \/\/ 0$/;"	m	struct:ap_init_area
stack	include/nautilus/thread.h	/^    void * stack; \/* SHOULD NOT CHANGE POSITION *\/$/;"	m	struct:nk_thread
stack_init	src/lua_src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	include/lua/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State
stack_size	include/nautilus/thread.h	/^    nk_stack_size_t stack_size;$/;"	m	struct:nk_thread
stack_size_in_mb	src/legion_runtime/lowlevel.cc	/^    static size_t stack_size_in_mb;$/;"	m	namespace:LegionRuntime::LowLevel	file:
stackinuse	src/lua_src/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
stacksize	include/lua/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State
start	include/nautilus/paging.h	/^    uint64_t start;$/;"	m	struct:nk_mem_zone
start	src/acpi/acpica/aclocal.h	/^	u16 start;$/;"	m	struct:acpi_port_info
start	src/legion_runtime/legion.cc	/^    \/*static*\/ int HighLevelRuntime::start(int argc, char **argv, $/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
start	src/legion_runtime/lowlevel.cc	/^      void start(int core_id, const char *debug_name) {$/;"	f	class:LegionRuntime::LowLevel::ThreadImpl
start	src/legion_runtime/region_tree.h	/^        unsigned long long start;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
start	src/legion_runtime/region_tree.h	/^      unsigned long long start;$/;"	m	class:LegionRuntime::HighLevel::PerfTracer
start	src/legion_runtime/runtime.cc	/^    \/*static*\/ int Runtime::start(int argc, char **argv, bool background)$/;"	f	class:LegionRuntime::HighLevel::Runtime
start	src/legion_runtime/shared_lowlevel.cc	/^    void DMAQueue::start(void)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
start	src/legion_runtime/shared_lowlevel.cc	/^    void* ProcessorImpl::start(void *p)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
start	src/test/benchmark.c	/^    uint64_t start;$/;"	m	struct:cv	file:
start_address	include/acpi/actbl2.h	/^	uint64_t start_address;$/;"	m	struct:acpi_ivrs_memory
start_arrivals	src/legion_runtime/shared_lowlevel.cc	/^                int start_arrivals;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
start_block	src/legion_runtime/legion_logging.cc	/^    void TreeStateLogger::start_block(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
start_block	src/legion_runtime/legion_spy.cc	/^    void TreeStateLogger::start_block(const char *fmt, ...)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
start_bus_number	include/acpi/actbl2.h	/^	uint8_t start_bus_number;	\/* Starting PCI Bus number *\/$/;"	m	struct:acpi_mcfg_allocation
start_capture	src/lua_src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
start_count	include/nautilus/instrument.h	/^    uint64_t start_count;$/;"	m	struct:irq_data
start_count	include/nautilus/instrument.h	/^    uint64_t start_count;$/;"	m	struct:malloc_data
start_count	include/nautilus/instrument.h	/^    uint64_t start_count;$/;"	m	struct:thread_switch_data
start_count	src/nautilus/instrument.c	/^    uint64_t start_count;$/;"	m	struct:func_data	file:
start_cycle	src/test/ipi.c	/^    uint64_t start_cycle;$/;"	m	struct:time_struct	file:
start_dma_thread	src/legion_runtime/shared_lowlevel.cc	/^    \/*static*\/ void* DMAQueue::start_dma_thread(void *args)$/;"	f	class:LegionRuntime::LowLevel::DMAQueue
start_dma_worker_threads	src/legion_runtime/lowlevel_dma.cc	/^    void start_dma_worker_threads(int count)$/;"	f	namespace:LegionRuntime::LowLevel
start_dpf	include/acpi/acrestyp.h	/^	struct acpi_resource_start_dependent start_dpf;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_start_dependent
start_event	src/legion_runtime/legion_logging.h	/^        Event start_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
start_event	src/legion_runtime/legion_logging.h	/^        Event start_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
start_event	src/legion_runtime/lowlevel.cc	/^      Event start_event;$/;"	m	struct:LegionRuntime::LowLevel::SpawnTaskArgs	file:
start_gpu_dma_thread	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::start_gpu_dma_thread(const std::vector<GPUProcessor*> &local)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
start_interrupt_thread_for_this_cpu	src/nautilus/scheduler.c	/^static int start_interrupt_thread_for_this_cpu()$/;"	f	file:
start_list	src/nautilus/vc.c	/^static int start_list()$/;"	f	file:
start_node	src/acpi/acpica/aclocal.h	/^	struct acpi_namespace_node *start_node;$/;"	m	struct:acpi_parse_state	typeref:struct:acpi_parse_state::acpi_namespace_node
start_op	src/acpi/acpica/aclocal.h	/^	union acpi_parse_object *start_op;	\/* Root of parse tree *\/$/;"	m	struct:acpi_parse_state	typeref:union:acpi_parse_state::acpi_parse_object
start_polling_threads	src/legion_runtime/activemsg.cc	/^void start_polling_threads(int count)$/;"	f
start_reaper	src/nautilus/scheduler.c	/^static int start_reaper()$/;"	f	file:
start_scope	src/acpi/acpica/aclocal.h	/^	union acpi_parse_object *start_scope;$/;"	m	struct:acpi_parse_state	typeref:union:acpi_parse_state::acpi_parse_object
start_sending_threads	src/legion_runtime/activemsg.cc	/^void start_sending_threads(void)$/;"	f
start_some_threads	src/legion_runtime/lowlevel.cc	/^      void start_some_threads(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
start_thread	src/legion_runtime/lowlevel.cc	/^    void PreemptableThread::start_thread(size_t stack_size, int core_id, const char *debug_name)$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
start_time	src/legion_runtime/legion.h	/^	unsigned long long start_time; \/\/ microseconds since program start$/;"	m	struct:LegionRuntime::HighLevel::Mapper::ExecutionProfile
start_time	src/legion_runtime/legion.h	/^      unsigned long long                  start_time;$/;"	m	class:LegionRuntime::HighLevel::Task
start_time	src/legion_runtime/lowlevel.cc	/^      double start_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
start_time	src/legion_runtime/shared_lowlevel.cc	/^      double start_time;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
start_time	src/legion_runtime/utilities.h	/^	double start_time, time_mult;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
start_time	src/nautilus/scheduler.c	/^    uint64_t start_time;   \/\/ when last started$/;"	m	struct:nk_sched_thread_state	file:
start_time	src/nautilus/scheduler.c	/^    uint64_t start_time;  \/\/ time from when the current thread starts running (exit from need_resched())$/;"	m	struct:tsc_info	file:
start_worker_thread	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::start_worker_thread(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
start_worker_threads	src/legion_runtime/lowlevel.cc	/^      void start_worker_threads(size_t stack_size)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
start_worker_threads	src/legion_runtime/lowlevel.cc	/^    void UtilityProcessor::start_worker_threads(size_t stack_size)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
startpc	include/lua/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
startup_arrivals	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::startup_arrivals = 0;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
startup_arrivals	src/legion_runtime/runtime.h	/^      static unsigned startup_arrivals;$/;"	m	class:LegionRuntime::HighLevel::Runtime
stat	include/dev/hpet.h	/^    hpet_cmp_stat_t stat; \/* enabled or not? *\/$/;"	m	struct:hpet_comparator
stat	include/nautilus/fs.h	/^    int   (*stat)(void *state, void *file, struct nk_fs_stat *st);$/;"	m	struct:nk_fs_int
stat_path	include/nautilus/fs.h	/^    int   (*stat_path)(void *state, char *path, struct nk_fs_stat *st);$/;"	m	struct:nk_fs_int
state	include/nautilus/dev.h	/^    void *state; \/\/ driver state$/;"	m	struct:nk_dev
state	include/nautilus/fs.h	/^    void             *state;  \/\/ internal FS state$/;"	m	struct:nk_fs
state	scripts/kconfig/lex.zconf.c	/^        YY_BUFFER_STATE state;$/;"	m	struct:buffer	file:
state	src/legion_runtime/lowlevel.cc	/^	State state;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread	file:
state	src/legion_runtime/lowlevel_dma.cc	/^      State state;$/;"	m	class:LegionRuntime::LowLevel::DmaRequest	file:
state	src/legion_runtime/runtime.h	/^      ControlState state;$/;"	m	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
state_lock	src/dev/vesa.c	/^static spinlock_t state_lock;$/;"	v	file:
state_lock	src/nautilus/dev.c	/^static spinlock_t state_lock;$/;"	v	file:
state_lock	src/nautilus/fs.c	/^static spinlock_t state_lock;$/;"	v	file:
state_lock	src/nautilus/realmode.c	/^static spinlock_t state_lock;$/;"	v	file:
state_lock	src/nautilus/timer.c	/^static spinlock_t state_lock;$/;"	v	file:
state_lock	src/nautilus/vc.c	/^static spinlock_t state_lock;$/;"	v	file:
statement	src/lua_src/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
statlist	src/lua_src/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
status	include/acpi/actbl2.h	/^	uint16_t status;$/;"	m	struct:acpi_table_wddt
status	include/dev/pci.h	/^    uint16_t status;$/;"	m	struct:pci_cfg_space
status	include/lua/lstate.h	/^      lu_byte status;$/;"	m	struct:CallInfo::__anon11::__anon13
status	include/lua/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
status	include/nautilus/pmc.h	/^    uint8_t status;$/;"	m	struct:perf_slot
status	include/nautilus/thread.h	/^    nk_thread_status_t status;$/;"	m	struct:nk_thread
status	src/acpi/acpica/aclocal.h	/^	acpi_status status;$/;"	m	struct:acpi_gpe_device_info
status	src/lua_src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	src/lua_src/ldump.c	/^ int status;$/;"	m	struct:__anon140	file:
status	src/nautilus/scheduler.c	/^    rt_status status;$/;"	m	struct:nk_sched_thread_state	file:
status_address	src/acpi/acpica/aclocal.h	/^	struct acpi_generic_address status_address;	\/* Address of status reg *\/$/;"	m	struct:acpi_gpe_register_info	typeref:struct:acpi_gpe_register_info::acpi_generic_address
status_bit_mask	src/acpi/acpica/aclocal.h	/^	u16 status_bit_mask;$/;"	m	struct:acpi_fixed_event_info
status_format	include/acpi/actbl1.h	/^	uint8_t status_format;$/;"	m	struct:acpi_hest_ia_error_bank
status_register	include/acpi/actbl1.h	/^	uint32_t status_register;$/;"	m	struct:acpi_hest_ia_error_bank
status_register_id	src/acpi/acpica/aclocal.h	/^	u8 status_register_id;$/;"	m	struct:acpi_fixed_event_info
stderr	include/nautilus/libccompat.h	72;"	d
stdin	include/nautilus/libccompat.h	70;"	d
stdout	include/nautilus/libccompat.h	71;"	d
steal_count	src/legion_runtime/legion.h	/^      unsigned                            steal_count;$/;"	m	class:LegionRuntime::HighLevel::Task
stealable	src/legion_runtime/legion.h	/^        bool stealable;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::DomainSplit
stealing_disabled	src/legion_runtime/runtime.cc	/^    \/*sattic*\/ bool Runtime::stealing_disabled = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
stealing_disabled	src/legion_runtime/runtime.h	/^      const bool stealing_disabled;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
stealing_disabled	src/legion_runtime/runtime.h	/^      static bool stealing_disabled;$/;"	m	class:LegionRuntime::HighLevel::Runtime
stealing_enabled	src/legion_runtime/default_mapper.h	/^      bool stealing_enabled;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
stealing_lock	src/legion_runtime/runtime.h	/^      Reservation stealing_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
stencilSize	src/test/hpcg/hpcg-main.cc	/^    static const int64_t stencilSize = 27;$/;"	m	struct:__anon117::DriverParams	file:
stencil_task	src/test/multiple_partitions.cc	/^void stencil_task(const Task *task,$/;"	f
step	src/legion_runtime/arrays.h	/^      bool step(void)$/;"	f	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
step	src/legion_runtime/arrays.h	/^      bool step(void)$/;"	f	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
step	src/legion_runtime/arrays.h	/^      bool step(void)$/;"	f	class:LegionRuntime::Arrays::GenericPointInRectIterator
step	src/legion_runtime/lowlevel.h	/^	bool step(void)$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
steps	src/test/circuit.h	/^  int           steps;$/;"	m	struct:CircuitPiece
sti	include/nautilus/cpu.h	/^sti (void)$/;"	f
stmt_list	scripts/kconfig/zconf.y	/^stmt_list:$/;"	l
stop_activemsg_threads	src/legion_runtime/activemsg.cc	/^void stop_activemsg_threads(void)$/;"	f
stop_bits	include/acpi/actbl2.h	/^	uint8_t stop_bits;$/;"	m	struct:acpi_table_spcr
stop_dma_worker_threads	src/legion_runtime/lowlevel_dma.cc	/^    void stop_dma_worker_threads(void)$/;"	f	namespace:LegionRuntime::LowLevel
stop_gpu_dma_threads	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::stop_gpu_dma_threads(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
stop_time	src/legion_runtime/legion.h	/^	unsigned long long stop_time; \/\/ microseconds since program start$/;"	m	struct:LegionRuntime::HighLevel::Mapper::ExecutionProfile
stop_time	src/legion_runtime/legion.h	/^      unsigned long long                  stop_time;$/;"	m	class:LegionRuntime::HighLevel::Task
store	src/legion_runtime/runtime.h	/^      ArgumentMapStore *const store;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMap::Impl
store_filename	scripts/kconfig/gconf.c	/^store_filename(GtkFileSelection * file_selector, gpointer user_data)$/;"	f	file:
str_append	scripts/kconfig/util.c	/^void str_append(struct gstr *gs, const char *s)$/;"	f
str_assign	scripts/kconfig/util.c	/^struct gstr str_assign(const char *s)$/;"	f
str_byte	src/lua_src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	src/lua_src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	src/lua_src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_config	scripts/basic/fixdep.c	/^char * str_config  = NULL;$/;"	v
str_dump	src/lua_src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	src/lua_src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	src/lua_src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	src/lua_src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_free	scripts/kconfig/util.c	/^void str_free(struct gstr *gs)$/;"	f
str_get	scripts/kconfig/util.c	/^const char *str_get(struct gstr *gs)$/;"	f
str_gsub	src/lua_src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	src/lua_src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	src/lua_src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	src/lua_src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_new	scripts/kconfig/util.c	/^struct gstr str_new(void)$/;"	f
str_printf	scripts/kconfig/util.c	/^void str_printf(struct gstr *gs, const char *fmt, ...)$/;"	f
str_rep	src/lua_src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	src/lua_src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	src/lua_src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_tolower	src/nautilus/naut_string.c	/^str_tolower (char * s) $/;"	f
str_toupper	src/nautilus/naut_string.c	/^str_toupper (char * s) $/;"	f
str_upper	src/lua_src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strcasecmp	src/nautilus/naut_string.c	/^strcasecmp (const char * s1, const char * s2) $/;"	f
strcat	include/nautilus/naut_string.h	157;"	d
strcat	src/nautilus/naut_string.c	/^strcat (char * s1, const char * s2) $/;"	f
strchr	include/nautilus/naut_string.h	162;"	d
strchr	src/nautilus/naut_string.c	/^strchr (const char * s, int c) $/;"	f
strcmp	include/nautilus/naut_string.h	155;"	d
strcmp	src/nautilus/naut_string.c	/^strcmp (const char * s1, const char * s2) $/;"	f
strcoll	src/nautilus/libccompat.c	/^int strcoll(const char *str1, const char *str2)$/;"	f
strcpy	src/nautilus/naut_string.c	/^strcpy (char * dest, const char * src)$/;"	f
strcspn	include/nautilus/naut_string.h	161;"	d
strcspn	src/nautilus/naut_string.c	/^strcspn (const char * s, const char * reject) $/;"	f
strdup	src/nautilus/naut_string.c	/^strdup (const char * s)$/;"	f
strerror	src/nautilus/libccompat.c	/^strerror (int errnum)$/;"	f
strftime	src/nautilus/libccompat.c	/^size_t strftime(char *str, size_t maxsize, const char *format, const struct tm *timeptr)$/;"	f
strict_strtol	src/nautilus/printk.c	/^int strict_strtol(const char *cp, unsigned int base, long *res)$/;"	f
strict_strtoll	src/nautilus/printk.c	/^int strict_strtoll(const char *cp, unsigned int base, long long *res)$/;"	f
strict_strtoul	src/nautilus/printk.c	/^int strict_strtoul(const char *cp, unsigned int base, unsigned long *res)$/;"	f
strict_strtoull	src/nautilus/printk.c	/^int strict_strtoull(const char *cp, unsigned int base, unsigned long long *res)$/;"	f
stride	src/legion_runtime/lowlevel.cc	/^      int stride;$/;"	m	struct:LegionRuntime::LowLevel::RemoteReduceArgs	file:
strides	src/legion_runtime/arrays.h	/^      Point<DIM> strides;$/;"	m	class:LegionRuntime::Arrays::Linearization
strides	src/legion_runtime/arrays.h	/^      Point<T::ODIM> strides[T::IDIM];$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
string	include/acpi/actypes.h	/^	char *string;$/;"	m	struct:acpica_device_id
string	include/acpi/actypes.h	/^	} string;$/;"	m	union:acpi_object	typeref:struct:acpi_object::__anon21
string	include/nautilus/multiboot2.h	/^  char string[0];$/;"	m	struct:multiboot_tag_string
string	scripts/kconfig/zconf.tab.c	/^	char *string;$/;"	m	union:YYSTYPE	file:
string	src/acpi/acpica/aclocal.h	/^	char *string;		\/* NULL terminated string *\/$/;"	m	union:acpi_parse_value
string	src/nautilus/printk.c	/^static char *string(char *buf, char *end, char *s, struct printf_spec spec)$/;"	f	file:
string_length	include/acpi/acrestyp.h	/^	uint16_t string_length;$/;"	m	struct:acpi_resource_source
string_ptr	include/acpi/acrestyp.h	/^	char *string_ptr;$/;"	m	struct:acpi_resource_source
stringify	src/legion_runtime/utilities.h	/^      static const char* stringify(int level)$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer
stringify	src/legion_runtime/utilities.h	/^    static const char* stringify(LogLevel level)$/;"	f	class:LegionRuntime::Logger
stringtable	include/lua/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	include/lua/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	scripts/kconfig/conf.c	/^static void strip(char *str)$/;"	f	file:
strip	src/lua_src/ldump.c	/^ int strip;$/;"	m	struct:__anon140	file:
strlen	include/nautilus/naut_string.h	153;"	d
strlen	src/nautilus/naut_string.c	/^strlen (const char * str)$/;"	f
strlib	src/lua_src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strncasecmp	src/nautilus/naut_string.c	/^strncasecmp (const char * s1, const char * s2, size_t limit) $/;"	f
strncat	include/nautilus/naut_string.h	158;"	d
strncat	src/nautilus/naut_string.c	/^strncat (char * s1, const char * s2, size_t limit) $/;"	f
strncmp	include/nautilus/naut_string.h	156;"	d
strncmp	src/nautilus/naut_string.c	/^strncmp (const char * s1, const char * s2, size_t limit) $/;"	f
strncpy	src/nautilus/naut_string.c	/^strncpy (char * dest, const char * src, size_t limit) $/;"	f
strnlen	include/nautilus/naut_string.h	154;"	d
strnlen	src/nautilus/naut_string.c	/^strnlen (const char * str, size_t max)$/;"	f
strpbrk	include/nautilus/naut_string.h	164;"	d
strpbrk	src/nautilus/naut_string.c	/^strpbrk (const char * cs, const char * ct)$/;"	f
strrchr	include/nautilus/naut_string.h	163;"	d
strrchr	src/nautilus/naut_string.c	/^strrchr (const char * s, int c) $/;"	f
strrcmp	scripts/basic/fixdep.c	/^int strrcmp(char *s, char *sub)$/;"	f
strsep	src/nautilus/naut_string.c	/^strsep (char ** s, const char * ct)$/;"	f
strspn	include/nautilus/naut_string.h	160;"	d
strspn	src/nautilus/naut_string.c	/^strspn (const char * s, const char * accept) $/;"	f
strstr	include/nautilus/naut_string.h	159;"	d
strstr	src/nautilus/naut_string.c	/^strstr (const char * s1, const char * s2)$/;"	f
strt	include/lua/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
strtod	src/nautilus/libccompat.c	/^double strtod(const char *string, char **endPtr)$/;"	f
strtoi	src/nautilus/naut_string.c	/^strtoi (const char * nptr, char ** endptr) $/;"	f
strtol	src/nautilus/naut_string.c	/^strtol (const char * str, char ** endptr, int base)$/;"	f
strtoul	include/acpi/platform/acnautilus.h	69;"	d
strtox	src/nautilus/naut_string.c	/^strtox (const char * nptr, char ** endptr) $/;"	f
struct_push	src/lua_src/nt_lnautlib.c	/^static int struct_push(lua_State *L)$/;"	f	file:
style	src/legion_runtime/lowlevel.cc	/^      Machine::RunStyle style;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
style	src/legion_runtime/shared_lowlevel.cc	/^      Machine::RunStyle style;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
stype	scripts/kconfig/lkc.h	/^	enum symbol_type stype;$/;"	m	struct:kconf_id	typeref:enum:kconf_id::symbol_type
sub_bus_num	include/dev/pci.h	/^            uint8_t  sub_bus_num;$/;"	m	struct:pci_cfg_space::__anon66::__anon68
sub_bus_num	include/dev/pci.h	/^            uint8_t  sub_bus_num;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
subclass	include/dev/pci.h	/^    uint8_t  subclass;$/;"	m	struct:pci_cfg_space
subexpr	src/lua_src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
subgridBnds	src/test/hpcg/vector.h	/^    std::vector< Rect<1> > subgridBnds;$/;"	m	struct:lgncg::PVecItem
subnet_mask_prefix	include/acpi/actbl2.h	/^	uint8_t subnet_mask_prefix;$/;"	m	struct:acpi_ibft_nic
subrect	src/legion_runtime/arrays.h	/^      Rect<T::IDIM> subrect;$/;"	m	class:LegionRuntime::Arrays::GenericDenseSubrectIterator
subrect	src/legion_runtime/arrays.h	/^      Rect<T::IDIM> subrect;$/;"	m	class:LegionRuntime::Arrays::GenericLinearSubrectIterator
subscribers	src/legion_runtime/garbage_collection.h	/^      std::map<AddressSpaceID,DistributedID> subscribers;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
subsume_node	src/legion_runtime/field_tree.h	/^    inline void FieldTree<UT>::subsume_node(FieldTree<UT> *dominator_node)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
subsys_dev_id	include/dev/pci.h	/^            uint16_t subsys_dev_id;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
subsys_id	include/dev/pci.h	/^            uint16_t subsys_id;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
subsys_vendor_id	include/dev/pci.h	/^            uint16_t subsys_vendor_id;$/;"	m	struct:pci_cfg_space::__anon66::__anon67
subsys_vendor_id	include/dev/pci.h	/^            uint16_t subsys_vendor_id;$/;"	m	struct:pci_cfg_space::__anon66::__anon69
subtract	src/legion_runtime/legion_utilities.h	/^    void Fraction<T>::subtract(const Fraction<T> &rhs)$/;"	f	class:LegionRuntime::HighLevel::Fraction
subtype	include/acpi/acrestyp.h	/^	uint8_t subtype;$/;"	m	struct:acpi_vendor_uuid
success	src/legion_runtime/legion_ops.h	/^      bool success;$/;"	m	class:LegionRuntime::HighLevel::MustEpochMapper
suffixedexp	src/lua_src/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
sum	src/legion_runtime/arrays.h	/^      static Point<DIM> sum(const Point<DIM> a, const Point<DIM> b)$/;"	f	class:LegionRuntime::Arrays::Point
sum	src/test/benchmark.c	/^    uint64_t sum;$/;"	m	struct:cv	file:
sum	src/test/ipi.c	/^    uint64_t sum;$/;"	m	struct:time_struct	file:
sum_mask	src/legion_runtime/legion_utilities.h	/^      T sum_mask;$/;"	m	class:LegionRuntime::HighLevel::TLBitMask
sum_mask	src/legion_runtime/legion_utilities.h	/^      uint64_t sum_mask;$/;"	m	class:LegionRuntime::HighLevel::AVXTLBitMask
sum_mask	src/legion_runtime/legion_utilities.h	/^      uint64_t sum_mask;$/;"	m	class:LegionRuntime::HighLevel::SSETLBitMask
sum_task	src/test/tasks_and_futures.cc	/^int sum_task(const Task *task,$/;"	f
super	src/fs/ext2/ext2.c	/^    struct ext2_super_block super;$/;"	m	struct:ext2_state	typeref:struct:ext2_state::ext2_super_block	file:
superscalar_width	src/legion_runtime/runtime.cc	/^    \/*static*\/ unsigned Runtime::superscalar_width = $/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
superscalar_width	src/legion_runtime/runtime.h	/^      const unsigned superscalar_width;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
superscalar_width	src/legion_runtime/runtime.h	/^      static unsigned superscalar_width;$/;"	m	class:LegionRuntime::HighLevel::Runtime
supports_fsb_del	include/dev/hpet.h	/^    uint8_t supports_fsb_del; \/* HW supports direct FSB delivery of this timer's irq *\/$/;"	m	struct:hpet_comparator
supports_periodic	include/dev/hpet.h	/^    uint8_t supports_periodic; $/;"	m	struct:hpet_comparator
svalue	include/lua/lobject.h	424;"	d
svm	include/nautilus/cpuid.h	/^            uint8_t svm         : 1; \/\/ secure virtual machine$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
swapextra	src/lua_src/ldebug.c	/^static void swapextra (lua_State *L) {$/;"	f	file:
sweepfin	include/lua/lstate.h	/^  GCObject **sweepfin;  \/* current position of sweep in list 'finobj' *\/$/;"	m	struct:global_State
sweepgc	include/lua/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list 'allgc' *\/$/;"	m	struct:global_State
sweepi	src/test/hpcg/comp-symgs.h	/^    uint8_t sweepi;$/;"	m	struct:__anon114::symgsTaskArgs
sweeplist	src/lua_src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepphases	src/lua_src/lgc.c	924;"	d	file:
sweepstrgc	include/lua/lstate.h	/^  int sweepstrgc;  \/* position of sweep in `strt' *\/$/;"	m	struct:global_State
sweepthread	src/lua_src/lgc.c	/^static void sweepthread (lua_State *L, lua_State *L1) {$/;"	f	file:
sweeptolive	src/lua_src/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p, int *n) {$/;"	f	file:
sweepwholelist	src/lua_src/lgc.c	690;"	d	file:
switch_cont	src/test/benchmark.c	/^typedef struct switch_cont {$/;"	s	file:
switch_cont_t	src/test/benchmark.c	/^} switch_cont_t;$/;"	t	typeref:struct:switch_cont	file:
switch_in_count	src/nautilus/scheduler.c	/^    uint64_t switch_in_count; \/\/ number of times switched to$/;"	m	struct:nk_sched_thread_state	file:
switch_state	src/dev/kbd.c	/^static enum { VC_START, VC_CONTEXT, VC_PREV, VC_NEXT, VC_MENU, VC_PREV_ALT, VC_NEXT_ALT, VC_MENU_ALT}  switch_state = VC_START;$/;"	v	typeref:enum:__anon138	file:
switcher	src/dev/kbd.c	/^static int switcher(nk_scancode_t scan) $/;"	f	file:
switcher_num_queued	src/dev/kbd.c	/^static uint8_t switcher_num_queued=0;$/;"	v	file:
switcher_scancode_queue	src/dev/kbd.c	/^static nk_scancode_t switcher_scancode_queue[SCAN_MAX_QUEUE];$/;"	v	file:
sym	scripts/kallsyms.c	/^	unsigned char *sym;$/;"	m	struct:sym_entry	file:
sym	scripts/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	struct:menu	typeref:struct:menu::symbol
sym	scripts/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	struct:property	typeref:struct:property::symbol
sym	scripts/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	union:expr_data	typeref:struct:expr_data::symbol
sym_add_default	scripts/kconfig/symbol.c	/^void sym_add_default(struct symbol *sym, const char *def)$/;"	f
sym_calc_choice	scripts/kconfig/symbol.c	/^static struct symbol *sym_calc_choice(struct symbol *sym)$/;"	f	file:
sym_calc_value	scripts/kconfig/symbol.c	/^void sym_calc_value(struct symbol *sym)$/;"	f
sym_calc_visibility	scripts/kconfig/symbol.c	/^static void sym_calc_visibility(struct symbol *sym)$/;"	f	file:
sym_change_count	scripts/kconfig/symbol.c	/^int sym_change_count;$/;"	v
sym_check_deps	scripts/kconfig/symbol.c	/^struct symbol *sym_check_deps(struct symbol *sym)$/;"	f
sym_check_expr_deps	scripts/kconfig/symbol.c	/^static struct symbol *sym_check_expr_deps(struct expr *e)$/;"	f	file:
sym_check_prop	scripts/kconfig/menu.c	/^void sym_check_prop(struct symbol *sym)$/;"	f
sym_clear_all_valid	scripts/kconfig/symbol.c	/^void sym_clear_all_valid(void)$/;"	f
sym_entry	scripts/kallsyms.c	/^struct sym_entry {$/;"	s	file:
sym_find	scripts/kconfig/symbol.c	/^struct symbol *sym_find(const char *name)$/;"	f
sym_get_choice_prop	scripts/kconfig/symbol.c	/^struct property *sym_get_choice_prop(struct symbol *sym)$/;"	f
sym_get_choice_value	scripts/kconfig/lkc.h	/^static inline struct symbol *sym_get_choice_value(struct symbol *sym)$/;"	f
sym_get_default_prop	scripts/kconfig/symbol.c	/^struct property *sym_get_default_prop(struct symbol *sym)$/;"	f
sym_get_range_prop	scripts/kconfig/symbol.c	/^struct property *sym_get_range_prop(struct symbol *sym)$/;"	f
sym_get_range_val	scripts/kconfig/symbol.c	/^static int sym_get_range_val(struct symbol *sym, int base)$/;"	f	file:
sym_get_string_value	scripts/kconfig/symbol.c	/^const char *sym_get_string_value(struct symbol *sym)$/;"	f
sym_get_tristate_value	scripts/kconfig/lkc.h	/^static inline tristate sym_get_tristate_value(struct symbol *sym)$/;"	f
sym_get_type	scripts/kconfig/symbol.c	/^enum symbol_type sym_get_type(struct symbol *sym)$/;"	f
sym_has_value	scripts/kconfig/lkc.h	/^static inline bool sym_has_value(struct symbol *sym)$/;"	f
sym_init	scripts/kconfig/symbol.c	/^void sym_init(void)$/;"	f
sym_is_changable	scripts/kconfig/symbol.c	/^bool sym_is_changable(struct symbol *sym)$/;"	f
sym_is_choice	scripts/kconfig/lkc.h	/^static inline bool sym_is_choice(struct symbol *sym)$/;"	f
sym_is_choice_value	scripts/kconfig/lkc.h	/^static inline bool sym_is_choice_value(struct symbol *sym)$/;"	f
sym_is_optional	scripts/kconfig/lkc.h	/^static inline bool sym_is_optional(struct symbol *sym)$/;"	f
sym_lookup	scripts/kconfig/symbol.c	/^struct symbol *sym_lookup(const char *name, int isconst)$/;"	f
sym_re_search	scripts/kconfig/symbol.c	/^struct symbol **sym_re_search(const char *pattern)$/;"	f
sym_set_all_changed	scripts/kconfig/symbol.c	/^void sym_set_all_changed(void)$/;"	f
sym_set_changed	scripts/kconfig/symbol.c	/^void sym_set_changed(struct symbol *sym)$/;"	f
sym_set_choice_value	scripts/kconfig/lkc.h	/^static inline bool sym_set_choice_value(struct symbol *ch, struct symbol *chval)$/;"	f
sym_set_string_value	scripts/kconfig/symbol.c	/^bool sym_set_string_value(struct symbol *sym, const char *newval)$/;"	f
sym_set_tristate_value	scripts/kconfig/symbol.c	/^bool sym_set_tristate_value(struct symbol *sym, tristate val)$/;"	f
sym_string_valid	scripts/kconfig/symbol.c	/^bool sym_string_valid(struct symbol *sym, const char *str)$/;"	f
sym_string_within_range	scripts/kconfig/symbol.c	/^bool sym_string_within_range(struct symbol *sym, const char *str)$/;"	f
sym_toggle_tristate_value	scripts/kconfig/symbol.c	/^tristate sym_toggle_tristate_value(struct symbol *sym)$/;"	f
sym_tristate_within_range	scripts/kconfig/symbol.c	/^bool sym_tristate_within_range(struct symbol *sym, tristate val)$/;"	f
sym_type_name	scripts/kconfig/symbol.c	/^const char *sym_type_name(enum symbol_type type)$/;"	f
sym_validate_range	scripts/kconfig/symbol.c	/^static void sym_validate_range(struct symbol *sym)$/;"	f	file:
symbol	scripts/kconfig/expr.h	/^struct symbol {$/;"	s
symbol	scripts/kconfig/zconf.tab.c	/^	struct symbol *symbol;$/;"	m	union:YYSTYPE	typeref:struct:YYSTYPE::symbol	file:
symbol	scripts/kconfig/zconf.y	/^symbol:	  T_WORD	{ $$ = sym_lookup($1, 0); free($1); }$/;"	l
symbolModPix	scripts/kconfig/qconf.h	/^	QPixmap symbolYesPix, symbolModPix, symbolNoPix;$/;"	m	class:ConfigList
symbolMode	scripts/kconfig/qconf.h	/^	singleMode, menuMode, symbolMode, fullMode$/;"	e	enum:listMode
symbolNoPix	scripts/kconfig/qconf.h	/^	QPixmap symbolYesPix, symbolModPix, symbolNoPix;$/;"	m	class:ConfigList
symbolYesPix	scripts/kconfig/qconf.h	/^	QPixmap symbolYesPix, symbolModPix, symbolNoPix;$/;"	m	class:ConfigList
symbol_empty	scripts/kconfig/symbol.c	/^}, symbol_empty = {$/;"	v	typeref:struct:
symbol_hash	scripts/kconfig/zconf.tab.c	/^struct symbol *symbol_hash[257];$/;"	v	typeref:struct:symbol
symbol_mod	scripts/kconfig/symbol.c	/^}, symbol_mod = {$/;"	v	typeref:struct:
symbol_no	scripts/kconfig/symbol.c	/^}, symbol_no = {$/;"	v	typeref:struct:
symbol_prefix_char	scripts/kallsyms.c	/^static char symbol_prefix_char = '\\0';$/;"	v	file:
symbol_string	src/nautilus/printk.c	/^static char *symbol_string(char *buf, char *end, void *ptr,$/;"	f	file:
symbol_type	scripts/kconfig/expr.h	/^enum symbol_type {$/;"	g
symbol_valid	scripts/kallsyms.c	/^static int symbol_valid(struct sym_entry *s)$/;"	f	file:
symbol_value	scripts/kconfig/expr.h	/^struct symbol_value {$/;"	s
symbol_yes	scripts/kconfig/symbol.c	/^struct symbol symbol_yes = {$/;"	v	typeref:struct:symbol
symbolcnt	scripts/basic/docproc.c	/^	int symbolcnt;$/;"	m	struct:symfile	file:
symbollist	scripts/basic/docproc.c	/^	struct symbols *symbollist;$/;"	m	struct:symfile	typeref:struct:symfile::symbols	file:
symbols	scripts/basic/docproc.c	/^struct symbols$/;"	s	file:
symbolsonly	scripts/basic/docproc.c	/^FILEONLY *symbolsonly;$/;"	v
symfile	scripts/basic/docproc.c	/^struct symfile$/;"	s	file:
symfilecnt	scripts/basic/docproc.c	/^int symfilecnt = 0;$/;"	v
symfilelist	scripts/basic/docproc.c	/^struct symfile symfilelist[MAXFILES];$/;"	v	typeref:struct:symfile
symgs	src/test/hpcg/comp-symgs.h	/^symgs(const SparseMatrix &A,$/;"	f	namespace:lgncg
symgsTask	src/test/hpcg/comp-symgs.h	/^symgsTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
symgsTaskArgs	src/test/hpcg/comp-symgs.h	/^    symgsTaskArgs(uint8_t s, uint64_t n) : sweepi(s), nMatCols(n) { ; }$/;"	f	struct:__anon114::symgsTaskArgs
symgsTaskArgs	src/test/hpcg/comp-symgs.h	/^struct symgsTaskArgs {$/;"	s	namespace:__anon114
sync_done	src/test/benchmark.c	/^static volatile int sync_done = 0;$/;"	v	file:
sync_end	src/test/benchmark.c	/^static uint64_t sync_end = 0;$/;"	v	file:
sync_go	src/test/benchmark.c	/^static volatile int sync_go = 0;$/;"	v	file:
sync_proto	src/arch/hrt/hrt.c	/^static volatile unsigned long long *sync_proto = 0;$/;"	v	file:
synchronize	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void Clock::synchronize(void)$/;"	f	class:LegionRuntime::LowLevel::Clock
sys	include/nautilus/nautilus.h	/^    struct sys_info sys;$/;"	m	struct:naut_info	typeref:struct:naut_info::sys_info
sys_info	include/nautilus/nautilus.h	/^struct sys_info {$/;"	s
syscall	include/nautilus/cpuid.h	/^            uint8_t syscall     : 1; \/\/ SYSCALL & SYSRET instructions$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
syscall	src/nautilus/libccompat.c	/^int syscall (int number, ...)$/;"	f
syscall_end	src/test/benchmark.c	/^uint64_t syscall_end = 0;$/;"	v
syscall_setup	src/test/benchmark.c	/^syscall_setup (void)$/;"	f	file:
syscall_start	src/test/benchmark.c	/^static uint64_t syscall_start = 0;$/;"	v	file:
sysinfo_init	src/arch/hrt/init.c	/^sysinfo_init (struct sys_info * sys)$/;"	f	file:
sysinfo_init	src/arch/k1om/init.c	/^sysinfo_init (struct sys_info * sys)$/;"	f	file:
sysinfo_init	src/arch/x64/init.c	/^sysinfo_init (struct sys_info * sys)$/;"	f	file:
syslib	src/lua_src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
system	include/nautilus/smp.h	/^    struct sys_info * system;$/;"	m	struct:cpu	typeref:struct:cpu::sys_info
system	src/nautilus/libccompat.c	/^int system(const char *command)$/;"	f
system_id	include/acpi/actbl2.h	/^	uint16_t system_id;$/;"	m	struct:acpi_asf_info
system_level	include/acpi/actypes.h	/^		uint32_t system_level;$/;"	m	struct:acpi_object::__anon26
t	include/lua/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	include/lua/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon16::__anon17
t	include/lua/lparser.h	/^  int t;  \/* patch list of `exit when true' *\/$/;"	m	struct:expdesc
t	src/legion_runtime/arrays.h	/^      T t;$/;"	m	class:LegionRuntime::Arrays::DynamicMapping
t	src/lua_src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t1	src/legion_runtime/legion.h	/^        Task *t1;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
t2	src/legion_runtime/legion.h	/^        Task *t2;$/;"	m	struct:LegionRuntime::HighLevel::Mapper::MappingConstraint
tNon0	src/test/hpcg/sparsemat.h	/^    int64_t tNon0;$/;"	m	struct:lgncg::SparseMatrix
tNon0s	src/test/hpcg/hpcg-problem-generator.h	/^    int64_t tNon0s;$/;"	m	struct:ProblemGenerator
tab_funcs	src/lua_src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
table	scripts/kallsyms.c	/^static struct sym_entry *table;$/;"	v	typeref:struct:sym_entry	file:
table	src/legion_runtime/lowlevel_impl.h	/^      DynamicTable<ALLOCATOR>& table;$/;"	m	class:LegionRuntime::LowLevel::DynamicTableFreeList
table	src/nautilus/hashtable.c	/^    struct nk_hash_entry ** table;$/;"	m	struct:nk_hashtable	typeref:struct:nk_hashtable::nk_hash_entry	file:
table_cnt	scripts/kallsyms.c	/^static unsigned int table_size, table_cnt;$/;"	v	file:
table_length	src/nautilus/hashtable.c	/^    uint_t table_length;$/;"	m	struct:nk_hashtable	file:
table_offset_entry	include/acpi/actbl.h	/^	uint32_t table_offset_entry[1];	\/* Array of pointers to ACPI tables *\/$/;"	m	struct:acpi_table_rsdt
table_offset_entry	include/acpi/actbl.h	/^	uint64_t table_offset_entry[1];	\/* Array of pointers to ACPI tables *\/$/;"	m	struct:acpi_table_xsdt
table_revision	include/acpi/actbl1.h	/^	uint32_t table_revision;	\/* Must be value '1' *\/$/;"	m	struct:acpi_table_srat
table_size	include/acpi/actbl1.h	/^	uint32_t table_size;$/;"	m	struct:acpi_einj_trigger
table_size	scripts/kallsyms.c	/^static unsigned int table_size, table_cnt;$/;"	v	file:
table_version	include/acpi/actbl2.h	/^	uint16_t table_version;$/;"	m	struct:acpi_table_wddt
tables	include/nautilus/multiboot2.h	/^  multiboot_uint8_t tables[0];$/;"	m	struct:multiboot_tag_smbios
tables	src/acpi/acpica/aclocal.h	/^	struct acpi_table_desc *tables;	\/* Table descriptor array *\/$/;"	m	struct:acpi_table_list	typeref:struct:acpi_table_list::acpi_table_desc
tag	src/legion_runtime/legion.h	/^      MappingTagID                        tag;$/;"	m	class:LegionRuntime::HighLevel::Mappable
tag	src/legion_runtime/legion.h	/^      MappingTagID                       tag;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
tag	src/legion_runtime/legion.h	/^      MappingTagID                       tag;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
tag	src/legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
tag	src/legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
tag	src/legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::InlineLauncher
tag	src/legion_runtime/legion.h	/^      MappingTagID                    tag;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
tag	src/legion_runtime/legion.h	/^      MappingTagID tag; \/**< mapping tag for this region requirement*\/$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
tag	src/legion_runtime/legion_logging.h	/^        MappingTagID tag;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
tag	src/legion_runtime/runtime.h	/^      const MappingTagID tag;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
tag1	scripts/kconfig/gconf.c	/^GtkTextTag *tag1, *tag2;$/;"	v
tag2	scripts/kconfig/gconf.c	/^GtkTextTag *tag1, *tag2;$/;"	v
tag2tt	include/lua/lobject.h	339;"	d
tag_attr	scripts/kconfig/lxdialog/dialog.h	113;"	d
tag_bits	include/nautilus/buddy.h	/^    ulong_t    *tag_bits;    \/** one bit for each 2^min_order block$/;"	m	struct:buddy_mempool
tag_error	src/lua_src/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tag_key_attr	scripts/kconfig/lxdialog/dialog.h	115;"	d
tag_key_selected_attr	scripts/kconfig/lxdialog/dialog.h	116;"	d
tag_selected_attr	scripts/kconfig/lxdialog/dialog.h	114;"	d
tail	src/nautilus/scheduler.c	/^    rt_node *tail;$/;"	m	struct:rt_list	file:
tail	src/nautilus/scheduler.c	/^    uint64_t   tail;        \/\/ index of oldest element$/;"	m	struct:rt_queue	file:
tail	src/nautilus/vc.c	/^  uint16_t head, tail;$/;"	m	struct:nk_virtual_console	file:
tail_object_type	src/acpi/acpica/aclocal.h	/^	u8 tail_object_type;$/;"	m	struct:acpi_package_info3
taken	src/legion_runtime/shared_lowlevel.cc	/^	bool taken;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
tan	src/nautilus/libccompat.c	/^double tan(double x)$/;"	f
tanh	src/nautilus/libccompat.c	/^double tanh(double x)$/;"	f
target	scripts/basic/fixdep.c	/^char *target;$/;"	v
target	src/legion_runtime/region_tree.h	/^      FieldTree<LogicalUser> *const target;$/;"	m	class:LegionRuntime::HighLevel::LogicalFilter
target	src/legion_runtime/region_tree.h	/^      ReductionView *const target;$/;"	m	class:LegionRuntime::HighLevel::ReductionCloser
target	src/legion_runtime/region_tree.h	/^      const AddressSpaceID target;$/;"	m	class:LegionRuntime::HighLevel::PathReturner
target	src/legion_runtime/region_tree.h	/^      const AddressSpaceID target;$/;"	m	class:LegionRuntime::HighLevel::StateReturner
target	src/legion_runtime/region_tree.h	/^      const AddressSpaceID target;$/;"	m	class:LegionRuntime::HighLevel::StateSender
target	src/legion_runtime/runtime.h	/^        Future::Impl *target;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
target	src/legion_runtime/runtime.h	/^        Processor target;$/;"	m	struct:LegionRuntime::HighLevel::ProcessorManager::MapperMessage
target	src/legion_runtime/runtime.h	/^      Processor target;$/;"	m	class:LegionRuntime::HighLevel::MessageManager
target	src/legion_runtime/shared_lowlevel.cc	/^            Triggerable *target;$/;"	m	struct:LegionRuntime::LowLevel::EventImpl::TriggerableInfo	file:
target	src/legion_runtime/shared_lowlevel.cc	/^          RegionInstance::Impl *target;$/;"	m	class:LegionRuntime::LowLevel::RegionInstance::Impl::CopyOperation2	file:
target-dir	Makefile	/^target-dir = $(dir $@)$/;"	m
target0_offset	include/acpi/actbl2.h	/^	uint16_t target0_offset;$/;"	m	struct:acpi_ibft_control
target1_offset	include/acpi/actbl2.h	/^	uint16_t target1_offset;$/;"	m	struct:acpi_ibft_control
target_boot_lun	include/acpi/actbl2.h	/^	uint8_t target_boot_lun[8];$/;"	m	struct:acpi_ibft_target
target_child	src/legion_runtime/region_tree.h	/^      const int target_child;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
target_css	include/nautilus/idt.h	/^            uint16_t target_css;$/;"	m	struct:gate_desc64::__anon61::__anon63
target_ip_address	include/acpi/actbl2.h	/^	uint8_t target_ip_address[16];$/;"	m	struct:acpi_ibft_target
target_ip_socket	include/acpi/actbl2.h	/^	uint16_t target_ip_socket;$/;"	m	struct:acpi_ibft_target
target_name_length	include/acpi/actbl2.h	/^	uint16_t target_name_length;$/;"	m	struct:acpi_ibft_target
target_name_offset	include/acpi/actbl2.h	/^	uint16_t target_name_offset;$/;"	m	struct:acpi_ibft_target
target_off_hi	include/nautilus/idt.h	/^            uint32_t target_off_hi;$/;"	m	struct:gate_desc64::__anon61::__anon63
target_off_lo	include/nautilus/idt.h	/^            uint16_t target_off_lo;$/;"	m	struct:gate_desc64::__anon61::__anon63
target_off_mid	include/nautilus/idt.h	/^            uint16_t target_off_mid;$/;"	m	struct:gate_desc64::__anon61::__anon63
target_proc	src/legion_runtime/legion.h	/^      Processor                           target_proc;$/;"	m	class:LegionRuntime::HighLevel::Task
target_proc	src/legion_runtime/region_tree.h	/^      const Processor target_proc;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
target_ranking	src/legion_runtime/legion.h	/^      std::vector<Memory> target_ranking;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
target_task_steal	src/legion_runtime/alt_mappers.cc	/^    Processor DebugMapper::target_task_steal(const std::set<Processor> &blacklist)$/;"	f	class:LegionRuntime::HighLevel::DebugMapper
target_task_steal	src/legion_runtime/default_mapper.cc	/^    void DefaultMapper::target_task_steal(const std::set<Processor> &blacklist,$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
target_task_steal	src/legion_runtime/shim_mapper.cc	/^    Processor ShimMapper::target_task_steal($/;"	f	class:LegionRuntime::HighLevel::ShimMapper
target_task_steal	src/legion_runtime/shim_mapper.cc	/^    void ShimMapper::target_task_steal(const std::set<Processor> &blacklist,$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
targets	Makefile	/^targets := $(wildcard $(sort $(targets)))$/;"	m
targets_selected	src/legion_runtime/region_tree.h	/^      bool targets_selected;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
task	src/legion_runtime/legion_ops.h	/^        IndexTask *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndexArgs
task	src/legion_runtime/legion_ops.h	/^        IndividualTask *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndivArgs
task	src/legion_runtime/legion_ops.h	/^        SingleTask *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochMapper::MustEpochMapArgs
task	src/legion_runtime/legion_ops.h	/^        TaskOp *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochDistributorArgs
task	src/legion_runtime/legion_ops.h	/^        TaskOp *task;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochDistributor::MustEpochLauncherArgs
task	src/legion_runtime/lowlevel.cc	/^      Task *task;$/;"	m	class:LegionRuntime::LowLevel::DeferredTaskSpawn	file:
task	src/legion_runtime/runtime.h	/^      TaskOp *const task;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
task	src/legion_runtime/runtime.h	/^      TaskOp *const task;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
task_gen	src/legion_runtime/runtime.h	/^      const GenerationID task_gen;$/;"	m	class:LegionRuntime::HighLevel::Future::Impl
task_gen	src/legion_runtime/runtime.h	/^      const GenerationID task_gen;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
task_id	src/legion_runtime/legion.h	/^      Processor::TaskFuncID              task_id;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
task_id	src/legion_runtime/legion.h	/^      Processor::TaskFuncID              task_id;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
task_id	src/legion_runtime/legion.h	/^      Processor::TaskFuncID task_id; $/;"	m	class:LegionRuntime::HighLevel::Task
task_id	src/legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskCollection
task_id	src/legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
task_id	src/legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
task_id	src/legion_runtime/legion_logging.h	/^        Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopLevelTask
task_id	src/legion_runtime/legion_profiling.h	/^        unsigned task_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
task_id	src/legion_runtime/lowlevel.cc	/^      Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
task_id	src/legion_runtime/shared_lowlevel.cc	/^      Processor::TaskFuncID task_id;$/;"	m	struct:LegionRuntime::LowLevel::MachineRunArgs	file:
task_id_table	src/legion_runtime/lowlevel.cc	/^    Processor::TaskIDTable task_id_table;$/;"	m	namespace:LegionRuntime::LowLevel	file:
task_op	src/legion_runtime/runtime.h	/^        TaskOp *task_op;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureMapSetArgs
task_op	src/legion_runtime/runtime.h	/^        TaskOp *task_op;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::DeferredFutureSetArgs
task_priority	src/legion_runtime/legion.h	/^      TaskPriority                        task_priority;$/;"	m	class:LegionRuntime::HighLevel::Task
task_profiles	src/legion_runtime/mapping_utilities.h	/^        TaskMap task_profiles;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
task_queue	src/legion_runtime/lowlevel.cc	/^      JobQueue<Task> task_queue;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
task_queue	src/legion_runtime/lowlevel_impl.h	/^      JobQueue<Task> task_queue;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
task_scheduler_enabled	src/legion_runtime/runtime.h	/^      bool task_scheduler_enabled;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
task_sets	src/legion_runtime/legion_ops.h	/^      std::vector<std::set<SingleTask*> > task_sets;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
task_table	src/legion_runtime/shared_lowlevel.cc	/^	Processor::TaskIDTable task_table;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
tasks	src/legion_runtime/legion_profiling.h	/^        std::deque<TaskInstance> tasks;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
tasks	src/legion_runtime/lowlevel_gpu.cc	/^      std::list<GPUTask*> tasks;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
tasks_available	src/legion_runtime/lowlevel.cc	/^      virtual void tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
tasks_available	src/legion_runtime/lowlevel.cc	/^      virtual void tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
tasks_available	src/legion_runtime/lowlevel.cc	/^    void ProcessorGroup::tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
tasks_available	src/legion_runtime/lowlevel.cc	/^    void UtilityProcessor::tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
tasks_available	src/legion_runtime/lowlevel_gpu.cc	/^      void tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
tasks_available	src/legion_runtime/lowlevel_gpu.cc	/^    void GPUProcessor::tasks_available(int priority)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
tbm	include/nautilus/cpuid.h	/^            uint8_t tbm         : 1; \/\/ trailing bit manipulation instr support$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
tconcat	src/lua_src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
temporary_futures	src/legion_runtime/legion_tasks.h	/^                DomainPoint::STLComparator> temporary_futures;$/;"	m	class:LegionRuntime::HighLevel::SliceTask
temporary_mappings	src/legion_runtime/mapping_utilities.h	/^        std::map<MappingKey,MemoizedMapping> temporary_mappings;$/;"	m	class:LegionRuntime::HighLevel::MappingUtilities::MappingMemoizer
term_event	src/legion_runtime/region_tree.h	/^      Event term_event;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalUser
term_event	src/legion_runtime/region_tree.h	/^      const Event term_event;$/;"	m	class:LegionRuntime::HighLevel::PhysicalEventFilter
terminal_type	include/acpi/actbl2.h	/^	uint8_t terminal_type;$/;"	m	struct:acpi_table_spcr
terminate_flag	src/legion_runtime/lowlevel_dma.cc	/^    static volatile bool terminate_flag = false;$/;"	m	namespace:LegionRuntime::LowLevel	file:
termination_event	src/legion_runtime/legion_logging.h	/^        Event termination_event;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
termination_event	src/legion_runtime/legion_ops.h	/^      UserEvent termination_event;$/;"	m	class:LegionRuntime::HighLevel::MapOp
termination_event	src/legion_runtime/runtime.h	/^      UserEvent termination_event;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
termios_old	xeon_phi/linux_usr/phi_console.c	/^    struct termios termios_old;$/;"	m	struct:__anon79	typeref:struct:__anon79::termios	file:
test	src/lua_src/nt_lnautlib.c	/^typedef struct test{$/;"	s	file:
test	src/lua_src/test.c	/^struct test$/;"	s	file:
test1	src/nautilus/condvar.c	/^test1 (void * in, void ** out) $/;"	f	file:
test2	src/nautilus/condvar.c	/^test2 (void * in, void ** out) $/;"	f	file:
test3	src/nautilus/condvar.c	/^test3 (void * in, void ** out)$/;"	f	file:
testAMode	include/lua/lopcodes.h	277;"	d
testTMode	include/lua/lopcodes.h	278;"	d
testUpdateMenu	scripts/kconfig/qconf.cc	/^void ConfigItem::testUpdateMenu(bool v)$/;"	f	class:ConfigItem
test_1	src/nautilus/testfs.c	/^int test_1() {$/;"	f
test_2	src/nautilus/testfs.c	/^int test_2() {$/;"	f
test_3	src/nautilus/testfs.c	/^int test_3() {$/;"	f
test_4	src/nautilus/testfs.c	/^int test_4() {$/;"	f
test_5	src/nautilus/testfs.c	/^int test_5() {$/;"	f
test_6	src/nautilus/testfs.c	/^int test_6() {$/;"	f
test_and_clear_bit	include/asm/bitops.h	/^static __inline__ int test_and_clear_bit(int nr, volatile void * addr)$/;"	f
test_and_set_bit	include/asm/bitops.h	/^static __inline__ int test_and_set_bit(int nr, volatile void * addr)$/;"	f
test_bit	include/asm/bitops.h	/^static inline int test_bit(unsigned int nr, const volatile unsigned long *addr)$/;"	f
test_dbl	src/test/circuit.cc	/^union test_dbl { double dval; unsigned long long uval; };$/;"	u	file:
test_eof	src/lua_src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_identity	src/legion_runtime/legion_utilities.h	/^    void BitPermutation<BITMASK,LOG2MAX>::test_identity(void)$/;"	f	class:LegionRuntime::HighLevel::BitPermutation
test_nemo	src/nautilus/nemo.c	/^test_nemo (void)$/;"	f
test_setlong	src/nautilus/setjmp.c	/^test_setlong (void)$/;"	f
test_then_block	src/lua_src/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
testbit	include/lua/lgc.h	83;"	d
testbits	include/lua/lgc.h	78;"	d
testit	src/nautilus/setjmp.c	/^testit (jmp_buf  env,$/;"	f	file:
testnext	src/lua_src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testprop	include/lua/lctype.h	52;"	d
tests	src/test/test_legion.c	/^tfun_t tests[NUM_TESTS] = {$/;"	v
text	include/dev/vesa.h	/^    int      text;   \/\/ is a text mode$/;"	m	struct:vesa_mode_request
text	scripts/kconfig/expr.h	/^	const char *text;$/;"	m	struct:property
text	scripts/kconfig/lex.zconf.c	/^static char *text;$/;"	v	file:
text	scripts/kconfig/qconf.h	/^	QString text(colIdx idx) const$/;"	f	class:ConfigItem
text_asize	scripts/kconfig/lex.zconf.c	/^static int text_size, text_asize;$/;"	v	file:
text_insert_help	scripts/kconfig/gconf.c	/^static void text_insert_help(struct menu *menu)$/;"	f	file:
text_insert_msg	scripts/kconfig/gconf.c	/^static void text_insert_msg(const char *title, const char *message)$/;"	f	file:
text_size	scripts/kconfig/lex.zconf.c	/^static int text_size, text_asize;$/;"	v	file:
text_w	scripts/kconfig/gconf.c	/^GtkWidget *text_w = NULL;$/;"	v
textdomain	scripts/kconfig/lkc.h	15;"	d
textdomain	src/nautilus/libccompat.c	/^char *textdomain (const char * domainname)$/;"	f
tfun_t	src/test/test_legion.c	/^typedef void (*tfun_t)(int, char**);$/;"	t	file:
tgt_mem	src/legion_runtime/lowlevel.cc	/^	Memory tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_mem	src/legion_runtime/lowlevel.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_mem	src/legion_runtime/lowlevel.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_mem	src/legion_runtime/lowlevel_dma.cc	/^	GASNetMemory *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
tgt_mem	src/legion_runtime/lowlevel_dma.cc	/^	Memory tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_mem	src/legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_mem	src/legion_runtime/lowlevel_dma.cc	/^	Memory::Impl *tgt_mem;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_offset	src/legion_runtime/lowlevel.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_offset	src/legion_runtime/lowlevel.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_offset	src/legion_runtime/lowlevel.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_offset	src/legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetAndPut	file:
tgt_offset	src/legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut	file:
tgt_offset	src/legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutBatched	file:
tgt_offset	src/legion_runtime/lowlevel_dma.cc	/^	off_t tgt_offset;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::RemoteWrite	file:
tgt_ptr	src/legion_runtime/lowlevel.cc	/^	char *tgt_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
tgt_ptr	src/legion_runtime/lowlevel_dma.cc	/^	char *tgt_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGet	file:
tgt_ptr	src/legion_runtime/lowlevel_dma.cc	/^	char *tgt_ptr;$/;"	m	class:LegionRuntime::LowLevel::RangeExecutors::GasnetGetBatched	file:
th	include/lua/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCObject	typeref:struct:GCObject::lua_State
the_machine	src/legion_runtime/lowlevel.cc	/^    static Machine *the_machine = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
thermal_int_handler	src/dev/apic.c	/^thermal_int_handler (excp_entry_t * excp, excp_vec_t v)$/;"	f	file:
thieving_lock	src/legion_runtime/runtime.h	/^      Reservation thieving_lock;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
this_target_obj	src/acpi/acpica/aclocal.h	/^	void *this_target_obj;$/;"	m	struct:acpi_pkg_state
thousands_sep	include/lua/llocale.h	/^    char *thousands_sep;      \/\/""           LC_NUMERIC$/;"	m	struct:lconv
thousands_sep	src/nautilus/libccompat.c	/^    char *thousands_sep;      \/\/""           LC_NUMERIC$/;"	m	struct:lconv	file:
thr_list_node	include/nautilus/thread.h	/^    nk_queue_entry_t thr_list_node;$/;"	m	struct:nk_thread
thr_return	src/asm/excp_early.S	/^thr_return:$/;"	l
thr_switch	include/nautilus/instrument.h	/^    struct thread_switch_data thr_switch;$/;"	m	struct:nk_instr_data	typeref:struct:nk_instr_data::thread_switch_data
thread	src/acpi/acpica/aclocal.h	/^	struct acpi_thread_state thread;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_thread_state
thread	src/legion_runtime/lowlevel.cc	/^	  Thread *thread;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
thread	src/legion_runtime/lowlevel.cc	/^      ProcessorThread *thread;$/;"	m	class:LegionRuntime::LowLevel::Task	file:
thread	src/legion_runtime/lowlevel.cc	/^      pthread_t thread;$/;"	m	class:LegionRuntime::LowLevel::ThreadImpl	file:
thread	src/legion_runtime/lowlevel.cc	/^      pthread_t thread;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread	file:
thread	src/legion_runtime/lowlevel.cc	/^      pthread_t thread;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
thread	src/legion_runtime/lowlevel_impl.h	/^      pthread_t thread;$/;"	m	class:LegionRuntime::LowLevel::PreemptableThread
thread	src/legion_runtime/shared_lowlevel.cc	/^      unsigned thread;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
thread	src/nautilus/scheduler.c	/^    nk_thread_t *thread;$/;"	m	struct:thread_query	file:
thread	src/nautilus/scheduler.c	/^    rt_thread      *thread;$/;"	m	struct:rt_node	file:
thread	src/nautilus/scheduler.c	/^    struct nk_thread *thread;$/;"	m	struct:nk_sched_thread_state	typeref:struct:nk_sched_thread_state::nk_thread	file:
thread_cleanup	src/nautilus/thread.c	/^thread_cleanup (void)$/;"	f	file:
thread_complete_gate	src/acpi/acpica/aclocal.h	/^	acpi_handle thread_complete_gate;$/;"	m	struct:acpi_db_method_info
thread_counts	src/legion_runtime/lowlevel_impl.h	/^      unsigned thread_counts[MAX_NUM_THREADS];$/;"	m	class:Runtime
thread_detach	src/nautilus/thread.c	/^thread_detach (nk_thread_t * t)$/;"	f	file:
thread_entry	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ void *PreemptableThread::thread_entry(void *data)$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
thread_id	src/acpi/acpica/aclocal.h	/^	acpi_thread_id thread_id;	\/* Running thread ID *\/$/;"	m	struct:acpi_thread_state
thread_id	src/acpi/acpica/aclocal.h	/^	acpi_thread_id thread_id;$/;"	m	struct:acpi_mutex_info
thread_list	src/nautilus/scheduler.c	/^    struct rt_list      *thread_list;$/;"	m	struct:nk_sched_global_state	typeref:struct:nk_sched_global_state::rt_list	file:
thread_main	src/legion_runtime/lowlevel.cc	/^	virtual void thread_main(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
thread_main	src/legion_runtime/lowlevel.cc	/^      static void *thread_main(void *data)$/;"	f	class:LegionRuntime::LowLevel::ThreadImpl
thread_main	src/legion_runtime/lowlevel.cc	/^      void thread_main(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
thread_main	src/legion_runtime/lowlevel_gpu.cc	/^      void thread_main(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
thread_main_wrapper	src/legion_runtime/lowlevel_gpu.cc	/^      static void *thread_main_wrapper(void *data)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor::Internal
thread_proc_free	src/legion_runtime/shared_lowlevel.cc	/^static void thread_proc_free(void *arg)$/;"	f	file:
thread_push	src/nautilus/thread.c	/^thread_push (nk_thread_t * t, uint64_t x)$/;"	f	file:
thread_query	src/nautilus/scheduler.c	/^struct thread_query {$/;"	s	file:
thread_run_done	src/test/benchmark.c	/^static volatile int thread_run_done = 0;$/;"	v	file:
thread_setup_init_stack	src/nautilus/thread.c	/^thread_setup_init_stack (nk_thread_t * t, nk_thread_fun_t fun, void * arg)$/;"	f	file:
thread_shutdown_flag	src/legion_runtime/activemsg.cc	/^static volatile bool thread_shutdown_flag = false;$/;"	v	file:
thread_switch_data	include/nautilus/instrument.h	/^struct thread_switch_data {$/;"	s
thread_timer_free	src/legion_runtime/lowlevel.cc	/^    static void thread_timer_free(void *arg)$/;"	f	namespace:LegionRuntime::LowLevel
thread_timer_free	src/legion_runtime/shared_lowlevel.cc	/^    static void thread_timer_free(void *arg)$/;"	f	namespace:LegionRuntime::LowLevel
thread_timer_key	src/legion_runtime/lowlevel.cc	/^    pthread_key_t thread_timer_key;$/;"	m	namespace:LegionRuntime::LowLevel	file:
thread_timer_key	src/legion_runtime/shared_lowlevel.cc	/^    nk_tls_key_t thread_timer_key;$/;"	m	namespace:LegionRuntime::LowLevel	file:
threads	src/acpi/acpica/aclocal.h	/^	acpi_thread_id *threads;$/;"	m	struct:acpi_db_method_info
threads	src/legion_runtime/lowlevel_impl.h	/^      std::set<UtilityThread *> threads;$/;"	m	class:LegionRuntime::LowLevel::UtilityProcessor
threads	src/nautilus/scheduler.c	/^    rt_thread *threads[MAX_QUEUE];$/;"	m	struct:rt_priority_queue	file:
threads	src/nautilus/scheduler.c	/^    rt_thread *threads[MAX_QUEUE];$/;"	m	struct:rt_queue	file:
thvalue	include/lua/lobject.h	166;"	d
ticket	include/nautilus/ticketlock.h	/^        uint16_t ticket;$/;"	m	struct:nk_ticket_lock::__anon55
tid	include/nautilus/thread.h	/^    unsigned long tid;$/;"	m	struct:nk_thread
tid	src/legion_runtime/legion_logging.h	/^        RegionTreeID tid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
tid	src/legion_runtime/legion_logging.h	/^        RegionTreeID tid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopRegion
tid	src/legion_runtime/legion_trace.h	/^      const TraceID tid;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
tid	src/nautilus/scheduler.c	/^    uint64_t     tid;$/;"	m	struct:thread_query	file:
time	src/legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventTiming
time	src/legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
time	src/legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
time	src/legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
time	src/legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
time	src/legion_runtime/legion_logging.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
time	src/legion_runtime/legion_profiling.h	/^        unsigned long long time; \/\/ absolute time in micro-seconds $/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
time	src/legion_runtime/legion_profiling.h	/^        unsigned long long time;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::MemoryEvent
time	src/nautilus/libccompat.c	/^time_t time (time_t * timer)$/;"	f
time	src/test/ipi.c	/^} time;$/;"	v	typeref:struct:time_struct	file:
time_condvar	src/test/benchmark.c	/^void time_condvar (void) {$/;"	f
time_ctx_switch	src/test/benchmark.c	/^time_ctx_switch (void)$/;"	f
time_cvar_bcast	src/test/benchmark.c	/^void time_cvar_bcast (void)$/;"	f
time_end	src/test/ipi.c	/^time_end (void)$/;"	f	file:
time_int80	src/test/benchmark.c	/^time_int80 (void)$/;"	f
time_ipi_send	src/test/benchmark.c	/^time_ipi_send(void)$/;"	f
time_mult	src/legion_runtime/utilities.h	/^	double start_time, time_mult;$/;"	m	class:LegionRuntime::LowLevel::Tracer::TraceBlock
time_nemo_bcast	src/test/benchmark.c	/^time_nemo_bcast (void)$/;"	f
time_nemo_event	src/test/benchmark.c	/^time_nemo_event (void)$/;"	f
time_ns	src/nautilus/timer.c	/^    uint64_t          time_ns;  \/\/ time relative to CPU reset$/;"	m	struct:nk_timer	file:
time_spinlock	src/test/benchmark.c	/^void time_spinlock (void)$/;"	f
time_start	src/test/ipi.c	/^time_start (void)$/;"	f	file:
time_struct	src/test/ipi.c	/^static struct time_struct {$/;"	s	file:
time_sync_event	src/test/benchmark.c	/^time_sync_event (void)$/;"	f
time_syscall	src/test/benchmark.c	/^time_syscall (void)$/;"	f
time_t	include/nautilus/libccompat.h	/^typedef long time_t;$/;"	t
time_t	src/lua_src/lnautlib.c	/^typedef long int time_t;$/;"	t	file:
time_thread_both	src/test/benchmark.c	/^time_thread_both (void)$/;"	f
time_thread_create	src/test/benchmark.c	/^time_thread_create (void)$/;"	f
time_thread_run	src/test/benchmark.c	/^time_thread_run (void)$/;"	f
time_threads_long	src/test/benchmark.c	/^void time_threads_long(void)$/;"	f
time_units	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, event_id, event_gen, action;$/;"	m	struct:LegionRuntime::LowLevel::EventTraceItem
time_units	src/legion_runtime/lowlevel_impl.h	/^      unsigned time_units, lock_id, owner, action;$/;"	m	struct:LegionRuntime::LowLevel::LockTraceItem
timeout	src/legion_runtime/region_tree.h	/^      int timeout;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
timer_32mode	include/dev/hpet.h	/^    uint8_t timer_32mode;     \/* am I configured as a 32-bit timer? *\/$/;"	m	struct:hpet_comparator
timer_accum	src/legion_runtime/lowlevel.cc	/^      std::map<int, double> timer_accum;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_accum	src/legion_runtime/shared_lowlevel.cc	/^      std::map<int, double> timer_accum;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_count	include/dev/apic.h	/^    uint64_t timer_count;$/;"	m	struct:apic_dev
timer_data	src/legion_runtime/lowlevel.cc	/^    std::vector<PerThreadTimerData *> timer_data;$/;"	m	namespace:LegionRuntime::LowLevel	file:
timer_data	src/legion_runtime/shared_lowlevel.cc	/^    std::vector<PerThreadTimerData*> timer_data;$/;"	m	namespace:LegionRuntime::LowLevel	file:
timer_data_mutex	src/legion_runtime/lowlevel.cc	/^    gasnet_hsl_t timer_data_mutex = GASNET_HSL_INITIALIZER;$/;"	m	namespace:LegionRuntime::LowLevel	file:
timer_freq	include/nautilus/sfi.h	/^    uint32_t timer_freq;$/;"	m	struct:sfi_m_timer_entry
timer_kind	src/legion_runtime/lowlevel.cc	/^      int timer_kind;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
timer_kind	src/legion_runtime/shared_lowlevel.cc	/^      int timer_kind;$/;"	m	struct:LegionRuntime::LowLevel::TimerStackEntry	file:
timer_list	src/nautilus/timer.c	/^static struct list_head timer_list;$/;"	v	typeref:struct:list_head	file:
timer_period	include/acpi/actbl2.h	/^	uint32_t timer_period;	\/* Period of one timer count (msec) *\/$/;"	m	struct:acpi_table_wdat
timer_resolution	include/acpi/actypes.h	/^	uint32_t timer_resolution;$/;"	m	struct:acpi_system_info
timer_set	include/dev/apic.h	/^    uint8_t  timer_set;$/;"	m	struct:apic_dev
timer_stack	src/legion_runtime/lowlevel.cc	/^      std::list<TimerStackEntry> timer_stack;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_stack	src/legion_runtime/shared_lowlevel.cc	/^      std::list<TimerStackEntry> timer_stack;$/;"	m	struct:LegionRuntime::LowLevel::PerThreadTimerData	file:
timer_val_set	include/dev/hpet.h	/^    uint8_t timer_val_set;    \/* will writes be allowed to the accumulator? *\/$/;"	m	struct:hpet_comparator
timerp	src/legion_runtime/lowlevel.cc	/^      std::map<int,double> *timerp;$/;"	m	class:LegionRuntime::LowLevel::MultiNodeRollUp	file:
timespec	include/nautilus/libccompat.h	/^struct timespec {$/;"	s
timestamp	src/legion_runtime/lowlevel.cc	/^	Barrier::timestamp_t timestamp;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
timestamp	src/legion_runtime/lowlevel.h	/^      timestamp_t timestamp;$/;"	m	class:LegionRuntime::LowLevel::Barrier
timestamp_t	src/legion_runtime/lowlevel.h	/^      typedef unsigned long long timestamp_t; \/\/ used to avoid race conditions with arrival adjustments$/;"	t	class:LegionRuntime::LowLevel::Barrier
timing_test	src/nautilus/scheduler.c	/^static void timing_test(uint64_t N, uint64_t M, int print)$/;"	f	file:
tinsert	src/lua_src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
title_attr	scripts/kconfig/lxdialog/dialog.h	95;"	d
tlb_flush	include/nautilus/cpu.h	/^tlb_flush (void)$/;"	f
tls	include/nautilus/thread.h	/^    const void * tls[TLS_MAX_KEYS];$/;"	m	struct:nk_thread
tls_dummy	src/nautilus/thread.c	/^tls_dummy (void * in, void ** out)$/;"	f	file:
tls_exit	src/nautilus/thread.c	/^tls_exit (void) $/;"	f	file:
tls_keys	src/nautilus/thread.c	/^static struct nk_tls tls_keys[TLS_MAX_KEYS];$/;"	v	typeref:struct:nk_tls	file:
tm	include/nautilus/cpuid.h	/^            uint8_t tm       : 1; \/\/ thermal monitor$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
tm	include/nautilus/libccompat.h	/^struct tm {$/;"	s
tm2	include/nautilus/cpuid.h	/^            uint8_t tm2      : 1; \/\/ Thermal Monitor 2$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
tm_hour	include/nautilus/libccompat.h	/^   int tm_hour;        \/* hours, range 0 to 23             *\/$/;"	m	struct:tm
tm_isdst	include/nautilus/libccompat.h	/^   int tm_isdst;       \/* daylight saving time             *\/   $/;"	m	struct:tm
tm_mday	include/nautilus/libccompat.h	/^   int tm_mday;        \/* day of the month, range 1 to 31  *\/$/;"	m	struct:tm
tm_min	include/nautilus/libccompat.h	/^   int tm_min;         \/* minutes, range 0 to 59           *\/$/;"	m	struct:tm
tm_mon	include/nautilus/libccompat.h	/^   int tm_mon;         \/* month, range 0 to 11             *\/$/;"	m	struct:tm
tm_sec	include/nautilus/libccompat.h	/^   int tm_sec;         \/* seconds,  range 0 to 59          *\/$/;"	m	struct:tm
tm_wday	include/nautilus/libccompat.h	/^   int tm_wday;        \/* day of the week, range 0 to 6    *\/$/;"	m	struct:tm
tm_yday	include/nautilus/libccompat.h	/^   int tm_yday;        \/* day in the year, range 0 to 365  *\/$/;"	m	struct:tm
tm_year	include/nautilus/libccompat.h	/^   int tm_year;        \/* The number of years since 1900   *\/$/;"	m	struct:tm
tmname	include/lua/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmp_realloc	src/nautilus/hashtable.c	/^tmp_realloc (void * old_ptr, uint_t old_size, uint_t new_size) $/;"	f	file:
tmpfile	src/nautilus/libccompat.c	/^FILE *tmpfile(void)$/;"	f
tmpnam	src/nautilus/libccompat.c	/^char *tmpnam(char *s)$/;"	f
to_array	src/legion_runtime/arrays.h	/^      void to_array(int *vals) const { for(unsigned i = 0; i < DIM; i++) vals[i] = x[i]; }$/;"	f	class:LegionRuntime::Arrays::Point
to_array	src/legion_runtime/arrays.h	/^      void to_array(int *vals) const { lo.to_array(vals); hi.to_array(vals + DIM); }$/;"	f	class:LegionRuntime::Arrays::Rect
to_field_set	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::to_field_set(const FieldMask &mask,$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
to_string	src/legion_runtime/legion_utilities.h	/^    inline char* AVXBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
to_string	src/legion_runtime/legion_utilities.h	/^    inline char* AVXTLBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
to_string	src/legion_runtime/legion_utilities.h	/^    inline char* BitMask<T,MAX,SHIFT,MASK>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::BitMask
to_string	src/legion_runtime/legion_utilities.h	/^    inline char* SSEBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
to_string	src/legion_runtime/legion_utilities.h	/^    inline char* SSETLBitMask<MAX>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
to_string	src/legion_runtime/legion_utilities.h	/^    inline char* TLBitMask<T,MAX,SHIFT,MASK>::to_string(void) const$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
to_string	src/legion_runtime/region_tree.cc	/^    char* FieldSpaceNode::to_string(const FieldMask &mask) const$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
toascii	include/nautilus/naut_string.h	60;"	d
tobefnz	include/lua/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State
tofile	src/lua_src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
toggle_sym_value	scripts/kconfig/gconf.c	/^static void toggle_sym_value(struct menu *menu)$/;"	f	file:
token	include/lua/llex.h	/^  int token;$/;"	m	struct:Token
token	scripts/kconfig/lkc.h	/^	int token;$/;"	m	struct:kconf_id
token_profit	scripts/kallsyms.c	/^int token_profit[0x10000];$/;"	v
tolerance	src/test/hpcg/hpcg-main.cc	/^    double tolerance;$/;"	m	struct:__anon117::DriverParams	file:
tolower	include/nautilus/naut_string.h	76;"	d
tolstream	src/lua_src/liolib.c	128;"	d	file:
tonumber	include/lua/lvm.h	18;"	d
toolBar	scripts/kconfig/qconf.h	/^	QToolBar *toolBar;$/;"	m	class:ConfigMainWindow
top	include/lua/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	include/lua/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
top_level_regions	src/legion_runtime/legion_tasks.h	/^      std::set<LogicalRegion> top_level_regions;$/;"	m	class:LegionRuntime::HighLevel::RemoteTask
top_level_task	src/legion_runtime/legion_tasks.h	/^      bool top_level_task;$/;"	m	class:LegionRuntime::HighLevel::IndividualTask
top_level_task	src/test/circuit.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/custom_mapper.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/global_vars.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/index_tasks.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/logical_regions.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/multiple_partitions.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/partitioning.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/physical_regions.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/privileges.cc	/^void top_level_task(const Task *task,$/;"	f
top_level_task	src/test/saxpy_array.cc	/^void top_level_task(const void *args, size_t arglen,$/;"	f
top_level_task	src/test/tasks_and_futures.cc	/^void top_level_task(const Task *task,$/;"	f
topext	include/nautilus/cpuid.h	/^            uint8_t topext      : 1; \/\/ Topology extensions support$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
tostore	src/lua_src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	include/lua/lvm.h	16;"	d
total	src/legion_runtime/region_tree.h	/^      const bool total;$/;"	m	class:LegionRuntime::HighLevel::PhysicalInvalidator
total_active_contexts	src/legion_runtime/runtime.h	/^      unsigned total_active_contexts;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
total_allocated	include/acpi/actypes.h	/^	uint32_t total_allocated;$/;"	m	struct:acpi_memory_list
total_allocations	src/legion_runtime/runtime.h	/^        unsigned total_allocations;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
total_bytes	src/legion_runtime/legion_utilities.h	/^      const size_t total_bytes;$/;"	m	class:LegionRuntime::HighLevel::Deserializer
total_bytes	src/legion_runtime/legion_utilities.h	/^      size_t total_bytes;$/;"	m	class:LegionRuntime::HighLevel::Serializer
total_bytes	src/legion_runtime/runtime.h	/^        size_t         total_bytes;$/;"	m	struct:LegionRuntime::HighLevel::Runtime::AllocationTracker
total_contexts	src/legion_runtime/runtime.h	/^      unsigned total_contexts;$/;"	m	class:LegionRuntime::HighLevel::Runtime
total_count	src/nautilus/instrument.c	/^    uint64_t total_count;$/;"	m	struct:func_data	file:
total_endpoints	src/legion_runtime/activemsg.cc	/^  const int total_endpoints;$/;"	m	class:EndpointManager	file:
total_freed	include/acpi/actypes.h	/^	uint32_t total_freed;$/;"	m	struct:acpi_memory_list
total_mem	include/nautilus/mm.h	/^    uint64_t total_mem; \/* includes I\/O holes etc. *\/$/;"	m	struct:mmap_info
total_num_apics	include/nautilus/multiboot2.h	/^  multiboot_uint32_t total_num_apics;$/;"	m	struct:multiboot_tag_hrt
total_points	src/legion_runtime/legion_tasks.h	/^      unsigned total_points;$/;"	m	class:LegionRuntime::HighLevel::IndexTask
total_prob	src/nautilus/scheduler.c	/^    uint64_t          total_prob;  \/\/ total probability in the queue$/;"	m	struct:nk_sched_percpu_state	file:
total_size	include/acpi/actypes.h	/^	uint32_t total_size;$/;"	m	struct:acpi_memory_list
total_size	src/legion_runtime/activemsg.cc	/^    size_t total_size;$/;"	m	struct:ActiveMessageEndpoint::ChunkInfo	file:
total_size	src/legion_runtime/activemsg.cc	/^  size_t total_size;$/;"	m	class:SrcDataPool	file:
total_space	src/legion_runtime/shared_lowlevel.cc	/^    size_t MemoryImpl::total_space(void) const$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
total_threads	src/legion_runtime/lowlevel.cc	/^      int total_threads, active_thread_count, max_active_threads;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor	file:
total_time	src/legion_runtime/mapping_utilities.h	/^          long long total_time;$/;"	m	struct:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler::VariantProfile
total_time	src/legion_runtime/region_tree.h	/^        unsigned long long total_time;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::CallRecord
totalbytes	include/lua/lstate.h	/^  lu_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State
touches	src/legion_runtime/rectangle_set.h	/^    inline bool Segment<T>::touches(const Segment<T> &other) const$/;"	f	class:LegionRuntime::HighLevel::Segment
toupper	include/nautilus/naut_string.h	77;"	d
tp	include/nautilus/smp.h	/^    struct nk_topo_params * tp;$/;"	m	struct:cpu	typeref:struct:cpu::nk_topo_params
trace	src/legion_runtime/legion_ops.h	/^      LegionTrace *trace;$/;"	m	class:LegionRuntime::HighLevel::Operation
trace_allocation	src/legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_allocation($/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_allocation	src/legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_allocation(Runtime *&runtime,$/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_allocation	src/legion_runtime/runtime.cc	/^    void Runtime::trace_allocation(AllocationType type, size_t size, int elems)$/;"	f	class:LegionRuntime::HighLevel::Runtime
trace_free	src/legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_free(AllocationType a, $/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_free	src/legion_runtime/runtime.cc	/^    \/*static*\/ void LegionAllocation::trace_free(Runtime *&runtime,$/;"	f	class:LegionRuntime::HighLevel::LegionAllocation
trace_free	src/legion_runtime/runtime.cc	/^    void Runtime::trace_free(AllocationType type, size_t size, int elems)$/;"	f	class:LegionRuntime::HighLevel::Runtime
trace_item	src/legion_runtime/utilities.h	/^      static inline ITEM& trace_item(void)$/;"	f	class:LegionRuntime::LowLevel::Tracer
trace_op_lock	src/legion_runtime/runtime.h	/^      Reservation trace_op_lock;$/;"	m	class:LegionRuntime::HighLevel::Runtime
traceback	src/lua_src/lua.c	/^static int traceback (lua_State *L) {$/;"	f	file:
traceexec	src/lua_src/lvm.c	/^static void traceexec (lua_State *L) {$/;"	f	file:
traces	src/legion_runtime/legion_tasks.h	/^      LegionKeyValue<TraceID,LegionTrace*,TASK_TRACES_ALLOC>::map traces;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
traces	src/legion_runtime/region_tree.h	/^      std::vector<PerfTrace> traces;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
tracing	src/legion_runtime/legion_ops.h	/^      bool tracing;$/;"	m	class:LegionRuntime::HighLevel::Operation
tracing	src/legion_runtime/legion_trace.h	/^      bool tracing;$/;"	m	class:LegionRuntime::HighLevel::LegionTrace
tracing	src/legion_runtime/region_tree.h	/^        bool tracing;$/;"	m	struct:LegionRuntime::HighLevel::RegionTreeForest::PerfTrace
tracing	src/legion_runtime/region_tree.h	/^      const bool tracing;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
track_parent	src/legion_runtime/legion_ops.h	/^      bool track_parent;$/;"	m	class:LegionRuntime::HighLevel::Operation
trans_count	scripts/kconfig/expr.c	/^static int trans_count;$/;"	v	file:
trans_latency	include/nautilus/sfi.h	/^    uint32_t trans_latency; \/\/ transition latency$/;"	m	struct:sfi_freq_entry
transfer	include/acpi/acrestyp.h	/^	uint8_t transfer;$/;"	m	struct:acpi_resource_dma
transform_field_mask	src/legion_runtime/region_tree.cc	/^    void FieldSpaceNode::transform_field_mask(FieldMask &mask, $/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
transformers	src/legion_runtime/region_tree.h	/^      std::map<AddressSpaceID,FieldPermutation> transformers;$/;"	m	class:LegionRuntime::HighLevel::FieldSpaceNode
translation	include/acpi/acrestyp.h	/^	uint8_t translation;$/;"	m	struct:acpi_io_attribute
translation	include/acpi/acrestyp.h	/^	uint8_t translation;$/;"	m	struct:acpi_memory_attribute
translation_offset	include/acpi/acrestyp.h	/^	uint16_t translation_offset;$/;"	m	struct:acpi_resource_address16
translation_offset	include/acpi/acrestyp.h	/^	uint32_t translation_offset;$/;"	m	struct:acpi_resource_address32
translation_offset	include/acpi/acrestyp.h	/^	uint64_t translation_offset;$/;"	m	struct:acpi_resource_address64
translation_offset	include/acpi/acrestyp.h	/^	uint64_t translation_offset;$/;"	m	struct:acpi_resource_extended_address64
translation_type	include/acpi/acrestyp.h	/^	uint8_t translation_type;$/;"	m	struct:acpi_io_attribute
traps	scripts/basic/fixdep.c	/^void traps(void)$/;"	f
traversal_mask	src/legion_runtime/region_tree.h	/^      const FieldMask traversal_mask;$/;"	m	struct:LegionRuntime::HighLevel::MappableInfo
traverse	src/legion_runtime/region_tree.cc	/^    bool PathTraverser::traverse(RegionTreeNode *node)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
traverseCclosure	src/lua_src/lgc.c	/^static lu_mem traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	src/lua_src/lgc.c	/^static lu_mem traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverse_node	src/legion_runtime/region_tree.cc	/^    void MappingTraverser::traverse_node(RegionTreeNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
traverseephemeron	src/lua_src/lgc.c	/^static int traverseephemeron (global_State *g, Table *h) {$/;"	f	file:
traverseproto	src/lua_src/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	src/lua_src/lgc.c	/^static lu_mem traversestack (global_State *g, lua_State *th) {$/;"	f	file:
traversestrongtable	src/lua_src/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	src/lua_src/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traverseweakvalue	src/lua_src/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	src/lua_src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tree	scripts/kconfig/gconf.c	/^GtkTreeStore *tree1, *tree2, *tree;$/;"	v
tree1	scripts/kconfig/gconf.c	/^GtkTreeStore *tree1, *tree2, *tree;$/;"	v
tree1_w	scripts/kconfig/gconf.c	/^GtkWidget *tree1_w = NULL;	\/\/ left  frame$/;"	v
tree2	scripts/kconfig/gconf.c	/^GtkTreeStore *tree1, *tree2, *tree;$/;"	v
tree2_w	scripts/kconfig/gconf.c	/^GtkWidget *tree2_w = NULL;	\/\/ right frame$/;"	v
tree_id	src/legion_runtime/legion.h	/^      RegionTreeID tree_id;$/;"	m	class:LegionRuntime::HighLevel::LogicalPartition
tree_id	src/legion_runtime/legion.h	/^      RegionTreeID tree_id;$/;"	m	class:LegionRuntime::HighLevel::LogicalRegion
tree_id	src/legion_runtime/legion_logging.h	/^        RegionTreeID tree_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLowlevelCopy
tree_id	src/legion_runtime/legion_logging.h	/^        RegionTreeID tree_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalInstance
tree_nodes	src/legion_runtime/region_tree.h	/^      std::map<RegionTreeID,RegionNode*>        tree_nodes;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
tree_reservation	src/legion_runtime/region_tree.h	/^      Reservation tree_reservation;$/;"	m	class:LegionRuntime::HighLevel::TreeCloseImpl
tree_state_log	src/legion_runtime/legion_spy.h	/^      FILE *tree_state_log;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
tree_state_logger	src/legion_runtime/runtime.h	/^      TreeStateLogger *tree_state_logger;$/;"	m	class:LegionRuntime::HighLevel::Runtime
tremove	src/lua_src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
tri	scripts/kconfig/expr.h	/^	tristate tri;$/;"	m	struct:expr_value
tri	scripts/kconfig/expr.h	/^	tristate tri;$/;"	m	struct:symbol_value
trials	include/test/ipi.h	/^	uint32_t       trials;   \/\/ how many experimental trials$/;"	m	struct:ipi_exp_data
trig_mode	include/nautilus/irq.h	/^    int_trig_t trig_mode;$/;"	m	struct:nk_int_entry
trigger	src/legion_runtime/lowlevel.cc	/^    void Event::Impl::trigger(Event::gen_t gen_triggered, int trigger_node, Event wait_on)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl
trigger	src/legion_runtime/lowlevel.cc	/^    void UserEvent::trigger(Event wait_on) const$/;"	f	class:LegionRuntime::LowLevel::UserEvent
trigger	src/legion_runtime/shared_lowlevel.cc	/^      virtual bool trigger(unsigned count = 1, TriggerHandle = 0)$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
trigger	src/legion_runtime/shared_lowlevel.cc	/^    bool CopyOperation::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
trigger	src/legion_runtime/shared_lowlevel.cc	/^    bool EventImpl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
trigger	src/legion_runtime/shared_lowlevel.cc	/^    bool ProcessorImpl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
trigger	src/legion_runtime/shared_lowlevel.cc	/^    bool RegionInstance::Impl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
trigger	src/legion_runtime/shared_lowlevel.cc	/^    bool ReservationImpl::trigger(unsigned count, TriggerHandle handle)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
trigger	src/legion_runtime/shared_lowlevel.cc	/^    void UserEvent::trigger(Event wait_on \/*= NO_EVENT*\/) const$/;"	f	class:LegionRuntime::LowLevel::UserEvent
trigger_children_committed	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_children_committed(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_children_complete	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_children_complete(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_commit	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
trigger_commit	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_commit	src/legion_runtime/legion_ops.cc	/^    void Operation::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_commit	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_commit(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_commit_invoked	src/legion_runtime/legion_ops.h	/^      bool trigger_commit_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_complete	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::trigger_complete(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_complete	src/legion_runtime/legion_ops.cc	/^    void Operation::trigger_complete(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_complete	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::trigger_complete(void) $/;"	f	class:LegionRuntime::HighLevel::TaskOp
trigger_complete_invoked	src/legion_runtime/legion_ops.h	/^      bool trigger_complete_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void AcquireOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void AndPredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void CloseOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void CopyOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void DeletionOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void FenceOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void FuturePredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void MapOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void NotPredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void Operation::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void OrPredOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
trigger_dependence_analysis	src/legion_runtime/legion_ops.cc	/^    void ReleaseOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
trigger_dependence_analysis	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
trigger_dependence_analysis	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
trigger_dependence_analysis	src/legion_runtime/legion_tasks.cc	/^    void PointTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
trigger_dependence_analysis	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_dependence_analysis	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
trigger_dependence_analysis	src/legion_runtime/legion_trace.cc	/^    void TraceCaptureOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
trigger_dependence_analysis	src/legion_runtime/legion_trace.cc	/^    void TraceCompleteOp::trigger_dependence_analysis(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool AcquireOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool CloseOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool CopyOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool FenceOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool MapOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool MustEpochOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool Operation::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_execution	src/legion_runtime/legion_ops.cc	/^    bool ReleaseOp::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
trigger_execution	src/legion_runtime/legion_tasks.cc	/^    bool MultiTask::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
trigger_execution	src/legion_runtime/legion_tasks.cc	/^    bool SingleTask::trigger_execution(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
trigger_index	src/legion_runtime/legion_ops.cc	/^    void MustEpochTriggerer::trigger_index(IndexTask *task)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
trigger_individual	src/legion_runtime/legion_ops.cc	/^    void MustEpochTriggerer::trigger_individual(IndividualTask *task)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
trigger_lock	src/legion_runtime/legion_ops.h	/^      Reservation trigger_lock;$/;"	m	class:LegionRuntime::HighLevel::MustEpochTriggerer
trigger_mapping	src/legion_runtime/legion_ops.cc	/^    void AndPredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
trigger_mapping	src/legion_runtime/legion_ops.cc	/^    void FuturePredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
trigger_mapping	src/legion_runtime/legion_ops.cc	/^    void NotPredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
trigger_mapping	src/legion_runtime/legion_ops.cc	/^    void Operation::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_mapping	src/legion_runtime/legion_ops.cc	/^    void OrPredOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
trigger_mapping	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::trigger_mapping(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
trigger_mapping_invoked	src/legion_runtime/legion_ops.h	/^      bool trigger_mapping_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_on_unmap	src/legion_runtime/runtime.h	/^      bool trigger_on_unmap;$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
trigger_resolution	src/legion_runtime/legion_ops.cc	/^    void Operation::trigger_resolution(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
trigger_resolution	src/legion_runtime/legion_ops.cc	/^    void SpeculativeOp::trigger_resolution(void)$/;"	f	class:LegionRuntime::HighLevel::SpeculativeOp
trigger_resolution_invoked	src/legion_runtime/legion_ops.h	/^      bool trigger_resolution_invoked;$/;"	m	class:LegionRuntime::HighLevel::Operation
trigger_slice_commit	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_slice_commit(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_slice_complete	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_slice_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_slice_mapped	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_slice_mapped(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_slices	src/legion_runtime/legion_tasks.cc	/^    bool DeferredSlicer::trigger_slices(std::list<SliceTask*> &slices)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
trigger_slices	src/legion_runtime/legion_tasks.cc	/^    bool MultiTask::trigger_slices(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
trigger_task_commit	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
trigger_task_commit	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
trigger_task_commit	src/legion_runtime/legion_tasks.cc	/^    void PointTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
trigger_task_commit	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_task_commit	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::trigger_task_commit(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
trigger_task_complete	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
trigger_task_complete	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
trigger_task_complete	src/legion_runtime/legion_tasks.cc	/^    void PointTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
trigger_task_complete	src/legion_runtime/legion_tasks.cc	/^    void SliceTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
trigger_task_complete	src/legion_runtime/legion_tasks.cc	/^    void WrapperTask::trigger_task_complete(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
trigger_tasks	src/legion_runtime/legion_ops.cc	/^    bool MustEpochTriggerer::trigger_tasks($/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
triggerables	src/legion_runtime/shared_lowlevel.cc	/^        std::list<TriggerableInfo> triggerables;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
triggered	src/legion_runtime/lowlevel.cc	/^	  bool triggered;$/;"	m	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry	file:
triggerer	src/legion_runtime/legion_ops.h	/^        MustEpochTriggerer *triggerer;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndexArgs
triggerer	src/legion_runtime/legion_ops.h	/^        MustEpochTriggerer *triggerer;$/;"	m	struct:LegionRuntime::HighLevel::MustEpochTriggerer::MustEpochIndivArgs
triggering	include/acpi/acrestyp.h	/^	uint8_t triggering;$/;"	m	struct:acpi_resource_extended_irq
triggering	include/acpi/acrestyp.h	/^	uint8_t triggering;$/;"	m	struct:acpi_resource_irq
triggering_complete	src/legion_runtime/legion_ops.h	/^      bool triggering_complete;$/;"	m	class:LegionRuntime::HighLevel::MustEpochOp
trim	src/lua_src/lbitlib.c	25;"	d	file:
trimwhitespace	src/lua_src/lua.c	/^char *trimwhitespace(char *str)$/;"	f
tristate	scripts/kconfig/expr.h	/^typedef enum tristate {$/;"	g
tristate	scripts/kconfig/expr.h	/^} tristate;$/;"	t	typeref:enum:tristate
true	include/nautilus/naut_types.h	75;"	d
trunc_file	include/nautilus/fs.h	/^    int   (*trunc_file)(void *state, void *file, off_t len);$/;"	m	struct:nk_fs_int
try_acpi_shutdown	src/arch/hrt/shutdown.c	/^try_acpi_shutdown (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
try_acpi_shutdown	src/arch/x64/shutdown.c	/^try_acpi_shutdown (struct acpi_table_header * hdr, void * arg)$/;"	f	file:
trydecpoint	src/lua_src/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	src/lua_src/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
ts	include/lua/llex.h	/^  TString *ts;$/;"	m	union:__anon10
ts	include/lua/lstate.h	/^  union TString ts;$/;"	m	union:GCObject	typeref:union:GCObject::TString
tsc	include/nautilus/cpuid.h	/^            uint8_t tsc         : 1; \/\/ time stamp counter$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
tsc	include/nautilus/cpuid.h	/^            uint8_t tsc      : 1; \/\/ time stamp counter$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
tsc	src/nautilus/scheduler.c	/^    tsc_info tsc;$/;"	m	struct:nk_sched_percpu_state	file:
tsc_dline	include/nautilus/cpuid.h	/^            uint8_t tsc_dline: 1; \/\/ local APIC timer supports one-shot operation using TSC deadline value$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
tsc_info	src/nautilus/scheduler.c	/^typedef struct tsc_info {$/;"	s	file:
tsc_info	src/nautilus/scheduler.c	/^} tsc_info;$/;"	t	typeref:struct:tsc_info	file:
tsv	include/lua/lobject.h	/^  } tsv;$/;"	m	union:TString	typeref:struct:TString::__anon5
tsvalue	include/lua/lobject.h	157;"	d
tt_	include/lua/lobject.h	307;"	d
tt_	include/lua/lobject.h	318;"	d
ttisCclosure	include/lua/lobject.h	143;"	d
ttisLclosure	include/lua/lobject.h	144;"	d
ttisboolean	include/lua/lobject.h	135;"	d
ttisclosure	include/lua/lobject.h	142;"	d
ttisdeadkey	include/lua/lobject.h	148;"	d
ttisequal	include/lua/lobject.h	150;"	d
ttisequal	include/lua/lobject.h	367;"	d
ttisequal	include/lua/lobject.h	368;"	d
ttisfunction	include/lua/lobject.h	141;"	d
ttislcf	include/lua/lobject.h	145;"	d
ttislightuserdata	include/lua/lobject.h	136;"	d
ttislngstring	include/lua/lobject.h	139;"	d
ttisnil	include/lua/lobject.h	134;"	d
ttisnumber	include/lua/lobject.h	133;"	d
ttisnumber	include/lua/lobject.h	336;"	d
ttisnumber	include/lua/lobject.h	337;"	d
ttisshrstring	include/lua/lobject.h	138;"	d
ttisstring	include/lua/lobject.h	137;"	d
ttistable	include/lua/lobject.h	140;"	d
ttisthread	include/lua/lobject.h	147;"	d
ttisuserdata	include/lua/lobject.h	146;"	d
ttype	include/lua/lobject.h	124;"	d
ttypename	include/lua/ltm.h	46;"	d
ttypenv	include/lua/lobject.h	127;"	d
tv_nsec	include/nautilus/libccompat.h	/^	long    tv_nsec;        \/* nanoseconds *\/$/;"	m	struct:timespec
tv_sec	include/nautilus/libccompat.h	/^	time_t  tv_sec;         \/* seconds *\/$/;"	m	struct:timespec
tvk	include/lua/lobject.h	/^  TValue tvk;$/;"	m	union:TKey
two	src/legion_runtime/legion_logging.h	/^        Event two;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgEventDependency
twoto	include/lua/lobject.h	580;"	d
txtToken	src/lua_src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	include/acpi/acpiosxf.h	/^	uint32_t type;$/;"	m	struct:acpi_signal_fatal_info
type	include/acpi/acrestyp.h	/^	uint32_t type;$/;"	m	struct:acpi_resource
type	include/acpi/acrestyp.h	/^	uint8_t type;$/;"	m	struct:acpi_resource_dma
type	include/acpi/actbl1.h	/^	uint16_t type;$/;"	m	struct:acpi_hest_header
type	include/acpi/actbl1.h	/^	uint8_t type;		\/* 1=PMI, 2=INIT, 3=corrected *\/$/;"	m	struct:acpi_madt_interrupt_source
type	include/acpi/actbl1.h	/^	uint8_t type;$/;"	m	struct:acpi_hest_notify
type	include/acpi/actbl1.h	/^	uint8_t type;$/;"	m	struct:acpi_subtable_header
type	include/acpi/actbl2.h	/^	uint16_t type;$/;"	m	struct:acpi_dmar_header
type	include/acpi/actbl2.h	/^	uint32_t type;$/;"	m	struct:acpi_slic_header
type	include/acpi/actbl2.h	/^	uint8_t type;		\/* 0=full 16550, 1=subset of 16550 *\/$/;"	m	struct:acpi_table_dbgp
type	include/acpi/actbl2.h	/^	uint8_t type;		\/* Subtable type *\/$/;"	m	struct:acpi_ivrs_header
type	include/acpi/actbl2.h	/^	uint8_t type;$/;"	m	struct:acpi_asf_alert_data
type	include/acpi/actbl2.h	/^	uint8_t type;$/;"	m	struct:acpi_asf_header
type	include/acpi/actbl2.h	/^	uint8_t type;$/;"	m	struct:acpi_ibft_header
type	include/acpi/actbl2.h	/^	uint8_t type;$/;"	m	struct:acpi_ivrs_de_header
type	include/acpi/actypes.h	/^		acpi_object_type type;	\/* ACPI_TYPE_BUFFER *\/$/;"	m	struct:acpi_object::__anon22
type	include/acpi/actypes.h	/^		acpi_object_type type;	\/* ACPI_TYPE_INTEGER *\/$/;"	m	struct:acpi_object::__anon20
type	include/acpi/actypes.h	/^		acpi_object_type type;	\/* ACPI_TYPE_LOCAL_REFERENCE *\/$/;"	m	struct:acpi_object::__anon24
type	include/acpi/actypes.h	/^		acpi_object_type type;	\/* ACPI_TYPE_PACKAGE *\/$/;"	m	struct:acpi_object::__anon23
type	include/acpi/actypes.h	/^		acpi_object_type type;	\/* ACPI_TYPE_POWER *\/$/;"	m	struct:acpi_object::__anon26
type	include/acpi/actypes.h	/^		acpi_object_type type;	\/* ACPI_TYPE_PROCESSOR *\/$/;"	m	struct:acpi_object::__anon25
type	include/acpi/actypes.h	/^		acpi_object_type type;	\/* ACPI_TYPE_STRING *\/$/;"	m	struct:acpi_object::__anon21
type	include/acpi/actypes.h	/^	acpi_object_type type;	\/* ACPI object Type *\/$/;"	m	struct:acpi_device_info
type	include/acpi/actypes.h	/^	acpi_object_type type;	\/* See definition of acpi_ns_type for values *\/$/;"	m	union:acpi_object
type	include/acpi/actypes.h	/^	uint8_t type;$/;"	m	struct:acpi_predefined_names
type	include/dev/virtio_pci.h	/^  enum virtio_pci_dev_type type;$/;"	m	struct:virtio_pci_dev	typeref:enum:virtio_pci_dev::virtio_pci_dev_type
type	include/nautilus/acpi.h	/^    uint8_t  type;$/;"	m	struct:mp_table_entry_ioapic
type	include/nautilus/acpi.h	/^    uint8_t  type;$/;"	m	struct:mp_table_entry_ioint
type	include/nautilus/acpi.h	/^    uint8_t  type;$/;"	m	struct:mp_table_entry_lint
type	include/nautilus/acpi.h	/^    uint8_t type;$/;"	m	struct:mp_table_entry_bus
type	include/nautilus/acpi.h	/^   uint8_t  type;$/;"	m	struct:mp_table_entry_cpu
type	include/nautilus/dev.h	/^    nk_dev_type_t type; $/;"	m	struct:nk_dev
type	include/nautilus/idt.h	/^            uint8_t  type  : 4;$/;"	m	struct:gate_desc64::__anon61::__anon63
type	include/nautilus/irq.h	/^    int_type_t type;$/;"	m	struct:nk_int_entry
type	include/nautilus/mm.h	/^    uint32_t type;$/;"	m	struct:mem_map_entry
type	include/nautilus/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag
type	include/nautilus/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_address
type	include/nautilus/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_console_flags
type	include/nautilus/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_entry_address
type	include/nautilus/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_framebuffer
type	include/nautilus/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_information_request
type	include/nautilus/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_module_align
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_mmap_entry
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_apm
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_basic_meminfo
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_bootdev
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_efi32
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_efi64
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_elf_sections
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_framebuffer_common
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_hrt
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_mmap
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_module
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_network
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_new_acpi
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_old_acpi
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_smbios
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_string
type	include/nautilus/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_vbe
type	include/nautilus/paging.h	/^    mem_zone_type_t type;$/;"	m	struct:nk_mem_zone
type	include/nautilus/scheduler.h	/^    nk_sched_constraint_type_t type;$/;"	m	struct:nk_sched_constraints
type	include/nautilus/sfi.h	/^    uint32_t type;$/;"	m	struct:efi_mem_desc
type	include/test/ipi.h	/^	ipi_exp_type_t type;     \/\/ which type of experiment$/;"	m	struct:ipi_exp_data
type	scripts/kconfig/expr.h	/^	enum expr_type type;$/;"	m	struct:expr	typeref:enum:expr::expr_type
type	scripts/kconfig/expr.h	/^	enum prop_type type;$/;"	m	struct:property	typeref:enum:property::prop_type
type	scripts/kconfig/expr.h	/^	enum symbol_type type;$/;"	m	struct:symbol	typeref:enum:symbol::symbol_type
type	src/acpi/acpica/aclocal.h	/^	u8 type;		\/* ACPI Type associated with this name *\/$/;"	m	struct:acpi_namespace_node
type	src/acpi/acpica/aclocal.h	/^	u8 type;		\/* Opcode type *\/$/;"	m	struct:acpi_opcode_info
type	src/acpi/acpica/aclocal.h	/^	u8 type;$/;"	m	struct:acpi_package_info
type	src/acpi/acpica/aclocal.h	/^	u8 type;$/;"	m	struct:acpi_package_info2
type	src/acpi/acpica/aclocal.h	/^	u8 type;$/;"	m	struct:acpi_package_info3
type	src/dev/ata.c	/^    enum {NONE=0, HD, CD} type;$/;"	m	struct:ata_blkdev_state	typeref:enum:ata_blkdev_state::__anon134	file:
type	src/legion_runtime/lowlevel_impl.h	/^      ID_Types type(void) const { return (ID_Types)(value >> (NODE_BITS + INDEX_BITS)); }$/;"	f	class:LegionRuntime::LowLevel::ID
type	src/nautilus/printk.c	/^	enum format_type	type;$/;"	m	struct:printf_spec	typeref:enum:printf_spec::format_type	file:
type	src/nautilus/scheduler.c	/^    queue_type type;$/;"	m	struct:rt_priority_queue	file:
type	src/nautilus/scheduler.c	/^    queue_type type;$/;"	m	struct:rt_queue	file:
type	src/nautilus/vc.c	/^  enum nk_vc_type type;$/;"	m	struct:nk_virtual_console	typeref:enum:nk_virtual_console::nk_vc_type	file:
type2str	src/test/ipi.c	/^type2str (ipi_exp_type_t type) $/;"	f	file:
type_specific	include/acpi/acrestyp.h	/^	uint64_t type_specific;$/;"	m	struct:acpi_resource_extended_address64
type_specific	include/acpi/acrestyp.h	/^	uint8_t type_specific;$/;"	m	union:acpi_resource_attribute
typeerror	src/lua_src/lauxlib.c	/^static int typeerror (lua_State *L, int narg, const char *tname) {$/;"	f	file:
typeify	src/legion_runtime/accessor.h	/^	  RegionAccessor<Generic, ET, ET> typeify(void) const {$/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Untyped
u	include/lua/lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon7
u	include/lua/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon16
u	include/lua/lstate.h	/^  union Udata u;$/;"	m	union:GCObject	typeref:union:GCObject::Udata
u	include/lua/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon11
u16	src/acpi/acpica/accommon.h	56;"	d
u16	src/acpi/acpica/actables.h	48;"	d
u16	src/arch/x64/numa.c	31;"	d	file:
u32	src/acpi/acpica/accommon.h	57;"	d
u32	src/acpi/acpica/actables.h	49;"	d
u32	src/arch/x64/numa.c	32;"	d	file:
u64	src/acpi/acpica/accommon.h	58;"	d
u64	src/acpi/acpica/actables.h	50;"	d
u64	src/arch/x64/numa.c	33;"	d	file:
u8	src/acpi/acpica/accommon.h	55;"	d
u8	src/acpi/acpica/actables.h	47;"	d
u8	src/arch/x64/numa.c	30;"	d	file:
uarrow_attr	scripts/kconfig/lxdialog/dialog.h	119;"	d
uchar	src/lua_src/lstrlib.c	33;"	d	file:
uchar_t	include/nautilus/naut_types.h	/^typedef unsigned char uchar_t;$/;"	t
uchar_t	src/test/hpcg/cg.h	/^typedef unsigned char uchar_t;$/;"	t	namespace:lgncg::cg
uchar_t	src/test/hpcg/hpcg-main.cc	/^typedef unsigned char uchar_t;$/;"	t	namespace:__anon117	file:
uchar_t	xeon_phi/linux_usr/phi_console.c	/^typedef unsigned char uchar_t;$/;"	t	file:
ud	include/lua/lstate.h	/^  void *ud;         \/* auxiliary data to `frealloc' *\/$/;"	m	struct:global_State
udata2finalize	src/lua_src/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatatypename	src/lua_src/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
udelay	include/nautilus/cpu.h	/^static void udelay (uint_t n) {$/;"	f
udelay	include/nautilus/cpu.h	/^static void udelay(uint_t n) {$/;"	f
ui	src/nautilus/libccompat.c	/^    uint64_t ui;$/;"	m	union:ieee754dbl	file:
uid	include/acpi/actbl1.h	/^	uint32_t uid;		\/* ACPI processor UID *\/$/;"	m	struct:acpi_madt_local_x2apic
uid	include/acpi/actbl1.h	/^	uint32_t uid;		\/* ACPI processor UID *\/$/;"	m	struct:acpi_madt_local_x2apic_nmi
uid	include/acpi/actbl1.h	/^	uint32_t uid;		\/* Numeric UID - ACPI 3.0 *\/$/;"	m	struct:acpi_madt_local_sapic
uid	include/acpi/actbl1.h	/^	uint32_t uid;		\/* Unique ID - must be same as the EC _UID method *\/$/;"	m	struct:acpi_table_ecdt
uid	src/legion_runtime/region_tree.h	/^      UniqueID uid;$/;"	m	struct:LegionRuntime::HighLevel::LogicalUser
uid	src/legion_runtime/region_tree.h	/^      const UniqueID uid;$/;"	m	class:LegionRuntime::HighLevel::StateSender
uid_string	include/acpi/actbl1.h	/^	char uid_string[1];	\/* String UID  - ACPI 3.0 *\/$/;"	m	struct:acpi_madt_local_sapic
uint16_t	include/nautilus/naut_types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	include/nautilus/naut_types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	src/lua_src/lnautlib.c	/^typedef unsigned int uint32_t;$/;"	t	file:
uint64	src/legion_runtime/lowlevel_impl.h	/^      typedef unsigned long long uint64;$/;"	t	struct:LegionRuntime::LowLevel::ElementMaskImpl
uint64_t	include/nautilus/naut_types.h	/^typedef unsigned long uint64_t;$/;"	t
uint64_t	src/lua_src/lnautlib.c	/^typedef long unsigned int uint64_t;$/;"	t	file:
uint8_t	include/nautilus/naut_types.h	/^typedef unsigned char uint8_t;$/;"	t
uint_t	include/nautilus/naut_types.h	/^typedef unsigned int uint_t;$/;"	t
uint_t	src/lua_src/lnautlib.c	/^typedef unsigned int uint_t;$/;"	t	file:
uintmax_t	src/nautilus/fmtout.c	/^typedef unsigned long uintmax_t;$/;"	t	file:
uintptr_t	src/nautilus/fmtout.c	/^typedef unsigned long uintptr_t;$/;"	t	file:
ullong_t	include/nautilus/naut_types.h	/^typedef unsigned long long ullong_t;$/;"	t
ulong_t	include/nautilus/naut_types.h	/^typedef unsigned long ulong_t;$/;"	t
ulong_t	src/lua_src/lnautlib.c	/^typedef long unsigned int ulong_t;$/;"	t	file:
ulong_t	src/test/benchmark.h	/^typedef unsigned long ulong_t;$/;"	t
unbound_search	src/lua_src/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
uncorrectable_mask	include/acpi/actbl1.h	/^	uint32_t uncorrectable_mask;$/;"	m	struct:acpi_hest_aer_common
uncorrectable_mask2	include/acpi/actbl1.h	/^	uint32_t uncorrectable_mask2;$/;"	m	struct:acpi_hest_aer_bridge
uncorrectable_severity	include/acpi/actbl1.h	/^	uint32_t uncorrectable_severity;$/;"	m	struct:acpi_hest_aer_common
uncorrectable_severity2	include/acpi/actbl1.h	/^	uint32_t uncorrectable_severity2;$/;"	m	struct:acpi_hest_aer_bridge
undefgoto	src/lua_src/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
ungetc	src/nautilus/libccompat.c	/^int ungetc (int character, FILE * stream)$/;"	f
unguarded_delta	src/legion_runtime/lowlevel.cc	/^      int unguarded_delta;$/;"	m	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates	file:
uninitialized_var	include/nautilus/intrinsics.h	50;"	d
unique_distributed_id	src/legion_runtime/runtime.h	/^      DistributedID unique_distributed_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_field_id	src/legion_runtime/runtime.h	/^      unsigned unique_field_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_field_space_id	src/legion_runtime/runtime.h	/^      unsigned unique_field_space_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_id	include/acpi/actypes.h	/^	struct acpica_device_id unique_id;	\/* _UID value *\/$/;"	m	struct:acpi_device_info	typeref:struct:acpi_device_info::acpica_device_id
unique_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceRequirement
unique_id	src/legion_runtime/legion_profiling.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::OpInstance
unique_id	src/legion_runtime/legion_profiling.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProfilingEvent
unique_id	src/legion_runtime/legion_profiling.h	/^        UniqueID unique_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::TaskInstance
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgLogicalRequirement
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperation
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationEvents
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgOperationTiming
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgPhysicalUser
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgRequirementFields
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceVariant
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskOperation
unique_op_id	src/legion_runtime/legion_logging.h	/^        UniqueID unique_op_id;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTopLevelTask
unique_op_id	src/legion_runtime/legion_ops.h	/^      UniqueID unique_op_id;$/;"	m	class:LegionRuntime::HighLevel::Operation
unique_operation_id	src/legion_runtime/runtime.h	/^      unsigned unique_operation_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_partition_id	src/legion_runtime/runtime.h	/^      unsigned unique_partition_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unique_tree_id	src/legion_runtime/runtime.h	/^      unsigned unique_tree_id;$/;"	m	class:LegionRuntime::HighLevel::Runtime
unit_mask	include/nautilus/pmc.h	/^            uint8_t unit_mask     : 8;$/;"	m	struct:pmc_ctl::__anon46::__anon47
units	include/acpi/actbl2.h	/^	uint8_t units;$/;"	m	struct:acpi_table_wdrt
unlikely	include/nautilus/intrinsics.h	38;"	d
unlinkupval	src/lua_src/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unlock	src/legion_runtime/lowlevel_impl.h	/^	  free_list->lock.unlock();$/;"	t	class:LegionRuntime::LowLevel::DynamicTableAllocator
unlock	src/legion_runtime/lowlevel_impl.h	/^      void unlock(void) { gasnet_hsl_unlock(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
unlock	src/legion_runtime/utilities.h	/^    void unlock(void) {$/;"	f	class:LegionRuntime::ImmovableLock
unmakemask	src/lua_src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unmap_all_regions	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::unmap_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
unmap_all_regions	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::unmap_all_regions(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unmap_all_regions	src/legion_runtime/runtime.cc	/^    void Runtime::unmap_all_regions(Context ctx)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unmap_region	src/legion_runtime/legion.cc	/^    void HighLevelRuntime::unmap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
unmap_region	src/legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::unmap_region(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
unmap_region	src/legion_runtime/runtime.cc	/^    void Runtime::unmap_region(Context ctx, PhysicalRegion region)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unmerge_from_ros	src/arch/hrt/hrt.c	/^unmerge_from_ros (void)$/;"	f	file:
unpack	src/legion_runtime/legion.h	/^        static inline T unpack(const void *result)$/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::NonPODSerializer
unpack	src/legion_runtime/legion.h	/^        static inline T unpack(const void *result)$/;"	f	struct:LegionRuntime::HighLevel::LegionSerialization::StructHandler
unpack	src/legion_runtime/legion.h	/^      static inline T unpack(const void *result)$/;"	f	class:LegionRuntime::HighLevel::LegionSerialization
unpack	src/lua_src/ltablib.c	/^static int unpack (lua_State *L) {$/;"	f	file:
unpack_arguments	src/legion_runtime/runtime.cc	/^    void ArgumentMap::Impl::unpack_arguments(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
unpack_base_task	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::unpack_base_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_composite_node	src/legion_runtime/region_tree.cc	/^    void CompositeNode::unpack_composite_node(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
unpack_composite_view	src/legion_runtime/region_tree.cc	/^    void CompositeView::unpack_composite_view(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
unpack_field_tree	src/legion_runtime/field_tree.h	/^    void FieldTree<UT>::unpack_field_tree(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
unpack_future	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::unpack_future(const DomainPoint &point, $/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
unpack_future	src/legion_runtime/runtime.cc	/^    void Future::Impl::unpack_future(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
unpack_grant	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_grant(Grant &grant, Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_grant	src/legion_runtime/runtime.cc	/^    void Grant::Impl::unpack_grant(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
unpack_index_space_requirement	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_index_space_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_layout_description	src/legion_runtime/region_tree.cc	/^    void LayoutDescription::unpack_layout_description(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
unpack_manager	src/legion_runtime/region_tree.cc	/^    \/*static*\/ InstanceManager* InstanceManager::unpack_manager($/;"	f	class:LegionRuntime::HighLevel::InstanceManager
unpack_manager	src/legion_runtime/region_tree.cc	/^    \/*static*\/ ReductionManager* ReductionManager::unpack_manager($/;"	f	class:LegionRuntime::HighLevel::ReductionManager
unpack_materialized_view	src/legion_runtime/region_tree.cc	/^    void MaterializedView::unpack_materialized_view(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::MaterializedView
unpack_multi_task	src/legion_runtime/legion_tasks.cc	/^    void MultiTask::unpack_multi_task(Deserializer &derez, bool unpack_args)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
unpack_parent_task	src/legion_runtime/legion_tasks.cc	/^    void RemoteTask::unpack_parent_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
unpack_phase_barrier	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_phase_barrier($/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_point	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_point(Deserializer &derez, DomainPoint &p)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_privilege_state	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::unpack_privilege_state(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_reduction_view	src/legion_runtime/region_tree.cc	/^    void ReductionView::unpack_reduction_view(Deserializer &derez, $/;"	f	class:LegionRuntime::HighLevel::ReductionView
unpack_reference	src/legion_runtime/region_tree.cc	/^    \/*static*\/ InstanceRef InstanceRef::unpack_reference(Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::InstanceRef
unpack_region_requirement	src/legion_runtime/legion_tasks.cc	/^    \/*static*\/ void TaskOp::unpack_region_requirement($/;"	f	class:LegionRuntime::HighLevel::TaskOp
unpack_remote_commit	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::unpack_remote_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_remote_complete	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::unpack_remote_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_remote_mapped	src/legion_runtime/legion_tasks.cc	/^    void IndividualTask::unpack_remote_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_send_state	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::unpack_send_state(ContextID ctx, Deserializer &derez,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
unpack_single_task	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::unpack_single_task(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unpack_slice_commit	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::unpack_slice_commit(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_slice_complete	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::unpack_slice_complete(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_slice_mapped	src/legion_runtime/legion_tasks.cc	/^    void IndexTask::unpack_slice_mapped(Deserializer &derez)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_task	src/legion_runtime/legion_tasks.cc	/^    bool IndexTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
unpack_task	src/legion_runtime/legion_tasks.cc	/^    bool IndividualTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
unpack_task	src/legion_runtime/legion_tasks.cc	/^    bool PointTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::PointTask
unpack_task	src/legion_runtime/legion_tasks.cc	/^    bool SliceTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
unpack_task	src/legion_runtime/legion_tasks.cc	/^    bool WrapperTask::unpack_task(Deserializer &derez, Processor current)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
unput	scripts/kconfig/lex.zconf.c	166;"	d	file:
unregister_child_operation	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::unregister_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
unregister_child_operation	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::unregister_child_operation(Operation *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unregister_distributed_collectable	src/legion_runtime/runtime.cc	/^    void Runtime::unregister_distributed_collectable(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unregister_future	src/legion_runtime/runtime.cc	/^    void Runtime::unregister_future(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unregister_hierarchical_collectable	src/legion_runtime/runtime.cc	/^    void Runtime::unregister_hierarchical_collectable(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::Runtime
unregister_inline_mapped_region	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::unregister_inline_mapped_region(PhysicalRegion &region)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
unregister_logical_view	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::unregister_logical_view(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
unregister_physical_manager	src/legion_runtime/region_tree.cc	/^    void RegionTreeForest::unregister_physical_manager(DistributedID did)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
unroll	src/lua_src/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
unset_bit	src/legion_runtime/legion_utilities.h	/^    inline void AVXBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
unset_bit	src/legion_runtime/legion_utilities.h	/^    inline void AVXTLBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
unset_bit	src/legion_runtime/legion_utilities.h	/^    inline void BitMask<T,MAX,SHIFT,MASK>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::BitMask
unset_bit	src/legion_runtime/legion_utilities.h	/^    inline void SSEBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
unset_bit	src/legion_runtime/legion_utilities.h	/^    inline void SSETLBitMask<MAX>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
unset_bit	src/legion_runtime/legion_utilities.h	/^    inline void TLBitMask<T,MAX,SHIFT,MASK>::unset_bit(unsigned bit)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
unused	include/nautilus/acpi.h	/^    uint8_t  unused  : 7;$/;"	m	struct:mp_table_entry_ioapic
unused	include/nautilus/acpi.h	/^   uint8_t  unused      : 6;$/;"	m	struct:mp_table_entry_cpu
unverified_regions	src/legion_runtime/legion_ops.h	/^      std::set<unsigned> unverified_regions;$/;"	m	class:LegionRuntime::HighLevel::Operation
up	src/legion_runtime/legion_logging.cc	/^    void TreeStateLogger::up(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
up	src/legion_runtime/legion_spy.cc	/^    void TreeStateLogger::up(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
update	src/acpi/acpica/aclocal.h	/^	struct acpi_update_state update;$/;"	m	union:acpi_generic_state	typeref:struct:acpi_generic_state::acpi_update_state
updateAll	scripts/kconfig/qconf.h	/^	bool updateAll;$/;"	m	class:ConfigList
updateList	scripts/kconfig/qconf.cc	/^void ConfigList::updateList(ConfigItem* item)$/;"	f	class:ConfigList
updateList	scripts/kconfig/qconf.cc	/^void ConfigView::updateList(ConfigItem* item)$/;"	f	class:ConfigView
updateListAll	scripts/kconfig/qconf.cc	/^void ConfigView::updateListAll(void)$/;"	f	class:ConfigView
updateListAll	scripts/kconfig/qconf.h	/^	void updateListAll(void)$/;"	f	class:ConfigList
updateMenu	scripts/kconfig/qconf.cc	/^void ConfigItem::updateMenu(void)$/;"	f	class:ConfigItem
updateMenuList	scripts/kconfig/qconf.cc	/^void ConfigList::updateMenuList(P* parent, struct menu* menu)$/;"	f	class:ConfigList
updateSelection	scripts/kconfig/qconf.cc	/^void ConfigList::updateSelection(void)$/;"	f	class:ConfigList
update_arrival_barriers	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::update_arrival_barriers($/;"	f	class:LegionRuntime::HighLevel::TaskOp
update_child_info	src/legion_runtime/region_tree.cc	/^    void CompositeNode::update_child_info(CompositeNode *child, $/;"	f	class:LegionRuntime::HighLevel::CompositeNode
update_close_operations	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_close_operations(LogicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_collection_table	src/legion_runtime/legion.cc	/^    \/*static*\/ TaskID HighLevelRuntime::update_collection_table($/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
update_collection_table	src/legion_runtime/runtime.cc	/^    \/*static*\/ TaskID Runtime::update_collection_table($/;"	f	class:LegionRuntime::HighLevel::Runtime
update_component_domains	src/legion_runtime/region_tree.cc	/^    void IndexSpaceNode::update_component_domains(const std::set<Domain> &doms)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
update_current_fence	src/legion_runtime/legion_tasks.cc	/^    void InlineTask::update_current_fence(FenceOp *op)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
update_current_fence	src/legion_runtime/legion_tasks.cc	/^    void SingleTask::update_current_fence(FenceOp *op)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
update_dirty_mask	src/legion_runtime/region_tree.cc	/^    void PhysicalCloser::update_dirty_mask(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
update_grants	src/legion_runtime/legion_tasks.cc	/^    void TaskOp::update_grants(const std::vector<Grant> &requested_grants)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
update_instance_views	src/legion_runtime/region_tree.cc	/^    void CompositeNode::update_instance_views(InstanceView *view,$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
update_known_nodes	src/legion_runtime/region_tree.cc	/^    void LayoutDescription::update_known_nodes(AddressSpaceID target)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
update_mappers	src/test/circuit.cc	/^static void update_mappers(Machine *machine, HighLevelRuntime *rt,$/;"	f	file:
update_node_views	src/legion_runtime/region_tree.cc	/^    void PhysicalCloser::update_node_views(RegionTreeNode *node,$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
update_parent_info	src/legion_runtime/region_tree.cc	/^    void CompositeNode::update_parent_info(const FieldMask &capture_mask)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
update_profiling_info	src/legion_runtime/mapping_utilities.cc	/^      void MappingProfiler::update_profiling_info(const Task *task, $/;"	f	class:LegionRuntime::HighLevel::MappingUtilities::MappingProfiler
update_reduction_views	src/legion_runtime/region_tree.cc	/^    void CompositeCloser::update_reduction_views(ReductionView *view,$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
update_reduction_views	src/legion_runtime/region_tree.cc	/^    void CompositeView::update_reduction_views(ReductionView *view,$/;"	f	class:LegionRuntime::HighLevel::CompositeView
update_reduction_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_reduction_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_remote_spaces	src/legion_runtime/garbage_collection.cc	/^    void DistributedCollectable::update_remote_spaces(AddressSpaceID sid)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
update_state	src/legion_runtime/garbage_collection.cc	/^    bool CollectableState::update_state(bool has_gc_refs,$/;"	f	class:LegionRuntime::HighLevel::CollectableState
update_tree	scripts/kconfig/gconf.c	/^static void update_tree(struct menu *src, GtkTreeIter * dst)$/;"	f	file:
update_type_t	src/arch/k1om/xeon_phi.c	/^} update_type_t;$/;"	t	typeref:enum:__anon129	file:
update_type_t	xeon_phi/linux_usr/phi_console.c	/^} update_type_t;$/;"	t	typeref:enum:__anon78	file:
update_valid_mask	src/legion_runtime/region_tree.cc	/^    void CompositeView::update_valid_mask(const FieldMask &mask)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
update_valid_views	src/legion_runtime/region_tree.cc	/^    void CompositeCloser::update_valid_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
update_valid_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_valid_views(PhysicalState &state, $/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_valid_views	src/legion_runtime/region_tree.cc	/^    void RegionTreeNode::update_valid_views(PhysicalState &state,$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
update_versions	src/legion_runtime/region_tree.cc	/^    void MaterializedView::update_versions(const FieldMask &update_mask)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
update_voltages	src/test/circuit_cpu.cc	/^static inline void update_voltages(LogicalRegion lr,$/;"	f	file:
upper_targets	src/legion_runtime/region_tree.h	/^      std::vector<MaterializedView*> upper_targets;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalCloser
upval	src/lua_src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	src/lua_src/ldebug.c	/^static const char *upvalname (Proto *p, int uv) {$/;"	f	file:
upvals	include/lua/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure
upvalue	include/lua/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure
upvalues	include/lua/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto
usable	include/dev/ioapic.h	/^    uint8_t usable;$/;"	m	struct:ioapic
usable_ram	include/nautilus/mm.h	/^    uint64_t usable_ram; $/;"	m	struct:mmap_info
usage	scripts/basic/docproc.c	/^void usage (void)$/;"	f
usage	scripts/basic/fixdep.c	/^void usage(void)$/;"	f
usage	scripts/kallsyms.c	/^static void usage(void)$/;"	f	file:
usage	scripts/kconfig/lxdialog/check-lxdialog.sh	/^usage() {$/;"	f
usage	scripts/kconfig/qconf.cc	/^static void usage(void)$/;"	f	file:
usage	src/legion_runtime/region_tree.h	/^      RegionUsage usage;$/;"	m	struct:LegionRuntime::HighLevel::GenericUser
usage	src/legion_runtime/region_tree.h	/^      const RegionUsage usage;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
usage	xeon_phi/linux_usr/phi_console.c	/^usage (char * prog)$/;"	f	file:
use_colors	scripts/kconfig/lxdialog/util.c	/^bool use_colors = 1;$/;"	v
use_config	scripts/basic/fixdep.c	/^void use_config(char *m, int slen)$/;"	f
use_count	src/acpi/acpica/aclocal.h	/^	u32 use_count;$/;"	m	struct:acpi_mutex_info
use_event	src/legion_runtime/region_tree.h	/^      const Event use_event;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
use_file	include/test/ipi.h	/^    uint8_t use_file; \/\/ should we output data to a file?$/;"	m	struct:ipi_exp_data
used_id	include/acpi/actbl2.h	/^	uint16_t used_id;$/;"	m	struct:acpi_ivrs_device8a
used_id	include/acpi/actbl2.h	/^	uint16_t used_id;$/;"	m	struct:acpi_ivrs_device8c
user	scripts/kconfig/expr.h	/^	struct symbol_value curr, user;$/;"	m	struct:symbol	typeref:struct:symbol::
user	src/legion_runtime/region_tree.h	/^      const LogicalUser &user;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
user	src/legion_runtime/region_tree.h	/^      const LogicalUser user;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
user	src/legion_runtime/region_tree.h	/^      const PhysicalUser user;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
user_id	src/legion_runtime/legion.h	/^      const Processor::TaskFuncID user_id;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
user_level_coherence	src/legion_runtime/region_tree.h	/^      FieldMask user_level_coherence;$/;"	m	struct:LegionRuntime::HighLevel::LogicalState
user_mask	src/legion_runtime/region_tree.h	/^      const FieldMask user_mask;$/;"	m	class:LegionRuntime::HighLevel::MappingTraverser
user_space	src/acpi/acpica/aclocal.h	/^	ACPI_COMMON_DEBUG_MEM_HEADER u64 user_space;$/;"	m	struct:acpi_debug_mem_block
users	include/nautilus/ticketlock.h	/^        uint16_t users;$/;"	m	struct:nk_ticket_lock::__anon55
ushort_t	include/nautilus/naut_types.h	/^typedef unsigned short ushort_t;$/;"	t
usr	include/nautilus/paging.h	/^            uint8_t usr     : 1;$/;"	m	struct:nk_pf_error::__anon56::__anon57
usr	include/nautilus/pmc.h	/^            uint8_t usr           : 1;$/;"	m	struct:pmc_ctl::__anon46::__anon47
util	src/legion_runtime/lowlevel_impl.h	/^      Processor util;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
util_limit	include/nautilus/scheduler.h	/^    uint64_t util_limit;                 \/\/ utilization available in 10^-6 units$/;"	m	struct:nk_sched_config
util_proc	src/legion_runtime/lowlevel_impl.h	/^      UtilityProcessor *util_proc;$/;"	m	class:LegionRuntime::LowLevel::Processor::Impl
util_shutdown	src/legion_runtime/shared_lowlevel.cc	/^        bool util_shutdown;       \/\/ for knowing when our utility processor is done$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
util_users	src/legion_runtime/shared_lowlevel.cc	/^        std::set<Processor> util_users;\/\/ Users of the utility processor to know when it's safe to finish$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
utility	src/legion_runtime/legion_profiling.h	/^        bool utility;$/;"	m	struct:LegionRuntime::HighLevel::LegionProf::ProcessorProfiler
utility	src/legion_runtime/shared_lowlevel.cc	/^        Processor utility;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
utility_finish	src/legion_runtime/shared_lowlevel.cc	/^    void ProcessorImpl::utility_finish(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
utility_group	src/legion_runtime/runtime.h	/^      Processor utility_group;$/;"	m	class:LegionRuntime::HighLevel::Runtime
utility_proc	src/legion_runtime/runtime.h	/^      const Processor utility_proc;$/;"	m	class:LegionRuntime::HighLevel::ProcessorManager
utility_proc	src/legion_runtime/shared_lowlevel.cc	/^        ProcessorImpl *utility_proc;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
utptr_t	src/legion_runtime/common.h	/^  utptr_t(const utptr_t &p) : value(p.value) { }$/;"	f	struct:utptr_t
utptr_t	src/legion_runtime/common.h	/^  utptr_t(unsigned v) : value(v) { }$/;"	f	struct:utptr_t
utptr_t	src/legion_runtime/common.h	/^  utptr_t(void) : value(0) { }$/;"	f	struct:utptr_t
utptr_t	src/legion_runtime/common.h	/^struct utptr_t$/;"	s
uuid	include/acpi/acrestyp.h	/^	uint8_t uuid[ACPI_UUID_LENGTH];$/;"	m	struct:acpi_resource_vendor_typed
uuid_str	include/nautilus/acpi.h	/^	char *uuid_str; \/* uuid string *\/$/;"	m	struct:acpi_osc_context
uuid_subtype	include/acpi/acrestyp.h	/^	uint8_t uuid_subtype;$/;"	m	struct:acpi_resource_vendor_typed
uv	include/lua/lobject.h	/^  } uv;$/;"	m	union:Udata	typeref:struct:Udata::__anon6
uv	include/lua/lstate.h	/^  struct UpVal uv;$/;"	m	union:GCObject	typeref:struct:GCObject::UpVal
uval	src/test/circuit.cc	/^union test_dbl { double dval; unsigned long long uval; };$/;"	m	union:test_dbl	file:
uvalue	include/lua/lobject.h	159;"	d
uvhead	include/lua/lstate.h	/^  UpVal uvhead;  \/* head of double-linked list of all open upvalues *\/$/;"	m	struct:global_State
v	include/lua/lobject.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	src/lua_src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	src/lua_src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v	src/test/saxpy_array.cc	/^  float v;$/;"	m	struct:Entry	file:
v3_vm_reset_type	src/nautilus/vmm.c	/^typedef enum {V3_VM_RESET_ALL,V3_VM_RESET_HRT,V3_VM_RESET_ROS,V3_VM_RESET_CORE_RANGE} v3_vm_reset_type;$/;"	t	typeref:enum:__anon133	file:
v_	include/lua/lobject.h	305;"	d
v_	include/lua/lobject.h	316;"	d
va_arg	include/acpi/platform/acenv.h	301;"	d
va_end	include/acpi/platform/acenv.h	302;"	d
va_list	include/acpi/platform/acenv.h	/^typedef char *va_list;$/;"	t
va_start	include/acpi/platform/acenv.h	303;"	d
va_to_pa	include/nautilus/paging.h	/^va_to_pa (addr_t vaddr) $/;"	f
val	include/acpi/actypes.h	/^	char *val;$/;"	m	struct:acpi_predefined_names
val	include/nautilus/cpuid.h	/^        uint32_t val;$/;"	m	union:cpuid_amd_ecx_flags::__anon40
val	include/nautilus/cpuid.h	/^        uint32_t val;$/;"	m	union:cpuid_amd_edx_flags::__anon42
val	include/nautilus/cpuid.h	/^        uint32_t val;$/;"	m	union:cpuid_ecx_flags::__anon36
val	include/nautilus/cpuid.h	/^        uint32_t val;$/;"	m	union:cpuid_edx_flags::__anon38
val	include/nautilus/cpuid.h	/^        uint32_t val;$/;"	m	union:cpuid_ext_feat_flags_ebx::__anon44
val	include/nautilus/paging.h	/^        uint32_t val;$/;"	m	union:nk_pf_error::__anon56
val	include/nautilus/pmc.h	/^        uint64_t val;$/;"	m	union:pmc_ctl::__anon46
val	include/nautilus/ticketlock.h	/^    uint32_t val;$/;"	m	union:nk_ticket_lock
val	scripts/kconfig/expr.h	/^	void *val;$/;"	m	struct:symbol_value
val	src/dev/ata.c	/^    uint8_t val;$/;"	m	union:ata_cmd_reg	file:
val	src/dev/ata.c	/^    uint8_t val;$/;"	m	union:ata_status_reg	file:
val_	include/lua/lobject.h	113;"	d
val_	include/lua/lobject.h	326;"	d
val_	include/lua/lobject.h	327;"	d
val_hi	include/nautilus/idt.h	/^            uint64_t val_hi;$/;"	m	struct:gate_desc64::__anon61::__anon62
val_lo	include/nautilus/idt.h	/^            uint64_t val_lo;$/;"	m	struct:gate_desc64::__anon61::__anon62
valid	include/acpi/actypes.h	/^	uint8_t valid;		\/* Indicates which optional fields are valid *\/$/;"	m	struct:acpi_device_info
valid	src/legion_runtime/activemsg.h	/^  bool valid;$/;"	m	struct:HandlerReplyFuture
valid	src/legion_runtime/lowlevel.h	/^      bool valid(void) const { return(dim >= 0); }$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
valid	src/legion_runtime/lowlevel_impl.h	/^	bool valid;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::StaticData
valid	src/legion_runtime/lowlevel_impl.h	/^	bool valid;$/;"	m	struct:LegionRuntime::LowLevel::RegionInstance::Impl::StaticData
valid	src/legion_runtime/lowlevel_impl.h	/^      bool valid;$/;"	m	class:LegionRuntime::LowLevel::ProcessorAssignment
valid	src/legion_runtime/runtime.h	/^      bool valid; \/\/ whether it is currently valid$/;"	m	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
valid	src/legion_runtime/runtime.h	/^      const bool valid;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
valid_domains	src/legion_runtime/runtime.h	/^      std::vector<Domain> valid_domains;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
valid_fields	src/legion_runtime/region_tree.h	/^        FieldMask valid_fields;$/;"	m	struct:LegionRuntime::HighLevel::CompositeView::ReduceInfo
valid_fields	src/legion_runtime/region_tree.h	/^      FieldMask valid_fields;$/;"	m	struct:LegionRuntime::HighLevel::ChildState
valid_map	src/legion_runtime/region_tree.h	/^      std::map<Color,IndexPartNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::IndexSpaceNode
valid_map	src/legion_runtime/region_tree.h	/^      std::map<Color,IndexSpaceNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::IndexPartNode
valid_map	src/legion_runtime/region_tree.h	/^      std::map<Color,PartitionNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::RegionNode
valid_map	src/legion_runtime/region_tree.h	/^      std::map<Color,RegionNode*> valid_map;$/;"	m	class:LegionRuntime::HighLevel::PartitionNode
valid_mask	src/legion_runtime/lowlevel_impl.h	/^      ElementMask *valid_mask;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask	src/legion_runtime/region_tree.h	/^      FieldMask valid_mask;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
valid_mask_base	src/legion_runtime/lowlevel.h	/^      unsigned *valid_mask_base;$/;"	m	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
valid_mask_complete	src/legion_runtime/lowlevel_impl.h	/^      bool valid_mask_complete;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_contig	src/legion_runtime/lowlevel_impl.h	/^      bool valid_mask_contig;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_count	src/legion_runtime/lowlevel_impl.h	/^      int valid_mask_count;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_event	src/legion_runtime/lowlevel_impl.h	/^      Event valid_mask_event;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_first	src/legion_runtime/lowlevel_impl.h	/^      int valid_mask_first, valid_mask_last;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_last	src/legion_runtime/lowlevel_impl.h	/^      int valid_mask_first, valid_mask_last;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_mutex	src/legion_runtime/lowlevel_impl.h	/^      gasnet_hsl_t valid_mask_mutex;$/;"	m	class:LegionRuntime::LowLevel::IndexSpace::Impl
valid_mask_owners	src/legion_runtime/lowlevel_impl.h	/^	unsigned valid_mask_owners;$/;"	m	struct:LegionRuntime::LowLevel::IndexSpace::Impl::CoherentData
valid_points	src/legion_runtime/runtime.h	/^      std::set<DomainPoint,DomainPoint::STLComparator> valid_points;$/;"	m	class:LegionRuntime::HighLevel::FutureMap::Impl
valid_reductions	src/legion_runtime/region_tree.h	/^      std::map<ReductionView*,ReduceInfo> valid_reductions;$/;"	m	class:LegionRuntime::HighLevel::CompositeView
valid_references	src/legion_runtime/garbage_collection.h	/^      unsigned valid_references;$/;"	m	class:LegionRuntime::HighLevel::DistributedCollectable
valid_references	src/legion_runtime/garbage_collection.h	/^      unsigned valid_references;$/;"	m	class:LegionRuntime::HighLevel::HierarchicalCollectable
valid_stdin	scripts/kconfig/conf.c	/^static int valid_stdin = 1;$/;"	v	file:
valid_views	src/legion_runtime/region_tree.h	/^                     VALID_VIEW_ALLOC>::map valid_views;$/;"	m	struct:LegionRuntime::HighLevel::PhysicalState
valid_views	src/legion_runtime/region_tree.h	/^      std::map<InstanceView*,FieldMask> valid_views;$/;"	m	class:LegionRuntime::HighLevel::CompositeNode
valid_views	src/legion_runtime/region_tree.h	/^      std::set<MaterializedView*> valid_views;$/;"	m	class:LegionRuntime::HighLevel::InstanceManager
valid_wait_event	src/legion_runtime/legion_tasks.h	/^      bool valid_wait_event;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
validates	src/legion_runtime/legion_trace.h	/^        bool validates;$/;"	m	struct:LegionRuntime::HighLevel::LegionTrace::DependenceRecord
validates	src/legion_runtime/region_tree.h	/^      bool validates;$/;"	m	struct:LegionRuntime::HighLevel::LogicalCloser
validates_regions	src/legion_runtime/region_tree.h	/^      const bool validates_regions;$/;"	m	class:LegionRuntime::HighLevel::LogicalDepAnalyzer
validation_bits	include/acpi/actbl1.h	/^	uint8_t validation_bits;$/;"	m	struct:acpi_hest_generic_data
valiswhite	include/lua/lgc.h	117;"	d
vals	src/test/hpcg/sparsemat.h	/^    Vector vals;$/;"	m	struct:lgncg::SparseMatrix
value	include/acpi/actbl1.h	/^	uint64_t value;		\/* Value used with Read\/Write register *\/$/;"	m	struct:acpi_whea_header
value	include/acpi/actbl2.h	/^	uint32_t value;		\/* Value used with Read\/Write register *\/$/;"	m	struct:acpi_wdat_entry
value	include/acpi/actbl2.h	/^	uint8_t value;$/;"	m	struct:acpi_asf_alert_data
value	include/acpi/actbl2.h	/^	uint8_t value;$/;"	m	struct:acpi_asf_control_data
value	include/acpi/actypes.h	/^		uint64_t value;	\/* The actual number *\/$/;"	m	struct:acpi_object::__anon20
value	include/lua/lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon7
value	src/acpi/acpica/aclocal.h	/^	u32 value;$/;"	m	struct:acpi_namespace_node
value	src/acpi/acpica/aclocal.h	/^	u8 value;$/;"	m	struct:acpi_interface_info
value	src/legion_runtime/accessor.h	/^	\/*const*\/ T value;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Const
value	src/legion_runtime/accessor.h	/^	static const T value = val;$/;"	m	struct:LegionRuntime::Accessor::AccessorType::Const
value	src/legion_runtime/accessor.h	/^	static const bool value = sizeof(test_for_struct<T>(0)) == sizeof(yes);$/;"	m	struct:LegionRuntime::Accessor::TemplateFu::IsAStruct
value	src/legion_runtime/activemsg.h	/^  T value;$/;"	m	struct:HandlerReplyFuture
value	src/legion_runtime/common.h	/^  unsigned value; $/;"	m	struct:ptr_t
value	src/legion_runtime/common.h	/^  unsigned value; $/;"	m	struct:utptr_t
value	src/legion_runtime/legion.h	/^        static const bool value = $/;"	m	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
value	src/legion_runtime/legion.h	/^        static const bool value = $/;"	m	struct:LegionRuntime::HighLevel::LegionSerialization::IsAStruct
value	src/legion_runtime/legion_types.h	/^    static const bool value = false;$/;"	m	struct:LegionRuntime::LegionTypeInequality
value	src/legion_runtime/legion_types.h	/^    static const bool value = true;$/;"	m	struct:LegionRuntime::LegionTypeInequality
value	src/legion_runtime/lowlevel_impl.h	/^      IDType value;$/;"	m	class:LegionRuntime::LowLevel::ID
value	src/legion_runtime/lowlevel_impl.h	/^      T value;$/;"	m	class:LegionRuntime::LowLevel::Atomic
value	src/nautilus/hashtable.c	/^    addr_t value;$/;"	m	struct:nk_hash_entry	file:
value_type	src/legion_runtime/legion_allocation.h	/^      typedef T              value_type;$/;"	t	class:LegionRuntime::HighLevel::LegionAllocator
values	src/legion_runtime/runtime.h	/^      std::set<TaskArgument> values;$/;"	m	class:LegionRuntime::HighLevel::ArgumentMapStore
variants	src/legion_runtime/legion.h	/^      TaskVariantCollection              *variants;$/;"	m	class:LegionRuntime::HighLevel::Task
variants	src/legion_runtime/legion.h	/^      std::map<VariantID,Variant> variants;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection
variety	include/acpi/actbl2.h	/^	uint8_t variety;$/;"	m	struct:acpi_ivrs_device8c
varname	include/lua/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
vbe_control_info	include/nautilus/multiboot2.h	/^  struct multiboot_vbe_info_block vbe_control_info;$/;"	m	struct:multiboot_tag_vbe	typeref:struct:multiboot_tag_vbe::multiboot_vbe_info_block
vbe_interface_len	include/nautilus/multiboot2.h	/^  multiboot_uint16_t vbe_interface_len;$/;"	m	struct:multiboot_tag_vbe
vbe_interface_off	include/nautilus/multiboot2.h	/^  multiboot_uint16_t vbe_interface_off;$/;"	m	struct:multiboot_tag_vbe
vbe_interface_seg	include/nautilus/multiboot2.h	/^  multiboot_uint16_t vbe_interface_seg;$/;"	m	struct:multiboot_tag_vbe
vbe_mode	include/nautilus/multiboot2.h	/^  multiboot_uint16_t vbe_mode;$/;"	m	struct:multiboot_tag_vbe
vbe_mode_info	include/nautilus/multiboot2.h	/^  struct multiboot_vbe_mode_info_block vbe_mode_info;$/;"	m	struct:multiboot_tag_vbe	typeref:struct:multiboot_tag_vbe::multiboot_vbe_mode_info_block
vc	include/nautilus/thread.h	/^    struct nk_virtual_console *vc;$/;"	m	struct:nk_thread	typeref:struct:nk_thread::nk_virtual_console
vc	include/test/ipi.h	/^    struct nk_virtual_console * vc; \/\/ the virtual console on the originating core$/;"	m	struct:ipi_exp_data	typeref:struct:ipi_exp_data::nk_virtual_console
vc_list	src/nautilus/vc.c	/^static struct list_head vc_list;$/;"	v	typeref:struct:list_head	file:
vc_node	src/nautilus/vc.c	/^  struct list_head vc_node;$/;"	m	struct:nk_virtual_console	typeref:struct:nk_virtual_console::list_head	file:
vc_print_specific	src/nautilus/vc.c	/^static int vc_print_specific(struct nk_virtual_console *vc, char *s)$/;"	f	file:
veccp	src/test/hpcg/veccp.h	/^veccp(const Vector &from,$/;"	f	namespace:lgncg
vector	include/acpi/actbl1.h	/^	uint32_t vector;$/;"	m	struct:acpi_hest_notify
vector	include/nautilus/cpu.h	/^    ulong_t vector;$/;"	m	struct:nk_regs
vector	include/nautilus/nautilus.h	/^    uint8_t vector;$/;"	m	struct:irq_mapping
vector	include/nautilus/realmode.h	/^    uint8_t  vector;$/;"	m	struct:nk_real_mode_int_args
vector	src/asm/excp_early.S	/^    vector = 0$/;"	d
vector	src/asm/excp_early.S	/^    vector = 32$/;"	d
vector	src/asm/excp_early.S	/^    vector = vector + 1$/;"	d
vector	src/legion_runtime/legion_allocation.h	/^      typedef std::vector<T, LegionAllocator<T, A> > vector;$/;"	t	struct:LegionRuntime::HighLevel::LegionContainer
veczero	src/test/hpcg/vec-zero.h	/^veczero(Vector &v,$/;"	f	namespace:lgncg
veczeroTask	src/test/hpcg/vec-zero.h	/^veczeroTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
vendor	include/acpi/acrestyp.h	/^	struct acpi_resource_vendor vendor;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_vendor
vendor	include/dev/hpet.h	/^    uint16_t vendor;$/;"	m	struct:hpet_dev
vendor	include/dev/vesa.h	/^    uint32_t vendor;        \/\/ segment:offset to card vendor string$/;"	m	struct:vesa_adapter_info
vendor_id	include/dev/pci.h	/^    uint16_t vendor_id;$/;"	m	struct:pci_cfg_space
vendor_typed	include/acpi/acrestyp.h	/^	struct acpi_resource_vendor_typed vendor_typed;$/;"	m	union:acpi_resource_data	typeref:struct:acpi_resource_data::acpi_resource_vendor_typed
verbose	src/legion_runtime/legion_spy.h	/^      const bool verbose;$/;"	m	class:LegionRuntime::HighLevel::TreeStateLogger
verbose_logging	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::verbose_logging = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
verbose_logging	src/legion_runtime/runtime.h	/^      static bool verbose_logging;$/;"	m	class:LegionRuntime::HighLevel::Runtime
verified	src/legion_runtime/legion.h	/^      bool          verified;$/;"	m	struct:LegionRuntime::HighLevel::IndexSpaceRequirement
verified	src/legion_runtime/legion.h	/^      bool         verified;$/;"	m	struct:LegionRuntime::HighLevel::FieldSpaceRequirement
verify_access	src/legion_runtime/lowlevel.cc	/^    void AccessorType::verify_access(void *impl_ptr, unsigned ptr)$/;"	f	class:LegionRuntime::Accessor::AccessorType
verify_access	src/legion_runtime/lowlevel.cc	/^    void RegionInstance::Impl::verify_access(unsigned ptr)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
verify_access	src/legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::verify_access(unsigned ptr)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
verify_dependence	src/legion_runtime/legion_ops.cc	/^    void MustEpochOp::verify_dependence(Operation *src_op, GenerationID src_gen,$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
verify_disjointness	src/legion_runtime/runtime.cc	/^    \/*static*\/ bool Runtime::verify_disjointness = false;$/;"	m	class:LegionRuntime::HighLevel::Runtime	file:
verify_disjointness	src/legion_runtime/runtime.h	/^      static bool verify_disjointness;$/;"	m	class:LegionRuntime::HighLevel::Runtime
verify_regions	src/legion_runtime/legion_ops.h	/^      std::map<Operation*,std::set<unsigned> > verify_regions;$/;"	m	class:LegionRuntime::HighLevel::Operation
verify_requirement	src/legion_runtime/runtime.cc	/^    LegionErrorType Runtime::verify_requirement($/;"	f	class:LegionRuntime::HighLevel::Runtime
version	include/acpi/actbl.h	/^	uint8_t version;		\/* Version of this table (ACPI 2.0+) *\/$/;"	m	struct:acpi_table_facs
version	include/acpi/actbl2.h	/^	uint32_t version;$/;"	m	struct:acpi_slic_marker
version	include/acpi/actbl2.h	/^	uint8_t version;$/;"	m	struct:acpi_ibft_header
version	include/acpi/actbl2.h	/^	uint8_t version;$/;"	m	struct:acpi_slic_key
version	include/dev/apic.h	/^    uint8_t  version;$/;"	m	struct:apic_dev
version	include/dev/ioapic.h	/^    uint8_t version;$/;"	m	struct:ioapic
version	include/dev/vesa.h	/^    uint16_t version;       \/\/ VBE version; high byte is major version, low byte is minor version$/;"	m	struct:vesa_adapter_info
version	include/lua/lstate.h	/^  const lua_Number *version;  \/* pointer to version number *\/$/;"	m	struct:global_State
version	include/nautilus/acpi.h	/^    uint8_t  version;$/;"	m	struct:mp_float_ptr_struct
version	include/nautilus/acpi.h	/^    uint8_t  version;$/;"	m	struct:mp_table_entry_ioapic
version	include/nautilus/multiboot2.h	/^  multiboot_uint16_t version;$/;"	m	struct:multiboot_tag_apm
vesa_adapter_info	include/dev/vesa.h	/^struct vesa_adapter_info {$/;"	s
vesa_deinit	src/dev/vesa.c	/^void vesa_deinit()$/;"	f
vesa_draw_pixel	src/dev/vesa.c	/^inline void vesa_draw_pixel(uint32_t x, uint32_t y, uint8_t r, uint8_t g, uint8_t b)$/;"	f
vesa_find_matching_mode	src/dev/vesa.c	/^int vesa_find_matching_mode(struct vesa_mode_request *r, vesa_mode_t *mode)$/;"	f
vesa_get_adapter_info	src/dev/vesa.c	/^int vesa_get_adapter_info(struct vesa_adapter_info *info)$/;"	f
vesa_get_cur_mode	src/dev/vesa.c	/^int vesa_get_cur_mode(vesa_mode_t *mode)$/;"	f
vesa_get_mode_info	src/dev/vesa.c	/^int vesa_get_mode_info(vesa_mode_t mode, struct vesa_mode_info *info)$/;"	f
vesa_init	src/dev/vesa.c	/^int vesa_init()$/;"	f
vesa_mode_info	include/dev/vesa.h	/^struct vesa_mode_info {$/;"	s
vesa_mode_request	include/dev/vesa.h	/^struct vesa_mode_request {$/;"	s
vesa_mode_t	include/dev/vesa.h	/^typedef uint16_t vesa_mode_t;$/;"	t
vesa_set_cur_mode	src/dev/vesa.c	/^int vesa_set_cur_mode(vesa_mode_t mode)$/;"	f
vesa_test	src/dev/vesa.c	/^void vesa_test()$/;"	f
vfprintf	src/nautilus/libccompat.c	/^vfprintf (FILE * stream, const char * format, va_list arg)$/;"	f
vfprintk	src/nautilus/fprintk.c	/^vfprintk (nk_fs_fd_t fd, const char * fmt, va_list args)$/;"	f
vga_attr	src/dev/vga.c	/^static uint8_t vga_attr;$/;"	v	file:
vga_clear_screen	include/dev/vga.h	/^static inline void vga_clear_screen(uint16_t val)$/;"	f
vga_color	include/dev/vga.h	/^enum vga_color$/;"	g
vga_copy_in	include/dev/vga.h	/^static inline void vga_copy_in(void *src, uint32_t n)$/;"	f
vga_copy_out	include/dev/vga.h	/^static inline void vga_copy_out(void *dest, uint32_t n)$/;"	f
vga_get_cursor	src/dev/vga.c	/^inline void vga_get_cursor(uint8_t *x, uint8_t *y)$/;"	f
vga_init	src/dev/vga.c	/^void vga_init()$/;"	f
vga_init_screen	src/dev/vga.c	/^void vga_init_screen()$/;"	f
vga_make_color	src/dev/vga.c	/^vga_make_color (enum vga_color fg, enum vga_color bg) $/;"	f
vga_make_entry	src/dev/vga.c	/^vga_make_entry (char c, uint8_t color)$/;"	f
vga_print	src/dev/vga.c	/^void vga_print(char *buf)$/;"	f
vga_putchar	src/dev/vga.c	/^void vga_putchar(char c)$/;"	f
vga_puts	src/dev/vga.c	/^void vga_puts(char *buf)$/;"	f
vga_scrollup	src/dev/vga.c	/^void vga_scrollup (void) $/;"	f
vga_set_cursor	src/dev/vga.c	/^inline void vga_set_cursor(uint8_t x, uint8_t y)$/;"	f
vga_write_screen	include/dev/vga.h	/^static inline void vga_write_screen(uint8_t x, uint8_t y, uint16_t val)$/;"	f
vga_x	src/dev/vga.c	/^static uint8_t vga_x, vga_y;$/;"	v	file:
vga_y	src/dev/vga.c	/^static uint8_t vga_x, vga_y;$/;"	v	file:
vid	src/legion_runtime/legion.h	/^        VariantID vid;$/;"	m	class:LegionRuntime::HighLevel::TaskVariantCollection::Variant
vid	src/legion_runtime/legion_logging.h	/^        VariantID vid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskInstanceVariant
vid	src/legion_runtime/legion_logging.h	/^        VariantID vid;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgTaskVariant
video_memory	include/dev/vesa.h	/^    uint16_t video_memory;  \/\/ amount of video memory in 64KB blocks$/;"	m	struct:vesa_adapter_info
video_modes	include/dev/vesa.h	/^    uint32_t video_modes;   \/\/ segment:offset pointer to list of supported video modes$/;"	m	struct:vesa_adapter_info
view	src/legion_runtime/region_tree.h	/^      LogicalView *view;$/;"	m	class:LegionRuntime::HighLevel::MappingRef
view	src/legion_runtime/region_tree.h	/^      LogicalView *view;$/;"	m	class:LegionRuntime::HighLevel::ViewHandle
view	src/legion_runtime/runtime.h	/^        LogicalView *view;$/;"	m	struct:LegionRuntime::HighLevel::GarbageCollectionEpoch::GarbageCollectionArgs
viewList	scripts/kconfig/qconf.cc	/^ConfigView* ConfigView::viewList;$/;"	m	class:ConfigView	file:
viewList	scripts/kconfig/qconf.h	/^	static ConfigView* viewList;$/;"	m	class:ConfigView
view_lock	src/legion_runtime/region_tree.h	/^      Reservation view_lock;$/;"	m	class:LegionRuntime::HighLevel::LogicalView
view_mode	scripts/kconfig/gconf.c	/^static gint view_mode = FULL_VIEW;$/;"	v	file:
views	src/legion_runtime/region_tree.h	/^                     LOGICAL_VIEW_ALLOC>::map views;$/;"	m	class:LegionRuntime::HighLevel::RegionTreeForest
virt_start	include/nautilus/sfi.h	/^    uint64_t virt_start;$/;"	m	struct:efi_mem_desc
virtio_node	include/dev/virtio_pci.h	/^  struct list_head virtio_node;$/;"	m	struct:virtio_pci_dev	typeref:struct:virtio_pci_dev::list_head
virtio_pci_deinit	src/dev/virtio_pci.c	/^int virtio_pci_deinit()$/;"	f
virtio_pci_dev	include/dev/virtio_pci.h	/^struct virtio_pci_dev {$/;"	s
virtio_pci_dev_type	include/dev/virtio_pci.h	/^enum virtio_pci_dev_type { VIRTIO_PCI_NET, VIRTIO_PCI_BLOCK, VIRTIO_PCI_OTHER };$/;"	g
virtio_pci_init	src/dev/virtio_pci.c	/^int virtio_pci_init(struct naut_info * naut)$/;"	f
virtio_pci_vring	include/dev/virtio_pci.h	/^struct virtio_pci_vring {$/;"	s
virtual_map	src/legion_runtime/legion.h	/^      bool virtual_map;$/;"	m	struct:LegionRuntime::HighLevel::RegionRequirement
virtual_mapped	src/legion_runtime/legion_tasks.h	/^      std::vector<bool> virtual_mapped;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
visible	scripts/kconfig/expr.h	/^	struct expr_value visible;$/;"	m	struct:property	typeref:struct:property::expr_value
visible	scripts/kconfig/expr.h	/^	tristate visible;$/;"	m	struct:symbol
visible	scripts/kconfig/qconf.h	/^	bool visible;$/;"	m	class:ConfigItem
visible_memories_from_memory	src/legion_runtime/lowlevel.h	/^      std::map<Memory,std::set<Memory> > visible_memories_from_memory;$/;"	m	class:LegionRuntime::LowLevel::Machine
visible_memories_from_procs	src/legion_runtime/lowlevel.h	/^      std::map<Processor,std::set<Memory> > visible_memories_from_procs;$/;"	m	class:LegionRuntime::LowLevel::Machine
visible_procs_from_memory	src/legion_runtime/lowlevel.h	/^      std::map<Memory,std::set<Processor> > visible_procs_from_memory;$/;"	m	class:LegionRuntime::LowLevel::Machine
visit_node	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::visit_node(NodeTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
visit_node	src/legion_runtime/region_tree.cc	/^    bool PartitionNode::visit_node(PathTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
visit_node	src/legion_runtime/region_tree.cc	/^    bool RegionNode::visit_node(NodeTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
visit_node	src/legion_runtime/region_tree.cc	/^    bool RegionNode::visit_node(PathTraverser *traverser)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool LogicalInitializer::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool LogicalInvalidator::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool LogicalRegistrar<DOMINATE>::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool PhysicalInitializer::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool PhysicalInvalidator::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool ReductionCloser::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool StateReturner::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::StateReturner
visit_only_valid	src/legion_runtime/region_tree.cc	/^    bool StateSender::visit_only_valid(void) const$/;"	f	class:LegionRuntime::HighLevel::StateSender
visit_partition	src/legion_runtime/region_tree.cc	/^    bool LogicalInitializer::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
visit_partition	src/legion_runtime/region_tree.cc	/^    bool LogicalInvalidator::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
visit_partition	src/legion_runtime/region_tree.cc	/^    bool LogicalPathRegistrar::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
visit_partition	src/legion_runtime/region_tree.cc	/^    bool LogicalRegistrar<DOMINATE>::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
visit_partition	src/legion_runtime/region_tree.cc	/^    bool MappingTraverser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
visit_partition	src/legion_runtime/region_tree.cc	/^    bool PathReturner::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
visit_partition	src/legion_runtime/region_tree.cc	/^    bool PhysicalInitializer::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
visit_partition	src/legion_runtime/region_tree.cc	/^    bool PhysicalInvalidator::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
visit_partition	src/legion_runtime/region_tree.cc	/^    bool PremapTraverser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
visit_partition	src/legion_runtime/region_tree.cc	/^    bool ReductionCloser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
visit_partition	src/legion_runtime/region_tree.cc	/^    bool RestrictedTraverser::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
visit_partition	src/legion_runtime/region_tree.cc	/^    bool StateReturner::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
visit_partition	src/legion_runtime/region_tree.cc	/^    bool StateSender::visit_partition(PartitionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateSender
visit_region	src/legion_runtime/region_tree.cc	/^    bool LogicalInitializer::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
visit_region	src/legion_runtime/region_tree.cc	/^    bool LogicalInvalidator::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
visit_region	src/legion_runtime/region_tree.cc	/^    bool LogicalPathRegistrar::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
visit_region	src/legion_runtime/region_tree.cc	/^    bool LogicalRegistrar<DOMINATE>::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
visit_region	src/legion_runtime/region_tree.cc	/^    bool MappingTraverser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
visit_region	src/legion_runtime/region_tree.cc	/^    bool PathReturner::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
visit_region	src/legion_runtime/region_tree.cc	/^    bool PhysicalInitializer::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
visit_region	src/legion_runtime/region_tree.cc	/^    bool PhysicalInvalidator::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
visit_region	src/legion_runtime/region_tree.cc	/^    bool PremapTraverser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
visit_region	src/legion_runtime/region_tree.cc	/^    bool ReductionCloser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
visit_region	src/legion_runtime/region_tree.cc	/^    bool RestrictedTraverser::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
visit_region	src/legion_runtime/region_tree.cc	/^    bool StateReturner::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
visit_region	src/legion_runtime/region_tree.cc	/^    bool StateSender::visit_region(RegionNode *node)$/;"	f	class:LegionRuntime::HighLevel::StateSender
vkisinreg	include/lua/lparser.h	38;"	d
vkisvar	include/lua/lparser.h	37;"	d
vlan	include/acpi/actbl2.h	/^	uint16_t vlan;$/;"	m	struct:acpi_ibft_nic
vmcase	src/lua_src/lvm.c	536;"	d	file:
vmcasenb	src/lua_src/lvm.c	537;"	d	file:
vmdispatch	src/lua_src/lvm.c	535;"	d	file:
vme	include/nautilus/cpuid.h	/^            uint8_t vme         : 1; \/\/ virtual-mode enhancements$/;"	m	struct:cpuid_amd_edx_flags::__anon42::__anon43
vme	include/nautilus/cpuid.h	/^            uint8_t vme      : 1; \/\/ virtual 8086 mode enhancements$/;"	m	struct:cpuid_edx_flags::__anon38::__anon39
vmx	include/nautilus/cpuid.h	/^            uint8_t vmx      : 1; \/\/ Virtual machine extensions$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
voidPix	scripts/kconfig/qconf.h	/^	QPixmap menuPix, menuInvPix, menuBackPix, voidPix;$/;"	m	class:ConfigList
volume	src/legion_runtime/arrays.h	/^      int volume(void) const$/;"	f	class:LegionRuntime::Arrays::Rect
volume	src/legion_runtime/region_tree.h	/^      const size_t volume;$/;"	m	class:LegionRuntime::HighLevel::LayoutDescription
vpaned	scripts/kconfig/gconf.c	/^GtkWidget *vpaned = NULL;$/;"	v
vprintk	src/nautilus/printk.c	/^vprintk (const char * fmt, va_list args)$/;"	f
vring	include/dev/virtio_pci.h	/^  struct virtio_pci_dev_vring *vring[2];$/;"	m	struct:virtio_pci_dev	typeref:struct:virtio_pci_dev::virtio_pci_dev_vring
vscnprintf	src/nautilus/printk.c	/^int vscnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
vsnprintf	src/nautilus/printk.c	/^int vsnprintf(char *buf, size_t size, const char *fmt, va_list args)$/;"	f
vsprintf	src/nautilus/printk.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	f
vsscanf	src/nautilus/printk.c	/^int vsscanf(const char * buf, const char * fmt, va_list args)$/;"	f
vt	include/lua/lparser.h	/^      lu_byte vt;  \/* whether 't' is register (VLOCAL) or upvalue (VUPVAL) *\/$/;"	m	struct:expdesc::__anon16::__anon17
w_char	include/dev/vesa.h	/^    uint8_t w_char;            \/\/ unused...$/;"	m	struct:vesa_mode_info
wait	src/acpi/osl.c	/^	int wait;$/;"	m	struct:acpi_os_dpc	file:
wait	src/legion_runtime/activemsg.h	/^  void wait(void)$/;"	f	struct:HandlerReplyFuture
wait	src/legion_runtime/legion.cc	/^    void PhaseBarrier::wait(void)$/;"	f	class:LegionRuntime::HighLevel::PhaseBarrier
wait	src/legion_runtime/lowlevel.cc	/^    void Event::wait(bool block) const$/;"	f	class:LegionRuntime::LowLevel::Event
wait	src/legion_runtime/shared_lowlevel.cc	/^		Event wait;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc	file:
wait	src/legion_runtime/shared_lowlevel.cc	/^    void Event::wait(bool block) const$/;"	f	class:LegionRuntime::LowLevel::Event
wait	src/legion_runtime/shared_lowlevel.cc	/^    void EventImpl::wait(EventGeneration needed_gen, bool block)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
wait_all_results	src/legion_runtime/legion.cc	/^    void FutureMap::wait_all_results(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
wait_all_results	src/legion_runtime/runtime.cc	/^    void FutureMap::Impl::wait_all_results(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>           wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Task
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::IndexLauncher
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>          wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::TaskLauncher
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Acquire
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Copy
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>         wait_barriers;$/;"	m	class:LegionRuntime::HighLevel::Release
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::AcquireLauncher
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::CopyLauncher
wait_barriers	src/legion_runtime/legion.h	/^      std::vector<PhaseBarrier>       wait_barriers;$/;"	m	struct:LegionRuntime::HighLevel::ReleaseLauncher
wait_cond	src/legion_runtime/shared_lowlevel.cc	/^    nk_condvar_t *wait_cond;$/;"	m	class:LegionRuntime::LowLevel::EventImpl	file:
wait_cond	src/legion_runtime/shared_lowlevel.cc	/^    nk_condvar_t *wait_cond;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
wait_for_cons_update	xeon_phi/linux_usr/phi_console.c	/^wait_for_cons_update (void)$/;"	f	file:
wait_for_doorbell	xeon_phi/linux_usr/phi_console.c	/^wait_for_doorbell (void * base,$/;"	f	file:
wait_for_shutdown	src/legion_runtime/legion.cc	/^    \/*static*\/ void HighLevelRuntime::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::HighLevelRuntime
wait_for_shutdown	src/legion_runtime/lowlevel.cc	/^    void Machine::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
wait_for_shutdown	src/legion_runtime/lowlevel.cc	/^    void UtilityProcessor::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
wait_for_shutdown	src/legion_runtime/runtime.cc	/^    \/*static*\/ void Runtime::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
wait_for_shutdown	src/legion_runtime/shared_lowlevel.cc	/^    void Machine::wait_for_shutdown(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
wait_node	include/nautilus/thread.h	/^    nk_queue_entry_t wait_node;$/;"	m	struct:nk_thread
wait_on	src/legion_runtime/legion_logging.h	/^        Event wait_on;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgInlineWait
wait_on	src/legion_runtime/legion_logging.h	/^        UniqueID wait_on;$/;"	m	struct:LegionRuntime::HighLevel::LegionLogging::LogMsgFutureWait
wait_on	src/legion_runtime/lowlevel.cc	/^        Event wait_on;$/;"	m	struct:LegionRuntime::LowLevel::BarrierAdjustMessage::RequestArgs	file:
wait_on	src/legion_runtime/region_tree.h	/^      std::set<Event> &wait_on;$/;"	m	class:LegionRuntime::HighLevel::PhysicalCopyAnalyzer
wait_on	src/legion_runtime/region_tree.h	/^      std::set<Event> &wait_on;$/;"	m	class:LegionRuntime::HighLevel::PhysicalDepAnalyzer
wait_queue	include/nautilus/condvar.h	/^    nk_thread_queue_t * wait_queue;$/;"	m	struct:nk_condvar
wait_until_valid	src/legion_runtime/legion.cc	/^    void PhysicalRegion::wait_until_valid(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
wait_until_valid	src/legion_runtime/runtime.cc	/^    void PhysicalRegion::Impl::wait_until_valid(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
wait_xcall	src/nautilus/smp.c	/^wait_xcall (struct nk_xcall * x)$/;"	f	file:
waiter	src/legion_runtime/lowlevel_dma.cc	/^      Waiter waiter; \/\/ if we need to wait on events$/;"	m	class:LegionRuntime::LowLevel::CopyRequest	file:
waiter	src/legion_runtime/lowlevel_dma.cc	/^      Waiter waiter; \/\/ if we need to wait on events$/;"	m	class:LegionRuntime::LowLevel::ReduceRequest	file:
waiters	src/legion_runtime/legion_ops.h	/^      std::map<PredicateWaiter*,GenerationID> waiters;$/;"	m	class:LegionRuntime::HighLevel::Predicate::Impl
waiters	src/legion_runtime/shared_lowlevel.cc	/^	bool waiters;$/;"	m	class:LegionRuntime::LowLevel::ReservationImpl	file:
waiting_queue	src/legion_runtime/shared_lowlevel.cc	/^	std::list<TaskDesc*> waiting_queue;$/;"	m	class:LegionRuntime::LowLevel::ProcessorImpl	file:
waiting_threads	src/nautilus/vc.c	/^  nk_thread_queue_t *waiting_threads;$/;"	m	struct:nk_virtual_console	file:
waitq	include/nautilus/thread.h	/^    nk_thread_queue_t * waitq;$/;"	m	struct:nk_thread
waitq	src/nautilus/timer.c	/^    nk_thread_queue_t *waitq;   \/\/ used for non-spin waits$/;"	m	struct:nk_timer	file:
wake_vec_addr	include/nautilus/sfi.h	/^    uint64_t wake_vec_addr;$/;"	m	struct:sfi_wake_vec_tbl
wakeup_seq	include/nautilus/condvar.h	/^    unsigned long long wakeup_seq;$/;"	m	struct:nk_condvar
walk_state	src/acpi/acpica/aclocal.h	/^	struct acpi_walk_state *walk_state;$/;"	m	struct:acpi_pkg_state	typeref:struct:acpi_pkg_state::acpi_walk_state
walk_state_list	src/acpi/acpica/aclocal.h	/^	struct acpi_walk_state *walk_state_list;	\/* Head of list of walk_states for this thread *\/$/;"	m	struct:acpi_thread_state	typeref:struct:acpi_thread_state::acpi_walk_state
war_enabled	src/legion_runtime/default_mapper.h	/^      bool war_enabled;$/;"	m	class:LegionRuntime::HighLevel::DefaultMapper
warn_slowpath	src/nautilus/printk.c	/^warn_slowpath (const char * file, int line, const char * fmt, ...)$/;"	f
warning	src/legion_runtime/utilities.h	/^      inline void warning(const char *fmt, ...) __attribute__((format (printf, 2, 3)))$/;"	f	class:LegionRuntime::Logger::Category
warning_level	include/acpi/actbl1.h	/^	uint32_t warning_level;$/;"	m	struct:acpi_table_sbst
waxpby	src/test/hpcg/comp-waxpby.h	/^waxpby(double alpha,$/;"	f	namespace:lgncg
waxpbyTask	src/test/hpcg/comp-waxpby.h	/^waxpbyTask(const LegionRuntime::HighLevel::Task *task,$/;"	f	namespace:lgncg
waxpbyTaskArgs	src/test/hpcg/comp-waxpby.h	/^    waxpbyTaskArgs(double alpha,$/;"	f	struct:__anon116::waxpbyTaskArgs
waxpbyTaskArgs	src/test/hpcg/comp-waxpby.h	/^struct waxpbyTaskArgs {$/;"	s	namespace:__anon116
wbinvd	include/nautilus/cpu.h	/^wbinvd (void) $/;"	f
wbkgdset	scripts/kconfig/lxdialog/dialog.h	43;"	d
wbkgdset	scripts/kconfig/lxdialog/dialog.h	44;"	d
wdt	include/nautilus/cpuid.h	/^            uint8_t wdt         : 1; \/\/ watch dog timer support$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
weak	include/lua/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State
what	include/lua/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug
whea_header	include/acpi/actbl1.h	/^	struct acpi_whea_header whea_header;	\/* Common header for WHEA tables *\/$/;"	m	struct:acpi_einj_entry	typeref:struct:acpi_einj_entry::acpi_whea_header
whea_header	include/acpi/actbl1.h	/^	struct acpi_whea_header whea_header;	\/* Common header for WHEA tables *\/$/;"	m	struct:acpi_erst_entry	typeref:struct:acpi_erst_entry::acpi_whea_header
whilestat	src/lua_src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	src/lua_src/lgc.c	62;"	d	file:
wide_timer	include/dev/hpet.h	/^    uint8_t wide_timer; \/* main counter can operate in 64b mode *\/$/;"	m	struct:hpet_dev
width	include/acpi/actbl2.h	/^	uint8_t width;		\/* Host Address Width *\/$/;"	m	struct:acpi_table_dmar
width	include/dev/vesa.h	/^    uint16_t width;            \/\/ width in pixels$/;"	m	struct:vesa_mode_info
width	include/dev/vesa.h	/^    uint16_t width;$/;"	m	struct:vesa_mode_request
width	include/nautilus/multiboot2.h	/^  multiboot_uint32_t width;$/;"	m	struct:multiboot_header_tag_framebuffer
width	include/nautilus/multiboot2.h	/^  multiboot_uint32_t width;$/;"	m	struct:multiboot_header_tag_module_align
win	xeon_phi/linux_usr/phi_console.c	/^    WINDOW * win;$/;"	m	struct:__anon79	file:
win_func_ptr	include/dev/vesa.h	/^    uint32_t win_func_ptr;       \/\/ deprecated; used to switch banks from protected mode without returning to real mode$/;"	m	struct:vesa_mode_info
win_ptr	xeon_phi/linux_usr/phi_console.c	/^    struct line_elm * win_ptr; $/;"	m	struct:__anon79	typeref:struct:__anon79::line_elm	file:
winch_handler	scripts/kconfig/mconf.c	/^static void winch_handler(int sig)$/;"	f	file:
window_a	include/dev/vesa.h	/^    uint8_t window_a;	       \/\/ deprecated$/;"	m	struct:vesa_mode_info
window_b	include/dev/vesa.h	/^    uint8_t window_b;          \/\/ deprecated$/;"	m	struct:vesa_mode_info
window_size	include/dev/vesa.h	/^    uint16_t window_size;$/;"	m	struct:vesa_mode_info
window_wait	src/legion_runtime/legion_tasks.h	/^      UserEvent window_wait;$/;"	m	class:LegionRuntime::HighLevel::SingleTask
windows_flag	include/acpi/actbl2.h	/^	char windows_flag[8];$/;"	m	struct:acpi_slic_marker
woken_seq	include/nautilus/condvar.h	/^    unsigned long long woken_seq;$/;"	m	struct:nk_condvar
worker_condvar	src/legion_runtime/lowlevel_gpu.cc	/^      gasnett_cond_t parent_condvar, worker_condvar;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
worker_enabled	src/legion_runtime/lowlevel_gpu.cc	/^      bool worker_enabled;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
worker_threads	src/legion_runtime/lowlevel_dma.cc	/^    static pthread_t *worker_threads = 0;$/;"	m	namespace:LegionRuntime::LowLevel	file:
wptr	src/legion_runtime/lowlevel.cc	/^      unsigned wptr, rptr, size;$/;"	m	class:LegionRuntime::LowLevel::AMQueue	file:
wr	include/nautilus/paging.h	/^            uint8_t wr      : 1;$/;"	m	struct:nk_pf_error::__anon56::__anon57
write	include/nautilus/chardev.h	/^    int (*write)(void *state, uint8_t *src);$/;"	m	struct:nk_char_dev_int
write	src/legion_runtime/accessor.h	/^	  inline void write(PTRTYPE ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::Generic::Typed
write	src/legion_runtime/accessor.h	/^	  inline void write(ptr_t ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::AOS::Typed
write	src/legion_runtime/accessor.h	/^	  inline void write(ptr_t ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::HybridSOA::Typed
write	src/legion_runtime/accessor.h	/^	  inline void write(ptr_t ptr, const T& newval) const $/;"	f	struct:LegionRuntime::Accessor::AccessorType::SOA::Typed
write	src/legion_runtime/lowlevel.h	/^      __device__ void write(ptr_t ptr, const ET& newval) const { ria.write(ptr, newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
write	src/legion_runtime/lowlevel.h	/^      void write(ptr_t ptr, const ET& newval) const { ria.write(ptr, newval); }$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
write	src/legion_runtime/lowlevel.h	/^      void write(ptr_t ptr, const T& newval) const $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
write	src/legion_runtime/lowlevel.h	/^      void write(ptr_t ptr, const T& newval) const { $/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessorUntyped
write	src/legion_runtime/shared_lowlevel.cc	/^    void RegionInstance::Impl::write(unsigned ptr, const void* newval)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
writeSizes	scripts/kconfig/qconf.cc	/^bool ConfigSettings::writeSizes(const QString& key, const QValueList<int>& value)$/;"	f	class:ConfigSettings
write_block	src/fs/ext2/ext2_access.c	134;"	d	file:
write_block_group	src/fs/ext2/ext2_access.c	188;"	d	file:
write_blocks	src/dev/ata.c	/^static int write_blocks(void *state, uint64_t blocknum, uint64_t count, uint8_t *src)$/;"	f	file:
write_blocks	src/dev/ramdisk.c	/^static int write_blocks(void *state, uint64_t blocknum, uint64_t count, uint8_t *src)$/;"	f	file:
write_blocks_async	include/nautilus/blkdev.h	/^    int (*write_blocks_async)(void *state, uint64_t blocknum, uint64_t count, uint8_t *src);$/;"	m	struct:nk_block_dev_int
write_blocks_sync	include/nautilus/blkdev.h	/^    int (*write_blocks_sync)(void *state, uint64_t blocknum, uint64_t count, uint8_t *src);$/;"	m	struct:nk_block_dev_int
write_cr0	include/nautilus/cpu.h	/^write_cr0 (ulong_t data)$/;"	f
write_cr2	include/nautilus/cpu.h	/^write_cr2 (ulong_t data)$/;"	f
write_cr3	include/nautilus/cpu.h	/^write_cr3 (ulong_t data)$/;"	f
write_cr4	include/nautilus/cpu.h	/^write_cr4 (ulong_t data)$/;"	f
write_cr8	include/nautilus/cpu.h	/^write_cr8 (ulong_t data)$/;"	f
write_file	include/nautilus/fs.h	/^    ssize_t  (*write_file)(void *state, void *file, void *src, off_t offset, size_t n);$/;"	m	struct:nk_fs_int
write_gate_desc	include/nautilus/idt.h	/^write_gate_desc (struct   gate_desc64 * idt,$/;"	f
write_inode	src/fs/ext2/ext2_access.c	238;"	d	file:
write_partial	src/legion_runtime/lowlevel.h	/^      void write_partial(ptr_t ptr, off_t offset, const void *src, size_t size) const$/;"	f	class:LegionRuntime::LowLevel::RegionInstanceAccessor
write_pmc_ctl	src/nautilus/pmc.c	/^write_pmc_ctl (uint8_t idx, uint64_t val)$/;"	f	file:
write_pmc_ctr	src/nautilus/pmc.c	/^write_pmc_ctr (uint8_t idx, uint64_t val)$/;"	f	file:
write_protect	include/acpi/acrestyp.h	/^	uint8_t write_protect;$/;"	m	struct:acpi_memory_attribute
write_protect	include/acpi/acrestyp.h	/^	uint8_t write_protect;$/;"	m	struct:acpi_resource_fixed_memory32
write_protect	include/acpi/acrestyp.h	/^	uint8_t write_protect;$/;"	m	struct:acpi_resource_memory24
write_protect	include/acpi/acrestyp.h	/^	uint8_t write_protect;$/;"	m	struct:acpi_resource_memory32
write_src	scripts/kallsyms.c	/^static void write_src(void)$/;"	f	file:
write_superblock	src/fs/ext2/ext2_access.c	93;"	d	file:
write_untyped	src/legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(const DomainPoint& dp, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
write_untyped	src/legion_runtime/lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(ptr_t ptr, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
write_untyped	src/legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(const DomainPoint& dp, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
write_untyped	src/legion_runtime/shared_lowlevel.cc	/^    void AccessorType::Generic::Untyped::write_untyped(ptr_t ptr, const void *src, size_t bytes, off_t offset) const$/;"	f	class:LegionRuntime::Accessor::AccessorType::Generic::Untyped
writer	src/lua_src/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon140	file:
writer	src/lua_src/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
writer	src/nautilus/rwlock.c	/^writer (void * in, void ** out)$/;"	f	file:
writer_mutex	src/acpi/acpica/aclocal.h	/^	acpi_mutex writer_mutex;$/;"	m	struct:acpi_rw_lock
x	src/legion_runtime/arrays.h	/^      int x[1];$/;"	m	class:LegionRuntime::Arrays::Point
x	src/legion_runtime/arrays.h	/^      int x[DIM];$/;"	m	class:LegionRuntime::Arrays::Point
x	src/test/hpcg/hpcg-problem.h	/^    lgncg::Vector x;$/;"	m	struct:Problem
x	xeon_phi/linux_usr/phi_console.c	/^    uint16_t x;$/;"	m	struct:__anon79	file:
x2apic	include/nautilus/cpuid.h	/^            uint8_t x2apic   : 1; \/\/ x2APIC$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
x_segments	src/legion_runtime/rectangle_set.h	/^      typename std::set<Segment<T>*> x_segments, y_segments;$/;"	m	class:LegionRuntime::HighLevel::RectangleSet
xc	src/test/hpcg/mg-data.h	/^    Vector xc;$/;"	m	struct:lgncg::MGData
xcall_done	include/nautilus/smp.h	/^    uint8_t xcall_done;$/;"	m	struct:nk_xcall
xcall_handler	src/nautilus/smp.c	/^xcall_handler (excp_entry_t * e, excp_vec_t v) $/;"	f	file:
xcall_node	include/nautilus/smp.h	/^    nk_queue_entry_t xcall_node;$/;"	m	struct:nk_xcall
xcall_nowait_info	include/nautilus/smp.h	/^    struct nk_xcall xcall_nowait_info;$/;"	m	struct:cpu	typeref:struct:cpu::nk_xcall
xcall_q	include/nautilus/smp.h	/^    nk_queue_t * xcall_q;$/;"	m	struct:cpu
xchg64	include/nautilus/atomic.h	/^xchg64 (void ** dst, void * newval)$/;"	f
xdsdt	src/arch/hrt/shutdown.c	/^    uint64_t  xdsdt;$/;"	m	struct:shutdown_info	file:
xdsdt	src/arch/x64/shutdown.c	/^    uint64_t  xdsdt;$/;"	m	struct:shutdown_info	file:
xfirmware_waking_vector	include/acpi/actbl.h	/^	uint64_t xfirmware_waking_vector;	\/* 64-bit version of the Firmware Waking Vector (ACPI 2.0+) *\/$/;"	m	struct:acpi_table_facs
xgpe0_block	include/acpi/actbl.h	/^	struct acpi_generic_address xgpe0_block;	\/* 64-bit Extended General Purpose Event 0 Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xgpe1_block	include/acpi/actbl.h	/^	struct acpi_generic_address xgpe1_block;	\/* 64-bit Extended General Purpose Event 1 Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xi	include/nautilus/random.h	/^    uint64_t xi; $/;"	m	struct:nk_rand_info
xm_handler	src/nautilus/fpu.c	/^xm_handler (excp_entry_t * excp, excp_vec_t vec)$/;"	f
xop	include/nautilus/cpuid.h	/^            uint8_t xop         : 1; \/\/ extended operation support$/;"	m	struct:cpuid_amd_ecx_flags::__anon40::__anon41
xpm1a_control_block	include/acpi/actbl.h	/^	struct acpi_generic_address xpm1a_control_block;	\/* 64-bit Extended Power Mgt 1a Control Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xpm1a_event_block	include/acpi/actbl.h	/^	struct acpi_generic_address xpm1a_event_block;	\/* 64-bit Extended Power Mgt 1a Event Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xpm1b_control_block	include/acpi/actbl.h	/^	struct acpi_generic_address xpm1b_control_block;	\/* 64-bit Extended Power Mgt 1b Control Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xpm1b_event_block	include/acpi/actbl.h	/^	struct acpi_generic_address xpm1b_event_block;	\/* 64-bit Extended Power Mgt 1b Event Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xpm2_control_block	include/acpi/actbl.h	/^	struct acpi_generic_address xpm2_control_block;	\/* 64-bit Extended Power Mgt 2 Control Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xpm_back	scripts/kconfig/images.c	/^static const char *xpm_back[] = {$/;"	v	file:
xpm_choice_no	scripts/kconfig/images.c	/^static const char *xpm_choice_no[] = {$/;"	v	file:
xpm_choice_yes	scripts/kconfig/images.c	/^static const char *xpm_choice_yes[] = {$/;"	v	file:
xpm_load	scripts/kconfig/images.c	/^static const char *xpm_load[] = {$/;"	v	file:
xpm_menu	scripts/kconfig/images.c	/^static const char *xpm_menu[] = {$/;"	v	file:
xpm_menu_inv	scripts/kconfig/images.c	/^static const char *xpm_menu_inv[] = {$/;"	v	file:
xpm_menuback	scripts/kconfig/images.c	/^static const char *xpm_menuback[] = {$/;"	v	file:
xpm_save	scripts/kconfig/images.c	/^static const char *xpm_save[] = {$/;"	v	file:
xpm_single_view	scripts/kconfig/images.c	/^static const char *xpm_single_view[] = {$/;"	v	file:
xpm_split_view	scripts/kconfig/images.c	/^static const char *xpm_split_view[] = {$/;"	v	file:
xpm_symbol_mod	scripts/kconfig/images.c	/^static const char *xpm_symbol_mod[] = {$/;"	v	file:
xpm_symbol_no	scripts/kconfig/images.c	/^static const char *xpm_symbol_no[] = {$/;"	v	file:
xpm_symbol_yes	scripts/kconfig/images.c	/^static const char *xpm_symbol_yes[] = {$/;"	v	file:
xpm_timer_block	include/acpi/actbl.h	/^	struct acpi_generic_address xpm_timer_block;	\/* 64-bit Extended Power Mgt Timer Ctrl Reg Blk address *\/$/;"	m	struct:acpi_table_fadt	typeref:struct:acpi_table_fadt::acpi_generic_address
xpm_tree_view	scripts/kconfig/images.c	/^static const char *xpm_tree_view[] = {$/;"	v	file:
xpm_void	scripts/kconfig/images.c	/^static const char *xpm_void[] = {$/;"	v	file:
xrupt_block	src/acpi/acpica/aclocal.h	/^	struct acpi_gpe_xrupt_info *xrupt_block;	\/* Backpointer to interrupt block *\/$/;"	m	struct:acpi_gpe_block_info	typeref:struct:acpi_gpe_block_info::acpi_gpe_xrupt_info
xsave	include/nautilus/cpuid.h	/^            uint8_t xsave    : 1; \/\/ XSAVE\/XRSTOR$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
xsdt_physical_address	include/acpi/actbl.h	/^	uint64_t xsdt_physical_address;	\/* 64-bit physical address of the XSDT (ACPI 2.0+) *\/$/;"	m	struct:acpi_table_rsdp
xtpr	include/nautilus/cpuid.h	/^            uint8_t xtpr     : 1; \/\/ xTPR update control$/;"	m	struct:cpuid_ecx_flags::__anon36::__anon37
xwSame	src/test/hpcg/comp-waxpby.h	/^    bool xwSame;$/;"	m	struct:__anon116::waxpbyTaskArgs
xySame	src/test/hpcg/comp-waxpby.h	/^    bool xySame;$/;"	m	struct:__anon116::waxpbyTaskArgs
y	xeon_phi/linux_usr/phi_console.c	/^    uint16_t y;$/;"	m	struct:__anon79	file:
y_char	include/dev/vesa.h	/^    uint8_t y_char;            \/\/ ...$/;"	m	struct:vesa_mode_info
y_segments	src/legion_runtime/rectangle_set.h	/^      typename std::set<Segment<T>*> x_segments, y_segments;$/;"	m	class:LegionRuntime::HighLevel::RectangleSet
yes	scripts/kconfig/expr.h	/^	no, mod, yes$/;"	e	enum:tristate
yes	src/legion_runtime/accessor.h	/^	typedef char yes[2];$/;"	t	struct:LegionRuntime::Accessor::TemplateFu::IsAStruct
yes	src/legion_runtime/legion.h	/^        typedef char yes[2];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::HasSerialize
yes	src/legion_runtime/legion.h	/^        typedef char yes[2];$/;"	t	struct:LegionRuntime::HighLevel::LegionSerialization::IsAStruct
yesColIdx	scripts/kconfig/qconf.h	/^	promptColIdx, nameColIdx, noColIdx, modColIdx, yesColIdx, dataColIdx, colNr$/;"	e	enum:colIdx
yindex	src/lua_src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
yy_accept	scripts/kconfig/lex.zconf.c	/^static yyconst flex_int16_t yy_accept[61] =$/;"	v	file:
yy_at_bol	scripts/kconfig/lex.zconf.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_bs_column	scripts/kconfig/lex.zconf.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	scripts/kconfig/lex.zconf.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	scripts/kconfig/lex.zconf.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	scripts/kconfig/lex.zconf.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	scripts/kconfig/lex.zconf.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	scripts/kconfig/lex.zconf.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	scripts/kconfig/lex.zconf.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	scripts/kconfig/lex.zconf.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	scripts/kconfig/lex.zconf.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	scripts/kconfig/lex.zconf.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	scripts/kconfig/lex.zconf.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_did_buffer_switch_on_eof	scripts/kconfig/lex.zconf.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	scripts/kconfig/lex.zconf.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	scripts/kconfig/lex.zconf.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	scripts/kconfig/lex.zconf.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_strlen	scripts/kconfig/lex.zconf.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	scripts/kconfig/lex.zconf.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_get_next_buffer	scripts/kconfig/lex.zconf.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	scripts/kconfig/lex.zconf.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	scripts/kconfig/lex.zconf.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	scripts/kconfig/lex.zconf.c	/^static int yy_init = 1;		\/* whether we need to initialize *\/$/;"	v	file:
yy_input_file	scripts/kconfig/lex.zconf.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	scripts/kconfig/lex.zconf.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	scripts/kconfig/lex.zconf.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	scripts/kconfig/lex.zconf.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	scripts/kconfig/lex.zconf.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	scripts/kconfig/lex.zconf.c	2197;"	d	file:
yy_new_buffer	scripts/kconfig/lex.zconf.c	300;"	d	file:
yy_nxt	scripts/kconfig/lex.zconf.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	scripts/kconfig/lex.zconf.c	/^static yyconst flex_int16_t yy_nxt[][17] =$/;"	v	file:
yy_reduce_print	scripts/kconfig/zconf.tab.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_set_bol	scripts/kconfig/lex.zconf.c	2196;"	d	file:
yy_set_bol	scripts/kconfig/lex.zconf.c	312;"	d	file:
yy_set_interactive	scripts/kconfig/lex.zconf.c	2198;"	d	file:
yy_set_interactive	scripts/kconfig/lex.zconf.c	302;"	d	file:
yy_size_t	scripts/kconfig/lex.zconf.c	/^typedef unsigned int yy_size_t;$/;"	t	file:
yy_stack_print	scripts/kconfig/zconf.tab.c	/^yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)$/;"	f	file:
yy_start	scripts/kconfig/lex.zconf.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	scripts/kconfig/lex.zconf.c	/^typedef int yy_state_type;$/;"	t	file:
yy_symbol_print	scripts/kconfig/zconf.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	scripts/kconfig/zconf.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	scripts/kconfig/lex.zconf.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	scripts/kconfig/lex.zconf.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	scripts/kconfig/lex.zconf.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	scripts/kconfig/zconf.tab.c	/^union yyalloc$/;"	u	file:
yychar	scripts/kconfig/zconf.tab.c	/^int yychar;$/;"	v
yychar	scripts/kconfig/zconf.tab.c	66;"	d	file:
yycheck	scripts/kconfig/zconf.tab.c	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yyclearin	scripts/kconfig/zconf.tab.c	802;"	d	file:
yyconst	scripts/kconfig/lex.zconf.c	96;"	d	file:
yyconst	scripts/kconfig/lex.zconf.c	98;"	d	file:
yydebug	scripts/kconfig/zconf.tab.c	/^int yydebug;$/;"	v
yydebug	scripts/kconfig/zconf.tab.c	67;"	d	file:
yydefact	scripts/kconfig/zconf.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	scripts/kconfig/zconf.tab.c	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	scripts/kconfig/zconf.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyerrok	scripts/kconfig/zconf.tab.c	801;"	d	file:
yyerror	scripts/kconfig/zconf.tab.c	64;"	d	file:
yyinput	scripts/kconfig/lex.zconf.c	/^    static int yyinput (void)$/;"	f	file:
yyless	scripts/kconfig/lex.zconf.c	153;"	d	file:
yyless	scripts/kconfig/lex.zconf.c	2033;"	d	file:
yyless	scripts/kconfig/lex.zconf.c	2034;"	d	file:
yylex	scripts/kconfig/zconf.tab.c	63;"	d	file:
yylval	scripts/kconfig/zconf.tab.c	/^YYSTYPE yylval;$/;"	v
yylval	scripts/kconfig/zconf.tab.c	65;"	d	file:
yymore	scripts/kconfig/lex.zconf.c	735;"	d	file:
yynerrs	scripts/kconfig/zconf.tab.c	/^int yynerrs;$/;"	v
yynerrs	scripts/kconfig/zconf.tab.c	68;"	d	file:
yypact	scripts/kconfig/zconf.tab.c	/^static const yytype_int16 yypact[] =$/;"	v	file:
yyparse	scripts/kconfig/zconf.tab.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yyparse	scripts/kconfig/zconf.tab.c	62;"	d	file:
yypgoto	scripts/kconfig/zconf.tab.c	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yyprhs	scripts/kconfig/zconf.tab.c	/^static const yytype_uint16 yyprhs[] =$/;"	v	file:
yyr1	scripts/kconfig/zconf.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	scripts/kconfig/zconf.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrhs	scripts/kconfig/zconf.tab.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	scripts/kconfig/zconf.tab.c	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyss	scripts/kconfig/zconf.tab.c	/^  yytype_int16 yyss;$/;"	m	union:yyalloc	file:
yystos	scripts/kconfig/zconf.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	scripts/kconfig/zconf.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	scripts/kconfig/zconf.tab.c	1097;"	d	file:
yystrlen	scripts/kconfig/zconf.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	scripts/kconfig/zconf.tab.c	1074;"	d	file:
yystype	scripts/kconfig/zconf.tab.c	223;"	d	file:
yysyntax_error	scripts/kconfig/zconf.tab.c	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:
yytable	scripts/kconfig/zconf.tab.c	/^static const yytype_int16 yytable[] =$/;"	v	file:
yyterminate	scripts/kconfig/lex.zconf.c	893;"	d	file:
yytext_ptr	scripts/kconfig/lex.zconf.c	2199;"	d	file:
yytext_ptr	scripts/kconfig/lex.zconf.c	340;"	d	file:
yytname	scripts/kconfig/zconf.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	scripts/kconfig/zconf.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	scripts/kconfig/zconf.tab.c	/^   enum yytokentype {$/;"	g	file:
yytoknum	scripts/kconfig/zconf.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	scripts/kconfig/zconf.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	scripts/kconfig/zconf.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	scripts/kconfig/zconf.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	scripts/kconfig/zconf.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	scripts/kconfig/zconf.tab.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	scripts/kconfig/zconf.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	scripts/kconfig/zconf.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	scripts/kconfig/zconf.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	scripts/kconfig/zconf.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	scripts/kconfig/zconf.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	scripts/kconfig/lex.zconf.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:
yyvs	scripts/kconfig/zconf.tab.c	/^  YYSTYPE yyvs;$/;"	m	union:yyalloc	file:
z	include/lua/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
z	src/lua_src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	src/test/hpcg/cg-data.h	/^    Vector z;$/;"	m	struct:lgncg::CGData
zcmem_cpu_base	src/legion_runtime/lowlevel_gpu.cc	/^      void *zcmem_cpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zcmem_gpu_base	src/legion_runtime/lowlevel_gpu.cc	/^      void *zcmem_gpu_base;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zcmem_reserve	src/legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_reserve, fbmem_reserve;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zcmem_size	src/legion_runtime/lowlevel_gpu.cc	/^      const size_t zcmem_size, fbmem_size;$/;"	m	class:LegionRuntime::LowLevel::GPUProcessor::Internal	file:
zconf_create_buffer	scripts/kconfig/lex.zconf.c	/^    YY_BUFFER_STATE zconf_create_buffer  (FILE * file, int  size )$/;"	f
zconf_curname	scripts/kconfig/lex.zconf.c	/^char *zconf_curname(void)$/;"	f
zconf_delete_buffer	scripts/kconfig/lex.zconf.c	/^    void zconf_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
zconf_endfile	scripts/kconfig/lex.zconf.c	/^static void zconf_endfile(void)$/;"	f	file:
zconf_endhelp	scripts/kconfig/lex.zconf.c	/^static void zconf_endhelp(void)$/;"	f	file:
zconf_endtoken	scripts/kconfig/zconf.tab.c	/^static bool zconf_endtoken(struct kconf_id *id, int starttoken, int endtoken)$/;"	f	file:
zconf_error	scripts/kconfig/zconf.tab.c	/^static void zconf_error(const char *err, ...)$/;"	f	file:
zconf_flex_debug	scripts/kconfig/lex.zconf.c	/^int zconf_flex_debug = 0;$/;"	v
zconf_flush_buffer	scripts/kconfig/lex.zconf.c	/^    void zconf_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
zconf_fopen	scripts/kconfig/lex.zconf.c	/^FILE *zconf_fopen(const char *name)$/;"	f
zconf_init_buffer	scripts/kconfig/lex.zconf.c	/^    static void zconf_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
zconf_initscan	scripts/kconfig/lex.zconf.c	/^void zconf_initscan(const char *name)$/;"	f
zconf_lineno	scripts/kconfig/lex.zconf.c	/^int zconf_lineno(void)$/;"	f
zconf_load_buffer_state	scripts/kconfig/lex.zconf.c	/^static void zconf_load_buffer_state  (void)$/;"	f	file:
zconf_nextfile	scripts/kconfig/lex.zconf.c	/^void zconf_nextfile(const char *name)$/;"	f
zconf_scan_buffer	scripts/kconfig/lex.zconf.c	/^YY_BUFFER_STATE zconf_scan_buffer  (char * base, yy_size_t  size )$/;"	f
zconf_scan_bytes	scripts/kconfig/lex.zconf.c	/^YY_BUFFER_STATE zconf_scan_bytes  (yyconst char * bytes, int  len )$/;"	f
zconf_scan_string	scripts/kconfig/lex.zconf.c	/^YY_BUFFER_STATE zconf_scan_string (yyconst char * yy_str )$/;"	f
zconf_starthelp	scripts/kconfig/lex.zconf.c	/^void zconf_starthelp(void)$/;"	f
zconf_switch_to_buffer	scripts/kconfig/lex.zconf.c	/^    void zconf_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
zconf_tokenname	scripts/kconfig/zconf.tab.c	/^const char *zconf_tokenname(int token)$/;"	f
zconfalloc	scripts/kconfig/lex.zconf.c	/^void *zconfalloc (yy_size_t  size )$/;"	f
zconfdump	scripts/kconfig/zconf.tab.c	/^void zconfdump(FILE *out)$/;"	f
zconfensure_buffer_stack	scripts/kconfig/lex.zconf.c	/^static void zconfensure_buffer_stack (void)$/;"	f	file:
zconferror	scripts/kconfig/zconf.tab.c	/^static void zconferror(const char *err)$/;"	f	file:
zconffree	scripts/kconfig/lex.zconf.c	/^void zconffree (void * ptr )$/;"	f
zconfget_debug	scripts/kconfig/lex.zconf.c	/^int zconfget_debug  (void)$/;"	f
zconfget_in	scripts/kconfig/lex.zconf.c	/^FILE *zconfget_in  (void)$/;"	f
zconfget_leng	scripts/kconfig/lex.zconf.c	/^int zconfget_leng  (void)$/;"	f
zconfget_lineno	scripts/kconfig/lex.zconf.c	/^int zconfget_lineno  (void)$/;"	f
zconfget_out	scripts/kconfig/lex.zconf.c	/^FILE *zconfget_out  (void)$/;"	f
zconfget_text	scripts/kconfig/lex.zconf.c	/^char *zconfget_text  (void)$/;"	f
zconfin	scripts/kconfig/lex.zconf.c	/^FILE *zconfin = (FILE *) 0, *zconfout = (FILE *) 0;$/;"	v
zconfleng	scripts/kconfig/lex.zconf.c	/^int zconfleng;$/;"	v
zconflex_destroy	scripts/kconfig/lex.zconf.c	/^int zconflex_destroy  (void)$/;"	f
zconflineno	scripts/kconfig/lex.zconf.c	/^int zconflineno = 1;$/;"	v
zconfout	scripts/kconfig/lex.zconf.c	/^FILE *zconfin = (FILE *) 0, *zconfout = (FILE *) 0;$/;"	v
zconfpop_buffer_state	scripts/kconfig/lex.zconf.c	/^void zconfpop_buffer_state (void)$/;"	f
zconfprint	scripts/kconfig/zconf.tab.c	/^static void zconfprint(const char *err, ...)$/;"	f	file:
zconfpush_buffer_state	scripts/kconfig/lex.zconf.c	/^void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
zconfrealloc	scripts/kconfig/lex.zconf.c	/^void *zconfrealloc  (void * ptr, yy_size_t  size )$/;"	f
zconfrestart	scripts/kconfig/lex.zconf.c	/^    void zconfrestart  (FILE * input_file )$/;"	f
zconfset_debug	scripts/kconfig/lex.zconf.c	/^void zconfset_debug (int  bdebug )$/;"	f
zconfset_in	scripts/kconfig/lex.zconf.c	/^void zconfset_in (FILE *  in_str )$/;"	f
zconfset_lineno	scripts/kconfig/lex.zconf.c	/^void zconfset_lineno (int  line_number )$/;"	f
zconfset_out	scripts/kconfig/lex.zconf.c	/^void zconfset_out (FILE *  out_str )$/;"	f
zconftext	scripts/kconfig/lex.zconf.c	/^char *zconftext;$/;"	v
zconfwrap	scripts/kconfig/lex.zconf.c	326;"	d	file:
zero	include/nautilus/multiboot2.h	/^  multiboot_uint32_t zero;$/;"	m	struct:multiboot_mmap_entry
zero_time	src/legion_runtime/lowlevel.cc	/^    \/*static*\/ double Clock::zero_time = 0;$/;"	m	class:LegionRuntime::LowLevel::Clock	file:
zero_time	src/legion_runtime/utilities.h	/^      static double zero_time;$/;"	m	class:LegionRuntime::LowLevel::Clock
zgetc	include/lua/lzio.h	20;"	d
zone	src/nautilus/mm/kmem.c	/^    struct buddy_mempool * zone; \/* zone to which this block belongs *\/$/;"	m	struct:kmem_block_hdr	typeref:struct:kmem_block_hdr::buddy_mempool	file:
~AMQueue	src/legion_runtime/lowlevel.cc	/^      ~AMQueue(void)$/;"	f	class:LegionRuntime::LowLevel::AMQueue
~AVXBitMask	src/legion_runtime/legion_utilities.h	/^    AVXBitMask<MAX>::~AVXBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::AVXBitMask
~AVXTLBitMask	src/legion_runtime/legion_utilities.h	/^    AVXTLBitMask<MAX>::~AVXTLBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::AVXTLBitMask
~AcquireOp	src/legion_runtime/legion_ops.cc	/^    AcquireOp::~AcquireOp(void)$/;"	f	class:LegionRuntime::HighLevel::AcquireOp
~ActiveMessageEndpoint	src/legion_runtime/activemsg.cc	/^  ~ActiveMessageEndpoint(void)$/;"	f	class:ActiveMessageEndpoint
~AllocManager	src/legion_runtime/runtime.h	/^      ~AllocManager(void)$/;"	f	class:LegionRuntime::HighLevel::AllocManager
~AndPredOp	src/legion_runtime/legion_ops.cc	/^    AndPredOp::~AndPredOp(void)$/;"	f	class:LegionRuntime::HighLevel::AndPredOp
~ArgumentMap	src/legion_runtime/legion.cc	/^    ArgumentMap::~ArgumentMap(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap
~ArgumentMapStore	src/legion_runtime/runtime.cc	/^    ArgumentMapStore::~ArgumentMapStore(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMapStore
~AutoHSLLock	src/legion_runtime/lowlevel_impl.h	/^      ~AutoHSLLock(void) $/;"	f	class:LegionRuntime::LowLevel::AutoHSLLock
~AutoLock	src/legion_runtime/legion_utilities.h	/^      ~AutoLock(void)$/;"	f	class:LegionRuntime::HighLevel::AutoLock
~BitMask	src/legion_runtime/legion_utilities.h	/^    BitMask<T,MAX,SHIFT,MASK>::~BitMask(void)$/;"	f	class:LegionRuntime::HighLevel::BitMask
~BufferedMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~BufferedMemPairCopier(void)$/;"	f	class:LegionRuntime::LowLevel::BufferedMemPairCopier
~BufferedReductionMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~BufferedReductionMemPairCopier(void)$/;"	f	class:LegionRuntime::LowLevel::BufferedReductionMemPairCopier
~CloseOp	src/legion_runtime/legion_ops.cc	/^    CloseOp::~CloseOp(void)$/;"	f	class:LegionRuntime::HighLevel::CloseOp
~CollectableState	src/legion_runtime/garbage_collection.cc	/^    CollectableState::~CollectableState(void)$/;"	f	class:LegionRuntime::HighLevel::CollectableState
~CompositeCloser	src/legion_runtime/region_tree.cc	/^    CompositeCloser::~CompositeCloser(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeCloser
~CompositeNode	src/legion_runtime/region_tree.cc	/^    CompositeNode::~CompositeNode(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeNode
~CompositeView	src/legion_runtime/region_tree.cc	/^    CompositeView::~CompositeView(void)$/;"	f	class:LegionRuntime::HighLevel::CompositeView
~ConfigItem	scripts/kconfig/qconf.cc	/^ConfigItem::~ConfigItem(void)$/;"	f	class:ConfigItem
~ConfigView	scripts/kconfig/qconf.cc	/^ConfigView::~ConfigView(void)$/;"	f	class:ConfigView
~ContiguousPayload	src/legion_runtime/activemsg.cc	/^  virtual ~ContiguousPayload(void) { }$/;"	f	class:ContiguousPayload
~CopyCompletionLogger	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~CopyCompletionLogger(void) { }$/;"	f	class:LegionRuntime::LowLevel::CopyCompletionLogger
~CopyOp	src/legion_runtime/legion_ops.cc	/^    CopyOp::~CopyOp(void)$/;"	f	class:LegionRuntime::HighLevel::CopyOp
~CopyOperation	src/legion_runtime/shared_lowlevel.cc	/^      ~CopyOperation(void)$/;"	f	class:LegionRuntime::LowLevel::CopyOperation
~CopyRequest	src/legion_runtime/lowlevel_dma.cc	/^    CopyRequest::~CopyRequest(void)$/;"	f	class:LegionRuntime::LowLevel::CopyRequest
~DefaultMapper	src/legion_runtime/default_mapper.cc	/^    DefaultMapper::~DefaultMapper(void)$/;"	f	class:LegionRuntime::HighLevel::DefaultMapper
~DeferredBarrierArrival	src/legion_runtime/lowlevel.cc	/^      virtual ~DeferredBarrierArrival(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredBarrierArrival
~DeferredEventTrigger	src/legion_runtime/lowlevel.cc	/^      virtual ~DeferredEventTrigger(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredEventTrigger
~DeferredInstDestroy	src/legion_runtime/lowlevel.cc	/^      virtual ~DeferredInstDestroy(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredInstDestroy
~DeferredLockDestruction	src/legion_runtime/lowlevel.cc	/^      virtual ~DeferredLockDestruction(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredLockDestruction
~DeferredLockRequest	src/legion_runtime/lowlevel.cc	/^      virtual ~DeferredLockRequest(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredLockRequest
~DeferredSlicer	src/legion_runtime/legion_tasks.cc	/^    DeferredSlicer::~DeferredSlicer(void)$/;"	f	class:LegionRuntime::HighLevel::DeferredSlicer
~DeferredTaskSpawn	src/legion_runtime/lowlevel.cc	/^      virtual ~DeferredTaskSpawn(void)$/;"	f	class:LegionRuntime::LowLevel::DeferredTaskSpawn
~DeferredUnlockRequest	src/legion_runtime/lowlevel.cc	/^      virtual ~DeferredUnlockRequest(void) { }$/;"	f	class:LegionRuntime::LowLevel::DeferredUnlockRequest
~DelayedMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~DelayedMemPairCopier(void) {}$/;"	f	class:LegionRuntime::LowLevel::DelayedMemPairCopier
~DeletionOp	src/legion_runtime/legion_ops.cc	/^    DeletionOp::~DeletionOp(void)$/;"	f	class:LegionRuntime::HighLevel::DeletionOp
~DerezCheck	src/legion_runtime/legion_utilities.h	/^      ~DerezCheck(void) { derez.end_context(); }$/;"	f	class:LegionRuntime::HighLevel::DerezCheck
~Deserializer	src/legion_runtime/legion_utilities.h	/^      ~Deserializer(void)$/;"	f	class:LegionRuntime::HighLevel::Deserializer
~DistributedCollectable	src/legion_runtime/garbage_collection.cc	/^    DistributedCollectable::~DistributedCollectable(void)$/;"	f	class:LegionRuntime::HighLevel::DistributedCollectable
~DmaRequest	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~DmaRequest(void) {}$/;"	f	class:LegionRuntime::LowLevel::DmaRequest
~DomainLinearization	src/legion_runtime/lowlevel.h	/^      ~DomainLinearization(void)$/;"	f	class:LegionRuntime::LowLevel::DomainLinearization
~DomainPointIterator	src/legion_runtime/lowlevel.h	/^	~DomainPointIterator(void)$/;"	f	class:LegionRuntime::LowLevel::Domain::DomainPointIterator
~DynamicTable	src/legion_runtime/lowlevel_impl.h	/^    DynamicTable<ALLOCATOR>::~DynamicTable(void)$/;"	f	class:LegionRuntime::LowLevel::DynamicTable
~ElementMask	src/legion_runtime/lowlevel.cc	/^    ElementMask::~ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
~ElementMask	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::~ElementMask(void)$/;"	f	class:LegionRuntime::LowLevel::ElementMask
~Enumerator	src/legion_runtime/lowlevel.cc	/^    ElementMask::Enumerator::~Enumerator(void) {}$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
~Enumerator	src/legion_runtime/shared_lowlevel.cc	/^    ElementMask::Enumerator::~Enumerator(void) {}$/;"	f	class:LegionRuntime::LowLevel::ElementMask::Enumerator
~EventImpl	src/legion_runtime/shared_lowlevel.cc	/^        ~EventImpl(void)$/;"	f	class:LegionRuntime::LowLevel::EventImpl
~EventMerger	src/legion_runtime/lowlevel.cc	/^      virtual ~EventMerger(void)$/;"	f	class:LegionRuntime::LowLevel::EventMerger
~EventStackEntry	src/legion_runtime/lowlevel.cc	/^          virtual ~EventStackEntry(void) { }$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread::EventStackEntry
~EventWaiter	src/legion_runtime/lowlevel_impl.h	/^        virtual ~EventWaiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::EventWaiter
~ExclusiveAccess	src/legion_runtime/lowlevel_impl.h	/^      ~ExclusiveAccess(void)$/;"	f	class:LegionRuntime::LowLevel::ExclusiveAccess
~FenceOp	src/legion_runtime/legion_ops.cc	/^    FenceOp::~FenceOp(void)$/;"	f	class:LegionRuntime::HighLevel::FenceOp
~FieldAllocator	src/legion_runtime/legion.cc	/^    FieldAllocator::~FieldAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::FieldAllocator
~FieldSpaceNode	src/legion_runtime/region_tree.cc	/^    FieldSpaceNode::~FieldSpaceNode(void)$/;"	f	class:LegionRuntime::HighLevel::FieldSpaceNode
~FieldTree	src/legion_runtime/field_tree.h	/^    FieldTree<UT>::~FieldTree(void)$/;"	f	class:LegionRuntime::HighLevel::FieldTree
~FoldReductionManager	src/legion_runtime/region_tree.cc	/^    FoldReductionManager::~FoldReductionManager(void)$/;"	f	class:LegionRuntime::HighLevel::FoldReductionManager
~Future	src/legion_runtime/legion.cc	/^    Future::~Future(void)$/;"	f	class:LegionRuntime::HighLevel::Future
~FutureMap	src/legion_runtime/legion.cc	/^    FutureMap::~FutureMap(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap
~FuturePredOp	src/legion_runtime/legion_ops.cc	/^    FuturePredOp::~FuturePredOp(void)$/;"	f	class:LegionRuntime::HighLevel::FuturePredOp
~GASNetHSL	src/legion_runtime/lowlevel_impl.h	/^      ~GASNetHSL(void) { gasnet_hsl_destroy(&mutex); }$/;"	f	class:LegionRuntime::LowLevel::GASNetHSL
~GASNetMemory	src/legion_runtime/lowlevel.cc	/^    GASNetMemory::~GASNetMemory(void)$/;"	f	class:LegionRuntime::LowLevel::GASNetMemory
~GPUFBMemory	src/legion_runtime/lowlevel_gpu.cc	/^    GPUFBMemory::~GPUFBMemory(void) {}$/;"	f	class:LegionRuntime::LowLevel::GPUFBMemory
~GPUJob	src/legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUJob(void) {}$/;"	f	class:LegionRuntime::LowLevel::GPUJob
~GPUMemcpy	src/legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUMemcpy(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy
~GPUMemcpy1D	src/legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUMemcpy1D(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy1D
~GPUMemcpy2D	src/legion_runtime/lowlevel_gpu.cc	/^      virtual ~GPUMemcpy2D(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUMemcpy2D
~GPUPeerMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUPeerMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUPeerMemPairCopier
~GPUProcessor	src/legion_runtime/lowlevel_gpu.cc	/^    GPUProcessor::~GPUProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::GPUProcessor
~GPUTask	src/legion_runtime/lowlevel_gpu.cc	/^    GPUTask::~GPUTask(void)$/;"	f	class:LegionRuntime::LowLevel::GPUTask
~GPUZCMemory	src/legion_runtime/lowlevel_gpu.cc	/^    GPUZCMemory::~GPUZCMemory(void) {}$/;"	f	class:LegionRuntime::LowLevel::GPUZCMemory
~GPUfromFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUfromFBMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUfromFBMemPairCopier
~GPUinFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUinFBMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUinFBMemPairCopier
~GPUtoFBMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~GPUtoFBMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::GPUtoFBMemPairCopier
~GarbageCollectionEpoch	src/legion_runtime/runtime.cc	/^    GarbageCollectionEpoch::~GarbageCollectionEpoch(void)$/;"	f	class:LegionRuntime::HighLevel::GarbageCollectionEpoch
~GasnetPut	src/legion_runtime/lowlevel_dma.cc	/^        virtual ~GasnetPut(void) { }$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPut
~GasnetPutRedList	src/legion_runtime/lowlevel_dma.cc	/^        virtual ~GasnetPutRedList(void) { }$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutRedList
~GasnetPutReduce	src/legion_runtime/lowlevel_dma.cc	/^        virtual ~GasnetPutReduce(void) { }$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GasnetPutReduce
~GatherScatter	src/legion_runtime/shared_lowlevel.cc	/^	~GatherScatter(void)$/;"	f	class:LegionRuntime::LowLevel::RangeExecutors::GatherScatter
~Grant	src/legion_runtime/legion.cc	/^    Grant::~Grant(void)$/;"	f	class:LegionRuntime::HighLevel::Grant
~HierarchicalCollectable	src/legion_runtime/garbage_collection.cc	/^    HierarchicalCollectable::~HierarchicalCollectable(void)$/;"	f	class:LegionRuntime::HighLevel::HierarchicalCollectable
~Impl	src/legion_runtime/lowlevel.cc	/^    IndexSpace::Impl::~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
~Impl	src/legion_runtime/lowlevel.cc	/^    IndexSpaceAllocator::Impl::~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
~Impl	src/legion_runtime/lowlevel.cc	/^    Processor::Impl::~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::Processor::Impl
~Impl	src/legion_runtime/lowlevel.cc	/^    RegionInstance::Impl::~Impl(void) {}$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
~Impl	src/legion_runtime/runtime.cc	/^    ArgumentMap::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::ArgumentMap::Impl
~Impl	src/legion_runtime/runtime.cc	/^    Future::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::Future::Impl
~Impl	src/legion_runtime/runtime.cc	/^    FutureMap::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::FutureMap::Impl
~Impl	src/legion_runtime/runtime.cc	/^    Grant::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::Grant::Impl
~Impl	src/legion_runtime/runtime.cc	/^    MPILegionHandshake::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake::Impl
~Impl	src/legion_runtime/runtime.cc	/^    PhysicalRegion::Impl::~Impl(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion::Impl
~Impl	src/legion_runtime/shared_lowlevel.cc	/^        ~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpace::Impl
~Impl	src/legion_runtime/shared_lowlevel.cc	/^        ~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::RegionInstance::Impl
~Impl	src/legion_runtime/shared_lowlevel.cc	/^      ~Impl(void)$/;"	f	class:LegionRuntime::LowLevel::IndexSpaceAllocator::Impl
~IndexAllocator	src/legion_runtime/legion.cc	/^    IndexAllocator::~IndexAllocator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexAllocator
~IndexIterator	src/legion_runtime/legion.cc	/^    IndexIterator::~IndexIterator(void)$/;"	f	class:LegionRuntime::HighLevel::IndexIterator
~IndexPartNode	src/legion_runtime/region_tree.cc	/^    IndexPartNode::~IndexPartNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexPartNode
~IndexSpaceNode	src/legion_runtime/region_tree.cc	/^    IndexSpaceNode::~IndexSpaceNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexSpaceNode
~IndexTask	src/legion_runtime/legion_tasks.cc	/^    IndexTask::~IndexTask(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTask
~IndexTreeNode	src/legion_runtime/region_tree.cc	/^    IndexTreeNode::~IndexTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::IndexTreeNode
~IndividualTask	src/legion_runtime/legion_tasks.cc	/^    IndividualTask::~IndividualTask(void)$/;"	f	class:LegionRuntime::HighLevel::IndividualTask
~InlineTask	src/legion_runtime/legion_tasks.cc	/^    InlineTask::~InlineTask(void)$/;"	f	class:LegionRuntime::HighLevel::InlineTask
~InstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~InstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::InstPairCopier
~InstanceManager	src/legion_runtime/region_tree.cc	/^    InstanceManager::~InstanceManager(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceManager
~InstanceView	src/legion_runtime/region_tree.cc	/^    InstanceView::~InstanceView(void)$/;"	f	class:LegionRuntime::HighLevel::InstanceView
~IntervalTree	src/legion_runtime/interval_tree.h	/^    IntervalTree<T,DISCRETE>::~IntervalTree(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTree
~IntervalTreeNode	src/legion_runtime/interval_tree.h	/^    IntervalTreeNode<T,DISCRETE>::~IntervalTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::IntervalTreeNode
~LayoutDescription	src/legion_runtime/region_tree.cc	/^    LayoutDescription::~LayoutDescription(void)$/;"	f	class:LegionRuntime::HighLevel::LayoutDescription
~LegionAllocator	src/legion_runtime/legion_allocation.h	/^      inline ~LegionAllocator(void) { }$/;"	f	class:LegionRuntime::HighLevel::LegionAllocator
~LegionStack	src/legion_runtime/region_tree.cc	/^    LegionStack<T,MAX_SIZE,INC_SIZE>::~LegionStack(void)$/;"	f	class:LegionRuntime::HighLevel::LegionStack
~LegionTrace	src/legion_runtime/legion_trace.cc	/^    LegionTrace::~LegionTrace(void)$/;"	f	class:LegionRuntime::HighLevel::LegionTrace
~ListReductionManager	src/legion_runtime/region_tree.cc	/^    ListReductionManager::~ListReductionManager(void)$/;"	f	class:LegionRuntime::HighLevel::ListReductionManager
~LocalCPUMemory	src/legion_runtime/lowlevel.cc	/^      virtual ~LocalCPUMemory(void)$/;"	f	class:LegionRuntime::LowLevel::LocalCPUMemory
~LocalProcessor	src/legion_runtime/lowlevel.cc	/^      ~LocalProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor
~LocalReductionMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~LocalReductionMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::LocalReductionMemPairCopier
~Lock	src/legion_runtime/activemsg.cc	/^    ~Lock(void) { gasnet_hsl_unlock(&sdp.mutex); }$/;"	f	class:SrcDataPool::Lock
~LogicalInitializer	src/legion_runtime/region_tree.cc	/^    LogicalInitializer::~LogicalInitializer(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalInitializer
~LogicalInvalidator	src/legion_runtime/region_tree.cc	/^    LogicalInvalidator::~LogicalInvalidator(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalInvalidator
~LogicalPathRegistrar	src/legion_runtime/region_tree.cc	/^    LogicalPathRegistrar::~LogicalPathRegistrar(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalPathRegistrar
~LogicalRegistrar	src/legion_runtime/region_tree.cc	/^    LogicalRegistrar<DOMINATE>::~LogicalRegistrar(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalRegistrar
~LogicalState	src/legion_runtime/region_tree.cc	/^    LogicalState::~LogicalState(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalState
~LogicalView	src/legion_runtime/region_tree.cc	/^    LogicalView::~LogicalView(void)$/;"	f	class:LegionRuntime::HighLevel::LogicalView
~MPILegionHandshake	src/legion_runtime/legion.cc	/^    MPILegionHandshake::~MPILegionHandshake(void)$/;"	f	class:LegionRuntime::HighLevel::MPILegionHandshake
~Machine	src/legion_runtime/lowlevel.cc	/^    Machine::~Machine(void)$/;"	f	class:LegionRuntime::LowLevel::Machine
~Machine	src/legion_runtime/shared_lowlevel.cc	/^    Machine::~Machine()$/;"	f	class:LegionRuntime::LowLevel::Machine
~MapOp	src/legion_runtime/legion_ops.cc	/^    MapOp::~MapOp(void)$/;"	f	class:LegionRuntime::HighLevel::MapOp
~Mapper	src/legion_runtime/legion.h	/^      virtual ~Mapper(void) { }$/;"	f	class:LegionRuntime::HighLevel::Mapper
~MappingRef	src/legion_runtime/region_tree.cc	/^    MappingRef::~MappingRef(void)$/;"	f	class:LegionRuntime::HighLevel::MappingRef
~MappingTraverser	src/legion_runtime/region_tree.cc	/^    MappingTraverser::~MappingTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::MappingTraverser
~MaterializedView	src/legion_runtime/region_tree.cc	/^    MaterializedView::~MaterializedView(void)$/;"	f	class:LegionRuntime::HighLevel::MaterializedView
~MemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~MemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::MemPairCopier
~MemcpyMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~MemcpyMemPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::MemcpyMemPairCopier
~MemoryImpl	src/legion_runtime/shared_lowlevel.cc	/^        ~MemoryImpl(void)$/;"	f	class:LegionRuntime::LowLevel::MemoryImpl
~MemoryManager	src/legion_runtime/runtime.cc	/^    MemoryManager::~MemoryManager(void)$/;"	f	class:LegionRuntime::HighLevel::MemoryManager
~MessageManager	src/legion_runtime/runtime.cc	/^    MessageManager::~MessageManager(void)$/;"	f	class:LegionRuntime::HighLevel::MessageManager
~MultiTask	src/legion_runtime/legion_tasks.cc	/^    MultiTask::~MultiTask(void)$/;"	f	class:LegionRuntime::HighLevel::MultiTask
~MustEpochDistributor	src/legion_runtime/legion_ops.cc	/^    MustEpochDistributor::~MustEpochDistributor(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochDistributor
~MustEpochMapper	src/legion_runtime/legion_ops.cc	/^    MustEpochMapper::~MustEpochMapper(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochMapper
~MustEpochOp	src/legion_runtime/legion_ops.cc	/^    MustEpochOp::~MustEpochOp(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochOp
~MustEpochTriggerer	src/legion_runtime/legion_ops.cc	/^    MustEpochTriggerer::~MustEpochTriggerer(void)$/;"	f	class:LegionRuntime::HighLevel::MustEpochTriggerer
~NotPredOp	src/legion_runtime/legion_ops.cc	/^    NotPredOp::~NotPredOp(void)$/;"	f	class:LegionRuntime::HighLevel::NotPredOp
~Operation	src/legion_runtime/legion_ops.cc	/^    Operation::~Operation(void)$/;"	f	class:LegionRuntime::HighLevel::Operation
~OrPredOp	src/legion_runtime/legion_ops.cc	/^    OrPredOp::~OrPredOp(void)$/;"	f	class:LegionRuntime::HighLevel::OrPredOp
~OutgoingMessage	src/legion_runtime/activemsg.cc	/^OutgoingMessage::~OutgoingMessage(void)$/;"	f	class:OutgoingMessage
~PartitionNode	src/legion_runtime/region_tree.cc	/^    PartitionNode::~PartitionNode(void)$/;"	f	class:LegionRuntime::HighLevel::PartitionNode
~PathReturner	src/legion_runtime/region_tree.cc	/^    PathReturner::~PathReturner(void)$/;"	f	class:LegionRuntime::HighLevel::PathReturner
~PathTraverser	src/legion_runtime/region_tree.cc	/^    PathTraverser::~PathTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::PathTraverser
~PayloadSource	src/legion_runtime/activemsg.cc	/^  virtual ~PayloadSource(void) { }$/;"	f	class:PayloadSource
~PendingUpdates	src/legion_runtime/lowlevel.cc	/^      ~PendingUpdates(void)$/;"	f	class:LegionRuntime::LowLevel::Event::Impl::PendingUpdates
~PerThreadTimerData	src/legion_runtime/shared_lowlevel.cc	/^      ~PerThreadTimerData(void)$/;"	f	struct:LegionRuntime::LowLevel::PerThreadTimerData
~PerfTracer	src/legion_runtime/region_tree.h	/^      ~PerfTracer(void)$/;"	f	class:LegionRuntime::HighLevel::PerfTracer
~PhysicalCloser	src/legion_runtime/region_tree.cc	/^    PhysicalCloser::~PhysicalCloser(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalCloser
~PhysicalInitializer	src/legion_runtime/region_tree.cc	/^    PhysicalInitializer::~PhysicalInitializer(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInitializer
~PhysicalInvalidator	src/legion_runtime/region_tree.cc	/^    PhysicalInvalidator::~PhysicalInvalidator(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalInvalidator
~PhysicalManager	src/legion_runtime/region_tree.cc	/^    PhysicalManager::~PhysicalManager(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalManager
~PhysicalRegion	src/legion_runtime/legion.cc	/^    PhysicalRegion::~PhysicalRegion(void)$/;"	f	class:LegionRuntime::HighLevel::PhysicalRegion
~PointTask	src/legion_runtime/legion_tasks.cc	/^    PointTask::~PointTask(void)$/;"	f	class:LegionRuntime::HighLevel::PointTask
~Predicate	src/legion_runtime/legion.cc	/^    Predicate::~Predicate(void)$/;"	f	class:LegionRuntime::HighLevel::Predicate
~PreemptableThread	src/legion_runtime/lowlevel_impl.h	/^      virtual ~PreemptableThread(void) {}$/;"	f	class:LegionRuntime::LowLevel::PreemptableThread
~PremapTraverser	src/legion_runtime/region_tree.cc	/^    PremapTraverser::~PremapTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::PremapTraverser
~ProblemGenerator	src/test/hpcg/hpcg-problem-generator.h	/^    ~ProblemGenerator(void) {$/;"	f	struct:ProblemGenerator
~ProcessorGroup	src/legion_runtime/lowlevel.cc	/^    ProcessorGroup::~ProcessorGroup(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorGroup
~ProcessorImpl	src/legion_runtime/shared_lowlevel.cc	/^        virtual ~ProcessorImpl(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl
~ProcessorManager	src/legion_runtime/runtime.cc	/^    ProcessorManager::~ProcessorManager(void)$/;"	f	class:LegionRuntime::HighLevel::ProcessorManager
~PthreadCondWaiter	src/legion_runtime/lowlevel.cc	/^      virtual ~PthreadCondWaiter(void) $/;"	f	class:LegionRuntime::LowLevel::PthreadCondWaiter
~RectangleSet	src/legion_runtime/rectangle_set.h	/^    RectangleSet<T,DISCRETE>::~RectangleSet(void)$/;"	f	class:LegionRuntime::HighLevel::RectangleSet
~ReduceRequest	src/legion_runtime/lowlevel_dma.cc	/^    ReduceRequest::~ReduceRequest(void)$/;"	f	class:LegionRuntime::LowLevel::ReduceRequest
~ReductionCloser	src/legion_runtime/region_tree.cc	/^    ReductionCloser::~ReductionCloser(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionCloser
~ReductionManager	src/legion_runtime/region_tree.cc	/^    ReductionManager::~ReductionManager(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionManager
~ReductionView	src/legion_runtime/region_tree.cc	/^    ReductionView::~ReductionView(void)$/;"	f	class:LegionRuntime::HighLevel::ReductionView
~RegionNode	src/legion_runtime/region_tree.cc	/^    RegionNode::~RegionNode(void)$/;"	f	class:LegionRuntime::HighLevel::RegionNode
~RegionTreeForest	src/legion_runtime/region_tree.cc	/^    RegionTreeForest::~RegionTreeForest(void)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeForest
~RegionTreeNode	src/legion_runtime/region_tree.cc	/^    RegionTreeNode::~RegionTreeNode(void)$/;"	f	class:LegionRuntime::HighLevel::RegionTreeNode
~ReleaseOp	src/legion_runtime/legion_ops.cc	/^    ReleaseOp::~ReleaseOp(void)$/;"	f	class:LegionRuntime::HighLevel::ReleaseOp
~RemoteProcessor	src/legion_runtime/lowlevel.cc	/^      ~RemoteProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::RemoteProcessor
~RemoteTask	src/legion_runtime/legion_tasks.cc	/^    RemoteTask::~RemoteTask(void)$/;"	f	class:LegionRuntime::HighLevel::RemoteTask
~RemoteWriteInstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~RemoteWriteInstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteInstPairCopier
~RemoteWriteMemPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~RemoteWriteMemPairCopier(void)$/;"	f	class:LegionRuntime::LowLevel::RemoteWriteMemPairCopier
~ReservationImpl	src/legion_runtime/shared_lowlevel.cc	/^        ~ReservationImpl(void)$/;"	f	class:LegionRuntime::LowLevel::ReservationImpl
~RestrictedTraverser	src/legion_runtime/region_tree.cc	/^    RestrictedTraverser::~RestrictedTraverser(void)$/;"	f	class:LegionRuntime::HighLevel::RestrictedTraverser
~RezCheck	src/legion_runtime/legion_utilities.h	/^      ~RezCheck(void) { rez.end_context(); }$/;"	f	class:LegionRuntime::HighLevel::RezCheck
~Runtime	src/legion_runtime/runtime.cc	/^    Runtime::~Runtime(void)$/;"	f	class:LegionRuntime::HighLevel::Runtime
~SSEBitMask	src/legion_runtime/legion_utilities.h	/^    SSEBitMask<MAX>::~SSEBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::SSEBitMask
~SSETLBitMask	src/legion_runtime/legion_utilities.h	/^    SSETLBitMask<MAX>::~SSETLBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::SSETLBitMask
~ScopedPush	src/legion_runtime/utilities.h	/^        ~ScopedPush(void) { pop_timer(); }$/;"	f	class:LegionRuntime::LowLevel::DetailedTimer::ScopedPush
~Segment	src/legion_runtime/rectangle_set.h	/^    Segment<T>::~Segment(void)$/;"	f	class:LegionRuntime::HighLevel::Segment
~Serializer	src/legion_runtime/legion_utilities.h	/^      ~Serializer(void)$/;"	f	class:LegionRuntime::HighLevel::Serializer
~SharedAccess	src/legion_runtime/lowlevel_impl.h	/^      ~SharedAccess(void)$/;"	f	class:LegionRuntime::LowLevel::SharedAccess
~ShimMapper	src/legion_runtime/shim_mapper.cc	/^    ShimMapper::~ShimMapper(void)$/;"	f	class:LegionRuntime::HighLevel::ShimMapper
~SingleTask	src/legion_runtime/legion_tasks.cc	/^    SingleTask::~SingleTask(void)$/;"	f	class:LegionRuntime::HighLevel::SingleTask
~SliceTask	src/legion_runtime/legion_tasks.cc	/^    SliceTask::~SliceTask(void)$/;"	f	class:LegionRuntime::HighLevel::SliceTask
~SpanBasedInstPairCopier	src/legion_runtime/lowlevel_dma.cc	/^      virtual ~SpanBasedInstPairCopier(void) { }$/;"	f	class:LegionRuntime::LowLevel::SpanBasedInstPairCopier
~SpanPayload	src/legion_runtime/activemsg.cc	/^  virtual ~SpanPayload(void) { }$/;"	f	class:SpanPayload
~SrcDataPool	src/legion_runtime/activemsg.cc	/^SrcDataPool::~SrcDataPool(void)$/;"	f	class:SrcDataPool
~StateReturner	src/legion_runtime/region_tree.cc	/^    StateReturner::~StateReturner(void)$/;"	f	class:LegionRuntime::HighLevel::StateReturner
~StateSender	src/legion_runtime/region_tree.cc	/^    StateSender::~StateSender(void)$/;"	f	class:LegionRuntime::HighLevel::StateSender
~StaticAccess	src/legion_runtime/lowlevel_impl.h	/^      ~StaticAccess(void) {}$/;"	f	class:LegionRuntime::LowLevel::StaticAccess
~TLBitMask	src/legion_runtime/legion_utilities.h	/^    TLBitMask<T,MAX,SHIFT,MASK>::~TLBitMask(void)$/;"	f	class:LegionRuntime::HighLevel::TLBitMask
~Task	src/legion_runtime/lowlevel.cc	/^      ~Task(void)$/;"	f	class:LegionRuntime::LowLevel::Task
~Task	src/legion_runtime/lowlevel.cc	/^    Task::~Task(void)$/;"	f	class:LegionRuntime::LowLevel::Task
~TaskDesc	src/legion_runtime/shared_lowlevel.cc	/^          ~TaskDesc(void)$/;"	f	class:LegionRuntime::LowLevel::ProcessorImpl::TaskDesc
~TaskOp	src/legion_runtime/legion_tasks.cc	/^    TaskOp::~TaskOp(void)$/;"	f	class:LegionRuntime::HighLevel::TaskOp
~Thread	src/legion_runtime/lowlevel.cc	/^	~Thread(void) {}$/;"	f	class:LegionRuntime::LowLevel::LocalProcessor::Thread
~TimeStamp	src/legion_runtime/utilities.h	/^    ~TimeStamp(void)$/;"	f	class:LegionRuntime::TimeStamp
~TraceCaptureOp	src/legion_runtime/legion_trace.cc	/^    TraceCaptureOp::~TraceCaptureOp(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCaptureOp
~TraceCompleteOp	src/legion_runtime/legion_trace.cc	/^    TraceCompleteOp::~TraceCompleteOp(void)$/;"	f	class:LegionRuntime::HighLevel::TraceCompleteOp
~TreeClose	src/legion_runtime/region_tree.cc	/^    TreeClose::~TreeClose(void)$/;"	f	class:LegionRuntime::HighLevel::TreeClose
~TreeCloseImpl	src/legion_runtime/region_tree.cc	/^    TreeCloseImpl::~TreeCloseImpl(void)$/;"	f	class:LegionRuntime::HighLevel::TreeCloseImpl
~TreeStateLogger	src/legion_runtime/legion_logging.cc	/^    TreeStateLogger::~TreeStateLogger(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
~TreeStateLogger	src/legion_runtime/legion_spy.cc	/^    TreeStateLogger::~TreeStateLogger(void)$/;"	f	class:LegionRuntime::HighLevel::TreeStateLogger
~Triggerable	src/legion_runtime/shared_lowlevel.cc	/^	virtual ~Triggerable() { }$/;"	f	class:LegionRuntime::LowLevel::Triggerable
~TwoDPayload	src/legion_runtime/activemsg.cc	/^  virtual ~TwoDPayload(void) { }$/;"	f	class:TwoDPayload
~UtilityBarrier	src/legion_runtime/utilities.h	/^      ~UtilityBarrier(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityBarrier
~UtilityProcessor	src/legion_runtime/lowlevel.cc	/^    UtilityProcessor::~UtilityProcessor(void)$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor
~UtilityThread	src/legion_runtime/lowlevel.cc	/^      virtual ~UtilityThread(void) {}$/;"	f	class:LegionRuntime::LowLevel::UtilityProcessor::UtilityThread
~ViewHandle	src/legion_runtime/region_tree.cc	/^    ViewHandle::~ViewHandle(void)$/;"	f	class:LegionRuntime::HighLevel::ViewHandle
~Waiter	src/legion_runtime/lowlevel_dma.cc	/^        virtual ~Waiter(void) { }$/;"	f	class:LegionRuntime::LowLevel::DmaRequest::Waiter
~WrapperTask	src/legion_runtime/legion_tasks.cc	/^    WrapperTask::~WrapperTask(void)$/;"	f	class:LegionRuntime::HighLevel::WrapperTask
